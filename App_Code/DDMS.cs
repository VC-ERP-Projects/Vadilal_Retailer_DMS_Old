//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

[Serializable]
public partial class ACRD1 : ObjectWithState
{

    public int ACRD1ID 
	{ 
		get
		{
			return _ACRD1ID;
		}
		set
		{
			if(_ACRD1ID != value)
			{
				OnACRD1IDChanging(value);
				_ACRD1ID = value;
				OnACRD1IDChanged();
			}
		}
	}
	private int _ACRD1ID;

	partial void OnACRD1IDChanging(int newValue);
	partial void OnACRD1IDChanged();

    public int AOCRDID 
	{ 
		get
		{
			return _AOCRDID;
		}
		set
		{
			if(_AOCRDID != value)
			{
				OnAOCRDIDChanging(value);
				_AOCRDID = value;
				OnAOCRDIDChanged();
			}
		}
	}
	private int _AOCRDID;

	partial void OnAOCRDIDChanging(int newValue);
	partial void OnAOCRDIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public string IPAddress 
	{ 
		get
		{
			return _IPAddress;
		}
		set
		{
			if(_IPAddress != value)
			{
				OnIPAddressChanging(value);
				_IPAddress = value;
				OnIPAddressChanged();
			}
		}
	}
	private string _IPAddress;

	partial void OnIPAddressChanging(string newValue);
	partial void OnIPAddressChanged();

    public virtual AOCRD AOCRD { get; set; }
    public virtual OCRD OCRD { get; set; }
}

[Serializable]
public partial class AOCRD : ObjectWithState
{
    public AOCRD() 
    { 
        this.ACRD1 = new HashSet<ACRD1>();
    }


    public int AOCRDID 
	{ 
		get
		{
			return _AOCRDID;
		}
		set
		{
			if(_AOCRDID != value)
			{
				OnAOCRDIDChanging(value);
				_AOCRDID = value;
				OnAOCRDIDChanged();
			}
		}
	}
	private int _AOCRDID;

	partial void OnAOCRDIDChanging(int newValue);
	partial void OnAOCRDIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public string IPAddress 
	{ 
		get
		{
			return _IPAddress;
		}
		set
		{
			if(_IPAddress != value)
			{
				OnIPAddressChanging(value);
				_IPAddress = value;
				OnIPAddressChanged();
			}
		}
	}
	private string _IPAddress;

	partial void OnIPAddressChanging(string newValue);
	partial void OnIPAddressChanged();

    public virtual ICollection<ACRD1> ACRD1 { get; set; }
    public virtual OCRD OCRD { get; set; }
}

[Serializable]
public partial class AORDR : ObjectWithState
{

    public int AORDRID 
	{ 
		get
		{
			return _AORDRID;
		}
		set
		{
			if(_AORDRID != value)
			{
				OnAORDRIDChanging(value);
				_AORDRID = value;
				OnAORDRIDChanged();
			}
		}
	}
	private int _AORDRID;

	partial void OnAORDRIDChanging(int newValue);
	partial void OnAORDRIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public decimal DistributorID 
	{ 
		get
		{
			return _DistributorID;
		}
		set
		{
			if(_DistributorID != value)
			{
				OnDistributorIDChanging(value);
				_DistributorID = value;
				OnDistributorIDChanged();
			}
		}
	}
	private decimal _DistributorID;

	partial void OnDistributorIDChanging(decimal newValue);
	partial void OnDistributorIDChanged();

    public decimal DealerID 
	{ 
		get
		{
			return _DealerID;
		}
		set
		{
			if(_DealerID != value)
			{
				OnDealerIDChanging(value);
				_DealerID = value;
				OnDealerIDChanged();
			}
		}
	}
	private decimal _DealerID;

	partial void OnDealerIDChanging(decimal newValue);
	partial void OnDealerIDChanged();

    public Nullable<decimal> ConflictCustID 
	{ 
		get
		{
			return _ConflictCustID;
		}
		set
		{
			if(_ConflictCustID != value)
			{
				OnConflictCustIDChanging(value);
				_ConflictCustID = value;
				OnConflictCustIDChanged();
			}
		}
	}
	private Nullable<decimal> _ConflictCustID;

	partial void OnConflictCustIDChanging(Nullable<decimal> newValue);
	partial void OnConflictCustIDChanged();

    public string ConflictCustCode 
	{ 
		get
		{
			return _ConflictCustCode;
		}
		set
		{
			if(_ConflictCustCode != value)
			{
				OnConflictCustCodeChanging(value);
				_ConflictCustCode = value;
				OnConflictCustCodeChanged();
			}
		}
	}
	private string _ConflictCustCode;

	partial void OnConflictCustCodeChanging(string newValue);
	partial void OnConflictCustCodeChanged();

    public decimal ScanOrderID 
	{ 
		get
		{
			return _ScanOrderID;
		}
		set
		{
			if(_ScanOrderID != value)
			{
				OnScanOrderIDChanging(value);
				_ScanOrderID = value;
				OnScanOrderIDChanged();
			}
		}
	}
	private decimal _ScanOrderID;

	partial void OnScanOrderIDChanging(decimal newValue);
	partial void OnScanOrderIDChanged();

    public Nullable<int> EntryID 
	{ 
		get
		{
			return _EntryID;
		}
		set
		{
			if(_EntryID != value)
			{
				OnEntryIDChanging(value);
				_EntryID = value;
				OnEntryIDChanged();
			}
		}
	}
	private Nullable<int> _EntryID;

	partial void OnEntryIDChanging(Nullable<int> newValue);
	partial void OnEntryIDChanged();

    public Nullable<int> OrderID 
	{ 
		get
		{
			return _OrderID;
		}
		set
		{
			if(_OrderID != value)
			{
				OnOrderIDChanging(value);
				_OrderID = value;
				OnOrderIDChanged();
			}
		}
	}
	private Nullable<int> _OrderID;

	partial void OnOrderIDChanging(Nullable<int> newValue);
	partial void OnOrderIDChanged();

    public Nullable<int> PhysicalAssetID 
	{ 
		get
		{
			return _PhysicalAssetID;
		}
		set
		{
			if(_PhysicalAssetID != value)
			{
				OnPhysicalAssetIDChanging(value);
				_PhysicalAssetID = value;
				OnPhysicalAssetIDChanged();
			}
		}
	}
	private Nullable<int> _PhysicalAssetID;

	partial void OnPhysicalAssetIDChanging(Nullable<int> newValue);
	partial void OnPhysicalAssetIDChanged();

    public Nullable<int> ActualAssetID 
	{ 
		get
		{
			return _ActualAssetID;
		}
		set
		{
			if(_ActualAssetID != value)
			{
				OnActualAssetIDChanging(value);
				_ActualAssetID = value;
				OnActualAssetIDChanged();
			}
		}
	}
	private Nullable<int> _ActualAssetID;

	partial void OnActualAssetIDChanging(Nullable<int> newValue);
	partial void OnActualAssetIDChanged();

    public Nullable<bool> IsConflict 
	{ 
		get
		{
			return _IsConflict;
		}
		set
		{
			if(_IsConflict != value)
			{
				OnIsConflictChanging(value);
				_IsConflict = value;
				OnIsConflictChanged();
			}
		}
	}
	private Nullable<bool> _IsConflict;

	partial void OnIsConflictChanging(Nullable<bool> newValue);
	partial void OnIsConflictChanged();

    public Nullable<bool> IsFinalConflict 
	{ 
		get
		{
			return _IsFinalConflict;
		}
		set
		{
			if(_IsFinalConflict != value)
			{
				OnIsFinalConflictChanging(value);
				_IsFinalConflict = value;
				OnIsFinalConflictChanged();
			}
		}
	}
	private Nullable<bool> _IsFinalConflict;

	partial void OnIsFinalConflictChanging(Nullable<bool> newValue);
	partial void OnIsFinalConflictChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public Nullable<bool> IsManual 
	{ 
		get
		{
			return _IsManual;
		}
		set
		{
			if(_IsManual != value)
			{
				OnIsManualChanging(value);
				_IsManual = value;
				OnIsManualChanged();
			}
		}
	}
	private Nullable<bool> _IsManual;

	partial void OnIsManualChanging(Nullable<bool> newValue);
	partial void OnIsManualChanged();

    public virtual OCRD OCRD { get; set; }
}

[Serializable]
public partial class AST1 : ObjectWithState
{

    public int AssetAttachID 
	{ 
		get
		{
			return _AssetAttachID;
		}
		set
		{
			if(_AssetAttachID != value)
			{
				OnAssetAttachIDChanging(value);
				_AssetAttachID = value;
				OnAssetAttachIDChanged();
			}
		}
	}
	private int _AssetAttachID;

	partial void OnAssetAttachIDChanging(int newValue);
	partial void OnAssetAttachIDChanged();

    public Nullable<int> AssetID 
	{ 
		get
		{
			return _AssetID;
		}
		set
		{
			if(_AssetID != value)
			{
				OnAssetIDChanging(value);
				_AssetID = value;
				OnAssetIDChanged();
			}
		}
	}
	private Nullable<int> _AssetID;

	partial void OnAssetIDChanging(Nullable<int> newValue);
	partial void OnAssetIDChanged();

    public string Subject 
	{ 
		get
		{
			return _Subject;
		}
		set
		{
			if(_Subject != value)
			{
				OnSubjectChanging(value);
				_Subject = value;
				OnSubjectChanged();
			}
		}
	}
	private string _Subject;

	partial void OnSubjectChanging(string newValue);
	partial void OnSubjectChanged();

    public Nullable<System.DateTime> ReminderDate 
	{ 
		get
		{
			return _ReminderDate;
		}
		set
		{
			if(_ReminderDate != value)
			{
				OnReminderDateChanging(value);
				_ReminderDate = value;
				OnReminderDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ReminderDate;

	partial void OnReminderDateChanging(Nullable<System.DateTime> newValue);
	partial void OnReminderDateChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public string FileName 
	{ 
		get
		{
			return _FileName;
		}
		set
		{
			if(_FileName != value)
			{
				OnFileNameChanging(value);
				_FileName = value;
				OnFileNameChanged();
			}
		}
	}
	private string _FileName;

	partial void OnFileNameChanging(string newValue);
	partial void OnFileNameChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual OAST OAST { get; set; }
}

[Serializable]
public partial class ASTCF : ObjectWithState
{

    public int AssetConfirmID 
	{ 
		get
		{
			return _AssetConfirmID;
		}
		set
		{
			if(_AssetConfirmID != value)
			{
				OnAssetConfirmIDChanging(value);
				_AssetConfirmID = value;
				OnAssetConfirmIDChanged();
			}
		}
	}
	private int _AssetConfirmID;

	partial void OnAssetConfirmIDChanging(int newValue);
	partial void OnAssetConfirmIDChanged();

    public Nullable<int> AssetID 
	{ 
		get
		{
			return _AssetID;
		}
		set
		{
			if(_AssetID != value)
			{
				OnAssetIDChanging(value);
				_AssetID = value;
				OnAssetIDChanged();
			}
		}
	}
	private Nullable<int> _AssetID;

	partial void OnAssetIDChanging(Nullable<int> newValue);
	partial void OnAssetIDChanged();

    public Nullable<int> AssetTransferID 
	{ 
		get
		{
			return _AssetTransferID;
		}
		set
		{
			if(_AssetTransferID != value)
			{
				OnAssetTransferIDChanging(value);
				_AssetTransferID = value;
				OnAssetTransferIDChanged();
			}
		}
	}
	private Nullable<int> _AssetTransferID;

	partial void OnAssetTransferIDChanging(Nullable<int> newValue);
	partial void OnAssetTransferIDChanged();

    public Nullable<System.DateTime> ConfirmDate 
	{ 
		get
		{
			return _ConfirmDate;
		}
		set
		{
			if(_ConfirmDate != value)
			{
				OnConfirmDateChanging(value);
				_ConfirmDate = value;
				OnConfirmDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ConfirmDate;

	partial void OnConfirmDateChanging(Nullable<System.DateTime> newValue);
	partial void OnConfirmDateChanged();

    public string ConfirmTime 
	{ 
		get
		{
			return _ConfirmTime;
		}
		set
		{
			if(_ConfirmTime != value)
			{
				OnConfirmTimeChanging(value);
				_ConfirmTime = value;
				OnConfirmTimeChanged();
			}
		}
	}
	private string _ConfirmTime;

	partial void OnConfirmTimeChanging(string newValue);
	partial void OnConfirmTimeChanged();

    public Nullable<int> ConfirmConditionID 
	{ 
		get
		{
			return _ConfirmConditionID;
		}
		set
		{
			if(_ConfirmConditionID != value)
			{
				OnConfirmConditionIDChanging(value);
				_ConfirmConditionID = value;
				OnConfirmConditionIDChanged();
			}
		}
	}
	private Nullable<int> _ConfirmConditionID;

	partial void OnConfirmConditionIDChanging(Nullable<int> newValue);
	partial void OnConfirmConditionIDChanged();

    public Nullable<int> ConfirmStatusID 
	{ 
		get
		{
			return _ConfirmStatusID;
		}
		set
		{
			if(_ConfirmStatusID != value)
			{
				OnConfirmStatusIDChanging(value);
				_ConfirmStatusID = value;
				OnConfirmStatusIDChanged();
			}
		}
	}
	private Nullable<int> _ConfirmStatusID;

	partial void OnConfirmStatusIDChanging(Nullable<int> newValue);
	partial void OnConfirmStatusIDChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public string AttachFileName 
	{ 
		get
		{
			return _AttachFileName;
		}
		set
		{
			if(_AttachFileName != value)
			{
				OnAttachFileNameChanging(value);
				_AttachFileName = value;
				OnAttachFileNameChanged();
			}
		}
	}
	private string _AttachFileName;

	partial void OnAttachFileNameChanging(string newValue);
	partial void OnAttachFileNameChanged();

    public Nullable<decimal> ConfirmCustomerID 
	{ 
		get
		{
			return _ConfirmCustomerID;
		}
		set
		{
			if(_ConfirmCustomerID != value)
			{
				OnConfirmCustomerIDChanging(value);
				_ConfirmCustomerID = value;
				OnConfirmCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _ConfirmCustomerID;

	partial void OnConfirmCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnConfirmCustomerIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string ConfirmType 
	{ 
		get
		{
			return _ConfirmType;
		}
		set
		{
			if(_ConfirmType != value)
			{
				OnConfirmTypeChanging(value);
				_ConfirmType = value;
				OnConfirmTypeChanged();
			}
		}
	}
	private string _ConfirmType;

	partial void OnConfirmTypeChanging(string newValue);
	partial void OnConfirmTypeChanged();

    public virtual OASTC OASTC { get; set; }
    public virtual OASTF OASTF { get; set; }
    public virtual OASTU OASTU { get; set; }
    public virtual OCRD OCRD { get; set; }
    public virtual OAST OAST { get; set; }
}

[Serializable]
public partial class ASTF1 : ObjectWithState
{

    public int AssetTransferAttachID 
	{ 
		get
		{
			return _AssetTransferAttachID;
		}
		set
		{
			if(_AssetTransferAttachID != value)
			{
				OnAssetTransferAttachIDChanging(value);
				_AssetTransferAttachID = value;
				OnAssetTransferAttachIDChanged();
			}
		}
	}
	private int _AssetTransferAttachID;

	partial void OnAssetTransferAttachIDChanging(int newValue);
	partial void OnAssetTransferAttachIDChanged();

    public Nullable<int> AssetTransferID 
	{ 
		get
		{
			return _AssetTransferID;
		}
		set
		{
			if(_AssetTransferID != value)
			{
				OnAssetTransferIDChanging(value);
				_AssetTransferID = value;
				OnAssetTransferIDChanged();
			}
		}
	}
	private Nullable<int> _AssetTransferID;

	partial void OnAssetTransferIDChanging(Nullable<int> newValue);
	partial void OnAssetTransferIDChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public string Subject 
	{ 
		get
		{
			return _Subject;
		}
		set
		{
			if(_Subject != value)
			{
				OnSubjectChanging(value);
				_Subject = value;
				OnSubjectChanged();
			}
		}
	}
	private string _Subject;

	partial void OnSubjectChanging(string newValue);
	partial void OnSubjectChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public string FileName 
	{ 
		get
		{
			return _FileName;
		}
		set
		{
			if(_FileName != value)
			{
				OnFileNameChanging(value);
				_FileName = value;
				OnFileNameChanged();
			}
		}
	}
	private string _FileName;

	partial void OnFileNameChanging(string newValue);
	partial void OnFileNameChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual OASTF OASTF { get; set; }
}

[Serializable]
public partial class BOM1 : ObjectWithState
{

    public int BOM1ID 
	{ 
		get
		{
			return _BOM1ID;
		}
		set
		{
			if(_BOM1ID != value)
			{
				OnBOM1IDChanging(value);
				_BOM1ID = value;
				OnBOM1IDChanged();
			}
		}
	}
	private int _BOM1ID;

	partial void OnBOM1IDChanging(int newValue);
	partial void OnBOM1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int BOMID 
	{ 
		get
		{
			return _BOMID;
		}
		set
		{
			if(_BOMID != value)
			{
				OnBOMIDChanging(value);
				_BOMID = value;
				OnBOMIDChanged();
			}
		}
	}
	private int _BOMID;

	partial void OnBOMIDChanging(int newValue);
	partial void OnBOMIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal Quantity 
	{ 
		get
		{
			return _Quantity;
		}
		set
		{
			if(_Quantity != value)
			{
				OnQuantityChanging(value);
				_Quantity = value;
				OnQuantityChanged();
			}
		}
	}
	private decimal _Quantity;

	partial void OnQuantityChanging(decimal newValue);
	partial void OnQuantityChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public virtual OITM OITM { get; set; }
    public virtual OUNT OUNT { get; set; }
    public virtual OBOM OBOM { get; set; }
}

[Serializable]
public partial class CFB1 : ObjectWithState
{

    public int CFB1ID 
	{ 
		get
		{
			return _CFB1ID;
		}
		set
		{
			if(_CFB1ID != value)
			{
				OnCFB1IDChanging(value);
				_CFB1ID = value;
				OnCFB1IDChanged();
			}
		}
	}
	private int _CFB1ID;

	partial void OnCFB1IDChanging(int newValue);
	partial void OnCFB1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int FeedbackID 
	{ 
		get
		{
			return _FeedbackID;
		}
		set
		{
			if(_FeedbackID != value)
			{
				OnFeedbackIDChanging(value);
				_FeedbackID = value;
				OnFeedbackIDChanged();
			}
		}
	}
	private int _FeedbackID;

	partial void OnFeedbackIDChanging(int newValue);
	partial void OnFeedbackIDChanged();

    public string FeedbackType 
	{ 
		get
		{
			return _FeedbackType;
		}
		set
		{
			if(_FeedbackType != value)
			{
				OnFeedbackTypeChanging(value);
				_FeedbackType = value;
				OnFeedbackTypeChanged();
			}
		}
	}
	private string _FeedbackType;

	partial void OnFeedbackTypeChanging(string newValue);
	partial void OnFeedbackTypeChanged();

    public int QuesID 
	{ 
		get
		{
			return _QuesID;
		}
		set
		{
			if(_QuesID != value)
			{
				OnQuesIDChanging(value);
				_QuesID = value;
				OnQuesIDChanged();
			}
		}
	}
	private int _QuesID;

	partial void OnQuesIDChanging(int newValue);
	partial void OnQuesIDChanged();

    public Nullable<decimal> Rating 
	{ 
		get
		{
			return _Rating;
		}
		set
		{
			if(_Rating != value)
			{
				OnRatingChanging(value);
				_Rating = value;
				OnRatingChanged();
			}
		}
	}
	private Nullable<decimal> _Rating;

	partial void OnRatingChanging(Nullable<decimal> newValue);
	partial void OnRatingChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual OCFB OCFB { get; set; }
    public virtual OQU OQU { get; set; }
}

[Serializable]
public partial class CGRP : ObjectWithState
{
    public CGRP() 
    { 
        this.SCM2 = new HashSet<SCM2>();
        this.ONTFs = new HashSet<ONTF>();
        this.OCRDs = new HashSet<OCRD>();
    }


    public int CustGroupID 
	{ 
		get
		{
			return _CustGroupID;
		}
		set
		{
			if(_CustGroupID != value)
			{
				OnCustGroupIDChanging(value);
				_CustGroupID = value;
				OnCustGroupIDChanged();
			}
		}
	}
	private int _CustGroupID;

	partial void OnCustGroupIDChanging(int newValue);
	partial void OnCustGroupIDChanged();

    public string CustGroupName 
	{ 
		get
		{
			return _CustGroupName;
		}
		set
		{
			if(_CustGroupName != value)
			{
				OnCustGroupNameChanging(value);
				_CustGroupName = value;
				OnCustGroupNameChanged();
			}
		}
	}
	private string _CustGroupName;

	partial void OnCustGroupNameChanging(string newValue);
	partial void OnCustGroupNameChanged();

    public string CustGroupDesc 
	{ 
		get
		{
			return _CustGroupDesc;
		}
		set
		{
			if(_CustGroupDesc != value)
			{
				OnCustGroupDescChanging(value);
				_CustGroupDesc = value;
				OnCustGroupDescChanged();
			}
		}
	}
	private string _CustGroupDesc;

	partial void OnCustGroupDescChanging(string newValue);
	partial void OnCustGroupDescChanged();

    public int PriceListID 
	{ 
		get
		{
			return _PriceListID;
		}
		set
		{
			if(_PriceListID != value)
			{
				OnPriceListIDChanging(value);
				_PriceListID = value;
				OnPriceListIDChanged();
			}
		}
	}
	private int _PriceListID;

	partial void OnPriceListIDChanging(int newValue);
	partial void OnPriceListIDChanged();

    public int Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private int _Type;

	partial void OnTypeChanging(int newValue);
	partial void OnTypeChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<int> PPriceListID 
	{ 
		get
		{
			return _PPriceListID;
		}
		set
		{
			if(_PPriceListID != value)
			{
				OnPPriceListIDChanging(value);
				_PPriceListID = value;
				OnPPriceListIDChanged();
			}
		}
	}
	private Nullable<int> _PPriceListID;

	partial void OnPPriceListIDChanging(Nullable<int> newValue);
	partial void OnPPriceListIDChanged();

    public virtual OIPL OIPL { get; set; }
    public virtual ICollection<SCM2> SCM2 { get; set; }
    public virtual ICollection<ONTF> ONTFs { get; set; }
    public virtual ICollection<OCRD> OCRDs { get; set; }
}

[Serializable]
public partial class CLM1 : ObjectWithState
{

    public int CLM1ID 
	{ 
		get
		{
			return _CLM1ID;
		}
		set
		{
			if(_CLM1ID != value)
			{
				OnCLM1IDChanging(value);
				_CLM1ID = value;
				OnCLM1IDChanged();
			}
		}
	}
	private int _CLM1ID;

	partial void OnCLM1IDChanging(int newValue);
	partial void OnCLM1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int ClaimID 
	{ 
		get
		{
			return _ClaimID;
		}
		set
		{
			if(_ClaimID != value)
			{
				OnClaimIDChanging(value);
				_ClaimID = value;
				OnClaimIDChanged();
			}
		}
	}
	private int _ClaimID;

	partial void OnClaimIDChanging(int newValue);
	partial void OnClaimIDChanged();

    public int SaleID 
	{ 
		get
		{
			return _SaleID;
		}
		set
		{
			if(_SaleID != value)
			{
				OnSaleIDChanging(value);
				_SaleID = value;
				OnSaleIDChanged();
			}
		}
	}
	private int _SaleID;

	partial void OnSaleIDChanging(int newValue);
	partial void OnSaleIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public string DocType 
	{ 
		get
		{
			return _DocType;
		}
		set
		{
			if(_DocType != value)
			{
				OnDocTypeChanging(value);
				_DocType = value;
				OnDocTypeChanged();
			}
		}
	}
	private string _DocType;

	partial void OnDocTypeChanging(string newValue);
	partial void OnDocTypeChanged();

    public string SchemeType 
	{ 
		get
		{
			return _SchemeType;
		}
		set
		{
			if(_SchemeType != value)
			{
				OnSchemeTypeChanging(value);
				_SchemeType = value;
				OnSchemeTypeChanged();
			}
		}
	}
	private string _SchemeType;

	partial void OnSchemeTypeChanging(string newValue);
	partial void OnSchemeTypeChanged();

    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();

    public Nullable<int> ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private Nullable<int> _ItemID;

	partial void OnItemIDChanging(Nullable<int> newValue);
	partial void OnItemIDChanged();

    public decimal TotalQty 
	{ 
		get
		{
			return _TotalQty;
		}
		set
		{
			if(_TotalQty != value)
			{
				OnTotalQtyChanging(value);
				_TotalQty = value;
				OnTotalQtyChanged();
			}
		}
	}
	private decimal _TotalQty;

	partial void OnTotalQtyChanging(decimal newValue);
	partial void OnTotalQtyChanged();

    public string SAPReasonItemCode 
	{ 
		get
		{
			return _SAPReasonItemCode;
		}
		set
		{
			if(_SAPReasonItemCode != value)
			{
				OnSAPReasonItemCodeChanging(value);
				_SAPReasonItemCode = value;
				OnSAPReasonItemCodeChanged();
			}
		}
	}
	private string _SAPReasonItemCode;

	partial void OnSAPReasonItemCodeChanging(string newValue);
	partial void OnSAPReasonItemCodeChanged();

    public decimal SubTotal 
	{ 
		get
		{
			return _SubTotal;
		}
		set
		{
			if(_SubTotal != value)
			{
				OnSubTotalChanging(value);
				_SubTotal = value;
				OnSubTotalChanged();
			}
		}
	}
	private decimal _SubTotal;

	partial void OnSubTotalChanging(decimal newValue);
	partial void OnSubTotalChanged();

    public decimal SchemeAmount 
	{ 
		get
		{
			return _SchemeAmount;
		}
		set
		{
			if(_SchemeAmount != value)
			{
				OnSchemeAmountChanging(value);
				_SchemeAmount = value;
				OnSchemeAmountChanged();
			}
		}
	}
	private decimal _SchemeAmount;

	partial void OnSchemeAmountChanging(decimal newValue);
	partial void OnSchemeAmountChanged();

    public decimal CompanyContPer 
	{ 
		get
		{
			return _CompanyContPer;
		}
		set
		{
			if(_CompanyContPer != value)
			{
				OnCompanyContPerChanging(value);
				_CompanyContPer = value;
				OnCompanyContPerChanged();
			}
		}
	}
	private decimal _CompanyContPer;

	partial void OnCompanyContPerChanging(decimal newValue);
	partial void OnCompanyContPerChanged();

    public decimal DistContPer 
	{ 
		get
		{
			return _DistContPer;
		}
		set
		{
			if(_DistContPer != value)
			{
				OnDistContPerChanging(value);
				_DistContPer = value;
				OnDistContPerChanged();
			}
		}
	}
	private decimal _DistContPer;

	partial void OnDistContPerChanging(decimal newValue);
	partial void OnDistContPerChanged();

    public decimal CompanyCont 
	{ 
		get
		{
			return _CompanyCont;
		}
		set
		{
			if(_CompanyCont != value)
			{
				OnCompanyContChanging(value);
				_CompanyCont = value;
				OnCompanyContChanged();
			}
		}
	}
	private decimal _CompanyCont;

	partial void OnCompanyContChanging(decimal newValue);
	partial void OnCompanyContChanged();

    public decimal DistCont 
	{ 
		get
		{
			return _DistCont;
		}
		set
		{
			if(_DistCont != value)
			{
				OnDistContChanging(value);
				_DistCont = value;
				OnDistContChanged();
			}
		}
	}
	private decimal _DistCont;

	partial void OnDistContChanging(decimal newValue);
	partial void OnDistContChanged();

    public decimal DistContTax 
	{ 
		get
		{
			return _DistContTax;
		}
		set
		{
			if(_DistContTax != value)
			{
				OnDistContTaxChanging(value);
				_DistContTax = value;
				OnDistContTaxChanged();
			}
		}
	}
	private decimal _DistContTax;

	partial void OnDistContTaxChanging(decimal newValue);
	partial void OnDistContTaxChanged();

    public decimal TotalCompanyCont 
	{ 
		get
		{
			return _TotalCompanyCont;
		}
		set
		{
			if(_TotalCompanyCont != value)
			{
				OnTotalCompanyContChanging(value);
				_TotalCompanyCont = value;
				OnTotalCompanyContChanged();
			}
		}
	}
	private decimal _TotalCompanyCont;

	partial void OnTotalCompanyContChanging(decimal newValue);
	partial void OnTotalCompanyContChanged();

    public virtual OCLM OCLM { get; set; }
    public virtual OCRD OCRD { get; set; }
}

[Serializable]
public partial class CLM2 : ObjectWithState
{

    public int CLM2ID 
	{ 
		get
		{
			return _CLM2ID;
		}
		set
		{
			if(_CLM2ID != value)
			{
				OnCLM2IDChanging(value);
				_CLM2ID = value;
				OnCLM2IDChanged();
			}
		}
	}
	private int _CLM2ID;

	partial void OnCLM2IDChanging(int newValue);
	partial void OnCLM2IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public Nullable<int> ParentClaimID 
	{ 
		get
		{
			return _ParentClaimID;
		}
		set
		{
			if(_ParentClaimID != value)
			{
				OnParentClaimIDChanging(value);
				_ParentClaimID = value;
				OnParentClaimIDChanged();
			}
		}
	}
	private Nullable<int> _ParentClaimID;

	partial void OnParentClaimIDChanging(Nullable<int> newValue);
	partial void OnParentClaimIDChanged();

    public string SchemeType 
	{ 
		get
		{
			return _SchemeType;
		}
		set
		{
			if(_SchemeType != value)
			{
				OnSchemeTypeChanging(value);
				_SchemeType = value;
				OnSchemeTypeChanged();
			}
		}
	}
	private string _SchemeType;

	partial void OnSchemeTypeChanging(string newValue);
	partial void OnSchemeTypeChanged();

    public string ImageName 
	{ 
		get
		{
			return _ImageName;
		}
		set
		{
			if(_ImageName != value)
			{
				OnImageNameChanging(value);
				_ImageName = value;
				OnImageNameChanged();
			}
		}
	}
	private string _ImageName;

	partial void OnImageNameChanging(string newValue);
	partial void OnImageNameChanged();
}

[Serializable]
public partial class CLMRQ1 : ObjectWithState
{

    public int CLMRQ1ID 
	{ 
		get
		{
			return _CLMRQ1ID;
		}
		set
		{
			if(_CLMRQ1ID != value)
			{
				OnCLMRQ1IDChanging(value);
				_CLMRQ1ID = value;
				OnCLMRQ1IDChanged();
			}
		}
	}
	private int _CLMRQ1ID;

	partial void OnCLMRQ1IDChanging(int newValue);
	partial void OnCLMRQ1IDChanged();

    public int ClaimRequestID 
	{ 
		get
		{
			return _ClaimRequestID;
		}
		set
		{
			if(_ClaimRequestID != value)
			{
				OnClaimRequestIDChanging(value);
				_ClaimRequestID = value;
				OnClaimRequestIDChanged();
			}
		}
	}
	private int _ClaimRequestID;

	partial void OnClaimRequestIDChanging(int newValue);
	partial void OnClaimRequestIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string DocNo 
	{ 
		get
		{
			return _DocNo;
		}
		set
		{
			if(_DocNo != value)
			{
				OnDocNoChanging(value);
				_DocNo = value;
				OnDocNoChanged();
			}
		}
	}
	private string _DocNo;

	partial void OnDocNoChanging(string newValue);
	partial void OnDocNoChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public int ParentClaimID 
	{ 
		get
		{
			return _ParentClaimID;
		}
		set
		{
			if(_ParentClaimID != value)
			{
				OnParentClaimIDChanging(value);
				_ParentClaimID = value;
				OnParentClaimIDChanged();
			}
		}
	}
	private int _ParentClaimID;

	partial void OnParentClaimIDChanging(int newValue);
	partial void OnParentClaimIDChanged();

    public System.DateTime FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private System.DateTime _FromDate;

	partial void OnFromDateChanging(System.DateTime newValue);
	partial void OnFromDateChanged();

    public System.DateTime ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private System.DateTime _ToDate;

	partial void OnToDateChanging(System.DateTime newValue);
	partial void OnToDateChanged();

    public System.DateTime ClaimDate 
	{ 
		get
		{
			return _ClaimDate;
		}
		set
		{
			if(_ClaimDate != value)
			{
				OnClaimDateChanging(value);
				_ClaimDate = value;
				OnClaimDateChanged();
			}
		}
	}
	private System.DateTime _ClaimDate;

	partial void OnClaimDateChanging(System.DateTime newValue);
	partial void OnClaimDateChanged();

    public decimal SchemeAmount 
	{ 
		get
		{
			return _SchemeAmount;
		}
		set
		{
			if(_SchemeAmount != value)
			{
				OnSchemeAmountChanging(value);
				_SchemeAmount = value;
				OnSchemeAmountChanged();
			}
		}
	}
	private decimal _SchemeAmount;

	partial void OnSchemeAmountChanging(decimal newValue);
	partial void OnSchemeAmountChanged();

    public decimal Deduction 
	{ 
		get
		{
			return _Deduction;
		}
		set
		{
			if(_Deduction != value)
			{
				OnDeductionChanging(value);
				_Deduction = value;
				OnDeductionChanged();
			}
		}
	}
	private decimal _Deduction;

	partial void OnDeductionChanging(decimal newValue);
	partial void OnDeductionChanged();

    public string DeductionRemarks 
	{ 
		get
		{
			return _DeductionRemarks;
		}
		set
		{
			if(_DeductionRemarks != value)
			{
				OnDeductionRemarksChanging(value);
				_DeductionRemarks = value;
				OnDeductionRemarksChanged();
			}
		}
	}
	private string _DeductionRemarks;

	partial void OnDeductionRemarksChanging(string newValue);
	partial void OnDeductionRemarksChanged();

    public decimal ApprovedAmount 
	{ 
		get
		{
			return _ApprovedAmount;
		}
		set
		{
			if(_ApprovedAmount != value)
			{
				OnApprovedAmountChanging(value);
				_ApprovedAmount = value;
				OnApprovedAmountChanged();
			}
		}
	}
	private decimal _ApprovedAmount;

	partial void OnApprovedAmountChanging(decimal newValue);
	partial void OnApprovedAmountChanged();

    public string ReasonCode 
	{ 
		get
		{
			return _ReasonCode;
		}
		set
		{
			if(_ReasonCode != value)
			{
				OnReasonCodeChanging(value);
				_ReasonCode = value;
				OnReasonCodeChanged();
			}
		}
	}
	private string _ReasonCode;

	partial void OnReasonCodeChanging(string newValue);
	partial void OnReasonCodeChanged();

    public bool IsAuto 
	{ 
		get
		{
			return _IsAuto;
		}
		set
		{
			if(_IsAuto != value)
			{
				OnIsAutoChanging(value);
				_IsAuto = value;
				OnIsAutoChanged();
			}
		}
	}
	private bool _IsAuto;

	partial void OnIsAutoChanging(bool newValue);
	partial void OnIsAutoChanged();

    public decimal SchemeSale 
	{ 
		get
		{
			return _SchemeSale;
		}
		set
		{
			if(_SchemeSale != value)
			{
				OnSchemeSaleChanging(value);
				_SchemeSale = value;
				OnSchemeSaleChanged();
			}
		}
	}
	private decimal _SchemeSale;

	partial void OnSchemeSaleChanging(decimal newValue);
	partial void OnSchemeSaleChanged();

    public decimal TotalSale 
	{ 
		get
		{
			return _TotalSale;
		}
		set
		{
			if(_TotalSale != value)
			{
				OnTotalSaleChanging(value);
				_TotalSale = value;
				OnTotalSaleChanged();
			}
		}
	}
	private decimal _TotalSale;

	partial void OnTotalSaleChanging(decimal newValue);
	partial void OnTotalSaleChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> NextManagerID 
	{ 
		get
		{
			return _NextManagerID;
		}
		set
		{
			if(_NextManagerID != value)
			{
				OnNextManagerIDChanging(value);
				_NextManagerID = value;
				OnNextManagerIDChanged();
			}
		}
	}
	private Nullable<int> _NextManagerID;

	partial void OnNextManagerIDChanging(Nullable<int> newValue);
	partial void OnNextManagerIDChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public string ErrMsg 
	{ 
		get
		{
			return _ErrMsg;
		}
		set
		{
			if(_ErrMsg != value)
			{
				OnErrMsgChanging(value);
				_ErrMsg = value;
				OnErrMsgChanged();
			}
		}
	}
	private string _ErrMsg;

	partial void OnErrMsgChanging(string newValue);
	partial void OnErrMsgChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool IsSAP 
	{ 
		get
		{
			return _IsSAP;
		}
		set
		{
			if(_IsSAP != value)
			{
				OnIsSAPChanging(value);
				_IsSAP = value;
				OnIsSAPChanged();
			}
		}
	}
	private bool _IsSAP;

	partial void OnIsSAPChanging(bool newValue);
	partial void OnIsSAPChanged();

    public decimal PrevApprovedAmount 
	{ 
		get
		{
			return _PrevApprovedAmount;
		}
		set
		{
			if(_PrevApprovedAmount != value)
			{
				OnPrevApprovedAmountChanging(value);
				_PrevApprovedAmount = value;
				OnPrevApprovedAmountChanged();
			}
		}
	}
	private decimal _PrevApprovedAmount;

	partial void OnPrevApprovedAmountChanging(decimal newValue);
	partial void OnPrevApprovedAmountChanged();

    public Nullable<int> ClaimChildID 
	{ 
		get
		{
			return _ClaimChildID;
		}
		set
		{
			if(_ClaimChildID != value)
			{
				OnClaimChildIDChanging(value);
				_ClaimChildID = value;
				OnClaimChildIDChanged();
			}
		}
	}
	private Nullable<int> _ClaimChildID;

	partial void OnClaimChildIDChanging(Nullable<int> newValue);
	partial void OnClaimChildIDChanged();

    public Nullable<decimal> ClaimChildParentID 
	{ 
		get
		{
			return _ClaimChildParentID;
		}
		set
		{
			if(_ClaimChildParentID != value)
			{
				OnClaimChildParentIDChanging(value);
				_ClaimChildParentID = value;
				OnClaimChildParentIDChanged();
			}
		}
	}
	private Nullable<decimal> _ClaimChildParentID;

	partial void OnClaimChildParentIDChanging(Nullable<decimal> newValue);
	partial void OnClaimChildParentIDChanged();

    public string CreatedIPAddress 
	{ 
		get
		{
			return _CreatedIPAddress;
		}
		set
		{
			if(_CreatedIPAddress != value)
			{
				OnCreatedIPAddressChanging(value);
				_CreatedIPAddress = value;
				OnCreatedIPAddressChanged();
			}
		}
	}
	private string _CreatedIPAddress;

	partial void OnCreatedIPAddressChanging(string newValue);
	partial void OnCreatedIPAddressChanged();

    public virtual OCLMP OCLMP { get; set; }
}

[Serializable]
public partial class CMP1 : ObjectWithState
{

    public int CMP1ID 
	{ 
		get
		{
			return _CMP1ID;
		}
		set
		{
			if(_CMP1ID != value)
			{
				OnCMP1IDChanging(value);
				_CMP1ID = value;
				OnCMP1IDChanged();
			}
		}
	}
	private int _CMP1ID;

	partial void OnCMP1IDChanging(int newValue);
	partial void OnCMP1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int MCMPID 
	{ 
		get
		{
			return _MCMPID;
		}
		set
		{
			if(_MCMPID != value)
			{
				OnMCMPIDChanging(value);
				_MCMPID = value;
				OnMCMPIDChanged();
			}
		}
	}
	private int _MCMPID;

	partial void OnMCMPIDChanging(int newValue);
	partial void OnMCMPIDChanged();

    public int QuesID 
	{ 
		get
		{
			return _QuesID;
		}
		set
		{
			if(_QuesID != value)
			{
				OnQuesIDChanging(value);
				_QuesID = value;
				OnQuesIDChanged();
			}
		}
	}
	private int _QuesID;

	partial void OnQuesIDChanging(int newValue);
	partial void OnQuesIDChanged();

    public string Answer 
	{ 
		get
		{
			return _Answer;
		}
		set
		{
			if(_Answer != value)
			{
				OnAnswerChanging(value);
				_Answer = value;
				OnAnswerChanged();
			}
		}
	}
	private string _Answer;

	partial void OnAnswerChanging(string newValue);
	partial void OnAnswerChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual MCMP MCMP { get; set; }
    public virtual OQU OQU { get; set; }
}

[Serializable]
public partial class COMP1 : ObjectWithState
{

    public int COMP1ID 
	{ 
		get
		{
			return _COMP1ID;
		}
		set
		{
			if(_COMP1ID != value)
			{
				OnCOMP1IDChanging(value);
				_COMP1ID = value;
				OnCOMP1IDChanged();
			}
		}
	}
	private int _COMP1ID;

	partial void OnCOMP1IDChanging(int newValue);
	partial void OnCOMP1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public Nullable<int> OCOMPID 
	{ 
		get
		{
			return _OCOMPID;
		}
		set
		{
			if(_OCOMPID != value)
			{
				OnOCOMPIDChanging(value);
				_OCOMPID = value;
				OnOCOMPIDChanged();
			}
		}
	}
	private Nullable<int> _OCOMPID;

	partial void OnOCOMPIDChanging(Nullable<int> newValue);
	partial void OnOCOMPIDChanged();

    public Nullable<int> EmpId 
	{ 
		get
		{
			return _EmpId;
		}
		set
		{
			if(_EmpId != value)
			{
				OnEmpIdChanging(value);
				_EmpId = value;
				OnEmpIdChanged();
			}
		}
	}
	private Nullable<int> _EmpId;

	partial void OnEmpIdChanging(Nullable<int> newValue);
	partial void OnEmpIdChanged();

    public Nullable<int> QuesID 
	{ 
		get
		{
			return _QuesID;
		}
		set
		{
			if(_QuesID != value)
			{
				OnQuesIDChanging(value);
				_QuesID = value;
				OnQuesIDChanged();
			}
		}
	}
	private Nullable<int> _QuesID;

	partial void OnQuesIDChanging(Nullable<int> newValue);
	partial void OnQuesIDChanged();

    public Nullable<int> BrandID 
	{ 
		get
		{
			return _BrandID;
		}
		set
		{
			if(_BrandID != value)
			{
				OnBrandIDChanging(value);
				_BrandID = value;
				OnBrandIDChanged();
			}
		}
	}
	private Nullable<int> _BrandID;

	partial void OnBrandIDChanging(Nullable<int> newValue);
	partial void OnBrandIDChanged();

    public Nullable<decimal> CusID 
	{ 
		get
		{
			return _CusID;
		}
		set
		{
			if(_CusID != value)
			{
				OnCusIDChanging(value);
				_CusID = value;
				OnCusIDChanged();
			}
		}
	}
	private Nullable<decimal> _CusID;

	partial void OnCusIDChanging(Nullable<decimal> newValue);
	partial void OnCusIDChanged();

    public string Answer 
	{ 
		get
		{
			return _Answer;
		}
		set
		{
			if(_Answer != value)
			{
				OnAnswerChanging(value);
				_Answer = value;
				OnAnswerChanged();
			}
		}
	}
	private string _Answer;

	partial void OnAnswerChanging(string newValue);
	partial void OnAnswerChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public Nullable<int> Score 
	{ 
		get
		{
			return _Score;
		}
		set
		{
			if(_Score != value)
			{
				OnScoreChanging(value);
				_Score = value;
				OnScoreChanged();
			}
		}
	}
	private Nullable<int> _Score;

	partial void OnScoreChanging(Nullable<int> newValue);
	partial void OnScoreChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();
}

[Serializable]
public partial class COMP2 : ObjectWithState
{

    public int COMP2ID 
	{ 
		get
		{
			return _COMP2ID;
		}
		set
		{
			if(_COMP2ID != value)
			{
				OnCOMP2IDChanging(value);
				_COMP2ID = value;
				OnCOMP2IDChanged();
			}
		}
	}
	private int _COMP2ID;

	partial void OnCOMP2IDChanging(int newValue);
	partial void OnCOMP2IDChanged();

    public Nullable<int> OCOMPID 
	{ 
		get
		{
			return _OCOMPID;
		}
		set
		{
			if(_OCOMPID != value)
			{
				OnOCOMPIDChanging(value);
				_OCOMPID = value;
				OnOCOMPIDChanged();
			}
		}
	}
	private Nullable<int> _OCOMPID;

	partial void OnOCOMPIDChanging(Nullable<int> newValue);
	partial void OnOCOMPIDChanged();

    public string Image1 
	{ 
		get
		{
			return _Image1;
		}
		set
		{
			if(_Image1 != value)
			{
				OnImage1Changing(value);
				_Image1 = value;
				OnImage1Changed();
			}
		}
	}
	private string _Image1;

	partial void OnImage1Changing(string newValue);
	partial void OnImage1Changed();

    public string Image2 
	{ 
		get
		{
			return _Image2;
		}
		set
		{
			if(_Image2 != value)
			{
				OnImage2Changing(value);
				_Image2 = value;
				OnImage2Changed();
			}
		}
	}
	private string _Image2;

	partial void OnImage2Changing(string newValue);
	partial void OnImage2Changed();

    public string Image3 
	{ 
		get
		{
			return _Image3;
		}
		set
		{
			if(_Image3 != value)
			{
				OnImage3Changing(value);
				_Image3 = value;
				OnImage3Changed();
			}
		}
	}
	private string _Image3;

	partial void OnImage3Changing(string newValue);
	partial void OnImage3Changed();

    public string Image4 
	{ 
		get
		{
			return _Image4;
		}
		set
		{
			if(_Image4 != value)
			{
				OnImage4Changing(value);
				_Image4 = value;
				OnImage4Changed();
			}
		}
	}
	private string _Image4;

	partial void OnImage4Changing(string newValue);
	partial void OnImage4Changed();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<decimal> CustID 
	{ 
		get
		{
			return _CustID;
		}
		set
		{
			if(_CustID != value)
			{
				OnCustIDChanging(value);
				_CustID = value;
				OnCustIDChanged();
			}
		}
	}
	private Nullable<decimal> _CustID;

	partial void OnCustIDChanging(Nullable<decimal> newValue);
	partial void OnCustIDChanged();
}

[Serializable]
public partial class COMP3 : ObjectWithState
{

    public int COMP3ID 
	{ 
		get
		{
			return _COMP3ID;
		}
		set
		{
			if(_COMP3ID != value)
			{
				OnCOMP3IDChanging(value);
				_COMP3ID = value;
				OnCOMP3IDChanged();
			}
		}
	}
	private int _COMP3ID;

	partial void OnCOMP3IDChanging(int newValue);
	partial void OnCOMP3IDChanged();

    public Nullable<int> OCOMPID 
	{ 
		get
		{
			return _OCOMPID;
		}
		set
		{
			if(_OCOMPID != value)
			{
				OnOCOMPIDChanging(value);
				_OCOMPID = value;
				OnOCOMPIDChanged();
			}
		}
	}
	private Nullable<int> _OCOMPID;

	partial void OnOCOMPIDChanging(Nullable<int> newValue);
	partial void OnOCOMPIDChanged();

    public Nullable<int> DivisionID 
	{ 
		get
		{
			return _DivisionID;
		}
		set
		{
			if(_DivisionID != value)
			{
				OnDivisionIDChanging(value);
				_DivisionID = value;
				OnDivisionIDChanged();
			}
		}
	}
	private Nullable<int> _DivisionID;

	partial void OnDivisionIDChanging(Nullable<int> newValue);
	partial void OnDivisionIDChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();
}

[Serializable]
public partial class CPN1 : ObjectWithState
{

    public int CPN1ID 
	{ 
		get
		{
			return _CPN1ID;
		}
		set
		{
			if(_CPN1ID != value)
			{
				OnCPN1IDChanging(value);
				_CPN1ID = value;
				OnCPN1IDChanged();
			}
		}
	}
	private int _CPN1ID;

	partial void OnCPN1IDChanging(int newValue);
	partial void OnCPN1IDChanged();

    public int CouponID 
	{ 
		get
		{
			return _CouponID;
		}
		set
		{
			if(_CouponID != value)
			{
				OnCouponIDChanging(value);
				_CouponID = value;
				OnCouponIDChanged();
			}
		}
	}
	private int _CouponID;

	partial void OnCouponIDChanging(int newValue);
	partial void OnCouponIDChanged();

    public Nullable<int> StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private Nullable<int> _StateID;

	partial void OnStateIDChanging(Nullable<int> newValue);
	partial void OnStateIDChanged();

    public Nullable<int> CityID 
	{ 
		get
		{
			return _CityID;
		}
		set
		{
			if(_CityID != value)
			{
				OnCityIDChanging(value);
				_CityID = value;
				OnCityIDChanged();
			}
		}
	}
	private Nullable<int> _CityID;

	partial void OnCityIDChanging(Nullable<int> newValue);
	partial void OnCityIDChanged();

    public Nullable<int> PinCodeID 
	{ 
		get
		{
			return _PinCodeID;
		}
		set
		{
			if(_PinCodeID != value)
			{
				OnPinCodeIDChanging(value);
				_PinCodeID = value;
				OnPinCodeIDChanged();
			}
		}
	}
	private Nullable<int> _PinCodeID;

	partial void OnPinCodeIDChanging(Nullable<int> newValue);
	partial void OnPinCodeIDChanged();

    public virtual OCPN OCPN { get; set; }
    public virtual OCST OCST { get; set; }
    public virtual OCTY OCTY { get; set; }
    public virtual OPIN OPIN { get; set; }
}

[Serializable]
public partial class CRD1 : ObjectWithState
{
    public CRD1() 
    { 
        this.OEMPs = new HashSet<OEMP>();
        this.RUT1 = new HashSet<RUT1>();
    }


    public int BranchID 
	{ 
		get
		{
			return _BranchID;
		}
		set
		{
			if(_BranchID != value)
			{
				OnBranchIDChanging(value);
				_BranchID = value;
				OnBranchIDChanged();
			}
		}
	}
	private int _BranchID;

	partial void OnBranchIDChanging(int newValue);
	partial void OnBranchIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public string Branch 
	{ 
		get
		{
			return _Branch;
		}
		set
		{
			if(_Branch != value)
			{
				OnBranchChanging(value);
				_Branch = value;
				OnBranchChanged();
			}
		}
	}
	private string _Branch;

	partial void OnBranchChanging(string newValue);
	partial void OnBranchChanged();

    public string Address1 
	{ 
		get
		{
			return _Address1;
		}
		set
		{
			if(_Address1 != value)
			{
				OnAddress1Changing(value);
				_Address1 = value;
				OnAddress1Changed();
			}
		}
	}
	private string _Address1;

	partial void OnAddress1Changing(string newValue);
	partial void OnAddress1Changed();

    public string Address2 
	{ 
		get
		{
			return _Address2;
		}
		set
		{
			if(_Address2 != value)
			{
				OnAddress2Changing(value);
				_Address2 = value;
				OnAddress2Changed();
			}
		}
	}
	private string _Address2;

	partial void OnAddress2Changing(string newValue);
	partial void OnAddress2Changed();

    public string Location 
	{ 
		get
		{
			return _Location;
		}
		set
		{
			if(_Location != value)
			{
				OnLocationChanging(value);
				_Location = value;
				OnLocationChanged();
			}
		}
	}
	private string _Location;

	partial void OnLocationChanging(string newValue);
	partial void OnLocationChanged();

    public string ZipCode 
	{ 
		get
		{
			return _ZipCode;
		}
		set
		{
			if(_ZipCode != value)
			{
				OnZipCodeChanging(value);
				_ZipCode = value;
				OnZipCodeChanged();
			}
		}
	}
	private string _ZipCode;

	partial void OnZipCodeChanging(string newValue);
	partial void OnZipCodeChanged();

    public string ContactPerson 
	{ 
		get
		{
			return _ContactPerson;
		}
		set
		{
			if(_ContactPerson != value)
			{
				OnContactPersonChanging(value);
				_ContactPerson = value;
				OnContactPersonChanged();
			}
		}
	}
	private string _ContactPerson;

	partial void OnContactPersonChanging(string newValue);
	partial void OnContactPersonChanged();

    public string PhoneNumber 
	{ 
		get
		{
			return _PhoneNumber;
		}
		set
		{
			if(_PhoneNumber != value)
			{
				OnPhoneNumberChanging(value);
				_PhoneNumber = value;
				OnPhoneNumberChanged();
			}
		}
	}
	private string _PhoneNumber;

	partial void OnPhoneNumberChanging(string newValue);
	partial void OnPhoneNumberChanged();

    public int CityID 
	{ 
		get
		{
			return _CityID;
		}
		set
		{
			if(_CityID != value)
			{
				OnCityIDChanging(value);
				_CityID = value;
				OnCityIDChanged();
			}
		}
	}
	private int _CityID;

	partial void OnCityIDChanging(int newValue);
	partial void OnCityIDChanged();

    public int StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private int _StateID;

	partial void OnStateIDChanging(int newValue);
	partial void OnStateIDChanged();

    public int CountryID 
	{ 
		get
		{
			return _CountryID;
		}
		set
		{
			if(_CountryID != value)
			{
				OnCountryIDChanging(value);
				_CountryID = value;
				OnCountryIDChanged();
			}
		}
	}
	private int _CountryID;

	partial void OnCountryIDChanging(int newValue);
	partial void OnCountryIDChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public string LandMark 
	{ 
		get
		{
			return _LandMark;
		}
		set
		{
			if(_LandMark != value)
			{
				OnLandMarkChanging(value);
				_LandMark = value;
				OnLandMarkChanged();
			}
		}
	}
	private string _LandMark;

	partial void OnLandMarkChanging(string newValue);
	partial void OnLandMarkChanged();

    public virtual OCRY OCRY { get; set; }
    public virtual OCST OCST { get; set; }
    public virtual OCTY OCTY { get; set; }
    public virtual ICollection<OEMP> OEMPs { get; set; }
    public virtual OCRD OCRD { get; set; }
    public virtual ICollection<RUT1> RUT1 { get; set; }
}

[Serializable]
public partial class CRD2 : ObjectWithState
{

    public int ContactID 
	{ 
		get
		{
			return _ContactID;
		}
		set
		{
			if(_ContactID != value)
			{
				OnContactIDChanging(value);
				_ContactID = value;
				OnContactIDChanged();
			}
		}
	}
	private int _ContactID;

	partial void OnContactIDChanging(int newValue);
	partial void OnContactIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public string Name 
	{ 
		get
		{
			return _Name;
		}
		set
		{
			if(_Name != value)
			{
				OnNameChanging(value);
				_Name = value;
				OnNameChanged();
			}
		}
	}
	private string _Name;

	partial void OnNameChanging(string newValue);
	partial void OnNameChanged();

    public int Gender 
	{ 
		get
		{
			return _Gender;
		}
		set
		{
			if(_Gender != value)
			{
				OnGenderChanging(value);
				_Gender = value;
				OnGenderChanged();
			}
		}
	}
	private int _Gender;

	partial void OnGenderChanging(int newValue);
	partial void OnGenderChanged();

    public int RelationID 
	{ 
		get
		{
			return _RelationID;
		}
		set
		{
			if(_RelationID != value)
			{
				OnRelationIDChanging(value);
				_RelationID = value;
				OnRelationIDChanged();
			}
		}
	}
	private int _RelationID;

	partial void OnRelationIDChanging(int newValue);
	partial void OnRelationIDChanged();

    public Nullable<System.DateTime> BirthDay 
	{ 
		get
		{
			return _BirthDay;
		}
		set
		{
			if(_BirthDay != value)
			{
				OnBirthDayChanging(value);
				_BirthDay = value;
				OnBirthDayChanged();
			}
		}
	}
	private Nullable<System.DateTime> _BirthDay;

	partial void OnBirthDayChanging(Nullable<System.DateTime> newValue);
	partial void OnBirthDayChanged();

    public Nullable<System.DateTime> Anniversary 
	{ 
		get
		{
			return _Anniversary;
		}
		set
		{
			if(_Anniversary != value)
			{
				OnAnniversaryChanging(value);
				_Anniversary = value;
				OnAnniversaryChanged();
			}
		}
	}
	private Nullable<System.DateTime> _Anniversary;

	partial void OnAnniversaryChanging(Nullable<System.DateTime> newValue);
	partial void OnAnniversaryChanged();

    public Nullable<System.DateTime> SpecialDay 
	{ 
		get
		{
			return _SpecialDay;
		}
		set
		{
			if(_SpecialDay != value)
			{
				OnSpecialDayChanging(value);
				_SpecialDay = value;
				OnSpecialDayChanged();
			}
		}
	}
	private Nullable<System.DateTime> _SpecialDay;

	partial void OnSpecialDayChanging(Nullable<System.DateTime> newValue);
	partial void OnSpecialDayChanged();

    public string Mobile 
	{ 
		get
		{
			return _Mobile;
		}
		set
		{
			if(_Mobile != value)
			{
				OnMobileChanging(value);
				_Mobile = value;
				OnMobileChanged();
			}
		}
	}
	private string _Mobile;

	partial void OnMobileChanging(string newValue);
	partial void OnMobileChanged();

    public string Email 
	{ 
		get
		{
			return _Email;
		}
		set
		{
			if(_Email != value)
			{
				OnEmailChanging(value);
				_Email = value;
				OnEmailChanged();
			}
		}
	}
	private string _Email;

	partial void OnEmailChanging(string newValue);
	partial void OnEmailChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public virtual ORLN ORLN { get; set; }
    public virtual OCRD OCRD { get; set; }
}

[Serializable]
public partial class CRUT1 : ObjectWithState
{

    public int CRUT1ID 
	{ 
		get
		{
			return _CRUT1ID;
		}
		set
		{
			if(_CRUT1ID != value)
			{
				OnCRUT1IDChanging(value);
				_CRUT1ID = value;
				OnCRUT1IDChanged();
			}
		}
	}
	private int _CRUT1ID;

	partial void OnCRUT1IDChanging(int newValue);
	partial void OnCRUT1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int CompRouteID 
	{ 
		get
		{
			return _CompRouteID;
		}
		set
		{
			if(_CompRouteID != value)
			{
				OnCompRouteIDChanging(value);
				_CompRouteID = value;
				OnCompRouteIDChanged();
			}
		}
	}
	private int _CompRouteID;

	partial void OnCompRouteIDChanging(int newValue);
	partial void OnCompRouteIDChanged();

    public int OCOMPID 
	{ 
		get
		{
			return _OCOMPID;
		}
		set
		{
			if(_OCOMPID != value)
			{
				OnOCOMPIDChanging(value);
				_OCOMPID = value;
				OnOCOMPIDChanged();
			}
		}
	}
	private int _OCOMPID;

	partial void OnOCOMPIDChanging(int newValue);
	partial void OnOCOMPIDChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public virtual OCOMP OCOMP { get; set; }
    public virtual OCRUT OCRUT { get; set; }
}

[Serializable]
public partial class CSE1 : ObjectWithState
{

    public int FocusID 
	{ 
		get
		{
			return _FocusID;
		}
		set
		{
			if(_FocusID != value)
			{
				OnFocusIDChanging(value);
				_FocusID = value;
				OnFocusIDChanged();
			}
		}
	}
	private int _FocusID;

	partial void OnFocusIDChanging(int newValue);
	partial void OnFocusIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int CallID 
	{ 
		get
		{
			return _CallID;
		}
		set
		{
			if(_CallID != value)
			{
				OnCallIDChanging(value);
				_CallID = value;
				OnCallIDChanged();
			}
		}
	}
	private int _CallID;

	partial void OnCallIDChanging(int newValue);
	partial void OnCallIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int Qty 
	{ 
		get
		{
			return _Qty;
		}
		set
		{
			if(_Qty != value)
			{
				OnQtyChanging(value);
				_Qty = value;
				OnQtyChanged();
			}
		}
	}
	private int _Qty;

	partial void OnQtyChanging(int newValue);
	partial void OnQtyChanged();

    public virtual OCSE OCSE { get; set; }
}

[Serializable]
public partial class DBNK : ObjectWithState
{

    public int DistBankId 
	{ 
		get
		{
			return _DistBankId;
		}
		set
		{
			if(_DistBankId != value)
			{
				OnDistBankIdChanging(value);
				_DistBankId = value;
				OnDistBankIdChanged();
			}
		}
	}
	private int _DistBankId;

	partial void OnDistBankIdChanging(int newValue);
	partial void OnDistBankIdChanged();

    public Nullable<decimal> CustomerId 
	{ 
		get
		{
			return _CustomerId;
		}
		set
		{
			if(_CustomerId != value)
			{
				OnCustomerIdChanging(value);
				_CustomerId = value;
				OnCustomerIdChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerId;

	partial void OnCustomerIdChanging(Nullable<decimal> newValue);
	partial void OnCustomerIdChanged();

    public Nullable<int> BankId 
	{ 
		get
		{
			return _BankId;
		}
		set
		{
			if(_BankId != value)
			{
				OnBankIdChanging(value);
				_BankId = value;
				OnBankIdChanged();
			}
		}
	}
	private Nullable<int> _BankId;

	partial void OnBankIdChanging(Nullable<int> newValue);
	partial void OnBankIdChanged();

    public string AccountNo 
	{ 
		get
		{
			return _AccountNo;
		}
		set
		{
			if(_AccountNo != value)
			{
				OnAccountNoChanging(value);
				_AccountNo = value;
				OnAccountNoChanged();
			}
		}
	}
	private string _AccountNo;

	partial void OnAccountNoChanging(string newValue);
	partial void OnAccountNoChanged();

    public string BranchName 
	{ 
		get
		{
			return _BranchName;
		}
		set
		{
			if(_BranchName != value)
			{
				OnBranchNameChanging(value);
				_BranchName = value;
				OnBranchNameChanged();
			}
		}
	}
	private string _BranchName;

	partial void OnBranchNameChanging(string newValue);
	partial void OnBranchNameChanged();

    public string IFSCCode 
	{ 
		get
		{
			return _IFSCCode;
		}
		set
		{
			if(_IFSCCode != value)
			{
				OnIFSCCodeChanging(value);
				_IFSCCode = value;
				OnIFSCCodeChanged();
			}
		}
	}
	private string _IFSCCode;

	partial void OnIFSCCodeChanging(string newValue);
	partial void OnIFSCCodeChanged();

    public Nullable<bool> IsActive 
	{ 
		get
		{
			return _IsActive;
		}
		set
		{
			if(_IsActive != value)
			{
				OnIsActiveChanging(value);
				_IsActive = value;
				OnIsActiveChanged();
			}
		}
	}
	private Nullable<bool> _IsActive;

	partial void OnIsActiveChanging(Nullable<bool> newValue);
	partial void OnIsActiveChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public string Jurisdiction 
	{ 
		get
		{
			return _Jurisdiction;
		}
		set
		{
			if(_Jurisdiction != value)
			{
				OnJurisdictionChanging(value);
				_Jurisdiction = value;
				OnJurisdictionChanged();
			}
		}
	}
	private string _Jurisdiction;

	partial void OnJurisdictionChanging(string newValue);
	partial void OnJurisdictionChanged();
}

[Serializable]
public partial class DCLM1 : ObjectWithState
{

    public int DCLM1ID 
	{ 
		get
		{
			return _DCLM1ID;
		}
		set
		{
			if(_DCLM1ID != value)
			{
				OnDCLM1IDChanging(value);
				_DCLM1ID = value;
				OnDCLM1IDChanged();
			}
		}
	}
	private int _DCLM1ID;

	partial void OnDCLM1IDChanging(int newValue);
	partial void OnDCLM1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int DClaimID 
	{ 
		get
		{
			return _DClaimID;
		}
		set
		{
			if(_DClaimID != value)
			{
				OnDClaimIDChanging(value);
				_DClaimID = value;
				OnDClaimIDChanged();
			}
		}
	}
	private int _DClaimID;

	partial void OnDClaimIDChanging(int newValue);
	partial void OnDClaimIDChanged();

    public int SaleID 
	{ 
		get
		{
			return _SaleID;
		}
		set
		{
			if(_SaleID != value)
			{
				OnSaleIDChanging(value);
				_SaleID = value;
				OnSaleIDChanged();
			}
		}
	}
	private int _SaleID;

	partial void OnSaleIDChanging(int newValue);
	partial void OnSaleIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public string DocType 
	{ 
		get
		{
			return _DocType;
		}
		set
		{
			if(_DocType != value)
			{
				OnDocTypeChanging(value);
				_DocType = value;
				OnDocTypeChanged();
			}
		}
	}
	private string _DocType;

	partial void OnDocTypeChanging(string newValue);
	partial void OnDocTypeChanged();

    public string SchemeType 
	{ 
		get
		{
			return _SchemeType;
		}
		set
		{
			if(_SchemeType != value)
			{
				OnSchemeTypeChanging(value);
				_SchemeType = value;
				OnSchemeTypeChanged();
			}
		}
	}
	private string _SchemeType;

	partial void OnSchemeTypeChanging(string newValue);
	partial void OnSchemeTypeChanged();

    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();

    public Nullable<int> ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private Nullable<int> _ItemID;

	partial void OnItemIDChanging(Nullable<int> newValue);
	partial void OnItemIDChanged();

    public decimal TotalQty 
	{ 
		get
		{
			return _TotalQty;
		}
		set
		{
			if(_TotalQty != value)
			{
				OnTotalQtyChanging(value);
				_TotalQty = value;
				OnTotalQtyChanged();
			}
		}
	}
	private decimal _TotalQty;

	partial void OnTotalQtyChanging(decimal newValue);
	partial void OnTotalQtyChanged();

    public string SAPReasonItemCode 
	{ 
		get
		{
			return _SAPReasonItemCode;
		}
		set
		{
			if(_SAPReasonItemCode != value)
			{
				OnSAPReasonItemCodeChanging(value);
				_SAPReasonItemCode = value;
				OnSAPReasonItemCodeChanged();
			}
		}
	}
	private string _SAPReasonItemCode;

	partial void OnSAPReasonItemCodeChanging(string newValue);
	partial void OnSAPReasonItemCodeChanged();

    public decimal SubTotal 
	{ 
		get
		{
			return _SubTotal;
		}
		set
		{
			if(_SubTotal != value)
			{
				OnSubTotalChanging(value);
				_SubTotal = value;
				OnSubTotalChanged();
			}
		}
	}
	private decimal _SubTotal;

	partial void OnSubTotalChanging(decimal newValue);
	partial void OnSubTotalChanged();

    public decimal SchemeAmount 
	{ 
		get
		{
			return _SchemeAmount;
		}
		set
		{
			if(_SchemeAmount != value)
			{
				OnSchemeAmountChanging(value);
				_SchemeAmount = value;
				OnSchemeAmountChanged();
			}
		}
	}
	private decimal _SchemeAmount;

	partial void OnSchemeAmountChanging(decimal newValue);
	partial void OnSchemeAmountChanged();

    public decimal CompanyContPer 
	{ 
		get
		{
			return _CompanyContPer;
		}
		set
		{
			if(_CompanyContPer != value)
			{
				OnCompanyContPerChanging(value);
				_CompanyContPer = value;
				OnCompanyContPerChanged();
			}
		}
	}
	private decimal _CompanyContPer;

	partial void OnCompanyContPerChanging(decimal newValue);
	partial void OnCompanyContPerChanged();

    public decimal DistContPer 
	{ 
		get
		{
			return _DistContPer;
		}
		set
		{
			if(_DistContPer != value)
			{
				OnDistContPerChanging(value);
				_DistContPer = value;
				OnDistContPerChanged();
			}
		}
	}
	private decimal _DistContPer;

	partial void OnDistContPerChanging(decimal newValue);
	partial void OnDistContPerChanged();

    public decimal CompanyCont 
	{ 
		get
		{
			return _CompanyCont;
		}
		set
		{
			if(_CompanyCont != value)
			{
				OnCompanyContChanging(value);
				_CompanyCont = value;
				OnCompanyContChanged();
			}
		}
	}
	private decimal _CompanyCont;

	partial void OnCompanyContChanging(decimal newValue);
	partial void OnCompanyContChanged();

    public decimal DistCont 
	{ 
		get
		{
			return _DistCont;
		}
		set
		{
			if(_DistCont != value)
			{
				OnDistContChanging(value);
				_DistCont = value;
				OnDistContChanged();
			}
		}
	}
	private decimal _DistCont;

	partial void OnDistContChanging(decimal newValue);
	partial void OnDistContChanged();

    public decimal DistContTax 
	{ 
		get
		{
			return _DistContTax;
		}
		set
		{
			if(_DistContTax != value)
			{
				OnDistContTaxChanging(value);
				_DistContTax = value;
				OnDistContTaxChanged();
			}
		}
	}
	private decimal _DistContTax;

	partial void OnDistContTaxChanging(decimal newValue);
	partial void OnDistContTaxChanged();

    public decimal TotalCompanyCont 
	{ 
		get
		{
			return _TotalCompanyCont;
		}
		set
		{
			if(_TotalCompanyCont != value)
			{
				OnTotalCompanyContChanging(value);
				_TotalCompanyCont = value;
				OnTotalCompanyContChanged();
			}
		}
	}
	private decimal _TotalCompanyCont;

	partial void OnTotalCompanyContChanging(decimal newValue);
	partial void OnTotalCompanyContChanged();

    public virtual DOCLM DOCLM { get; set; }
    public virtual OCRD OCRD { get; set; }
}

[Serializable]
public partial class DFQUE : ObjectWithState
{

    public int QuesID 
	{ 
		get
		{
			return _QuesID;
		}
		set
		{
			if(_QuesID != value)
			{
				OnQuesIDChanging(value);
				_QuesID = value;
				OnQuesIDChanged();
			}
		}
	}
	private int _QuesID;

	partial void OnQuesIDChanging(int newValue);
	partial void OnQuesIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public Nullable<int> EmpGroupID 
	{ 
		get
		{
			return _EmpGroupID;
		}
		set
		{
			if(_EmpGroupID != value)
			{
				OnEmpGroupIDChanging(value);
				_EmpGroupID = value;
				OnEmpGroupIDChanged();
			}
		}
	}
	private Nullable<int> _EmpGroupID;

	partial void OnEmpGroupIDChanging(Nullable<int> newValue);
	partial void OnEmpGroupIDChanged();

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public Nullable<int> BranDID 
	{ 
		get
		{
			return _BranDID;
		}
		set
		{
			if(_BranDID != value)
			{
				OnBranDIDChanging(value);
				_BranDID = value;
				OnBranDIDChanged();
			}
		}
	}
	private Nullable<int> _BranDID;

	partial void OnBranDIDChanging(Nullable<int> newValue);
	partial void OnBranDIDChanged();

    public string Question 
	{ 
		get
		{
			return _Question;
		}
		set
		{
			if(_Question != value)
			{
				OnQuestionChanging(value);
				_Question = value;
				OnQuestionChanged();
			}
		}
	}
	private string _Question;

	partial void OnQuestionChanging(string newValue);
	partial void OnQuestionChanged();

    public Nullable<int> FeedbackTypeID 
	{ 
		get
		{
			return _FeedbackTypeID;
		}
		set
		{
			if(_FeedbackTypeID != value)
			{
				OnFeedbackTypeIDChanging(value);
				_FeedbackTypeID = value;
				OnFeedbackTypeIDChanged();
			}
		}
	}
	private Nullable<int> _FeedbackTypeID;

	partial void OnFeedbackTypeIDChanging(Nullable<int> newValue);
	partial void OnFeedbackTypeIDChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public string Category 
	{ 
		get
		{
			return _Category;
		}
		set
		{
			if(_Category != value)
			{
				OnCategoryChanging(value);
				_Category = value;
				OnCategoryChanged();
			}
		}
	}
	private string _Category;

	partial void OnCategoryChanging(string newValue);
	partial void OnCategoryChanged();

    public string SubCategory 
	{ 
		get
		{
			return _SubCategory;
		}
		set
		{
			if(_SubCategory != value)
			{
				OnSubCategoryChanging(value);
				_SubCategory = value;
				OnSubCategoryChanged();
			}
		}
	}
	private string _SubCategory;

	partial void OnSubCategoryChanging(string newValue);
	partial void OnSubCategoryChanged();

    public string Posibility 
	{ 
		get
		{
			return _Posibility;
		}
		set
		{
			if(_Posibility != value)
			{
				OnPosibilityChanging(value);
				_Posibility = value;
				OnPosibilityChanged();
			}
		}
	}
	private string _Posibility;

	partial void OnPosibilityChanging(string newValue);
	partial void OnPosibilityChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool Mandatory 
	{ 
		get
		{
			return _Mandatory;
		}
		set
		{
			if(_Mandatory != value)
			{
				OnMandatoryChanging(value);
				_Mandatory = value;
				OnMandatoryChanged();
			}
		}
	}
	private bool _Mandatory;

	partial void OnMandatoryChanging(bool newValue);
	partial void OnMandatoryChanged();

    public int SortOrder 
	{ 
		get
		{
			return _SortOrder;
		}
		set
		{
			if(_SortOrder != value)
			{
				OnSortOrderChanging(value);
				_SortOrder = value;
				OnSortOrderChanged();
			}
		}
	}
	private int _SortOrder;

	partial void OnSortOrderChanging(int newValue);
	partial void OnSortOrderChanged();

    public virtual OFBT OFBT { get; set; }
}

[Serializable]
public partial class DOCLM : ObjectWithState
{
    public DOCLM() 
    { 
        this.DCLM1 = new HashSet<DCLM1>();
    }


    public int DClaimID 
	{ 
		get
		{
			return _DClaimID;
		}
		set
		{
			if(_DClaimID != value)
			{
				OnDClaimIDChanging(value);
				_DClaimID = value;
				OnDClaimIDChanged();
			}
		}
	}
	private int _DClaimID;

	partial void OnDClaimIDChanging(int newValue);
	partial void OnDClaimIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int DParentClaimID 
	{ 
		get
		{
			return _DParentClaimID;
		}
		set
		{
			if(_DParentClaimID != value)
			{
				OnDParentClaimIDChanging(value);
				_DParentClaimID = value;
				OnDParentClaimIDChanged();
			}
		}
	}
	private int _DParentClaimID;

	partial void OnDParentClaimIDChanging(int newValue);
	partial void OnDParentClaimIDChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public Nullable<decimal> CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerID;

	partial void OnCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnCustomerIDChanged();

    public string SAPReasonItemCode 
	{ 
		get
		{
			return _SAPReasonItemCode;
		}
		set
		{
			if(_SAPReasonItemCode != value)
			{
				OnSAPReasonItemCodeChanging(value);
				_SAPReasonItemCode = value;
				OnSAPReasonItemCodeChanged();
			}
		}
	}
	private string _SAPReasonItemCode;

	partial void OnSAPReasonItemCodeChanging(string newValue);
	partial void OnSAPReasonItemCodeChanged();

    public Nullable<int> ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private Nullable<int> _ItemID;

	partial void OnItemIDChanging(Nullable<int> newValue);
	partial void OnItemIDChanged();

    public decimal TotalQty 
	{ 
		get
		{
			return _TotalQty;
		}
		set
		{
			if(_TotalQty != value)
			{
				OnTotalQtyChanging(value);
				_TotalQty = value;
				OnTotalQtyChanged();
			}
		}
	}
	private decimal _TotalQty;

	partial void OnTotalQtyChanging(decimal newValue);
	partial void OnTotalQtyChanged();

    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();

    public string SchemeType 
	{ 
		get
		{
			return _SchemeType;
		}
		set
		{
			if(_SchemeType != value)
			{
				OnSchemeTypeChanging(value);
				_SchemeType = value;
				OnSchemeTypeChanged();
			}
		}
	}
	private string _SchemeType;

	partial void OnSchemeTypeChanging(string newValue);
	partial void OnSchemeTypeChanged();

    public decimal SchemeAmount 
	{ 
		get
		{
			return _SchemeAmount;
		}
		set
		{
			if(_SchemeAmount != value)
			{
				OnSchemeAmountChanging(value);
				_SchemeAmount = value;
				OnSchemeAmountChanged();
			}
		}
	}
	private decimal _SchemeAmount;

	partial void OnSchemeAmountChanging(decimal newValue);
	partial void OnSchemeAmountChanged();

    public decimal CompanyCont 
	{ 
		get
		{
			return _CompanyCont;
		}
		set
		{
			if(_CompanyCont != value)
			{
				OnCompanyContChanging(value);
				_CompanyCont = value;
				OnCompanyContChanged();
			}
		}
	}
	private decimal _CompanyCont;

	partial void OnCompanyContChanging(decimal newValue);
	partial void OnCompanyContChanged();

    public decimal DistCont 
	{ 
		get
		{
			return _DistCont;
		}
		set
		{
			if(_DistCont != value)
			{
				OnDistContChanging(value);
				_DistCont = value;
				OnDistContChanged();
			}
		}
	}
	private decimal _DistCont;

	partial void OnDistContChanging(decimal newValue);
	partial void OnDistContChanged();

    public decimal DistContTax 
	{ 
		get
		{
			return _DistContTax;
		}
		set
		{
			if(_DistContTax != value)
			{
				OnDistContTaxChanging(value);
				_DistContTax = value;
				OnDistContTaxChanged();
			}
		}
	}
	private decimal _DistContTax;

	partial void OnDistContTaxChanging(decimal newValue);
	partial void OnDistContTaxChanged();

    public decimal TotalCompanyCont 
	{ 
		get
		{
			return _TotalCompanyCont;
		}
		set
		{
			if(_TotalCompanyCont != value)
			{
				OnTotalCompanyContChanging(value);
				_TotalCompanyCont = value;
				OnTotalCompanyContChanged();
			}
		}
	}
	private decimal _TotalCompanyCont;

	partial void OnTotalCompanyContChanging(decimal newValue);
	partial void OnTotalCompanyContChanged();

    public decimal Deduction 
	{ 
		get
		{
			return _Deduction;
		}
		set
		{
			if(_Deduction != value)
			{
				OnDeductionChanging(value);
				_Deduction = value;
				OnDeductionChanged();
			}
		}
	}
	private decimal _Deduction;

	partial void OnDeductionChanging(decimal newValue);
	partial void OnDeductionChanged();

    public string DeductionRemarks 
	{ 
		get
		{
			return _DeductionRemarks;
		}
		set
		{
			if(_DeductionRemarks != value)
			{
				OnDeductionRemarksChanging(value);
				_DeductionRemarks = value;
				OnDeductionRemarksChanged();
			}
		}
	}
	private string _DeductionRemarks;

	partial void OnDeductionRemarksChanging(string newValue);
	partial void OnDeductionRemarksChanged();

    public decimal ApprovedAmount 
	{ 
		get
		{
			return _ApprovedAmount;
		}
		set
		{
			if(_ApprovedAmount != value)
			{
				OnApprovedAmountChanging(value);
				_ApprovedAmount = value;
				OnApprovedAmountChanged();
			}
		}
	}
	private decimal _ApprovedAmount;

	partial void OnApprovedAmountChanging(decimal newValue);
	partial void OnApprovedAmountChanged();

    public decimal TotalPurchase 
	{ 
		get
		{
			return _TotalPurchase;
		}
		set
		{
			if(_TotalPurchase != value)
			{
				OnTotalPurchaseChanging(value);
				_TotalPurchase = value;
				OnTotalPurchaseChanged();
			}
		}
	}
	private decimal _TotalPurchase;

	partial void OnTotalPurchaseChanging(decimal newValue);
	partial void OnTotalPurchaseChanged();

    public string SAPDocNo 
	{ 
		get
		{
			return _SAPDocNo;
		}
		set
		{
			if(_SAPDocNo != value)
			{
				OnSAPDocNoChanging(value);
				_SAPDocNo = value;
				OnSAPDocNoChanged();
			}
		}
	}
	private string _SAPDocNo;

	partial void OnSAPDocNoChanging(string newValue);
	partial void OnSAPDocNoChanged();

    public string SAPErrMsg 
	{ 
		get
		{
			return _SAPErrMsg;
		}
		set
		{
			if(_SAPErrMsg != value)
			{
				OnSAPErrMsgChanging(value);
				_SAPErrMsg = value;
				OnSAPErrMsgChanged();
			}
		}
	}
	private string _SAPErrMsg;

	partial void OnSAPErrMsgChanging(string newValue);
	partial void OnSAPErrMsgChanged();

    public string Flag 
	{ 
		get
		{
			return _Flag;
		}
		set
		{
			if(_Flag != value)
			{
				OnFlagChanging(value);
				_Flag = value;
				OnFlagChanged();
			}
		}
	}
	private string _Flag;

	partial void OnFlagChanging(string newValue);
	partial void OnFlagChanged();

    public Nullable<System.DateTime> ProcessDate 
	{ 
		get
		{
			return _ProcessDate;
		}
		set
		{
			if(_ProcessDate != value)
			{
				OnProcessDateChanging(value);
				_ProcessDate = value;
				OnProcessDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ProcessDate;

	partial void OnProcessDateChanging(Nullable<System.DateTime> newValue);
	partial void OnProcessDateChanged();

    public decimal Total 
	{ 
		get
		{
			return _Total;
		}
		set
		{
			if(_Total != value)
			{
				OnTotalChanging(value);
				_Total = value;
				OnTotalChanged();
			}
		}
	}
	private decimal _Total;

	partial void OnTotalChanging(decimal newValue);
	partial void OnTotalChanged();

    public bool IsAuto 
	{ 
		get
		{
			return _IsAuto;
		}
		set
		{
			if(_IsAuto != value)
			{
				OnIsAutoChanging(value);
				_IsAuto = value;
				OnIsAutoChanged();
			}
		}
	}
	private bool _IsAuto;

	partial void OnIsAutoChanging(bool newValue);
	partial void OnIsAutoChanged();

    public virtual ICollection<DCLM1> DCLM1 { get; set; }
    public virtual DOCLMP DOCLMP { get; set; }
    public virtual OCRD OCRD { get; set; }
}

[Serializable]
public partial class DOCLMP : ObjectWithState
{
    public DOCLMP() 
    { 
        this.DOCLMs = new HashSet<DOCLM>();
    }


    public int DParentClaimID 
	{ 
		get
		{
			return _DParentClaimID;
		}
		set
		{
			if(_DParentClaimID != value)
			{
				OnDParentClaimIDChanging(value);
				_DParentClaimID = value;
				OnDParentClaimIDChanged();
			}
		}
	}
	private int _DParentClaimID;

	partial void OnDParentClaimIDChanging(int newValue);
	partial void OnDParentClaimIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public System.DateTime FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private System.DateTime _FromDate;

	partial void OnFromDateChanging(System.DateTime newValue);
	partial void OnFromDateChanged();

    public System.DateTime ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private System.DateTime _ToDate;

	partial void OnToDateChanging(System.DateTime newValue);
	partial void OnToDateChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public int SAPReasonID 
	{ 
		get
		{
			return _SAPReasonID;
		}
		set
		{
			if(_SAPReasonID != value)
			{
				OnSAPReasonIDChanging(value);
				_SAPReasonID = value;
				OnSAPReasonIDChanged();
			}
		}
	}
	private int _SAPReasonID;

	partial void OnSAPReasonIDChanging(int newValue);
	partial void OnSAPReasonIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public string SchemeType 
	{ 
		get
		{
			return _SchemeType;
		}
		set
		{
			if(_SchemeType != value)
			{
				OnSchemeTypeChanging(value);
				_SchemeType = value;
				OnSchemeTypeChanged();
			}
		}
	}
	private string _SchemeType;

	partial void OnSchemeTypeChanging(string newValue);
	partial void OnSchemeTypeChanged();

    public bool IsSAP 
	{ 
		get
		{
			return _IsSAP;
		}
		set
		{
			if(_IsSAP != value)
			{
				OnIsSAPChanging(value);
				_IsSAP = value;
				OnIsSAPChanged();
			}
		}
	}
	private bool _IsSAP;

	partial void OnIsSAPChanging(bool newValue);
	partial void OnIsSAPChanged();

    public string CreatedIPAddress 
	{ 
		get
		{
			return _CreatedIPAddress;
		}
		set
		{
			if(_CreatedIPAddress != value)
			{
				OnCreatedIPAddressChanging(value);
				_CreatedIPAddress = value;
				OnCreatedIPAddressChanged();
			}
		}
	}
	private string _CreatedIPAddress;

	partial void OnCreatedIPAddressChanging(string newValue);
	partial void OnCreatedIPAddressChanged();

    public string UpdateIPAddress 
	{ 
		get
		{
			return _UpdateIPAddress;
		}
		set
		{
			if(_UpdateIPAddress != value)
			{
				OnUpdateIPAddressChanging(value);
				_UpdateIPAddress = value;
				OnUpdateIPAddressChanged();
			}
		}
	}
	private string _UpdateIPAddress;

	partial void OnUpdateIPAddressChanging(string newValue);
	partial void OnUpdateIPAddressChanged();

    public string ClaimRemarks 
	{ 
		get
		{
			return _ClaimRemarks;
		}
		set
		{
			if(_ClaimRemarks != value)
			{
				OnClaimRemarksChanging(value);
				_ClaimRemarks = value;
				OnClaimRemarksChanged();
			}
		}
	}
	private string _ClaimRemarks;

	partial void OnClaimRemarksChanging(string newValue);
	partial void OnClaimRemarksChanged();

    public string ClaimImage 
	{ 
		get
		{
			return _ClaimImage;
		}
		set
		{
			if(_ClaimImage != value)
			{
				OnClaimImageChanging(value);
				_ClaimImage = value;
				OnClaimImageChanged();
			}
		}
	}
	private string _ClaimImage;

	partial void OnClaimImageChanging(string newValue);
	partial void OnClaimImageChanged();

    public Nullable<int> ClaimLevel 
	{ 
		get
		{
			return _ClaimLevel;
		}
		set
		{
			if(_ClaimLevel != value)
			{
				OnClaimLevelChanging(value);
				_ClaimLevel = value;
				OnClaimLevelChanged();
			}
		}
	}
	private Nullable<int> _ClaimLevel;

	partial void OnClaimLevelChanging(Nullable<int> newValue);
	partial void OnClaimLevelChanged();

    public Nullable<int> HierarchyManagerId 
	{ 
		get
		{
			return _HierarchyManagerId;
		}
		set
		{
			if(_HierarchyManagerId != value)
			{
				OnHierarchyManagerIdChanging(value);
				_HierarchyManagerId = value;
				OnHierarchyManagerIdChanged();
			}
		}
	}
	private Nullable<int> _HierarchyManagerId;

	partial void OnHierarchyManagerIdChanging(Nullable<int> newValue);
	partial void OnHierarchyManagerIdChanged();

    public Nullable<bool> IsActive 
	{ 
		get
		{
			return _IsActive;
		}
		set
		{
			if(_IsActive != value)
			{
				OnIsActiveChanging(value);
				_IsActive = value;
				OnIsActiveChanged();
			}
		}
	}
	private Nullable<bool> _IsActive;

	partial void OnIsActiveChanging(Nullable<bool> newValue);
	partial void OnIsActiveChanged();

    public virtual ICollection<DOCLM> DOCLMs { get; set; }
}

[Serializable]
public partial class DPWD : ObjectWithState
{

    public long DPWDID 
	{ 
		get
		{
			return _DPWDID;
		}
		set
		{
			if(_DPWDID != value)
			{
				OnDPWDIDChanging(value);
				_DPWDID = value;
				OnDPWDIDChanged();
			}
		}
	}
	private long _DPWDID;

	partial void OnDPWDIDChanging(long newValue);
	partial void OnDPWDIDChanged();

    public string CustomerCode 
	{ 
		get
		{
			return _CustomerCode;
		}
		set
		{
			if(_CustomerCode != value)
			{
				OnCustomerCodeChanging(value);
				_CustomerCode = value;
				OnCustomerCodeChanged();
			}
		}
	}
	private string _CustomerCode;

	partial void OnCustomerCodeChanging(string newValue);
	partial void OnCustomerCodeChanged();

    public string PassWord 
	{ 
		get
		{
			return _PassWord;
		}
		set
		{
			if(_PassWord != value)
			{
				OnPassWordChanging(value);
				_PassWord = value;
				OnPassWordChanged();
			}
		}
	}
	private string _PassWord;

	partial void OnPassWordChanging(string newValue);
	partial void OnPassWordChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public string Latitude 
	{ 
		get
		{
			return _Latitude;
		}
		set
		{
			if(_Latitude != value)
			{
				OnLatitudeChanging(value);
				_Latitude = value;
				OnLatitudeChanged();
			}
		}
	}
	private string _Latitude;

	partial void OnLatitudeChanging(string newValue);
	partial void OnLatitudeChanged();

    public string Longtitude 
	{ 
		get
		{
			return _Longtitude;
		}
		set
		{
			if(_Longtitude != value)
			{
				OnLongtitudeChanging(value);
				_Longtitude = value;
				OnLongtitudeChanged();
			}
		}
	}
	private string _Longtitude;

	partial void OnLongtitudeChanging(string newValue);
	partial void OnLongtitudeChanged();

    public string FCMTocken 
	{ 
		get
		{
			return _FCMTocken;
		}
		set
		{
			if(_FCMTocken != value)
			{
				OnFCMTockenChanging(value);
				_FCMTocken = value;
				OnFCMTockenChanged();
			}
		}
	}
	private string _FCMTocken;

	partial void OnFCMTockenChanging(string newValue);
	partial void OnFCMTockenChanged();

    public Nullable<bool> ISCHangePassword 
	{ 
		get
		{
			return _ISCHangePassword;
		}
		set
		{
			if(_ISCHangePassword != value)
			{
				OnISCHangePasswordChanging(value);
				_ISCHangePassword = value;
				OnISCHangePasswordChanged();
			}
		}
	}
	private Nullable<bool> _ISCHangePassword;

	partial void OnISCHangePasswordChanging(Nullable<bool> newValue);
	partial void OnISCHangePasswordChanged();

    public string DeviceID 
	{ 
		get
		{
			return _DeviceID;
		}
		set
		{
			if(_DeviceID != value)
			{
				OnDeviceIDChanging(value);
				_DeviceID = value;
				OnDeviceIDChanged();
			}
		}
	}
	private string _DeviceID;

	partial void OnDeviceIDChanging(string newValue);
	partial void OnDeviceIDChanged();

    public string DeviceName 
	{ 
		get
		{
			return _DeviceName;
		}
		set
		{
			if(_DeviceName != value)
			{
				OnDeviceNameChanging(value);
				_DeviceName = value;
				OnDeviceNameChanged();
			}
		}
	}
	private string _DeviceName;

	partial void OnDeviceNameChanging(string newValue);
	partial void OnDeviceNameChanged();

    public string DeviceOS 
	{ 
		get
		{
			return _DeviceOS;
		}
		set
		{
			if(_DeviceOS != value)
			{
				OnDeviceOSChanging(value);
				_DeviceOS = value;
				OnDeviceOSChanged();
			}
		}
	}
	private string _DeviceOS;

	partial void OnDeviceOSChanging(string newValue);
	partial void OnDeviceOSChanged();
}

[Serializable]
public partial class EEML : ObjectWithState
{
    public EEML() 
    { 
        this.EML1 = new HashSet<EML1>();
    }


    public int EmailID 
	{ 
		get
		{
			return _EmailID;
		}
		set
		{
			if(_EmailID != value)
			{
				OnEmailIDChanging(value);
				_EmailID = value;
				OnEmailIDChanged();
			}
		}
	}
	private int _EmailID;

	partial void OnEmailIDChanging(int newValue);
	partial void OnEmailIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string Subject 
	{ 
		get
		{
			return _Subject;
		}
		set
		{
			if(_Subject != value)
			{
				OnSubjectChanging(value);
				_Subject = value;
				OnSubjectChanged();
			}
		}
	}
	private string _Subject;

	partial void OnSubjectChanging(string newValue);
	partial void OnSubjectChanged();

    public int FreqDay 
	{ 
		get
		{
			return _FreqDay;
		}
		set
		{
			if(_FreqDay != value)
			{
				OnFreqDayChanging(value);
				_FreqDay = value;
				OnFreqDayChanged();
			}
		}
	}
	private int _FreqDay;

	partial void OnFreqDayChanging(int newValue);
	partial void OnFreqDayChanged();

    public Nullable<System.TimeSpan> FreqTime 
	{ 
		get
		{
			return _FreqTime;
		}
		set
		{
			if(_FreqTime != value)
			{
				OnFreqTimeChanging(value);
				_FreqTime = value;
				OnFreqTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _FreqTime;

	partial void OnFreqTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnFreqTimeChanged();

    public string SQLQuery 
	{ 
		get
		{
			return _SQLQuery;
		}
		set
		{
			if(_SQLQuery != value)
			{
				OnSQLQueryChanging(value);
				_SQLQuery = value;
				OnSQLQueryChanged();
			}
		}
	}
	private string _SQLQuery;

	partial void OnSQLQueryChanging(string newValue);
	partial void OnSQLQueryChanged();

    public System.DateTime NextDate 
	{ 
		get
		{
			return _NextDate;
		}
		set
		{
			if(_NextDate != value)
			{
				OnNextDateChanging(value);
				_NextDate = value;
				OnNextDateChanged();
			}
		}
	}
	private System.DateTime _NextDate;

	partial void OnNextDateChanging(System.DateTime newValue);
	partial void OnNextDateChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<EML1> EML1 { get; set; }
}

[Serializable]
public partial class ELMAH_Error : ObjectWithState
{

    public System.Guid ErrorId 
	{ 
		get
		{
			return _ErrorId;
		}
		set
		{
			if(_ErrorId != value)
			{
				OnErrorIdChanging(value);
				_ErrorId = value;
				OnErrorIdChanged();
			}
		}
	}
	private System.Guid _ErrorId;

	partial void OnErrorIdChanging(System.Guid newValue);
	partial void OnErrorIdChanged();

    public string Application 
	{ 
		get
		{
			return _Application;
		}
		set
		{
			if(_Application != value)
			{
				OnApplicationChanging(value);
				_Application = value;
				OnApplicationChanged();
			}
		}
	}
	private string _Application;

	partial void OnApplicationChanging(string newValue);
	partial void OnApplicationChanged();

    public string Host 
	{ 
		get
		{
			return _Host;
		}
		set
		{
			if(_Host != value)
			{
				OnHostChanging(value);
				_Host = value;
				OnHostChanged();
			}
		}
	}
	private string _Host;

	partial void OnHostChanging(string newValue);
	partial void OnHostChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public string Source 
	{ 
		get
		{
			return _Source;
		}
		set
		{
			if(_Source != value)
			{
				OnSourceChanging(value);
				_Source = value;
				OnSourceChanged();
			}
		}
	}
	private string _Source;

	partial void OnSourceChanging(string newValue);
	partial void OnSourceChanged();

    public string Message 
	{ 
		get
		{
			return _Message;
		}
		set
		{
			if(_Message != value)
			{
				OnMessageChanging(value);
				_Message = value;
				OnMessageChanged();
			}
		}
	}
	private string _Message;

	partial void OnMessageChanging(string newValue);
	partial void OnMessageChanged();

    public string User 
	{ 
		get
		{
			return _User;
		}
		set
		{
			if(_User != value)
			{
				OnUserChanging(value);
				_User = value;
				OnUserChanged();
			}
		}
	}
	private string _User;

	partial void OnUserChanging(string newValue);
	partial void OnUserChanged();

    public int StatusCode 
	{ 
		get
		{
			return _StatusCode;
		}
		set
		{
			if(_StatusCode != value)
			{
				OnStatusCodeChanging(value);
				_StatusCode = value;
				OnStatusCodeChanged();
			}
		}
	}
	private int _StatusCode;

	partial void OnStatusCodeChanging(int newValue);
	partial void OnStatusCodeChanged();

    public System.DateTime TimeUtc 
	{ 
		get
		{
			return _TimeUtc;
		}
		set
		{
			if(_TimeUtc != value)
			{
				OnTimeUtcChanging(value);
				_TimeUtc = value;
				OnTimeUtcChanged();
			}
		}
	}
	private System.DateTime _TimeUtc;

	partial void OnTimeUtcChanging(System.DateTime newValue);
	partial void OnTimeUtcChanged();

    public int Sequence 
	{ 
		get
		{
			return _Sequence;
		}
		set
		{
			if(_Sequence != value)
			{
				OnSequenceChanging(value);
				_Sequence = value;
				OnSequenceChanged();
			}
		}
	}
	private int _Sequence;

	partial void OnSequenceChanging(int newValue);
	partial void OnSequenceChanged();

    public string AllXml 
	{ 
		get
		{
			return _AllXml;
		}
		set
		{
			if(_AllXml != value)
			{
				OnAllXmlChanging(value);
				_AllXml = value;
				OnAllXmlChanged();
			}
		}
	}
	private string _AllXml;

	partial void OnAllXmlChanging(string newValue);
	partial void OnAllXmlChanged();
}

[Serializable]
public partial class EML1 : ObjectWithState
{

    public int EML1ID 
	{ 
		get
		{
			return _EML1ID;
		}
		set
		{
			if(_EML1ID != value)
			{
				OnEML1IDChanging(value);
				_EML1ID = value;
				OnEML1IDChanged();
			}
		}
	}
	private int _EML1ID;

	partial void OnEML1IDChanging(int newValue);
	partial void OnEML1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmailID 
	{ 
		get
		{
			return _EmailID;
		}
		set
		{
			if(_EmailID != value)
			{
				OnEmailIDChanging(value);
				_EmailID = value;
				OnEmailIDChanged();
			}
		}
	}
	private int _EmailID;

	partial void OnEmailIDChanging(int newValue);
	partial void OnEmailIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual OEMP OEMP { get; set; }
    public virtual EEML EEML { get; set; }
}

[Serializable]
public partial class EML2 : ObjectWithState
{

    public int EML2ID 
	{ 
		get
		{
			return _EML2ID;
		}
		set
		{
			if(_EML2ID != value)
			{
				OnEML2IDChanging(value);
				_EML2ID = value;
				OnEML2IDChanged();
			}
		}
	}
	private int _EML2ID;

	partial void OnEML2IDChanging(int newValue);
	partial void OnEML2IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string DocType 
	{ 
		get
		{
			return _DocType;
		}
		set
		{
			if(_DocType != value)
			{
				OnDocTypeChanging(value);
				_DocType = value;
				OnDocTypeChanged();
			}
		}
	}
	private string _DocType;

	partial void OnDocTypeChanging(string newValue);
	partial void OnDocTypeChanged();

    public int PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private int _PlantID;

	partial void OnPlantIDChanging(int newValue);
	partial void OnPlantIDChanged();

    public string SuccessEmail 
	{ 
		get
		{
			return _SuccessEmail;
		}
		set
		{
			if(_SuccessEmail != value)
			{
				OnSuccessEmailChanging(value);
				_SuccessEmail = value;
				OnSuccessEmailChanged();
			}
		}
	}
	private string _SuccessEmail;

	partial void OnSuccessEmailChanging(string newValue);
	partial void OnSuccessEmailChanged();

    public string FailureEmail 
	{ 
		get
		{
			return _FailureEmail;
		}
		set
		{
			if(_FailureEmail != value)
			{
				OnFailureEmailChanging(value);
				_FailureEmail = value;
				OnFailureEmailChanged();
			}
		}
	}
	private string _FailureEmail;

	partial void OnFailureEmailChanging(string newValue);
	partial void OnFailureEmailChanged();

    public string SuccessSMS 
	{ 
		get
		{
			return _SuccessSMS;
		}
		set
		{
			if(_SuccessSMS != value)
			{
				OnSuccessSMSChanging(value);
				_SuccessSMS = value;
				OnSuccessSMSChanged();
			}
		}
	}
	private string _SuccessSMS;

	partial void OnSuccessSMSChanging(string newValue);
	partial void OnSuccessSMSChanged();

    public string FailureSMS 
	{ 
		get
		{
			return _FailureSMS;
		}
		set
		{
			if(_FailureSMS != value)
			{
				OnFailureSMSChanging(value);
				_FailureSMS = value;
				OnFailureSMSChanged();
			}
		}
	}
	private string _FailureSMS;

	partial void OnFailureSMSChanging(string newValue);
	partial void OnFailureSMSChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();
}

[Serializable]
public partial class EMP1 : ObjectWithState
{

    public int Emp1ID 
	{ 
		get
		{
			return _Emp1ID;
		}
		set
		{
			if(_Emp1ID != value)
			{
				OnEmp1IDChanging(value);
				_Emp1ID = value;
				OnEmp1IDChanged();
			}
		}
	}
	private int _Emp1ID;

	partial void OnEmp1IDChanging(int newValue);
	partial void OnEmp1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public string Block 
	{ 
		get
		{
			return _Block;
		}
		set
		{
			if(_Block != value)
			{
				OnBlockChanging(value);
				_Block = value;
				OnBlockChanged();
			}
		}
	}
	private string _Block;

	partial void OnBlockChanging(string newValue);
	partial void OnBlockChanged();

    public string Street 
	{ 
		get
		{
			return _Street;
		}
		set
		{
			if(_Street != value)
			{
				OnStreetChanging(value);
				_Street = value;
				OnStreetChanged();
			}
		}
	}
	private string _Street;

	partial void OnStreetChanging(string newValue);
	partial void OnStreetChanged();

    public string Location 
	{ 
		get
		{
			return _Location;
		}
		set
		{
			if(_Location != value)
			{
				OnLocationChanging(value);
				_Location = value;
				OnLocationChanged();
			}
		}
	}
	private string _Location;

	partial void OnLocationChanging(string newValue);
	partial void OnLocationChanged();

    public string ZipCode 
	{ 
		get
		{
			return _ZipCode;
		}
		set
		{
			if(_ZipCode != value)
			{
				OnZipCodeChanging(value);
				_ZipCode = value;
				OnZipCodeChanged();
			}
		}
	}
	private string _ZipCode;

	partial void OnZipCodeChanging(string newValue);
	partial void OnZipCodeChanged();

    public Nullable<int> CityID 
	{ 
		get
		{
			return _CityID;
		}
		set
		{
			if(_CityID != value)
			{
				OnCityIDChanging(value);
				_CityID = value;
				OnCityIDChanged();
			}
		}
	}
	private Nullable<int> _CityID;

	partial void OnCityIDChanging(Nullable<int> newValue);
	partial void OnCityIDChanged();

    public Nullable<int> StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private Nullable<int> _StateID;

	partial void OnStateIDChanging(Nullable<int> newValue);
	partial void OnStateIDChanged();

    public Nullable<int> CountryID 
	{ 
		get
		{
			return _CountryID;
		}
		set
		{
			if(_CountryID != value)
			{
				OnCountryIDChanging(value);
				_CountryID = value;
				OnCountryIDChanged();
			}
		}
	}
	private Nullable<int> _CountryID;

	partial void OnCountryIDChanging(Nullable<int> newValue);
	partial void OnCountryIDChanged();

    public string ContactPerson 
	{ 
		get
		{
			return _ContactPerson;
		}
		set
		{
			if(_ContactPerson != value)
			{
				OnContactPersonChanging(value);
				_ContactPerson = value;
				OnContactPersonChanged();
			}
		}
	}
	private string _ContactPerson;

	partial void OnContactPersonChanging(string newValue);
	partial void OnContactPersonChanged();

    public string Phone 
	{ 
		get
		{
			return _Phone;
		}
		set
		{
			if(_Phone != value)
			{
				OnPhoneChanging(value);
				_Phone = value;
				OnPhoneChanged();
			}
		}
	}
	private string _Phone;

	partial void OnPhoneChanging(string newValue);
	partial void OnPhoneChanged();

    public string Mobile 
	{ 
		get
		{
			return _Mobile;
		}
		set
		{
			if(_Mobile != value)
			{
				OnMobileChanging(value);
				_Mobile = value;
				OnMobileChanged();
			}
		}
	}
	private string _Mobile;

	partial void OnMobileChanging(string newValue);
	partial void OnMobileChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual OCRY OCRY { get; set; }
    public virtual OCST OCST { get; set; }
    public virtual OCTY OCTY { get; set; }
    public virtual OEMP OEMP { get; set; }
}

[Serializable]
public partial class EMPD : ObjectWithState
{

    public int EMPDID 
	{ 
		get
		{
			return _EMPDID;
		}
		set
		{
			if(_EMPDID != value)
			{
				OnEMPDIDChanging(value);
				_EMPDID = value;
				OnEMPDIDChanged();
			}
		}
	}
	private int _EMPDID;

	partial void OnEMPDIDChanging(int newValue);
	partial void OnEMPDIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public Nullable<decimal> CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerID;

	partial void OnCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnCustomerIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int Days 
	{ 
		get
		{
			return _Days;
		}
		set
		{
			if(_Days != value)
			{
				OnDaysChanging(value);
				_Days = value;
				OnDaysChanged();
			}
		}
	}
	private int _Days;

	partial void OnDaysChanging(int newValue);
	partial void OnDaysChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();
}

[Serializable]
public partial class ENT1 : ObjectWithState
{

    public int ENT1ID 
	{ 
		get
		{
			return _ENT1ID;
		}
		set
		{
			if(_ENT1ID != value)
			{
				OnENT1IDChanging(value);
				_ENT1ID = value;
				OnENT1IDChanged();
			}
		}
	}
	private int _ENT1ID;

	partial void OnENT1IDChanging(int newValue);
	partial void OnENT1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EntryID 
	{ 
		get
		{
			return _EntryID;
		}
		set
		{
			if(_EntryID != value)
			{
				OnEntryIDChanging(value);
				_EntryID = value;
				OnEntryIDChanged();
			}
		}
	}
	private int _EntryID;

	partial void OnEntryIDChanging(int newValue);
	partial void OnEntryIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public Nullable<decimal> CustID 
	{ 
		get
		{
			return _CustID;
		}
		set
		{
			if(_CustID != value)
			{
				OnCustIDChanging(value);
				_CustID = value;
				OnCustIDChanged();
			}
		}
	}
	private Nullable<decimal> _CustID;

	partial void OnCustIDChanging(Nullable<decimal> newValue);
	partial void OnCustIDChanged();

    public int RouteID 
	{ 
		get
		{
			return _RouteID;
		}
		set
		{
			if(_RouteID != value)
			{
				OnRouteIDChanging(value);
				_RouteID = value;
				OnRouteIDChanged();
			}
		}
	}
	private int _RouteID;

	partial void OnRouteIDChanging(int newValue);
	partial void OnRouteIDChanged();

    public string Lat 
	{ 
		get
		{
			return _Lat;
		}
		set
		{
			if(_Lat != value)
			{
				OnLatChanging(value);
				_Lat = value;
				OnLatChanged();
			}
		}
	}
	private string _Lat;

	partial void OnLatChanging(string newValue);
	partial void OnLatChanged();

    public string Long 
	{ 
		get
		{
			return _Long;
		}
		set
		{
			if(_Long != value)
			{
				OnLongChanging(value);
				_Long = value;
				OnLongChanged();
			}
		}
	}
	private string _Long;

	partial void OnLongChanging(string newValue);
	partial void OnLongChanged();

    public System.DateTime Datetime 
	{ 
		get
		{
			return _Datetime;
		}
		set
		{
			if(_Datetime != value)
			{
				OnDatetimeChanging(value);
				_Datetime = value;
				OnDatetimeChanged();
			}
		}
	}
	private System.DateTime _Datetime;

	partial void OnDatetimeChanging(System.DateTime newValue);
	partial void OnDatetimeChanged();

    public int MenuID 
	{ 
		get
		{
			return _MenuID;
		}
		set
		{
			if(_MenuID != value)
			{
				OnMenuIDChanging(value);
				_MenuID = value;
				OnMenuIDChanged();
			}
		}
	}
	private int _MenuID;

	partial void OnMenuIDChanging(int newValue);
	partial void OnMenuIDChanged();

    public short CallType 
	{ 
		get
		{
			return _CallType;
		}
		set
		{
			if(_CallType != value)
			{
				OnCallTypeChanging(value);
				_CallType = value;
				OnCallTypeChanged();
			}
		}
	}
	private short _CallType;

	partial void OnCallTypeChanging(short newValue);
	partial void OnCallTypeChanged();

    public string Ref1 
	{ 
		get
		{
			return _Ref1;
		}
		set
		{
			if(_Ref1 != value)
			{
				OnRef1Changing(value);
				_Ref1 = value;
				OnRef1Changed();
			}
		}
	}
	private string _Ref1;

	partial void OnRef1Changing(string newValue);
	partial void OnRef1Changed();

    public string Ref2 
	{ 
		get
		{
			return _Ref2;
		}
		set
		{
			if(_Ref2 != value)
			{
				OnRef2Changing(value);
				_Ref2 = value;
				OnRef2Changed();
			}
		}
	}
	private string _Ref2;

	partial void OnRef2Changing(string newValue);
	partial void OnRef2Changed();

    public string Ref3 
	{ 
		get
		{
			return _Ref3;
		}
		set
		{
			if(_Ref3 != value)
			{
				OnRef3Changing(value);
				_Ref3 = value;
				OnRef3Changed();
			}
		}
	}
	private string _Ref3;

	partial void OnRef3Changing(string newValue);
	partial void OnRef3Changed();

    public string Ref4 
	{ 
		get
		{
			return _Ref4;
		}
		set
		{
			if(_Ref4 != value)
			{
				OnRef4Changing(value);
				_Ref4 = value;
				OnRef4Changed();
			}
		}
	}
	private string _Ref4;

	partial void OnRef4Changing(string newValue);
	partial void OnRef4Changed();

    public string Ref5 
	{ 
		get
		{
			return _Ref5;
		}
		set
		{
			if(_Ref5 != value)
			{
				OnRef5Changing(value);
				_Ref5 = value;
				OnRef5Changed();
			}
		}
	}
	private string _Ref5;

	partial void OnRef5Changing(string newValue);
	partial void OnRef5Changed();

    public string CityName 
	{ 
		get
		{
			return _CityName;
		}
		set
		{
			if(_CityName != value)
			{
				OnCityNameChanging(value);
				_CityName = value;
				OnCityNameChanged();
			}
		}
	}
	private string _CityName;

	partial void OnCityNameChanging(string newValue);
	partial void OnCityNameChanged();

    public string Location 
	{ 
		get
		{
			return _Location;
		}
		set
		{
			if(_Location != value)
			{
				OnLocationChanging(value);
				_Location = value;
				OnLocationChanged();
			}
		}
	}
	private string _Location;

	partial void OnLocationChanging(string newValue);
	partial void OnLocationChanged();

    public Nullable<int> CallID 
	{ 
		get
		{
			return _CallID;
		}
		set
		{
			if(_CallID != value)
			{
				OnCallIDChanging(value);
				_CallID = value;
				OnCallIDChanged();
			}
		}
	}
	private Nullable<int> _CallID;

	partial void OnCallIDChanging(Nullable<int> newValue);
	partial void OnCallIDChanged();

    public Nullable<bool> IsManual 
	{ 
		get
		{
			return _IsManual;
		}
		set
		{
			if(_IsManual != value)
			{
				OnIsManualChanging(value);
				_IsManual = value;
				OnIsManualChanged();
			}
		}
	}
	private Nullable<bool> _IsManual;

	partial void OnIsManualChanging(Nullable<bool> newValue);
	partial void OnIsManualChanged();

    public virtual OCRD OCRD { get; set; }
    public virtual OENT OENT { get; set; }
    public virtual OMNU OMNU { get; set; }
}

[Serializable]
public partial class EOD1 : ObjectWithState
{

    public int EOD1ID 
	{ 
		get
		{
			return _EOD1ID;
		}
		set
		{
			if(_EOD1ID != value)
			{
				OnEOD1IDChanging(value);
				_EOD1ID = value;
				OnEOD1IDChanged();
			}
		}
	}
	private int _EOD1ID;

	partial void OnEOD1IDChanging(int newValue);
	partial void OnEOD1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public Nullable<int> DayCloseID 
	{ 
		get
		{
			return _DayCloseID;
		}
		set
		{
			if(_DayCloseID != value)
			{
				OnDayCloseIDChanging(value);
				_DayCloseID = value;
				OnDayCloseIDChanged();
			}
		}
	}
	private Nullable<int> _DayCloseID;

	partial void OnDayCloseIDChanging(Nullable<int> newValue);
	partial void OnDayCloseIDChanged();

    public int Note1000 
	{ 
		get
		{
			return _Note1000;
		}
		set
		{
			if(_Note1000 != value)
			{
				OnNote1000Changing(value);
				_Note1000 = value;
				OnNote1000Changed();
			}
		}
	}
	private int _Note1000;

	partial void OnNote1000Changing(int newValue);
	partial void OnNote1000Changed();

    public int Note500 
	{ 
		get
		{
			return _Note500;
		}
		set
		{
			if(_Note500 != value)
			{
				OnNote500Changing(value);
				_Note500 = value;
				OnNote500Changed();
			}
		}
	}
	private int _Note500;

	partial void OnNote500Changing(int newValue);
	partial void OnNote500Changed();

    public int Note100 
	{ 
		get
		{
			return _Note100;
		}
		set
		{
			if(_Note100 != value)
			{
				OnNote100Changing(value);
				_Note100 = value;
				OnNote100Changed();
			}
		}
	}
	private int _Note100;

	partial void OnNote100Changing(int newValue);
	partial void OnNote100Changed();

    public int Note50 
	{ 
		get
		{
			return _Note50;
		}
		set
		{
			if(_Note50 != value)
			{
				OnNote50Changing(value);
				_Note50 = value;
				OnNote50Changed();
			}
		}
	}
	private int _Note50;

	partial void OnNote50Changing(int newValue);
	partial void OnNote50Changed();

    public int Note20 
	{ 
		get
		{
			return _Note20;
		}
		set
		{
			if(_Note20 != value)
			{
				OnNote20Changing(value);
				_Note20 = value;
				OnNote20Changed();
			}
		}
	}
	private int _Note20;

	partial void OnNote20Changing(int newValue);
	partial void OnNote20Changed();

    public int Note10 
	{ 
		get
		{
			return _Note10;
		}
		set
		{
			if(_Note10 != value)
			{
				OnNote10Changing(value);
				_Note10 = value;
				OnNote10Changed();
			}
		}
	}
	private int _Note10;

	partial void OnNote10Changing(int newValue);
	partial void OnNote10Changed();

    public int Note5 
	{ 
		get
		{
			return _Note5;
		}
		set
		{
			if(_Note5 != value)
			{
				OnNote5Changing(value);
				_Note5 = value;
				OnNote5Changed();
			}
		}
	}
	private int _Note5;

	partial void OnNote5Changing(int newValue);
	partial void OnNote5Changed();

    public int Note2 
	{ 
		get
		{
			return _Note2;
		}
		set
		{
			if(_Note2 != value)
			{
				OnNote2Changing(value);
				_Note2 = value;
				OnNote2Changed();
			}
		}
	}
	private int _Note2;

	partial void OnNote2Changing(int newValue);
	partial void OnNote2Changed();

    public int Note1 
	{ 
		get
		{
			return _Note1;
		}
		set
		{
			if(_Note1 != value)
			{
				OnNote1Changing(value);
				_Note1 = value;
				OnNote1Changed();
			}
		}
	}
	private int _Note1;

	partial void OnNote1Changing(int newValue);
	partial void OnNote1Changed();

    public decimal Other 
	{ 
		get
		{
			return _Other;
		}
		set
		{
			if(_Other != value)
			{
				OnOtherChanging(value);
				_Other = value;
				OnOtherChanged();
			}
		}
	}
	private decimal _Other;

	partial void OnOtherChanging(decimal newValue);
	partial void OnOtherChanged();

    public decimal Amount 
	{ 
		get
		{
			return _Amount;
		}
		set
		{
			if(_Amount != value)
			{
				OnAmountChanging(value);
				_Amount = value;
				OnAmountChanged();
			}
		}
	}
	private decimal _Amount;

	partial void OnAmountChanging(decimal newValue);
	partial void OnAmountChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual OEOD OEOD { get; set; }
}

[Serializable]
public partial class EOD2 : ObjectWithState
{

    public int EOD2ID 
	{ 
		get
		{
			return _EOD2ID;
		}
		set
		{
			if(_EOD2ID != value)
			{
				OnEOD2IDChanging(value);
				_EOD2ID = value;
				OnEOD2IDChanged();
			}
		}
	}
	private int _EOD2ID;

	partial void OnEOD2IDChanging(int newValue);
	partial void OnEOD2IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int DayCloseID 
	{ 
		get
		{
			return _DayCloseID;
		}
		set
		{
			if(_DayCloseID != value)
			{
				OnDayCloseIDChanging(value);
				_DayCloseID = value;
				OnDayCloseIDChanged();
			}
		}
	}
	private int _DayCloseID;

	partial void OnDayCloseIDChanging(int newValue);
	partial void OnDayCloseIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public decimal Opening 
	{ 
		get
		{
			return _Opening;
		}
		set
		{
			if(_Opening != value)
			{
				OnOpeningChanging(value);
				_Opening = value;
				OnOpeningChanged();
			}
		}
	}
	private decimal _Opening;

	partial void OnOpeningChanging(decimal newValue);
	partial void OnOpeningChanged();

    public decimal Inward 
	{ 
		get
		{
			return _Inward;
		}
		set
		{
			if(_Inward != value)
			{
				OnInwardChanging(value);
				_Inward = value;
				OnInwardChanged();
			}
		}
	}
	private decimal _Inward;

	partial void OnInwardChanging(decimal newValue);
	partial void OnInwardChanged();

    public decimal Dispatch 
	{ 
		get
		{
			return _Dispatch;
		}
		set
		{
			if(_Dispatch != value)
			{
				OnDispatchChanging(value);
				_Dispatch = value;
				OnDispatchChanged();
			}
		}
	}
	private decimal _Dispatch;

	partial void OnDispatchChanging(decimal newValue);
	partial void OnDispatchChanged();

    public decimal Transfer 
	{ 
		get
		{
			return _Transfer;
		}
		set
		{
			if(_Transfer != value)
			{
				OnTransferChanging(value);
				_Transfer = value;
				OnTransferChanged();
			}
		}
	}
	private decimal _Transfer;

	partial void OnTransferChanging(decimal newValue);
	partial void OnTransferChanged();

    public decimal Consume 
	{ 
		get
		{
			return _Consume;
		}
		set
		{
			if(_Consume != value)
			{
				OnConsumeChanging(value);
				_Consume = value;
				OnConsumeChanged();
			}
		}
	}
	private decimal _Consume;

	partial void OnConsumeChanging(decimal newValue);
	partial void OnConsumeChanged();

    public decimal RetailSale 
	{ 
		get
		{
			return _RetailSale;
		}
		set
		{
			if(_RetailSale != value)
			{
				OnRetailSaleChanging(value);
				_RetailSale = value;
				OnRetailSaleChanged();
			}
		}
	}
	private decimal _RetailSale;

	partial void OnRetailSaleChanging(decimal newValue);
	partial void OnRetailSaleChanged();

    public decimal WholeSale 
	{ 
		get
		{
			return _WholeSale;
		}
		set
		{
			if(_WholeSale != value)
			{
				OnWholeSaleChanging(value);
				_WholeSale = value;
				OnWholeSaleChanged();
			}
		}
	}
	private decimal _WholeSale;

	partial void OnWholeSaleChanging(decimal newValue);
	partial void OnWholeSaleChanged();

    public decimal Wastage 
	{ 
		get
		{
			return _Wastage;
		}
		set
		{
			if(_Wastage != value)
			{
				OnWastageChanging(value);
				_Wastage = value;
				OnWastageChanged();
			}
		}
	}
	private decimal _Wastage;

	partial void OnWastageChanging(decimal newValue);
	partial void OnWastageChanged();

    public decimal Closing 
	{ 
		get
		{
			return _Closing;
		}
		set
		{
			if(_Closing != value)
			{
				OnClosingChanging(value);
				_Closing = value;
				OnClosingChanged();
			}
		}
	}
	private decimal _Closing;

	partial void OnClosingChanging(decimal newValue);
	partial void OnClosingChanged();

    public decimal OtherSale 
	{ 
		get
		{
			return _OtherSale;
		}
		set
		{
			if(_OtherSale != value)
			{
				OnOtherSaleChanging(value);
				_OtherSale = value;
				OnOtherSaleChanged();
			}
		}
	}
	private decimal _OtherSale;

	partial void OnOtherSaleChanging(decimal newValue);
	partial void OnOtherSaleChanged();

    public decimal GodownSale 
	{ 
		get
		{
			return _GodownSale;
		}
		set
		{
			if(_GodownSale != value)
			{
				OnGodownSaleChanging(value);
				_GodownSale = value;
				OnGodownSaleChanged();
			}
		}
	}
	private decimal _GodownSale;

	partial void OnGodownSaleChanging(decimal newValue);
	partial void OnGodownSaleChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public decimal UnitPrice 
	{ 
		get
		{
			return _UnitPrice;
		}
		set
		{
			if(_UnitPrice != value)
			{
				OnUnitPriceChanging(value);
				_UnitPrice = value;
				OnUnitPriceChanged();
			}
		}
	}
	private decimal _UnitPrice;

	partial void OnUnitPriceChanging(decimal newValue);
	partial void OnUnitPriceChanged();

    public decimal PurchaseReturn 
	{ 
		get
		{
			return _PurchaseReturn;
		}
		set
		{
			if(_PurchaseReturn != value)
			{
				OnPurchaseReturnChanging(value);
				_PurchaseReturn = value;
				OnPurchaseReturnChanged();
			}
		}
	}
	private decimal _PurchaseReturn;

	partial void OnPurchaseReturnChanging(decimal newValue);
	partial void OnPurchaseReturnChanged();

    public decimal SaleReturn 
	{ 
		get
		{
			return _SaleReturn;
		}
		set
		{
			if(_SaleReturn != value)
			{
				OnSaleReturnChanging(value);
				_SaleReturn = value;
				OnSaleReturnChanged();
			}
		}
	}
	private decimal _SaleReturn;

	partial void OnSaleReturnChanging(decimal newValue);
	partial void OnSaleReturnChanged();

    public decimal GainLoss 
	{ 
		get
		{
			return _GainLoss;
		}
		set
		{
			if(_GainLoss != value)
			{
				OnGainLossChanging(value);
				_GainLoss = value;
				OnGainLossChanged();
			}
		}
	}
	private decimal _GainLoss;

	partial void OnGainLossChanging(decimal newValue);
	partial void OnGainLossChanged();

    public virtual OITM OITM { get; set; }
    public virtual OEOD OEOD { get; set; }
}

[Serializable]
public partial class EOD3 : ObjectWithState
{

    public int EOD3ID 
	{ 
		get
		{
			return _EOD3ID;
		}
		set
		{
			if(_EOD3ID != value)
			{
				OnEOD3IDChanging(value);
				_EOD3ID = value;
				OnEOD3IDChanged();
			}
		}
	}
	private int _EOD3ID;

	partial void OnEOD3IDChanging(int newValue);
	partial void OnEOD3IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int DayCloseID 
	{ 
		get
		{
			return _DayCloseID;
		}
		set
		{
			if(_DayCloseID != value)
			{
				OnDayCloseIDChanging(value);
				_DayCloseID = value;
				OnDayCloseIDChanged();
			}
		}
	}
	private int _DayCloseID;

	partial void OnDayCloseIDChanging(int newValue);
	partial void OnDayCloseIDChanged();

    public int ExpenseID 
	{ 
		get
		{
			return _ExpenseID;
		}
		set
		{
			if(_ExpenseID != value)
			{
				OnExpenseIDChanging(value);
				_ExpenseID = value;
				OnExpenseIDChanged();
			}
		}
	}
	private int _ExpenseID;

	partial void OnExpenseIDChanging(int newValue);
	partial void OnExpenseIDChanged();

    public decimal Amount 
	{ 
		get
		{
			return _Amount;
		}
		set
		{
			if(_Amount != value)
			{
				OnAmountChanging(value);
				_Amount = value;
				OnAmountChanged();
			}
		}
	}
	private decimal _Amount;

	partial void OnAmountChanging(decimal newValue);
	partial void OnAmountChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public virtual OEXP OEXP { get; set; }
    public virtual OEOD OEOD { get; set; }
}

[Serializable]
public partial class EOD4 : ObjectWithState
{

    public int EOD4ID 
	{ 
		get
		{
			return _EOD4ID;
		}
		set
		{
			if(_EOD4ID != value)
			{
				OnEOD4IDChanging(value);
				_EOD4ID = value;
				OnEOD4IDChanged();
			}
		}
	}
	private int _EOD4ID;

	partial void OnEOD4IDChanging(int newValue);
	partial void OnEOD4IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int DayCloseID 
	{ 
		get
		{
			return _DayCloseID;
		}
		set
		{
			if(_DayCloseID != value)
			{
				OnDayCloseIDChanging(value);
				_DayCloseID = value;
				OnDayCloseIDChanged();
			}
		}
	}
	private int _DayCloseID;

	partial void OnDayCloseIDChanging(int newValue);
	partial void OnDayCloseIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal Qty 
	{ 
		get
		{
			return _Qty;
		}
		set
		{
			if(_Qty != value)
			{
				OnQtyChanging(value);
				_Qty = value;
				OnQtyChanged();
			}
		}
	}
	private decimal _Qty;

	partial void OnQtyChanging(decimal newValue);
	partial void OnQtyChanged();

    public virtual OEOD OEOD { get; set; }
}

[Serializable]
public partial class EXAST : ObjectWithState
{

    public int ExtraAssetID 
	{ 
		get
		{
			return _ExtraAssetID;
		}
		set
		{
			if(_ExtraAssetID != value)
			{
				OnExtraAssetIDChanging(value);
				_ExtraAssetID = value;
				OnExtraAssetIDChanged();
			}
		}
	}
	private int _ExtraAssetID;

	partial void OnExtraAssetIDChanging(int newValue);
	partial void OnExtraAssetIDChanged();

    public string AssetCode 
	{ 
		get
		{
			return _AssetCode;
		}
		set
		{
			if(_AssetCode != value)
			{
				OnAssetCodeChanging(value);
				_AssetCode = value;
				OnAssetCodeChanged();
			}
		}
	}
	private string _AssetCode;

	partial void OnAssetCodeChanging(string newValue);
	partial void OnAssetCodeChanged();

    public string AssetName 
	{ 
		get
		{
			return _AssetName;
		}
		set
		{
			if(_AssetName != value)
			{
				OnAssetNameChanging(value);
				_AssetName = value;
				OnAssetNameChanged();
			}
		}
	}
	private string _AssetName;

	partial void OnAssetNameChanging(string newValue);
	partial void OnAssetNameChanged();

    public string ExtraAssetType 
	{ 
		get
		{
			return _ExtraAssetType;
		}
		set
		{
			if(_ExtraAssetType != value)
			{
				OnExtraAssetTypeChanging(value);
				_ExtraAssetType = value;
				OnExtraAssetTypeChanged();
			}
		}
	}
	private string _ExtraAssetType;

	partial void OnExtraAssetTypeChanging(string newValue);
	partial void OnExtraAssetTypeChanged();

    public string ExtraAssetRemarks 
	{ 
		get
		{
			return _ExtraAssetRemarks;
		}
		set
		{
			if(_ExtraAssetRemarks != value)
			{
				OnExtraAssetRemarksChanging(value);
				_ExtraAssetRemarks = value;
				OnExtraAssetRemarksChanged();
			}
		}
	}
	private string _ExtraAssetRemarks;

	partial void OnExtraAssetRemarksChanging(string newValue);
	partial void OnExtraAssetRemarksChanged();

    public Nullable<decimal> ConfirmByCustomerID 
	{ 
		get
		{
			return _ConfirmByCustomerID;
		}
		set
		{
			if(_ConfirmByCustomerID != value)
			{
				OnConfirmByCustomerIDChanging(value);
				_ConfirmByCustomerID = value;
				OnConfirmByCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _ConfirmByCustomerID;

	partial void OnConfirmByCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnConfirmByCustomerIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<int> AssetBrandID 
	{ 
		get
		{
			return _AssetBrandID;
		}
		set
		{
			if(_AssetBrandID != value)
			{
				OnAssetBrandIDChanging(value);
				_AssetBrandID = value;
				OnAssetBrandIDChanged();
			}
		}
	}
	private Nullable<int> _AssetBrandID;

	partial void OnAssetBrandIDChanging(Nullable<int> newValue);
	partial void OnAssetBrandIDChanged();

    public Nullable<int> AssetSizeID 
	{ 
		get
		{
			return _AssetSizeID;
		}
		set
		{
			if(_AssetSizeID != value)
			{
				OnAssetSizeIDChanging(value);
				_AssetSizeID = value;
				OnAssetSizeIDChanged();
			}
		}
	}
	private Nullable<int> _AssetSizeID;

	partial void OnAssetSizeIDChanging(Nullable<int> newValue);
	partial void OnAssetSizeIDChanged();

    public virtual OASTB OASTB { get; set; }
    public virtual OASTZ OASTZ { get; set; }
    public virtual OCRD OCRD { get; set; }
}

[Serializable]
public partial class GCM1 : ObjectWithState
{

    public long GCM1ID 
	{ 
		get
		{
			return _GCM1ID;
		}
		set
		{
			if(_GCM1ID != value)
			{
				OnGCM1IDChanging(value);
				_GCM1ID = value;
				OnGCM1IDChanged();
			}
		}
	}
	private long _GCM1ID;

	partial void OnGCM1IDChanging(long newValue);
	partial void OnGCM1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int DeviceID 
	{ 
		get
		{
			return _DeviceID;
		}
		set
		{
			if(_DeviceID != value)
			{
				OnDeviceIDChanging(value);
				_DeviceID = value;
				OnDeviceIDChanged();
			}
		}
	}
	private int _DeviceID;

	partial void OnDeviceIDChanging(int newValue);
	partial void OnDeviceIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public string Body 
	{ 
		get
		{
			return _Body;
		}
		set
		{
			if(_Body != value)
			{
				OnBodyChanging(value);
				_Body = value;
				OnBodyChanged();
			}
		}
	}
	private string _Body;

	partial void OnBodyChanging(string newValue);
	partial void OnBodyChanged();

    public string Title 
	{ 
		get
		{
			return _Title;
		}
		set
		{
			if(_Title != value)
			{
				OnTitleChanging(value);
				_Title = value;
				OnTitleChanged();
			}
		}
	}
	private string _Title;

	partial void OnTitleChanging(string newValue);
	partial void OnTitleChanged();

    public bool SentOn 
	{ 
		get
		{
			return _SentOn;
		}
		set
		{
			if(_SentOn != value)
			{
				OnSentOnChanging(value);
				_SentOn = value;
				OnSentOnChanged();
			}
		}
	}
	private bool _SentOn;

	partial void OnSentOnChanging(bool newValue);
	partial void OnSentOnChanged();

    public bool UnRead 
	{ 
		get
		{
			return _UnRead;
		}
		set
		{
			if(_UnRead != value)
			{
				OnUnReadChanging(value);
				_UnRead = value;
				OnUnReadChanged();
			}
		}
	}
	private bool _UnRead;

	partial void OnUnReadChanging(bool newValue);
	partial void OnUnReadChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public Nullable<bool> IsDMS 
	{ 
		get
		{
			return _IsDMS;
		}
		set
		{
			if(_IsDMS != value)
			{
				OnIsDMSChanging(value);
				_IsDMS = value;
				OnIsDMSChanged();
			}
		}
	}
	private Nullable<bool> _IsDMS;

	partial void OnIsDMSChanging(Nullable<bool> newValue);
	partial void OnIsDMSChanged();

    public virtual OGCM OGCM { get; set; }
}

[Serializable]
public partial class GLAG : ObjectWithState
{
    public GLAG() 
    { 
        this.OGLAs = new HashSet<OGLA>();
    }


    public int GLAccGroupID 
	{ 
		get
		{
			return _GLAccGroupID;
		}
		set
		{
			if(_GLAccGroupID != value)
			{
				OnGLAccGroupIDChanging(value);
				_GLAccGroupID = value;
				OnGLAccGroupIDChanged();
			}
		}
	}
	private int _GLAccGroupID;

	partial void OnGLAccGroupIDChanging(int newValue);
	partial void OnGLAccGroupIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string GLAccGroupName 
	{ 
		get
		{
			return _GLAccGroupName;
		}
		set
		{
			if(_GLAccGroupName != value)
			{
				OnGLAccGroupNameChanging(value);
				_GLAccGroupName = value;
				OnGLAccGroupNameChanged();
			}
		}
	}
	private string _GLAccGroupName;

	partial void OnGLAccGroupNameChanging(string newValue);
	partial void OnGLAccGroupNameChanged();

    public string GLAccGroupDesc 
	{ 
		get
		{
			return _GLAccGroupDesc;
		}
		set
		{
			if(_GLAccGroupDesc != value)
			{
				OnGLAccGroupDescChanging(value);
				_GLAccGroupDesc = value;
				OnGLAccGroupDescChanged();
			}
		}
	}
	private string _GLAccGroupDesc;

	partial void OnGLAccGroupDescChanging(string newValue);
	partial void OnGLAccGroupDescChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<OGLA> OGLAs { get; set; }
}

[Serializable]
public partial class GRP1 : ObjectWithState
{

    public int GRPID 
	{ 
		get
		{
			return _GRPID;
		}
		set
		{
			if(_GRPID != value)
			{
				OnGRPIDChanging(value);
				_GRPID = value;
				OnGRPIDChanged();
			}
		}
	}
	private int _GRPID;

	partial void OnGRPIDChanging(int newValue);
	partial void OnGRPIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpGroupID 
	{ 
		get
		{
			return _EmpGroupID;
		}
		set
		{
			if(_EmpGroupID != value)
			{
				OnEmpGroupIDChanging(value);
				_EmpGroupID = value;
				OnEmpGroupIDChanged();
			}
		}
	}
	private int _EmpGroupID;

	partial void OnEmpGroupIDChanging(int newValue);
	partial void OnEmpGroupIDChanged();

    public int MenuID 
	{ 
		get
		{
			return _MenuID;
		}
		set
		{
			if(_MenuID != value)
			{
				OnMenuIDChanging(value);
				_MenuID = value;
				OnMenuIDChanged();
			}
		}
	}
	private int _MenuID;

	partial void OnMenuIDChanging(int newValue);
	partial void OnMenuIDChanged();

    public string AuthorizationType 
	{ 
		get
		{
			return _AuthorizationType;
		}
		set
		{
			if(_AuthorizationType != value)
			{
				OnAuthorizationTypeChanging(value);
				_AuthorizationType = value;
				OnAuthorizationTypeChanged();
			}
		}
	}
	private string _AuthorizationType;

	partial void OnAuthorizationTypeChanging(string newValue);
	partial void OnAuthorizationTypeChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public virtual OGRP OGRP { get; set; }
    public virtual OMNU OMNU { get; set; }
}

[Serializable]
public partial class HELP : ObjectWithState
{

    public int HelpID 
	{ 
		get
		{
			return _HelpID;
		}
		set
		{
			if(_HelpID != value)
			{
				OnHelpIDChanging(value);
				_HelpID = value;
				OnHelpIDChanged();
			}
		}
	}
	private int _HelpID;

	partial void OnHelpIDChanging(int newValue);
	partial void OnHelpIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public decimal CustID 
	{ 
		get
		{
			return _CustID;
		}
		set
		{
			if(_CustID != value)
			{
				OnCustIDChanging(value);
				_CustID = value;
				OnCustIDChanged();
			}
		}
	}
	private decimal _CustID;

	partial void OnCustIDChanging(decimal newValue);
	partial void OnCustIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public Nullable<int> MenuID 
	{ 
		get
		{
			return _MenuID;
		}
		set
		{
			if(_MenuID != value)
			{
				OnMenuIDChanging(value);
				_MenuID = value;
				OnMenuIDChanged();
			}
		}
	}
	private Nullable<int> _MenuID;

	partial void OnMenuIDChanging(Nullable<int> newValue);
	partial void OnMenuIDChanged();

    public string Query 
	{ 
		get
		{
			return _Query;
		}
		set
		{
			if(_Query != value)
			{
				OnQueryChanging(value);
				_Query = value;
				OnQueryChanged();
			}
		}
	}
	private string _Query;

	partial void OnQueryChanging(string newValue);
	partial void OnQueryChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual OEMP OEMP { get; set; }
    public virtual OMNU OMNU { get; set; }
    public virtual OCRD OCRD { get; set; }
}

[Serializable]
public partial class HRY1 : ObjectWithState
{

    public int HRY1ID 
	{ 
		get
		{
			return _HRY1ID;
		}
		set
		{
			if(_HRY1ID != value)
			{
				OnHRY1IDChanging(value);
				_HRY1ID = value;
				OnHRY1IDChanged();
			}
		}
	}
	private int _HRY1ID;

	partial void OnHRY1IDChanging(int newValue);
	partial void OnHRY1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int SaleID 
	{ 
		get
		{
			return _SaleID;
		}
		set
		{
			if(_SaleID != value)
			{
				OnSaleIDChanging(value);
				_SaleID = value;
				OnSaleIDChanged();
			}
		}
	}
	private int _SaleID;

	partial void OnSaleIDChanging(int newValue);
	partial void OnSaleIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public decimal Qty 
	{ 
		get
		{
			return _Qty;
		}
		set
		{
			if(_Qty != value)
			{
				OnQtyChanging(value);
				_Qty = value;
				OnQtyChanged();
			}
		}
	}
	private decimal _Qty;

	partial void OnQtyChanging(decimal newValue);
	partial void OnQtyChanged();

    public decimal SubTotal 
	{ 
		get
		{
			return _SubTotal;
		}
		set
		{
			if(_SubTotal != value)
			{
				OnSubTotalChanging(value);
				_SubTotal = value;
				OnSubTotalChanged();
			}
		}
	}
	private decimal _SubTotal;

	partial void OnSubTotalChanging(decimal newValue);
	partial void OnSubTotalChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public virtual OEMP OEMP { get; set; }
}

[Serializable]
public partial class IGIMG : ObjectWithState
{

    public int ItemGroupMappingID 
	{ 
		get
		{
			return _ItemGroupMappingID;
		}
		set
		{
			if(_ItemGroupMappingID != value)
			{
				OnItemGroupMappingIDChanging(value);
				_ItemGroupMappingID = value;
				OnItemGroupMappingIDChanged();
			}
		}
	}
	private int _ItemGroupMappingID;

	partial void OnItemGroupMappingIDChanging(int newValue);
	partial void OnItemGroupMappingIDChanged();

    public int ItemGroupID 
	{ 
		get
		{
			return _ItemGroupID;
		}
		set
		{
			if(_ItemGroupID != value)
			{
				OnItemGroupIDChanging(value);
				_ItemGroupID = value;
				OnItemGroupIDChanged();
			}
		}
	}
	private int _ItemGroupID;

	partial void OnItemGroupIDChanging(int newValue);
	partial void OnItemGroupIDChanged();

    public string Logo 
	{ 
		get
		{
			return _Logo;
		}
		set
		{
			if(_Logo != value)
			{
				OnLogoChanging(value);
				_Logo = value;
				OnLogoChanged();
			}
		}
	}
	private string _Logo;

	partial void OnLogoChanging(string newValue);
	partial void OnLogoChanged();

    public Nullable<int> UpdateBy 
	{ 
		get
		{
			return _UpdateBy;
		}
		set
		{
			if(_UpdateBy != value)
			{
				OnUpdateByChanging(value);
				_UpdateBy = value;
				OnUpdateByChanged();
			}
		}
	}
	private Nullable<int> _UpdateBy;

	partial void OnUpdateByChanging(Nullable<int> newValue);
	partial void OnUpdateByChanged();

    public Nullable<System.DateTime> UpdateDatetime 
	{ 
		get
		{
			return _UpdateDatetime;
		}
		set
		{
			if(_UpdateDatetime != value)
			{
				OnUpdateDatetimeChanging(value);
				_UpdateDatetime = value;
				OnUpdateDatetimeChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdateDatetime;

	partial void OnUpdateDatetimeChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdateDatetimeChanged();

    public string ImageBase64 
	{ 
		get
		{
			return _ImageBase64;
		}
		set
		{
			if(_ImageBase64 != value)
			{
				OnImageBase64Changing(value);
				_ImageBase64 = value;
				OnImageBase64Changed();
			}
		}
	}
	private string _ImageBase64;

	partial void OnImageBase64Changing(string newValue);
	partial void OnImageBase64Changed();
}

[Serializable]
public partial class INRT : ObjectWithState
{
    public INRT() 
    { 
        this.NRT1 = new HashSet<NRT1>();
    }


    public int INRTID 
	{ 
		get
		{
			return _INRTID;
		}
		set
		{
			if(_INRTID != value)
			{
				OnINRTIDChanging(value);
				_INRTID = value;
				OnINRTIDChanged();
			}
		}
	}
	private int _INRTID;

	partial void OnINRTIDChanging(int newValue);
	partial void OnINRTIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string DocumentType 
	{ 
		get
		{
			return _DocumentType;
		}
		set
		{
			if(_DocumentType != value)
			{
				OnDocumentTypeChanging(value);
				_DocumentType = value;
				OnDocumentTypeChanged();
			}
		}
	}
	private string _DocumentType;

	partial void OnDocumentTypeChanging(string newValue);
	partial void OnDocumentTypeChanged();

    public string WarehouseType 
	{ 
		get
		{
			return _WarehouseType;
		}
		set
		{
			if(_WarehouseType != value)
			{
				OnWarehouseTypeChanging(value);
				_WarehouseType = value;
				OnWarehouseTypeChanged();
			}
		}
	}
	private string _WarehouseType;

	partial void OnWarehouseTypeChanging(string newValue);
	partial void OnWarehouseTypeChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public Nullable<int> WhsID 
	{ 
		get
		{
			return _WhsID;
		}
		set
		{
			if(_WhsID != value)
			{
				OnWhsIDChanging(value);
				_WhsID = value;
				OnWhsIDChanged();
			}
		}
	}
	private Nullable<int> _WhsID;

	partial void OnWhsIDChanging(Nullable<int> newValue);
	partial void OnWhsIDChanged();

    public Nullable<int> VehicleID 
	{ 
		get
		{
			return _VehicleID;
		}
		set
		{
			if(_VehicleID != value)
			{
				OnVehicleIDChanging(value);
				_VehicleID = value;
				OnVehicleIDChanged();
			}
		}
	}
	private Nullable<int> _VehicleID;

	partial void OnVehicleIDChanging(Nullable<int> newValue);
	partial void OnVehicleIDChanged();

    public Nullable<int> BranchID 
	{ 
		get
		{
			return _BranchID;
		}
		set
		{
			if(_BranchID != value)
			{
				OnBranchIDChanging(value);
				_BranchID = value;
				OnBranchIDChanged();
			}
		}
	}
	private Nullable<int> _BranchID;

	partial void OnBranchIDChanging(Nullable<int> newValue);
	partial void OnBranchIDChanged();

    public System.DateTime DocumentDate 
	{ 
		get
		{
			return _DocumentDate;
		}
		set
		{
			if(_DocumentDate != value)
			{
				OnDocumentDateChanging(value);
				_DocumentDate = value;
				OnDocumentDateChanged();
			}
		}
	}
	private System.DateTime _DocumentDate;

	partial void OnDocumentDateChanging(System.DateTime newValue);
	partial void OnDocumentDateChanged();

    public Nullable<System.DateTime> LastCountedDate 
	{ 
		get
		{
			return _LastCountedDate;
		}
		set
		{
			if(_LastCountedDate != value)
			{
				OnLastCountedDateChanging(value);
				_LastCountedDate = value;
				OnLastCountedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _LastCountedDate;

	partial void OnLastCountedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnLastCountedDateChanged();

    public string Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private string _Status;

	partial void OnStatusChanging(string newValue);
	partial void OnStatusChanged();

    public Nullable<decimal> TotalItemAmt 
	{ 
		get
		{
			return _TotalItemAmt;
		}
		set
		{
			if(_TotalItemAmt != value)
			{
				OnTotalItemAmtChanging(value);
				_TotalItemAmt = value;
				OnTotalItemAmtChanged();
			}
		}
	}
	private Nullable<decimal> _TotalItemAmt;

	partial void OnTotalItemAmtChanging(Nullable<decimal> newValue);
	partial void OnTotalItemAmtChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsMobile 
	{ 
		get
		{
			return _IsMobile;
		}
		set
		{
			if(_IsMobile != value)
			{
				OnIsMobileChanging(value);
				_IsMobile = value;
				OnIsMobileChanged();
			}
		}
	}
	private bool _IsMobile;

	partial void OnIsMobileChanging(bool newValue);
	partial void OnIsMobileChanged();

    public virtual ICollection<NRT1> NRT1 { get; set; }
    public virtual OCRD OCRD { get; set; }
}

[Serializable]
public partial class INTF : ObjectWithState
{
    public INTF() 
    { 
        this.NTF1 = new HashSet<NTF1>();
    }


    public int INTFID 
	{ 
		get
		{
			return _INTFID;
		}
		set
		{
			if(_INTFID != value)
			{
				OnINTFIDChanging(value);
				_INTFID = value;
				OnINTFIDChanged();
			}
		}
	}
	private int _INTFID;

	partial void OnINTFIDChanging(int newValue);
	partial void OnINTFIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public Nullable<System.DateTime> DocumentDate 
	{ 
		get
		{
			return _DocumentDate;
		}
		set
		{
			if(_DocumentDate != value)
			{
				OnDocumentDateChanging(value);
				_DocumentDate = value;
				OnDocumentDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _DocumentDate;

	partial void OnDocumentDateChanging(Nullable<System.DateTime> newValue);
	partial void OnDocumentDateChanged();

    public string TransferType 
	{ 
		get
		{
			return _TransferType;
		}
		set
		{
			if(_TransferType != value)
			{
				OnTransferTypeChanging(value);
				_TransferType = value;
				OnTransferTypeChanged();
			}
		}
	}
	private string _TransferType;

	partial void OnTransferTypeChanging(string newValue);
	partial void OnTransferTypeChanged();

    public int FromWhsID 
	{ 
		get
		{
			return _FromWhsID;
		}
		set
		{
			if(_FromWhsID != value)
			{
				OnFromWhsIDChanging(value);
				_FromWhsID = value;
				OnFromWhsIDChanged();
			}
		}
	}
	private int _FromWhsID;

	partial void OnFromWhsIDChanging(int newValue);
	partial void OnFromWhsIDChanged();

    public int ToWhsID 
	{ 
		get
		{
			return _ToWhsID;
		}
		set
		{
			if(_ToWhsID != value)
			{
				OnToWhsIDChanging(value);
				_ToWhsID = value;
				OnToWhsIDChanged();
			}
		}
	}
	private int _ToWhsID;

	partial void OnToWhsIDChanging(int newValue);
	partial void OnToWhsIDChanged();

    public Nullable<decimal> TotalQty 
	{ 
		get
		{
			return _TotalQty;
		}
		set
		{
			if(_TotalQty != value)
			{
				OnTotalQtyChanging(value);
				_TotalQty = value;
				OnTotalQtyChanged();
			}
		}
	}
	private Nullable<decimal> _TotalQty;

	partial void OnTotalQtyChanging(Nullable<decimal> newValue);
	partial void OnTotalQtyChanged();

    public Nullable<decimal> TotalAmt 
	{ 
		get
		{
			return _TotalAmt;
		}
		set
		{
			if(_TotalAmt != value)
			{
				OnTotalAmtChanging(value);
				_TotalAmt = value;
				OnTotalAmtChanged();
			}
		}
	}
	private Nullable<decimal> _TotalAmt;

	partial void OnTotalAmtChanging(Nullable<decimal> newValue);
	partial void OnTotalAmtChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string BillRefNo 
	{ 
		get
		{
			return _BillRefNo;
		}
		set
		{
			if(_BillRefNo != value)
			{
				OnBillRefNoChanging(value);
				_BillRefNo = value;
				OnBillRefNoChanged();
			}
		}
	}
	private string _BillRefNo;

	partial void OnBillRefNoChanging(string newValue);
	partial void OnBillRefNoChanged();

    public virtual ICollection<NTF1> NTF1 { get; set; }
}

[Serializable]
public partial class INVR1 : ObjectWithState
{

    public int INVR1ID 
	{ 
		get
		{
			return _INVR1ID;
		}
		set
		{
			if(_INVR1ID != value)
			{
				OnINVR1IDChanging(value);
				_INVR1ID = value;
				OnINVR1IDChanged();
			}
		}
	}
	private int _INVR1ID;

	partial void OnINVR1IDChanging(int newValue);
	partial void OnINVR1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int OINVRID 
	{ 
		get
		{
			return _OINVRID;
		}
		set
		{
			if(_OINVRID != value)
			{
				OnOINVRIDChanging(value);
				_OINVRID = value;
				OnOINVRIDChanged();
			}
		}
	}
	private int _OINVRID;

	partial void OnOINVRIDChanging(int newValue);
	partial void OnOINVRIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public System.DateTime Date 
	{ 
		get
		{
			return _Date;
		}
		set
		{
			if(_Date != value)
			{
				OnDateChanging(value);
				_Date = value;
				OnDateChanged();
			}
		}
	}
	private System.DateTime _Date;

	partial void OnDateChanging(System.DateTime newValue);
	partial void OnDateChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal MainPrice 
	{ 
		get
		{
			return _MainPrice;
		}
		set
		{
			if(_MainPrice != value)
			{
				OnMainPriceChanging(value);
				_MainPrice = value;
				OnMainPriceChanged();
			}
		}
	}
	private decimal _MainPrice;

	partial void OnMainPriceChanging(decimal newValue);
	partial void OnMainPriceChanged();

    public decimal Price 
	{ 
		get
		{
			return _Price;
		}
		set
		{
			if(_Price != value)
			{
				OnPriceChanging(value);
				_Price = value;
				OnPriceChanged();
			}
		}
	}
	private decimal _Price;

	partial void OnPriceChanging(decimal newValue);
	partial void OnPriceChanged();

    public decimal Quantity 
	{ 
		get
		{
			return _Quantity;
		}
		set
		{
			if(_Quantity != value)
			{
				OnQuantityChanging(value);
				_Quantity = value;
				OnQuantityChanged();
			}
		}
	}
	private decimal _Quantity;

	partial void OnQuantityChanging(decimal newValue);
	partial void OnQuantityChanged();

    public decimal Subtotal 
	{ 
		get
		{
			return _Subtotal;
		}
		set
		{
			if(_Subtotal != value)
			{
				OnSubtotalChanging(value);
				_Subtotal = value;
				OnSubtotalChanged();
			}
		}
	}
	private decimal _Subtotal;

	partial void OnSubtotalChanging(decimal newValue);
	partial void OnSubtotalChanged();

    public decimal MapQty 
	{ 
		get
		{
			return _MapQty;
		}
		set
		{
			if(_MapQty != value)
			{
				OnMapQtyChanging(value);
				_MapQty = value;
				OnMapQtyChanged();
			}
		}
	}
	private decimal _MapQty;

	partial void OnMapQtyChanging(decimal newValue);
	partial void OnMapQtyChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public virtual OINVR OINVR { get; set; }
}

[Serializable]
public partial class IPL1 : ObjectWithState
{

    public int ItemPriceID 
	{ 
		get
		{
			return _ItemPriceID;
		}
		set
		{
			if(_ItemPriceID != value)
			{
				OnItemPriceIDChanging(value);
				_ItemPriceID = value;
				OnItemPriceIDChanged();
			}
		}
	}
	private int _ItemPriceID;

	partial void OnItemPriceIDChanging(int newValue);
	partial void OnItemPriceIDChanged();

    public int PriceListID 
	{ 
		get
		{
			return _PriceListID;
		}
		set
		{
			if(_PriceListID != value)
			{
				OnPriceListIDChanging(value);
				_PriceListID = value;
				OnPriceListIDChanged();
			}
		}
	}
	private int _PriceListID;

	partial void OnPriceListIDChanging(int newValue);
	partial void OnPriceListIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal UnitPrice 
	{ 
		get
		{
			return _UnitPrice;
		}
		set
		{
			if(_UnitPrice != value)
			{
				OnUnitPriceChanging(value);
				_UnitPrice = value;
				OnUnitPriceChanged();
			}
		}
	}
	private decimal _UnitPrice;

	partial void OnUnitPriceChanging(decimal newValue);
	partial void OnUnitPriceChanged();

    public decimal DiscountPer 
	{ 
		get
		{
			return _DiscountPer;
		}
		set
		{
			if(_DiscountPer != value)
			{
				OnDiscountPerChanging(value);
				_DiscountPer = value;
				OnDiscountPerChanged();
			}
		}
	}
	private decimal _DiscountPer;

	partial void OnDiscountPerChanging(decimal newValue);
	partial void OnDiscountPerChanged();

    public decimal DiscountAmt 
	{ 
		get
		{
			return _DiscountAmt;
		}
		set
		{
			if(_DiscountAmt != value)
			{
				OnDiscountAmtChanging(value);
				_DiscountAmt = value;
				OnDiscountAmtChanged();
			}
		}
	}
	private decimal _DiscountAmt;

	partial void OnDiscountAmtChanging(decimal newValue);
	partial void OnDiscountAmtChanged();

    public decimal SellPrice 
	{ 
		get
		{
			return _SellPrice;
		}
		set
		{
			if(_SellPrice != value)
			{
				OnSellPriceChanging(value);
				_SellPrice = value;
				OnSellPriceChanged();
			}
		}
	}
	private decimal _SellPrice;

	partial void OnSellPriceChanging(decimal newValue);
	partial void OnSellPriceChanged();

    public int TaxID 
	{ 
		get
		{
			return _TaxID;
		}
		set
		{
			if(_TaxID != value)
			{
				OnTaxIDChanging(value);
				_TaxID = value;
				OnTaxIDChanged();
			}
		}
	}
	private int _TaxID;

	partial void OnTaxIDChanging(int newValue);
	partial void OnTaxIDChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual OIPL OIPL { get; set; }
    public virtual OITM OITM { get; set; }
    public virtual OTAX OTAX { get; set; }
    public virtual OUNT OUNT { get; set; }
}

[Serializable]
public partial class IPL2 : ObjectWithState
{

    public int IPL2ID 
	{ 
		get
		{
			return _IPL2ID;
		}
		set
		{
			if(_IPL2ID != value)
			{
				OnIPL2IDChanging(value);
				_IPL2ID = value;
				OnIPL2IDChanged();
			}
		}
	}
	private int _IPL2ID;

	partial void OnIPL2IDChanging(int newValue);
	partial void OnIPL2IDChanged();

    public int PriceListID 
	{ 
		get
		{
			return _PriceListID;
		}
		set
		{
			if(_PriceListID != value)
			{
				OnPriceListIDChanging(value);
				_PriceListID = value;
				OnPriceListIDChanged();
			}
		}
	}
	private int _PriceListID;

	partial void OnPriceListIDChanging(int newValue);
	partial void OnPriceListIDChanged();

    public Nullable<int> DivisionID 
	{ 
		get
		{
			return _DivisionID;
		}
		set
		{
			if(_DivisionID != value)
			{
				OnDivisionIDChanging(value);
				_DivisionID = value;
				OnDivisionIDChanged();
			}
		}
	}
	private Nullable<int> _DivisionID;

	partial void OnDivisionIDChanging(Nullable<int> newValue);
	partial void OnDivisionIDChanged();

    public Nullable<int> CustType 
	{ 
		get
		{
			return _CustType;
		}
		set
		{
			if(_CustType != value)
			{
				OnCustTypeChanging(value);
				_CustType = value;
				OnCustTypeChanged();
			}
		}
	}
	private Nullable<int> _CustType;

	partial void OnCustTypeChanging(Nullable<int> newValue);
	partial void OnCustTypeChanged();

    public bool SelectedProductSale 
	{ 
		get
		{
			return _SelectedProductSale;
		}
		set
		{
			if(_SelectedProductSale != value)
			{
				OnSelectedProductSaleChanging(value);
				_SelectedProductSale = value;
				OnSelectedProductSaleChanged();
			}
		}
	}
	private bool _SelectedProductSale;

	partial void OnSelectedProductSaleChanging(bool newValue);
	partial void OnSelectedProductSaleChanged();

    public bool OnlineClaim 
	{ 
		get
		{
			return _OnlineClaim;
		}
		set
		{
			if(_OnlineClaim != value)
			{
				OnOnlineClaimChanging(value);
				_OnlineClaim = value;
				OnOnlineClaimChanged();
			}
		}
	}
	private bool _OnlineClaim;

	partial void OnOnlineClaimChanging(bool newValue);
	partial void OnOnlineClaimChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public string IPAddress 
	{ 
		get
		{
			return _IPAddress;
		}
		set
		{
			if(_IPAddress != value)
			{
				OnIPAddressChanging(value);
				_IPAddress = value;
				OnIPAddressChanged();
			}
		}
	}
	private string _IPAddress;

	partial void OnIPAddressChanging(string newValue);
	partial void OnIPAddressChanged();
}

[Serializable]
public partial class ITM1 : ObjectWithState
{

    public int ItemMunitID 
	{ 
		get
		{
			return _ItemMunitID;
		}
		set
		{
			if(_ItemMunitID != value)
			{
				OnItemMunitIDChanging(value);
				_ItemMunitID = value;
				OnItemMunitIDChanged();
			}
		}
	}
	private int _ItemMunitID;

	partial void OnItemMunitIDChanging(int newValue);
	partial void OnItemMunitIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public decimal Quantity 
	{ 
		get
		{
			return _Quantity;
		}
		set
		{
			if(_Quantity != value)
			{
				OnQuantityChanging(value);
				_Quantity = value;
				OnQuantityChanged();
			}
		}
	}
	private decimal _Quantity;

	partial void OnQuantityChanging(decimal newValue);
	partial void OnQuantityChanged();

    public bool IsBaseUnit 
	{ 
		get
		{
			return _IsBaseUnit;
		}
		set
		{
			if(_IsBaseUnit != value)
			{
				OnIsBaseUnitChanging(value);
				_IsBaseUnit = value;
				OnIsBaseUnitChanged();
			}
		}
	}
	private bool _IsBaseUnit;

	partial void OnIsBaseUnitChanging(bool newValue);
	partial void OnIsBaseUnitChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public Nullable<int> UnitItemID 
	{ 
		get
		{
			return _UnitItemID;
		}
		set
		{
			if(_UnitItemID != value)
			{
				OnUnitItemIDChanging(value);
				_UnitItemID = value;
				OnUnitItemIDChanged();
			}
		}
	}
	private Nullable<int> _UnitItemID;

	partial void OnUnitItemIDChanging(Nullable<int> newValue);
	partial void OnUnitItemIDChanged();

    public int UnitType 
	{ 
		get
		{
			return _UnitType;
		}
		set
		{
			if(_UnitType != value)
			{
				OnUnitTypeChanging(value);
				_UnitType = value;
				OnUnitTypeChanged();
			}
		}
	}
	private int _UnitType;

	partial void OnUnitTypeChanging(int newValue);
	partial void OnUnitTypeChanged();

    public decimal Price 
	{ 
		get
		{
			return _Price;
		}
		set
		{
			if(_Price != value)
			{
				OnPriceChanging(value);
				_Price = value;
				OnPriceChanged();
			}
		}
	}
	private decimal _Price;

	partial void OnPriceChanging(decimal newValue);
	partial void OnPriceChanged();

    public decimal Length 
	{ 
		get
		{
			return _Length;
		}
		set
		{
			if(_Length != value)
			{
				OnLengthChanging(value);
				_Length = value;
				OnLengthChanged();
			}
		}
	}
	private decimal _Length;

	partial void OnLengthChanging(decimal newValue);
	partial void OnLengthChanged();

    public decimal Breadth 
	{ 
		get
		{
			return _Breadth;
		}
		set
		{
			if(_Breadth != value)
			{
				OnBreadthChanging(value);
				_Breadth = value;
				OnBreadthChanged();
			}
		}
	}
	private decimal _Breadth;

	partial void OnBreadthChanging(decimal newValue);
	partial void OnBreadthChanged();

    public decimal Height 
	{ 
		get
		{
			return _Height;
		}
		set
		{
			if(_Height != value)
			{
				OnHeightChanging(value);
				_Height = value;
				OnHeightChanged();
			}
		}
	}
	private decimal _Height;

	partial void OnHeightChanging(decimal newValue);
	partial void OnHeightChanged();

    public decimal Weight 
	{ 
		get
		{
			return _Weight;
		}
		set
		{
			if(_Weight != value)
			{
				OnWeightChanging(value);
				_Weight = value;
				OnWeightChanged();
			}
		}
	}
	private decimal _Weight;

	partial void OnWeightChanging(decimal newValue);
	partial void OnWeightChanged();

    public string Currency 
	{ 
		get
		{
			return _Currency;
		}
		set
		{
			if(_Currency != value)
			{
				OnCurrencyChanging(value);
				_Currency = value;
				OnCurrencyChanged();
			}
		}
	}
	private string _Currency;

	partial void OnCurrencyChanging(string newValue);
	partial void OnCurrencyChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual OITM OITM { get; set; }
    public virtual OITM OITM1 { get; set; }
    public virtual OUNT OUNT { get; set; }
}

[Serializable]
public partial class ITM2 : ObjectWithState
{

    public int StockID 
	{ 
		get
		{
			return _StockID;
		}
		set
		{
			if(_StockID != value)
			{
				OnStockIDChanging(value);
				_StockID = value;
				OnStockIDChanged();
			}
		}
	}
	private int _StockID;

	partial void OnStockIDChanging(int newValue);
	partial void OnStockIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public Nullable<int> WhsID 
	{ 
		get
		{
			return _WhsID;
		}
		set
		{
			if(_WhsID != value)
			{
				OnWhsIDChanging(value);
				_WhsID = value;
				OnWhsIDChanged();
			}
		}
	}
	private Nullable<int> _WhsID;

	partial void OnWhsIDChanging(Nullable<int> newValue);
	partial void OnWhsIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public decimal TotalPacket 
	{ 
		get
		{
			return _TotalPacket;
		}
		set
		{
			if(_TotalPacket != value)
			{
				OnTotalPacketChanging(value);
				_TotalPacket = value;
				OnTotalPacketChanged();
			}
		}
	}
	private decimal _TotalPacket;

	partial void OnTotalPacketChanging(decimal newValue);
	partial void OnTotalPacketChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsMobile 
	{ 
		get
		{
			return _IsMobile;
		}
		set
		{
			if(_IsMobile != value)
			{
				OnIsMobileChanging(value);
				_IsMobile = value;
				OnIsMobileChanged();
			}
		}
	}
	private bool _IsMobile;

	partial void OnIsMobileChanging(bool newValue);
	partial void OnIsMobileChanged();

    public Nullable<decimal> PPrice 
	{ 
		get
		{
			return _PPrice;
		}
		set
		{
			if(_PPrice != value)
			{
				OnPPriceChanging(value);
				_PPrice = value;
				OnPPriceChanged();
			}
		}
	}
	private Nullable<decimal> _PPrice;

	partial void OnPPriceChanging(Nullable<decimal> newValue);
	partial void OnPPriceChanged();

    public virtual OITM OITM { get; set; }
    public virtual OWH OWH { get; set; }
}

[Serializable]
public partial class ITM3 : ObjectWithState
{

    public int ITM3ID 
	{ 
		get
		{
			return _ITM3ID;
		}
		set
		{
			if(_ITM3ID != value)
			{
				OnITM3IDChanging(value);
				_ITM3ID = value;
				OnITM3IDChanged();
			}
		}
	}
	private int _ITM3ID;

	partial void OnITM3IDChanging(int newValue);
	partial void OnITM3IDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal Qty 
	{ 
		get
		{
			return _Qty;
		}
		set
		{
			if(_Qty != value)
			{
				OnQtyChanging(value);
				_Qty = value;
				OnQtyChanged();
			}
		}
	}
	private decimal _Qty;

	partial void OnQtyChanging(decimal newValue);
	partial void OnQtyChanged();

    public virtual OUNT OUNT { get; set; }
}

[Serializable]
public partial class ITM4 : ObjectWithState
{

    public int ITM4ID 
	{ 
		get
		{
			return _ITM4ID;
		}
		set
		{
			if(_ITM4ID != value)
			{
				OnITM4IDChanging(value);
				_ITM4ID = value;
				OnITM4IDChanged();
			}
		}
	}
	private int _ITM4ID;

	partial void OnITM4IDChanging(int newValue);
	partial void OnITM4IDChanged();

    public int PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private int _PlantID;

	partial void OnPlantIDChanging(int newValue);
	partial void OnPlantIDChanged();

    public int StorageLocID 
	{ 
		get
		{
			return _StorageLocID;
		}
		set
		{
			if(_StorageLocID != value)
			{
				OnStorageLocIDChanging(value);
				_StorageLocID = value;
				OnStorageLocIDChanged();
			}
		}
	}
	private int _StorageLocID;

	partial void OnStorageLocIDChanging(int newValue);
	partial void OnStorageLocIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public string SerialNo 
	{ 
		get
		{
			return _SerialNo;
		}
		set
		{
			if(_SerialNo != value)
			{
				OnSerialNoChanging(value);
				_SerialNo = value;
				OnSerialNoChanged();
			}
		}
	}
	private string _SerialNo;

	partial void OnSerialNoChanging(string newValue);
	partial void OnSerialNoChanged();

    public decimal Qty 
	{ 
		get
		{
			return _Qty;
		}
		set
		{
			if(_Qty != value)
			{
				OnQtyChanging(value);
				_Qty = value;
				OnQtyChanged();
			}
		}
	}
	private decimal _Qty;

	partial void OnQtyChanging(decimal newValue);
	partial void OnQtyChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public virtual OITM OITM { get; set; }
    public virtual OPLT OPLT { get; set; }
    public virtual OSTRL OSTRL { get; set; }
    public virtual OUNT OUNT { get; set; }
}

[Serializable]
public partial class ITM5 : ObjectWithState
{

    public int ItemMapID 
	{ 
		get
		{
			return _ItemMapID;
		}
		set
		{
			if(_ItemMapID != value)
			{
				OnItemMapIDChanging(value);
				_ItemMapID = value;
				OnItemMapIDChanged();
			}
		}
	}
	private int _ItemMapID;

	partial void OnItemMapIDChanging(int newValue);
	partial void OnItemMapIDChanged();

    public int PurchaseItemID 
	{ 
		get
		{
			return _PurchaseItemID;
		}
		set
		{
			if(_PurchaseItemID != value)
			{
				OnPurchaseItemIDChanging(value);
				_PurchaseItemID = value;
				OnPurchaseItemIDChanged();
			}
		}
	}
	private int _PurchaseItemID;

	partial void OnPurchaseItemIDChanging(int newValue);
	partial void OnPurchaseItemIDChanged();

    public int SaleItemID 
	{ 
		get
		{
			return _SaleItemID;
		}
		set
		{
			if(_SaleItemID != value)
			{
				OnSaleItemIDChanging(value);
				_SaleItemID = value;
				OnSaleItemIDChanged();
			}
		}
	}
	private int _SaleItemID;

	partial void OnSaleItemIDChanging(int newValue);
	partial void OnSaleItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal MapQty 
	{ 
		get
		{
			return _MapQty;
		}
		set
		{
			if(_MapQty != value)
			{
				OnMapQtyChanging(value);
				_MapQty = value;
				OnMapQtyChanged();
			}
		}
	}
	private decimal _MapQty;

	partial void OnMapQtyChanging(decimal newValue);
	partial void OnMapQtyChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<bool> IsActive 
	{ 
		get
		{
			return _IsActive;
		}
		set
		{
			if(_IsActive != value)
			{
				OnIsActiveChanging(value);
				_IsActive = value;
				OnIsActiveChanged();
			}
		}
	}
	private Nullable<bool> _IsActive;

	partial void OnIsActiveChanging(Nullable<bool> newValue);
	partial void OnIsActiveChanged();
}

[Serializable]
public partial class MCLM1 : ObjectWithState
{

    public int MCLMID 
	{ 
		get
		{
			return _MCLMID;
		}
		set
		{
			if(_MCLMID != value)
			{
				OnMCLMIDChanging(value);
				_MCLMID = value;
				OnMCLMIDChanged();
			}
		}
	}
	private int _MCLMID;

	partial void OnMCLMIDChanging(int newValue);
	partial void OnMCLMIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int MClaimID 
	{ 
		get
		{
			return _MClaimID;
		}
		set
		{
			if(_MClaimID != value)
			{
				OnMClaimIDChanging(value);
				_MClaimID = value;
				OnMClaimIDChanged();
			}
		}
	}
	private int _MClaimID;

	partial void OnMClaimIDChanging(int newValue);
	partial void OnMClaimIDChanged();

    public string AssetCode 
	{ 
		get
		{
			return _AssetCode;
		}
		set
		{
			if(_AssetCode != value)
			{
				OnAssetCodeChanging(value);
				_AssetCode = value;
				OnAssetCodeChanged();
			}
		}
	}
	private string _AssetCode;

	partial void OnAssetCodeChanging(string newValue);
	partial void OnAssetCodeChanged();

    public decimal FromDealerID 
	{ 
		get
		{
			return _FromDealerID;
		}
		set
		{
			if(_FromDealerID != value)
			{
				OnFromDealerIDChanging(value);
				_FromDealerID = value;
				OnFromDealerIDChanged();
			}
		}
	}
	private decimal _FromDealerID;

	partial void OnFromDealerIDChanging(decimal newValue);
	partial void OnFromDealerIDChanged();

    public decimal ToDealerID 
	{ 
		get
		{
			return _ToDealerID;
		}
		set
		{
			if(_ToDealerID != value)
			{
				OnToDealerIDChanging(value);
				_ToDealerID = value;
				OnToDealerIDChanged();
			}
		}
	}
	private decimal _ToDealerID;

	partial void OnToDealerIDChanging(decimal newValue);
	partial void OnToDealerIDChanged();

    public decimal Amount 
	{ 
		get
		{
			return _Amount;
		}
		set
		{
			if(_Amount != value)
			{
				OnAmountChanging(value);
				_Amount = value;
				OnAmountChanged();
			}
		}
	}
	private decimal _Amount;

	partial void OnAmountChanging(decimal newValue);
	partial void OnAmountChanged();

    public virtual OMCLM OMCLM { get; set; }
}

[Serializable]
public partial class MCMP : ObjectWithState
{
    public MCMP() 
    { 
        this.CMP1 = new HashSet<CMP1>();
    }


    public int MCMPID 
	{ 
		get
		{
			return _MCMPID;
		}
		set
		{
			if(_MCMPID != value)
			{
				OnMCMPIDChanging(value);
				_MCMPID = value;
				OnMCMPIDChanged();
			}
		}
	}
	private int _MCMPID;

	partial void OnMCMPIDChanging(int newValue);
	partial void OnMCMPIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int CampaignID 
	{ 
		get
		{
			return _CampaignID;
		}
		set
		{
			if(_CampaignID != value)
			{
				OnCampaignIDChanging(value);
				_CampaignID = value;
				OnCampaignIDChanged();
			}
		}
	}
	private int _CampaignID;

	partial void OnCampaignIDChanging(int newValue);
	partial void OnCampaignIDChanged();

    public string CompanyName 
	{ 
		get
		{
			return _CompanyName;
		}
		set
		{
			if(_CompanyName != value)
			{
				OnCompanyNameChanging(value);
				_CompanyName = value;
				OnCompanyNameChanged();
			}
		}
	}
	private string _CompanyName;

	partial void OnCompanyNameChanging(string newValue);
	partial void OnCompanyNameChanged();

    public string Industry 
	{ 
		get
		{
			return _Industry;
		}
		set
		{
			if(_Industry != value)
			{
				OnIndustryChanging(value);
				_Industry = value;
				OnIndustryChanged();
			}
		}
	}
	private string _Industry;

	partial void OnIndustryChanging(string newValue);
	partial void OnIndustryChanged();

    public string Website 
	{ 
		get
		{
			return _Website;
		}
		set
		{
			if(_Website != value)
			{
				OnWebsiteChanging(value);
				_Website = value;
				OnWebsiteChanged();
			}
		}
	}
	private string _Website;

	partial void OnWebsiteChanging(string newValue);
	partial void OnWebsiteChanged();

    public string Contact_Name 
	{ 
		get
		{
			return _Contact_Name;
		}
		set
		{
			if(_Contact_Name != value)
			{
				OnContact_NameChanging(value);
				_Contact_Name = value;
				OnContact_NameChanged();
			}
		}
	}
	private string _Contact_Name;

	partial void OnContact_NameChanging(string newValue);
	partial void OnContact_NameChanged();

    public string Phone 
	{ 
		get
		{
			return _Phone;
		}
		set
		{
			if(_Phone != value)
			{
				OnPhoneChanging(value);
				_Phone = value;
				OnPhoneChanged();
			}
		}
	}
	private string _Phone;

	partial void OnPhoneChanging(string newValue);
	partial void OnPhoneChanged();

    public string EMail 
	{ 
		get
		{
			return _EMail;
		}
		set
		{
			if(_EMail != value)
			{
				OnEMailChanging(value);
				_EMail = value;
				OnEMailChanged();
			}
		}
	}
	private string _EMail;

	partial void OnEMailChanging(string newValue);
	partial void OnEMailChanged();

    public Nullable<System.DateTime> FollowUpDate 
	{ 
		get
		{
			return _FollowUpDate;
		}
		set
		{
			if(_FollowUpDate != value)
			{
				OnFollowUpDateChanging(value);
				_FollowUpDate = value;
				OnFollowUpDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _FollowUpDate;

	partial void OnFollowUpDateChanging(Nullable<System.DateTime> newValue);
	partial void OnFollowUpDateChanged();

    public Nullable<bool> NewsletterSubscription 
	{ 
		get
		{
			return _NewsletterSubscription;
		}
		set
		{
			if(_NewsletterSubscription != value)
			{
				OnNewsletterSubscriptionChanging(value);
				_NewsletterSubscription = value;
				OnNewsletterSubscriptionChanged();
			}
		}
	}
	private Nullable<bool> _NewsletterSubscription;

	partial void OnNewsletterSubscriptionChanging(Nullable<bool> newValue);
	partial void OnNewsletterSubscriptionChanged();

    public Nullable<decimal> AverageRating 
	{ 
		get
		{
			return _AverageRating;
		}
		set
		{
			if(_AverageRating != value)
			{
				OnAverageRatingChanging(value);
				_AverageRating = value;
				OnAverageRatingChanged();
			}
		}
	}
	private Nullable<decimal> _AverageRating;

	partial void OnAverageRatingChanging(Nullable<decimal> newValue);
	partial void OnAverageRatingChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual OCMP OCMP { get; set; }
    public virtual ICollection<CMP1> CMP1 { get; set; }
}

[Serializable]
public partial class MID1 : ObjectWithState
{

    public int MID1ID 
	{ 
		get
		{
			return _MID1ID;
		}
		set
		{
			if(_MID1ID != value)
			{
				OnMID1IDChanging(value);
				_MID1ID = value;
				OnMID1IDChanged();
			}
		}
	}
	private int _MID1ID;

	partial void OnMID1IDChanging(int newValue);
	partial void OnMID1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int InwardID 
	{ 
		get
		{
			return _InwardID;
		}
		set
		{
			if(_InwardID != value)
			{
				OnInwardIDChanging(value);
				_InwardID = value;
				OnInwardIDChanged();
			}
		}
	}
	private int _InwardID;

	partial void OnInwardIDChanging(int newValue);
	partial void OnInwardIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal Price 
	{ 
		get
		{
			return _Price;
		}
		set
		{
			if(_Price != value)
			{
				OnPriceChanging(value);
				_Price = value;
				OnPriceChanged();
			}
		}
	}
	private decimal _Price;

	partial void OnPriceChanging(decimal newValue);
	partial void OnPriceChanged();

    public decimal PriceTax 
	{ 
		get
		{
			return _PriceTax;
		}
		set
		{
			if(_PriceTax != value)
			{
				OnPriceTaxChanging(value);
				_PriceTax = value;
				OnPriceTaxChanged();
			}
		}
	}
	private decimal _PriceTax;

	partial void OnPriceTaxChanging(decimal newValue);
	partial void OnPriceTaxChanged();

    public Nullable<int> FromWhsID 
	{ 
		get
		{
			return _FromWhsID;
		}
		set
		{
			if(_FromWhsID != value)
			{
				OnFromWhsIDChanging(value);
				_FromWhsID = value;
				OnFromWhsIDChanged();
			}
		}
	}
	private Nullable<int> _FromWhsID;

	partial void OnFromWhsIDChanging(Nullable<int> newValue);
	partial void OnFromWhsIDChanged();

    public decimal AvailableQty 
	{ 
		get
		{
			return _AvailableQty;
		}
		set
		{
			if(_AvailableQty != value)
			{
				OnAvailableQtyChanging(value);
				_AvailableQty = value;
				OnAvailableQtyChanged();
			}
		}
	}
	private decimal _AvailableQty;

	partial void OnAvailableQtyChanging(decimal newValue);
	partial void OnAvailableQtyChanged();

    public decimal RequestQty 
	{ 
		get
		{
			return _RequestQty;
		}
		set
		{
			if(_RequestQty != value)
			{
				OnRequestQtyChanging(value);
				_RequestQty = value;
				OnRequestQtyChanged();
			}
		}
	}
	private decimal _RequestQty;

	partial void OnRequestQtyChanging(decimal newValue);
	partial void OnRequestQtyChanged();

    public decimal DisptchQty 
	{ 
		get
		{
			return _DisptchQty;
		}
		set
		{
			if(_DisptchQty != value)
			{
				OnDisptchQtyChanging(value);
				_DisptchQty = value;
				OnDisptchQtyChanged();
			}
		}
	}
	private decimal _DisptchQty;

	partial void OnDisptchQtyChanging(decimal newValue);
	partial void OnDisptchQtyChanged();

    public decimal RecieptQty 
	{ 
		get
		{
			return _RecieptQty;
		}
		set
		{
			if(_RecieptQty != value)
			{
				OnRecieptQtyChanging(value);
				_RecieptQty = value;
				OnRecieptQtyChanged();
			}
		}
	}
	private decimal _RecieptQty;

	partial void OnRecieptQtyChanging(decimal newValue);
	partial void OnRecieptQtyChanged();

    public decimal DiffirenceQty 
	{ 
		get
		{
			return _DiffirenceQty;
		}
		set
		{
			if(_DiffirenceQty != value)
			{
				OnDiffirenceQtyChanging(value);
				_DiffirenceQty = value;
				OnDiffirenceQtyChanged();
			}
		}
	}
	private decimal _DiffirenceQty;

	partial void OnDiffirenceQtyChanging(decimal newValue);
	partial void OnDiffirenceQtyChanged();

    public decimal MapQty 
	{ 
		get
		{
			return _MapQty;
		}
		set
		{
			if(_MapQty != value)
			{
				OnMapQtyChanging(value);
				_MapQty = value;
				OnMapQtyChanged();
			}
		}
	}
	private decimal _MapQty;

	partial void OnMapQtyChanging(decimal newValue);
	partial void OnMapQtyChanged();

    public decimal TotalQty 
	{ 
		get
		{
			return _TotalQty;
		}
		set
		{
			if(_TotalQty != value)
			{
				OnTotalQtyChanging(value);
				_TotalQty = value;
				OnTotalQtyChanged();
			}
		}
	}
	private decimal _TotalQty;

	partial void OnTotalQtyChanging(decimal newValue);
	partial void OnTotalQtyChanged();

    public decimal SubTotal 
	{ 
		get
		{
			return _SubTotal;
		}
		set
		{
			if(_SubTotal != value)
			{
				OnSubTotalChanging(value);
				_SubTotal = value;
				OnSubTotalChanged();
			}
		}
	}
	private decimal _SubTotal;

	partial void OnSubTotalChanging(decimal newValue);
	partial void OnSubTotalChanged();

    public decimal Tax 
	{ 
		get
		{
			return _Tax;
		}
		set
		{
			if(_Tax != value)
			{
				OnTaxChanging(value);
				_Tax = value;
				OnTaxChanged();
			}
		}
	}
	private decimal _Tax;

	partial void OnTaxChanging(decimal newValue);
	partial void OnTaxChanged();

    public decimal Total 
	{ 
		get
		{
			return _Total;
		}
		set
		{
			if(_Total != value)
			{
				OnTotalChanging(value);
				_Total = value;
				OnTotalChanged();
			}
		}
	}
	private decimal _Total;

	partial void OnTotalChanging(decimal newValue);
	partial void OnTotalChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsFree 
	{ 
		get
		{
			return _IsFree;
		}
		set
		{
			if(_IsFree != value)
			{
				OnIsFreeChanging(value);
				_IsFree = value;
				OnIsFreeChanged();
			}
		}
	}
	private bool _IsFree;

	partial void OnIsFreeChanging(bool newValue);
	partial void OnIsFreeChanged();

    public decimal Discount 
	{ 
		get
		{
			return _Discount;
		}
		set
		{
			if(_Discount != value)
			{
				OnDiscountChanging(value);
				_Discount = value;
				OnDiscountChanged();
			}
		}
	}
	private decimal _Discount;

	partial void OnDiscountChanging(decimal newValue);
	partial void OnDiscountChanged();

    public Nullable<int> ReasonID 
	{ 
		get
		{
			return _ReasonID;
		}
		set
		{
			if(_ReasonID != value)
			{
				OnReasonIDChanging(value);
				_ReasonID = value;
				OnReasonIDChanged();
			}
		}
	}
	private Nullable<int> _ReasonID;

	partial void OnReasonIDChanging(Nullable<int> newValue);
	partial void OnReasonIDChanged();

    public Nullable<int> TaxID 
	{ 
		get
		{
			return _TaxID;
		}
		set
		{
			if(_TaxID != value)
			{
				OnTaxIDChanging(value);
				_TaxID = value;
				OnTaxIDChanged();
			}
		}
	}
	private Nullable<int> _TaxID;

	partial void OnTaxIDChanging(Nullable<int> newValue);
	partial void OnTaxIDChanged();

    public string RANKNO 
	{ 
		get
		{
			return _RANKNO;
		}
		set
		{
			if(_RANKNO != value)
			{
				OnRANKNOChanging(value);
				_RANKNO = value;
				OnRANKNOChanged();
			}
		}
	}
	private string _RANKNO;

	partial void OnRANKNOChanging(string newValue);
	partial void OnRANKNOChanged();

    public decimal UnitPrice 
	{ 
		get
		{
			return _UnitPrice;
		}
		set
		{
			if(_UnitPrice != value)
			{
				OnUnitPriceChanging(value);
				_UnitPrice = value;
				OnUnitPriceChanged();
			}
		}
	}
	private decimal _UnitPrice;

	partial void OnUnitPriceChanging(decimal newValue);
	partial void OnUnitPriceChanged();

    public virtual OITM OITM { get; set; }
    public virtual OMID OMID { get; set; }
    public virtual ORSN ORSN { get; set; }
    public virtual OUNT OUNT { get; set; }
}

[Serializable]
public partial class MID2 : ObjectWithState
{

    public int MID2ID 
	{ 
		get
		{
			return _MID2ID;
		}
		set
		{
			if(_MID2ID != value)
			{
				OnMID2IDChanging(value);
				_MID2ID = value;
				OnMID2IDChanged();
			}
		}
	}
	private int _MID2ID;

	partial void OnMID2IDChanging(int newValue);
	partial void OnMID2IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public System.DateTime Date 
	{ 
		get
		{
			return _Date;
		}
		set
		{
			if(_Date != value)
			{
				OnDateChanging(value);
				_Date = value;
				OnDateChanged();
			}
		}
	}
	private System.DateTime _Date;

	partial void OnDateChanging(System.DateTime newValue);
	partial void OnDateChanged();

    public int InwardID 
	{ 
		get
		{
			return _InwardID;
		}
		set
		{
			if(_InwardID != value)
			{
				OnInwardIDChanging(value);
				_InwardID = value;
				OnInwardIDChanged();
			}
		}
	}
	private int _InwardID;

	partial void OnInwardIDChanging(int newValue);
	partial void OnInwardIDChanged();

    public int PaymentMode 
	{ 
		get
		{
			return _PaymentMode;
		}
		set
		{
			if(_PaymentMode != value)
			{
				OnPaymentModeChanging(value);
				_PaymentMode = value;
				OnPaymentModeChanged();
			}
		}
	}
	private int _PaymentMode;

	partial void OnPaymentModeChanging(int newValue);
	partial void OnPaymentModeChanged();

    public string DocName 
	{ 
		get
		{
			return _DocName;
		}
		set
		{
			if(_DocName != value)
			{
				OnDocNameChanging(value);
				_DocName = value;
				OnDocNameChanged();
			}
		}
	}
	private string _DocName;

	partial void OnDocNameChanging(string newValue);
	partial void OnDocNameChanged();

    public string DocNo 
	{ 
		get
		{
			return _DocNo;
		}
		set
		{
			if(_DocNo != value)
			{
				OnDocNoChanging(value);
				_DocNo = value;
				OnDocNoChanged();
			}
		}
	}
	private string _DocNo;

	partial void OnDocNoChanging(string newValue);
	partial void OnDocNoChanged();

    public decimal Amount 
	{ 
		get
		{
			return _Amount;
		}
		set
		{
			if(_Amount != value)
			{
				OnAmountChanging(value);
				_Amount = value;
				OnAmountChanged();
			}
		}
	}
	private decimal _Amount;

	partial void OnAmountChanging(decimal newValue);
	partial void OnAmountChanged();

    public string Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private string _Status;

	partial void OnStatusChanging(string newValue);
	partial void OnStatusChanged();

    public Nullable<System.DateTime> DepositDate 
	{ 
		get
		{
			return _DepositDate;
		}
		set
		{
			if(_DepositDate != value)
			{
				OnDepositDateChanging(value);
				_DepositDate = value;
				OnDepositDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _DepositDate;

	partial void OnDepositDateChanging(Nullable<System.DateTime> newValue);
	partial void OnDepositDateChanged();

    public Nullable<System.DateTime> ReconcileDate 
	{ 
		get
		{
			return _ReconcileDate;
		}
		set
		{
			if(_ReconcileDate != value)
			{
				OnReconcileDateChanging(value);
				_ReconcileDate = value;
				OnReconcileDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ReconcileDate;

	partial void OnReconcileDateChanging(Nullable<System.DateTime> newValue);
	partial void OnReconcileDateChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public string Attachment 
	{ 
		get
		{
			return _Attachment;
		}
		set
		{
			if(_Attachment != value)
			{
				OnAttachmentChanging(value);
				_Attachment = value;
				OnAttachmentChanged();
			}
		}
	}
	private string _Attachment;

	partial void OnAttachmentChanging(string newValue);
	partial void OnAttachmentChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<int> PaymentID 
	{ 
		get
		{
			return _PaymentID;
		}
		set
		{
			if(_PaymentID != value)
			{
				OnPaymentIDChanging(value);
				_PaymentID = value;
				OnPaymentIDChanged();
			}
		}
	}
	private Nullable<int> _PaymentID;

	partial void OnPaymentIDChanging(Nullable<int> newValue);
	partial void OnPaymentIDChanged();

    public virtual OMID OMID { get; set; }
    public virtual OPYM OPYM { get; set; }
}

[Serializable]
public partial class MIT1 : ObjectWithState
{

    public int MIT1ID 
	{ 
		get
		{
			return _MIT1ID;
		}
		set
		{
			if(_MIT1ID != value)
			{
				OnMIT1IDChanging(value);
				_MIT1ID = value;
				OnMIT1IDChanged();
			}
		}
	}
	private int _MIT1ID;

	partial void OnMIT1IDChanging(int newValue);
	partial void OnMIT1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int OMITID 
	{ 
		get
		{
			return _OMITID;
		}
		set
		{
			if(_OMITID != value)
			{
				OnOMITIDChanging(value);
				_OMITID = value;
				OnOMITIDChanged();
			}
		}
	}
	private int _OMITID;

	partial void OnOMITIDChanging(int newValue);
	partial void OnOMITIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal AvailableQty 
	{ 
		get
		{
			return _AvailableQty;
		}
		set
		{
			if(_AvailableQty != value)
			{
				OnAvailableQtyChanging(value);
				_AvailableQty = value;
				OnAvailableQtyChanged();
			}
		}
	}
	private decimal _AvailableQty;

	partial void OnAvailableQtyChanging(decimal newValue);
	partial void OnAvailableQtyChanged();

    public decimal Price 
	{ 
		get
		{
			return _Price;
		}
		set
		{
			if(_Price != value)
			{
				OnPriceChanging(value);
				_Price = value;
				OnPriceChanged();
			}
		}
	}
	private decimal _Price;

	partial void OnPriceChanging(decimal newValue);
	partial void OnPriceChanged();

    public decimal Quantity 
	{ 
		get
		{
			return _Quantity;
		}
		set
		{
			if(_Quantity != value)
			{
				OnQuantityChanging(value);
				_Quantity = value;
				OnQuantityChanged();
			}
		}
	}
	private decimal _Quantity;

	partial void OnQuantityChanging(decimal newValue);
	partial void OnQuantityChanged();

    public decimal TotalQty 
	{ 
		get
		{
			return _TotalQty;
		}
		set
		{
			if(_TotalQty != value)
			{
				OnTotalQtyChanging(value);
				_TotalQty = value;
				OnTotalQtyChanged();
			}
		}
	}
	private decimal _TotalQty;

	partial void OnTotalQtyChanging(decimal newValue);
	partial void OnTotalQtyChanged();

    public decimal Subtotal 
	{ 
		get
		{
			return _Subtotal;
		}
		set
		{
			if(_Subtotal != value)
			{
				OnSubtotalChanging(value);
				_Subtotal = value;
				OnSubtotalChanged();
			}
		}
	}
	private decimal _Subtotal;

	partial void OnSubtotalChanging(decimal newValue);
	partial void OnSubtotalChanged();

    public decimal Tax 
	{ 
		get
		{
			return _Tax;
		}
		set
		{
			if(_Tax != value)
			{
				OnTaxChanging(value);
				_Tax = value;
				OnTaxChanged();
			}
		}
	}
	private decimal _Tax;

	partial void OnTaxChanging(decimal newValue);
	partial void OnTaxChanged();

    public decimal Total 
	{ 
		get
		{
			return _Total;
		}
		set
		{
			if(_Total != value)
			{
				OnTotalChanging(value);
				_Total = value;
				OnTotalChanged();
			}
		}
	}
	private decimal _Total;

	partial void OnTotalChanging(decimal newValue);
	partial void OnTotalChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string Reason 
	{ 
		get
		{
			return _Reason;
		}
		set
		{
			if(_Reason != value)
			{
				OnReasonChanging(value);
				_Reason = value;
				OnReasonChanged();
			}
		}
	}
	private string _Reason;

	partial void OnReasonChanging(string newValue);
	partial void OnReasonChanged();

    public virtual OITM OITM { get; set; }
    public virtual OMIT OMIT { get; set; }
    public virtual OUNT OUNT { get; set; }
}

[Serializable]
public partial class MJET : ObjectWithState
{

    public int MJETID 
	{ 
		get
		{
			return _MJETID;
		}
		set
		{
			if(_MJETID != value)
			{
				OnMJETIDChanging(value);
				_MJETID = value;
				OnMJETIDChanged();
			}
		}
	}
	private int _MJETID;

	partial void OnMJETIDChanging(int newValue);
	partial void OnMJETIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public System.DateTime Date 
	{ 
		get
		{
			return _Date;
		}
		set
		{
			if(_Date != value)
			{
				OnDateChanging(value);
				_Date = value;
				OnDateChanged();
			}
		}
	}
	private System.DateTime _Date;

	partial void OnDateChanging(System.DateTime newValue);
	partial void OnDateChanged();

    public string Reason 
	{ 
		get
		{
			return _Reason;
		}
		set
		{
			if(_Reason != value)
			{
				OnReasonChanging(value);
				_Reason = value;
				OnReasonChanged();
			}
		}
	}
	private string _Reason;

	partial void OnReasonChanging(string newValue);
	partial void OnReasonChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();
}

[Serializable]
public partial class MOAE1 : ObjectWithState
{
    public MOAE1() 
    { 
        this.MOAE3 = new HashSet<MOAE3>();
    }


    public int MOAE1ID 
	{ 
		get
		{
			return _MOAE1ID;
		}
		set
		{
			if(_MOAE1ID != value)
			{
				OnMOAE1IDChanging(value);
				_MOAE1ID = value;
				OnMOAE1IDChanged();
			}
		}
	}
	private int _MOAE1ID;

	partial void OnMOAE1IDChanging(int newValue);
	partial void OnMOAE1IDChanged();

    public int MiniOrderEnteryID 
	{ 
		get
		{
			return _MiniOrderEnteryID;
		}
		set
		{
			if(_MiniOrderEnteryID != value)
			{
				OnMiniOrderEnteryIDChanging(value);
				_MiniOrderEnteryID = value;
				OnMiniOrderEnteryIDChanged();
			}
		}
	}
	private int _MiniOrderEnteryID;

	partial void OnMiniOrderEnteryIDChanging(int newValue);
	partial void OnMiniOrderEnteryIDChanged();

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public Nullable<int> RegionID 
	{ 
		get
		{
			return _RegionID;
		}
		set
		{
			if(_RegionID != value)
			{
				OnRegionIDChanging(value);
				_RegionID = value;
				OnRegionIDChanged();
			}
		}
	}
	private Nullable<int> _RegionID;

	partial void OnRegionIDChanging(Nullable<int> newValue);
	partial void OnRegionIDChanged();

    public Nullable<decimal> DistributorID 
	{ 
		get
		{
			return _DistributorID;
		}
		set
		{
			if(_DistributorID != value)
			{
				OnDistributorIDChanging(value);
				_DistributorID = value;
				OnDistributorIDChanged();
			}
		}
	}
	private Nullable<decimal> _DistributorID;

	partial void OnDistributorIDChanging(Nullable<decimal> newValue);
	partial void OnDistributorIDChanged();

    public Nullable<int> CustGroupID 
	{ 
		get
		{
			return _CustGroupID;
		}
		set
		{
			if(_CustGroupID != value)
			{
				OnCustGroupIDChanging(value);
				_CustGroupID = value;
				OnCustGroupIDChanged();
			}
		}
	}
	private Nullable<int> _CustGroupID;

	partial void OnCustGroupIDChanging(Nullable<int> newValue);
	partial void OnCustGroupIDChanged();

    public Nullable<decimal> DealerID 
	{ 
		get
		{
			return _DealerID;
		}
		set
		{
			if(_DealerID != value)
			{
				OnDealerIDChanging(value);
				_DealerID = value;
				OnDealerIDChanged();
			}
		}
	}
	private Nullable<decimal> _DealerID;

	partial void OnDealerIDChanging(Nullable<decimal> newValue);
	partial void OnDealerIDChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsInclude 
	{ 
		get
		{
			return _IsInclude;
		}
		set
		{
			if(_IsInclude != value)
			{
				OnIsIncludeChanging(value);
				_IsInclude = value;
				OnIsIncludeChanged();
			}
		}
	}
	private bool _IsInclude;

	partial void OnIsIncludeChanging(bool newValue);
	partial void OnIsIncludeChanged();

    public Nullable<decimal> ParentCode 
	{ 
		get
		{
			return _ParentCode;
		}
		set
		{
			if(_ParentCode != value)
			{
				OnParentCodeChanging(value);
				_ParentCode = value;
				OnParentCodeChanged();
			}
		}
	}
	private Nullable<decimal> _ParentCode;

	partial void OnParentCodeChanging(Nullable<decimal> newValue);
	partial void OnParentCodeChanged();

    public virtual OMOAE OMOAE { get; set; }
    public virtual ICollection<MOAE3> MOAE3 { get; set; }
}

[Serializable]
public partial class MOAE2 : ObjectWithState
{

    public int MOAE2ID 
	{ 
		get
		{
			return _MOAE2ID;
		}
		set
		{
			if(_MOAE2ID != value)
			{
				OnMOAE2IDChanging(value);
				_MOAE2ID = value;
				OnMOAE2IDChanged();
			}
		}
	}
	private int _MOAE2ID;

	partial void OnMOAE2IDChanging(int newValue);
	partial void OnMOAE2IDChanged();

    public int MiniOrderEnteryID 
	{ 
		get
		{
			return _MiniOrderEnteryID;
		}
		set
		{
			if(_MiniOrderEnteryID != value)
			{
				OnMiniOrderEnteryIDChanging(value);
				_MiniOrderEnteryID = value;
				OnMiniOrderEnteryIDChanged();
			}
		}
	}
	private int _MiniOrderEnteryID;

	partial void OnMiniOrderEnteryIDChanging(int newValue);
	partial void OnMiniOrderEnteryIDChanged();

    public bool IsInclude 
	{ 
		get
		{
			return _IsInclude;
		}
		set
		{
			if(_IsInclude != value)
			{
				OnIsIncludeChanging(value);
				_IsInclude = value;
				OnIsIncludeChanged();
			}
		}
	}
	private bool _IsInclude;

	partial void OnIsIncludeChanging(bool newValue);
	partial void OnIsIncludeChanged();

    public Nullable<int> DivisionID 
	{ 
		get
		{
			return _DivisionID;
		}
		set
		{
			if(_DivisionID != value)
			{
				OnDivisionIDChanging(value);
				_DivisionID = value;
				OnDivisionIDChanged();
			}
		}
	}
	private Nullable<int> _DivisionID;

	partial void OnDivisionIDChanging(Nullable<int> newValue);
	partial void OnDivisionIDChanged();

    public virtual OMOAE OMOAE { get; set; }
}

[Serializable]
public partial class MOAE3 : ObjectWithState
{

    public int MOAE3ID 
	{ 
		get
		{
			return _MOAE3ID;
		}
		set
		{
			if(_MOAE3ID != value)
			{
				OnMOAE3IDChanging(value);
				_MOAE3ID = value;
				OnMOAE3IDChanged();
			}
		}
	}
	private int _MOAE3ID;

	partial void OnMOAE3IDChanging(int newValue);
	partial void OnMOAE3IDChanged();

    public int MiniOrderEnteryID 
	{ 
		get
		{
			return _MiniOrderEnteryID;
		}
		set
		{
			if(_MiniOrderEnteryID != value)
			{
				OnMiniOrderEnteryIDChanging(value);
				_MiniOrderEnteryID = value;
				OnMiniOrderEnteryIDChanged();
			}
		}
	}
	private int _MiniOrderEnteryID;

	partial void OnMiniOrderEnteryIDChanging(int newValue);
	partial void OnMiniOrderEnteryIDChanged();

    public decimal Price 
	{ 
		get
		{
			return _Price;
		}
		set
		{
			if(_Price != value)
			{
				OnPriceChanging(value);
				_Price = value;
				OnPriceChanged();
			}
		}
	}
	private decimal _Price;

	partial void OnPriceChanging(decimal newValue);
	partial void OnPriceChanged();

    public Nullable<int> MOAE1ID 
	{ 
		get
		{
			return _MOAE1ID;
		}
		set
		{
			if(_MOAE1ID != value)
			{
				OnMOAE1IDChanging(value);
				_MOAE1ID = value;
				OnMOAE1IDChanged();
			}
		}
	}
	private Nullable<int> _MOAE1ID;

	partial void OnMOAE1IDChanging(Nullable<int> newValue);
	partial void OnMOAE1IDChanged();

    public virtual OMOAE OMOAE { get; set; }
    public virtual MOAE1 MOAE1 { get; set; }
}

[Serializable]
public partial class MSG1 : ObjectWithState
{

    public int MSG1ID 
	{ 
		get
		{
			return _MSG1ID;
		}
		set
		{
			if(_MSG1ID != value)
			{
				OnMSG1IDChanging(value);
				_MSG1ID = value;
				OnMSG1IDChanged();
			}
		}
	}
	private int _MSG1ID;

	partial void OnMSG1IDChanging(int newValue);
	partial void OnMSG1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int MessageID 
	{ 
		get
		{
			return _MessageID;
		}
		set
		{
			if(_MessageID != value)
			{
				OnMessageIDChanging(value);
				_MessageID = value;
				OnMessageIDChanged();
			}
		}
	}
	private int _MessageID;

	partial void OnMessageIDChanging(int newValue);
	partial void OnMessageIDChanged();

    public string ApplicableFor 
	{ 
		get
		{
			return _ApplicableFor;
		}
		set
		{
			if(_ApplicableFor != value)
			{
				OnApplicableForChanging(value);
				_ApplicableFor = value;
				OnApplicableForChanged();
			}
		}
	}
	private string _ApplicableFor;

	partial void OnApplicableForChanging(string newValue);
	partial void OnApplicableForChanged();

    public Nullable<int> RegionID 
	{ 
		get
		{
			return _RegionID;
		}
		set
		{
			if(_RegionID != value)
			{
				OnRegionIDChanging(value);
				_RegionID = value;
				OnRegionIDChanged();
			}
		}
	}
	private Nullable<int> _RegionID;

	partial void OnRegionIDChanging(Nullable<int> newValue);
	partial void OnRegionIDChanged();

    public Nullable<int> HierarchyEmpID 
	{ 
		get
		{
			return _HierarchyEmpID;
		}
		set
		{
			if(_HierarchyEmpID != value)
			{
				OnHierarchyEmpIDChanging(value);
				_HierarchyEmpID = value;
				OnHierarchyEmpIDChanged();
			}
		}
	}
	private Nullable<int> _HierarchyEmpID;

	partial void OnHierarchyEmpIDChanging(Nullable<int> newValue);
	partial void OnHierarchyEmpIDChanged();

    public Nullable<int> GroupID 
	{ 
		get
		{
			return _GroupID;
		}
		set
		{
			if(_GroupID != value)
			{
				OnGroupIDChanging(value);
				_GroupID = value;
				OnGroupIDChanged();
			}
		}
	}
	private Nullable<int> _GroupID;

	partial void OnGroupIDChanging(Nullable<int> newValue);
	partial void OnGroupIDChanged();

    public Nullable<decimal> UserID 
	{ 
		get
		{
			return _UserID;
		}
		set
		{
			if(_UserID != value)
			{
				OnUserIDChanging(value);
				_UserID = value;
				OnUserIDChanged();
			}
		}
	}
	private Nullable<decimal> _UserID;

	partial void OnUserIDChanging(Nullable<decimal> newValue);
	partial void OnUserIDChanged();

    public Nullable<int> UserType 
	{ 
		get
		{
			return _UserType;
		}
		set
		{
			if(_UserType != value)
			{
				OnUserTypeChanging(value);
				_UserType = value;
				OnUserTypeChanged();
			}
		}
	}
	private Nullable<int> _UserType;

	partial void OnUserTypeChanging(Nullable<int> newValue);
	partial void OnUserTypeChanged();

    public bool IsInclude 
	{ 
		get
		{
			return _IsInclude;
		}
		set
		{
			if(_IsInclude != value)
			{
				OnIsIncludeChanging(value);
				_IsInclude = value;
				OnIsIncludeChanged();
			}
		}
	}
	private bool _IsInclude;

	partial void OnIsIncludeChanging(bool newValue);
	partial void OnIsIncludeChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual OMSG OMSG { get; set; }
}

[Serializable]
public partial class MSTCF : ObjectWithState
{

    public int AssetConfirmID 
	{ 
		get
		{
			return _AssetConfirmID;
		}
		set
		{
			if(_AssetConfirmID != value)
			{
				OnAssetConfirmIDChanging(value);
				_AssetConfirmID = value;
				OnAssetConfirmIDChanged();
			}
		}
	}
	private int _AssetConfirmID;

	partial void OnAssetConfirmIDChanging(int newValue);
	partial void OnAssetConfirmIDChanged();

    public Nullable<int> AssetID 
	{ 
		get
		{
			return _AssetID;
		}
		set
		{
			if(_AssetID != value)
			{
				OnAssetIDChanging(value);
				_AssetID = value;
				OnAssetIDChanged();
			}
		}
	}
	private Nullable<int> _AssetID;

	partial void OnAssetIDChanging(Nullable<int> newValue);
	partial void OnAssetIDChanged();

    public Nullable<int> AssetTransferID 
	{ 
		get
		{
			return _AssetTransferID;
		}
		set
		{
			if(_AssetTransferID != value)
			{
				OnAssetTransferIDChanging(value);
				_AssetTransferID = value;
				OnAssetTransferIDChanged();
			}
		}
	}
	private Nullable<int> _AssetTransferID;

	partial void OnAssetTransferIDChanging(Nullable<int> newValue);
	partial void OnAssetTransferIDChanged();

    public Nullable<System.DateTime> ConfirmDate 
	{ 
		get
		{
			return _ConfirmDate;
		}
		set
		{
			if(_ConfirmDate != value)
			{
				OnConfirmDateChanging(value);
				_ConfirmDate = value;
				OnConfirmDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ConfirmDate;

	partial void OnConfirmDateChanging(Nullable<System.DateTime> newValue);
	partial void OnConfirmDateChanged();

    public string ConfirmTime 
	{ 
		get
		{
			return _ConfirmTime;
		}
		set
		{
			if(_ConfirmTime != value)
			{
				OnConfirmTimeChanging(value);
				_ConfirmTime = value;
				OnConfirmTimeChanged();
			}
		}
	}
	private string _ConfirmTime;

	partial void OnConfirmTimeChanging(string newValue);
	partial void OnConfirmTimeChanged();

    public Nullable<int> ConfirmConditionID 
	{ 
		get
		{
			return _ConfirmConditionID;
		}
		set
		{
			if(_ConfirmConditionID != value)
			{
				OnConfirmConditionIDChanging(value);
				_ConfirmConditionID = value;
				OnConfirmConditionIDChanged();
			}
		}
	}
	private Nullable<int> _ConfirmConditionID;

	partial void OnConfirmConditionIDChanging(Nullable<int> newValue);
	partial void OnConfirmConditionIDChanged();

    public Nullable<int> ConfirmStatusID 
	{ 
		get
		{
			return _ConfirmStatusID;
		}
		set
		{
			if(_ConfirmStatusID != value)
			{
				OnConfirmStatusIDChanging(value);
				_ConfirmStatusID = value;
				OnConfirmStatusIDChanged();
			}
		}
	}
	private Nullable<int> _ConfirmStatusID;

	partial void OnConfirmStatusIDChanging(Nullable<int> newValue);
	partial void OnConfirmStatusIDChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public string AttachFileName 
	{ 
		get
		{
			return _AttachFileName;
		}
		set
		{
			if(_AttachFileName != value)
			{
				OnAttachFileNameChanging(value);
				_AttachFileName = value;
				OnAttachFileNameChanged();
			}
		}
	}
	private string _AttachFileName;

	partial void OnAttachFileNameChanging(string newValue);
	partial void OnAttachFileNameChanged();

    public Nullable<decimal> ConfirmCustomerID 
	{ 
		get
		{
			return _ConfirmCustomerID;
		}
		set
		{
			if(_ConfirmCustomerID != value)
			{
				OnConfirmCustomerIDChanging(value);
				_ConfirmCustomerID = value;
				OnConfirmCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _ConfirmCustomerID;

	partial void OnConfirmCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnConfirmCustomerIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual OASTC OASTC { get; set; }
    public virtual OASTF OASTF { get; set; }
    public virtual OASTU OASTU { get; set; }
    public virtual OCRD OCRD { get; set; }
    public virtual OAST OAST { get; set; }
}

[Serializable]
public partial class NITM : ObjectWithState
{

    public int NotifyId 
	{ 
		get
		{
			return _NotifyId;
		}
		set
		{
			if(_NotifyId != value)
			{
				OnNotifyIdChanging(value);
				_NotifyId = value;
				OnNotifyIdChanged();
			}
		}
	}
	private int _NotifyId;

	partial void OnNotifyIdChanging(int newValue);
	partial void OnNotifyIdChanged();

    public Nullable<int> ItemId 
	{ 
		get
		{
			return _ItemId;
		}
		set
		{
			if(_ItemId != value)
			{
				OnItemIdChanging(value);
				_ItemId = value;
				OnItemIdChanged();
			}
		}
	}
	private Nullable<int> _ItemId;

	partial void OnItemIdChanging(Nullable<int> newValue);
	partial void OnItemIdChanged();

    public Nullable<decimal> CustomerId 
	{ 
		get
		{
			return _CustomerId;
		}
		set
		{
			if(_CustomerId != value)
			{
				OnCustomerIdChanging(value);
				_CustomerId = value;
				OnCustomerIdChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerId;

	partial void OnCustomerIdChanging(Nullable<decimal> newValue);
	partial void OnCustomerIdChanged();

    public Nullable<System.DateTime> CreatedDateTime 
	{ 
		get
		{
			return _CreatedDateTime;
		}
		set
		{
			if(_CreatedDateTime != value)
			{
				OnCreatedDateTimeChanging(value);
				_CreatedDateTime = value;
				OnCreatedDateTimeChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDateTime;

	partial void OnCreatedDateTimeChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateTimeChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public Nullable<int> UpdateBy 
	{ 
		get
		{
			return _UpdateBy;
		}
		set
		{
			if(_UpdateBy != value)
			{
				OnUpdateByChanging(value);
				_UpdateBy = value;
				OnUpdateByChanged();
			}
		}
	}
	private Nullable<int> _UpdateBy;

	partial void OnUpdateByChanging(Nullable<int> newValue);
	partial void OnUpdateByChanged();

    public Nullable<System.DateTime> UpdatedDateTime 
	{ 
		get
		{
			return _UpdatedDateTime;
		}
		set
		{
			if(_UpdatedDateTime != value)
			{
				OnUpdatedDateTimeChanging(value);
				_UpdatedDateTime = value;
				OnUpdatedDateTimeChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDateTime;

	partial void OnUpdatedDateTimeChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateTimeChanged();
}

[Serializable]
public partial class NRT1 : ObjectWithState
{

    public int NRT1ID 
	{ 
		get
		{
			return _NRT1ID;
		}
		set
		{
			if(_NRT1ID != value)
			{
				OnNRT1IDChanging(value);
				_NRT1ID = value;
				OnNRT1IDChanged();
			}
		}
	}
	private int _NRT1ID;

	partial void OnNRT1IDChanging(int newValue);
	partial void OnNRT1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int INRTID 
	{ 
		get
		{
			return _INRTID;
		}
		set
		{
			if(_INRTID != value)
			{
				OnINRTIDChanging(value);
				_INRTID = value;
				OnINRTIDChanged();
			}
		}
	}
	private int _INRTID;

	partial void OnINRTIDChanging(int newValue);
	partial void OnINRTIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal AvalQty 
	{ 
		get
		{
			return _AvalQty;
		}
		set
		{
			if(_AvalQty != value)
			{
				OnAvalQtyChanging(value);
				_AvalQty = value;
				OnAvalQtyChanged();
			}
		}
	}
	private decimal _AvalQty;

	partial void OnAvalQtyChanging(decimal newValue);
	partial void OnAvalQtyChanged();

    public decimal Qty 
	{ 
		get
		{
			return _Qty;
		}
		set
		{
			if(_Qty != value)
			{
				OnQtyChanging(value);
				_Qty = value;
				OnQtyChanged();
			}
		}
	}
	private decimal _Qty;

	partial void OnQtyChanging(decimal newValue);
	partial void OnQtyChanged();

    public decimal TotalQty 
	{ 
		get
		{
			return _TotalQty;
		}
		set
		{
			if(_TotalQty != value)
			{
				OnTotalQtyChanging(value);
				_TotalQty = value;
				OnTotalQtyChanged();
			}
		}
	}
	private decimal _TotalQty;

	partial void OnTotalQtyChanging(decimal newValue);
	partial void OnTotalQtyChanged();

    public Nullable<int> ReasonID 
	{ 
		get
		{
			return _ReasonID;
		}
		set
		{
			if(_ReasonID != value)
			{
				OnReasonIDChanging(value);
				_ReasonID = value;
				OnReasonIDChanged();
			}
		}
	}
	private Nullable<int> _ReasonID;

	partial void OnReasonIDChanging(Nullable<int> newValue);
	partial void OnReasonIDChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string TranType 
	{ 
		get
		{
			return _TranType;
		}
		set
		{
			if(_TranType != value)
			{
				OnTranTypeChanging(value);
				_TranType = value;
				OnTranTypeChanged();
			}
		}
	}
	private string _TranType;

	partial void OnTranTypeChanging(string newValue);
	partial void OnTranTypeChanged();

    public Nullable<int> SAPGIRDocEntry 
	{ 
		get
		{
			return _SAPGIRDocEntry;
		}
		set
		{
			if(_SAPGIRDocEntry != value)
			{
				OnSAPGIRDocEntryChanging(value);
				_SAPGIRDocEntry = value;
				OnSAPGIRDocEntryChanged();
			}
		}
	}
	private Nullable<int> _SAPGIRDocEntry;

	partial void OnSAPGIRDocEntryChanging(Nullable<int> newValue);
	partial void OnSAPGIRDocEntryChanged();

    public string SAPErrMsg 
	{ 
		get
		{
			return _SAPErrMsg;
		}
		set
		{
			if(_SAPErrMsg != value)
			{
				OnSAPErrMsgChanging(value);
				_SAPErrMsg = value;
				OnSAPErrMsgChanged();
			}
		}
	}
	private string _SAPErrMsg;

	partial void OnSAPErrMsgChanging(string newValue);
	partial void OnSAPErrMsgChanged();

    public decimal Price 
	{ 
		get
		{
			return _Price;
		}
		set
		{
			if(_Price != value)
			{
				OnPriceChanging(value);
				_Price = value;
				OnPriceChanged();
			}
		}
	}
	private decimal _Price;

	partial void OnPriceChanging(decimal newValue);
	partial void OnPriceChanged();

    public decimal Total 
	{ 
		get
		{
			return _Total;
		}
		set
		{
			if(_Total != value)
			{
				OnTotalChanging(value);
				_Total = value;
				OnTotalChanged();
			}
		}
	}
	private decimal _Total;

	partial void OnTotalChanging(decimal newValue);
	partial void OnTotalChanged();

    public virtual INRT INRT { get; set; }
    public virtual OITM OITM { get; set; }
    public virtual ORSN ORSN { get; set; }
    public virtual OUNT OUNT { get; set; }
}

[Serializable]
public partial class NTF1 : ObjectWithState
{

    public int NTF1ID 
	{ 
		get
		{
			return _NTF1ID;
		}
		set
		{
			if(_NTF1ID != value)
			{
				OnNTF1IDChanging(value);
				_NTF1ID = value;
				OnNTF1IDChanged();
			}
		}
	}
	private int _NTF1ID;

	partial void OnNTF1IDChanging(int newValue);
	partial void OnNTF1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int INTFID 
	{ 
		get
		{
			return _INTFID;
		}
		set
		{
			if(_INTFID != value)
			{
				OnINTFIDChanging(value);
				_INTFID = value;
				OnINTFIDChanged();
			}
		}
	}
	private int _INTFID;

	partial void OnINTFIDChanging(int newValue);
	partial void OnINTFIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal AvalQty 
	{ 
		get
		{
			return _AvalQty;
		}
		set
		{
			if(_AvalQty != value)
			{
				OnAvalQtyChanging(value);
				_AvalQty = value;
				OnAvalQtyChanged();
			}
		}
	}
	private decimal _AvalQty;

	partial void OnAvalQtyChanging(decimal newValue);
	partial void OnAvalQtyChanged();

    public decimal Qty 
	{ 
		get
		{
			return _Qty;
		}
		set
		{
			if(_Qty != value)
			{
				OnQtyChanging(value);
				_Qty = value;
				OnQtyChanged();
			}
		}
	}
	private decimal _Qty;

	partial void OnQtyChanging(decimal newValue);
	partial void OnQtyChanged();

    public decimal TotalQty 
	{ 
		get
		{
			return _TotalQty;
		}
		set
		{
			if(_TotalQty != value)
			{
				OnTotalQtyChanging(value);
				_TotalQty = value;
				OnTotalQtyChanged();
			}
		}
	}
	private decimal _TotalQty;

	partial void OnTotalQtyChanging(decimal newValue);
	partial void OnTotalQtyChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<int> ReasonID 
	{ 
		get
		{
			return _ReasonID;
		}
		set
		{
			if(_ReasonID != value)
			{
				OnReasonIDChanging(value);
				_ReasonID = value;
				OnReasonIDChanged();
			}
		}
	}
	private Nullable<int> _ReasonID;

	partial void OnReasonIDChanging(Nullable<int> newValue);
	partial void OnReasonIDChanged();

    public virtual INTF INTF { get; set; }
    public virtual OITM OITM { get; set; }
    public virtual ORSN ORSN { get; set; }
    public virtual OUNT OUNT { get; set; }
}

[Serializable]
public partial class OAAP : ObjectWithState
{

    public int OAAPID 
	{ 
		get
		{
			return _OAAPID;
		}
		set
		{
			if(_OAAPID != value)
			{
				OnOAAPIDChanging(value);
				_OAAPID = value;
				OnOAAPIDChanged();
			}
		}
	}
	private int _OAAPID;

	partial void OnOAAPIDChanging(int newValue);
	partial void OnOAAPIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int OARQID 
	{ 
		get
		{
			return _OARQID;
		}
		set
		{
			if(_OARQID != value)
			{
				OnOARQIDChanging(value);
				_OARQID = value;
				OnOARQIDChanged();
			}
		}
	}
	private int _OARQID;

	partial void OnOARQIDChanging(int newValue);
	partial void OnOARQIDChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> NextManagerID 
	{ 
		get
		{
			return _NextManagerID;
		}
		set
		{
			if(_NextManagerID != value)
			{
				OnNextManagerIDChanging(value);
				_NextManagerID = value;
				OnNextManagerIDChanged();
			}
		}
	}
	private Nullable<int> _NextManagerID;

	partial void OnNextManagerIDChanging(Nullable<int> newValue);
	partial void OnNextManagerIDChanged();

    public decimal AvailBudget 
	{ 
		get
		{
			return _AvailBudget;
		}
		set
		{
			if(_AvailBudget != value)
			{
				OnAvailBudgetChanging(value);
				_AvailBudget = value;
				OnAvailBudgetChanged();
			}
		}
	}
	private decimal _AvailBudget;

	partial void OnAvailBudgetChanging(decimal newValue);
	partial void OnAvailBudgetChanged();

    public decimal AppAmount 
	{ 
		get
		{
			return _AppAmount;
		}
		set
		{
			if(_AppAmount != value)
			{
				OnAppAmountChanging(value);
				_AppAmount = value;
				OnAppAmountChanged();
			}
		}
	}
	private decimal _AppAmount;

	partial void OnAppAmountChanging(decimal newValue);
	partial void OnAppAmountChanged();

    public Nullable<decimal> PrevAmount 
	{ 
		get
		{
			return _PrevAmount;
		}
		set
		{
			if(_PrevAmount != value)
			{
				OnPrevAmountChanging(value);
				_PrevAmount = value;
				OnPrevAmountChanged();
			}
		}
	}
	private Nullable<decimal> _PrevAmount;

	partial void OnPrevAmountChanging(Nullable<decimal> newValue);
	partial void OnPrevAmountChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public virtual OARQ OARQ { get; set; }
    public virtual OEMP OEMP { get; set; }
}

[Serializable]
public partial class OARQ : ObjectWithState
{
    public OARQ() 
    { 
        this.OAAPs = new HashSet<OAAP>();
    }


    public int OARQID 
	{ 
		get
		{
			return _OARQID;
		}
		set
		{
			if(_OARQID != value)
			{
				OnOARQIDChanging(value);
				_OARQID = value;
				OnOARQIDChanged();
			}
		}
	}
	private int _OARQID;

	partial void OnOARQIDChanging(int newValue);
	partial void OnOARQIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> NextManagerID 
	{ 
		get
		{
			return _NextManagerID;
		}
		set
		{
			if(_NextManagerID != value)
			{
				OnNextManagerIDChanging(value);
				_NextManagerID = value;
				OnNextManagerIDChanged();
			}
		}
	}
	private Nullable<int> _NextManagerID;

	partial void OnNextManagerIDChanging(Nullable<int> newValue);
	partial void OnNextManagerIDChanged();

    public Nullable<int> OTRQID 
	{ 
		get
		{
			return _OTRQID;
		}
		set
		{
			if(_OTRQID != value)
			{
				OnOTRQIDChanging(value);
				_OTRQID = value;
				OnOTRQIDChanged();
			}
		}
	}
	private Nullable<int> _OTRQID;

	partial void OnOTRQIDChanging(Nullable<int> newValue);
	partial void OnOTRQIDChanged();

    public int ExpTypeID 
	{ 
		get
		{
			return _ExpTypeID;
		}
		set
		{
			if(_ExpTypeID != value)
			{
				OnExpTypeIDChanging(value);
				_ExpTypeID = value;
				OnExpTypeIDChanged();
			}
		}
	}
	private int _ExpTypeID;

	partial void OnExpTypeIDChanging(int newValue);
	partial void OnExpTypeIDChanged();

    public int ExpModeID 
	{ 
		get
		{
			return _ExpModeID;
		}
		set
		{
			if(_ExpModeID != value)
			{
				OnExpModeIDChanging(value);
				_ExpModeID = value;
				OnExpModeIDChanged();
			}
		}
	}
	private int _ExpModeID;

	partial void OnExpModeIDChanging(int newValue);
	partial void OnExpModeIDChanged();

    public decimal AdvAmount 
	{ 
		get
		{
			return _AdvAmount;
		}
		set
		{
			if(_AdvAmount != value)
			{
				OnAdvAmountChanging(value);
				_AdvAmount = value;
				OnAdvAmountChanged();
			}
		}
	}
	private decimal _AdvAmount;

	partial void OnAdvAmountChanging(decimal newValue);
	partial void OnAdvAmountChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime ApplicationDate 
	{ 
		get
		{
			return _ApplicationDate;
		}
		set
		{
			if(_ApplicationDate != value)
			{
				OnApplicationDateChanging(value);
				_ApplicationDate = value;
				OnApplicationDateChanged();
			}
		}
	}
	private System.DateTime _ApplicationDate;

	partial void OnApplicationDateChanging(System.DateTime newValue);
	partial void OnApplicationDateChanged();

    public virtual ICollection<OAAP> OAAPs { get; set; }
    public virtual OEMP OEMP { get; set; }
    public virtual OEXM OEXM { get; set; }
    public virtual OTRQ OTRQ { get; set; }
    public virtual OEXT OEXT { get; set; }
}

[Serializable]
public partial class OAST : ObjectWithState
{
    public OAST() 
    { 
        this.AST1 = new HashSet<AST1>();
        this.ASTCFs = new HashSet<ASTCF>();
        this.MSTCFs = new HashSet<MSTCF>();
        this.OASTFs = new HashSet<OASTF>();
        this.OTASKs = new HashSet<OTASK>();
        this.TASK2 = new HashSet<TASK2>();
    }


    public int AssetID 
	{ 
		get
		{
			return _AssetID;
		}
		set
		{
			if(_AssetID != value)
			{
				OnAssetIDChanging(value);
				_AssetID = value;
				OnAssetIDChanged();
			}
		}
	}
	private int _AssetID;

	partial void OnAssetIDChanging(int newValue);
	partial void OnAssetIDChanged();

    public string AssetCode 
	{ 
		get
		{
			return _AssetCode;
		}
		set
		{
			if(_AssetCode != value)
			{
				OnAssetCodeChanging(value);
				_AssetCode = value;
				OnAssetCodeChanged();
			}
		}
	}
	private string _AssetCode;

	partial void OnAssetCodeChanging(string newValue);
	partial void OnAssetCodeChanged();

    public string AssetName 
	{ 
		get
		{
			return _AssetName;
		}
		set
		{
			if(_AssetName != value)
			{
				OnAssetNameChanging(value);
				_AssetName = value;
				OnAssetNameChanged();
			}
		}
	}
	private string _AssetName;

	partial void OnAssetNameChanging(string newValue);
	partial void OnAssetNameChanged();

    public Nullable<int> AssetTypeID 
	{ 
		get
		{
			return _AssetTypeID;
		}
		set
		{
			if(_AssetTypeID != value)
			{
				OnAssetTypeIDChanging(value);
				_AssetTypeID = value;
				OnAssetTypeIDChanged();
			}
		}
	}
	private Nullable<int> _AssetTypeID;

	partial void OnAssetTypeIDChanging(Nullable<int> newValue);
	partial void OnAssetTypeIDChanged();

    public Nullable<int> AssetGroupID 
	{ 
		get
		{
			return _AssetGroupID;
		}
		set
		{
			if(_AssetGroupID != value)
			{
				OnAssetGroupIDChanging(value);
				_AssetGroupID = value;
				OnAssetGroupIDChanged();
			}
		}
	}
	private Nullable<int> _AssetGroupID;

	partial void OnAssetGroupIDChanging(Nullable<int> newValue);
	partial void OnAssetGroupIDChanged();

    public string ModelNumber 
	{ 
		get
		{
			return _ModelNumber;
		}
		set
		{
			if(_ModelNumber != value)
			{
				OnModelNumberChanging(value);
				_ModelNumber = value;
				OnModelNumberChanged();
			}
		}
	}
	private string _ModelNumber;

	partial void OnModelNumberChanging(string newValue);
	partial void OnModelNumberChanged();

    public string SerialNumber 
	{ 
		get
		{
			return _SerialNumber;
		}
		set
		{
			if(_SerialNumber != value)
			{
				OnSerialNumberChanging(value);
				_SerialNumber = value;
				OnSerialNumberChanged();
			}
		}
	}
	private string _SerialNumber;

	partial void OnSerialNumberChanging(string newValue);
	partial void OnSerialNumberChanged();

    public string AdditionalIdentifier 
	{ 
		get
		{
			return _AdditionalIdentifier;
		}
		set
		{
			if(_AdditionalIdentifier != value)
			{
				OnAdditionalIdentifierChanging(value);
				_AdditionalIdentifier = value;
				OnAdditionalIdentifierChanged();
			}
		}
	}
	private string _AdditionalIdentifier;

	partial void OnAdditionalIdentifierChanging(string newValue);
	partial void OnAdditionalIdentifierChanged();

    public Nullable<decimal> AssignToCustomerID 
	{ 
		get
		{
			return _AssignToCustomerID;
		}
		set
		{
			if(_AssignToCustomerID != value)
			{
				OnAssignToCustomerIDChanging(value);
				_AssignToCustomerID = value;
				OnAssignToCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _AssignToCustomerID;

	partial void OnAssignToCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnAssignToCustomerIDChanged();

    public Nullable<decimal> HoldByCustomerID 
	{ 
		get
		{
			return _HoldByCustomerID;
		}
		set
		{
			if(_HoldByCustomerID != value)
			{
				OnHoldByCustomerIDChanging(value);
				_HoldByCustomerID = value;
				OnHoldByCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _HoldByCustomerID;

	partial void OnHoldByCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnHoldByCustomerIDChanged();

    public Nullable<int> AssetConditionID 
	{ 
		get
		{
			return _AssetConditionID;
		}
		set
		{
			if(_AssetConditionID != value)
			{
				OnAssetConditionIDChanging(value);
				_AssetConditionID = value;
				OnAssetConditionIDChanged();
			}
		}
	}
	private Nullable<int> _AssetConditionID;

	partial void OnAssetConditionIDChanging(Nullable<int> newValue);
	partial void OnAssetConditionIDChanged();

    public Nullable<int> AssetStatusID 
	{ 
		get
		{
			return _AssetStatusID;
		}
		set
		{
			if(_AssetStatusID != value)
			{
				OnAssetStatusIDChanging(value);
				_AssetStatusID = value;
				OnAssetStatusIDChanged();
			}
		}
	}
	private Nullable<int> _AssetStatusID;

	partial void OnAssetStatusIDChanging(Nullable<int> newValue);
	partial void OnAssetStatusIDChanged();

    public string VendorDetails 
	{ 
		get
		{
			return _VendorDetails;
		}
		set
		{
			if(_VendorDetails != value)
			{
				OnVendorDetailsChanging(value);
				_VendorDetails = value;
				OnVendorDetailsChanged();
			}
		}
	}
	private string _VendorDetails;

	partial void OnVendorDetailsChanging(string newValue);
	partial void OnVendorDetailsChanged();

    public string InvoiceNumber 
	{ 
		get
		{
			return _InvoiceNumber;
		}
		set
		{
			if(_InvoiceNumber != value)
			{
				OnInvoiceNumberChanging(value);
				_InvoiceNumber = value;
				OnInvoiceNumberChanged();
			}
		}
	}
	private string _InvoiceNumber;

	partial void OnInvoiceNumberChanging(string newValue);
	partial void OnInvoiceNumberChanged();

    public Nullable<System.DateTime> InvoiceDate 
	{ 
		get
		{
			return _InvoiceDate;
		}
		set
		{
			if(_InvoiceDate != value)
			{
				OnInvoiceDateChanging(value);
				_InvoiceDate = value;
				OnInvoiceDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _InvoiceDate;

	partial void OnInvoiceDateChanging(Nullable<System.DateTime> newValue);
	partial void OnInvoiceDateChanged();

    public Nullable<System.DateTime> WarrantyExpDate 
	{ 
		get
		{
			return _WarrantyExpDate;
		}
		set
		{
			if(_WarrantyExpDate != value)
			{
				OnWarrantyExpDateChanging(value);
				_WarrantyExpDate = value;
				OnWarrantyExpDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _WarrantyExpDate;

	partial void OnWarrantyExpDateChanging(Nullable<System.DateTime> newValue);
	partial void OnWarrantyExpDateChanged();

    public string LeadTime 
	{ 
		get
		{
			return _LeadTime;
		}
		set
		{
			if(_LeadTime != value)
			{
				OnLeadTimeChanging(value);
				_LeadTime = value;
				OnLeadTimeChanged();
			}
		}
	}
	private string _LeadTime;

	partial void OnLeadTimeChanging(string newValue);
	partial void OnLeadTimeChanged();

    public string Description 
	{ 
		get
		{
			return _Description;
		}
		set
		{
			if(_Description != value)
			{
				OnDescriptionChanging(value);
				_Description = value;
				OnDescriptionChanged();
			}
		}
	}
	private string _Description;

	partial void OnDescriptionChanging(string newValue);
	partial void OnDescriptionChanged();

    public Nullable<decimal> RegisterByCustomerID 
	{ 
		get
		{
			return _RegisterByCustomerID;
		}
		set
		{
			if(_RegisterByCustomerID != value)
			{
				OnRegisterByCustomerIDChanging(value);
				_RegisterByCustomerID = value;
				OnRegisterByCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _RegisterByCustomerID;

	partial void OnRegisterByCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnRegisterByCustomerIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<int> AssetBrandID 
	{ 
		get
		{
			return _AssetBrandID;
		}
		set
		{
			if(_AssetBrandID != value)
			{
				OnAssetBrandIDChanging(value);
				_AssetBrandID = value;
				OnAssetBrandIDChanged();
			}
		}
	}
	private Nullable<int> _AssetBrandID;

	partial void OnAssetBrandIDChanging(Nullable<int> newValue);
	partial void OnAssetBrandIDChanged();

    public Nullable<int> AssetSizeID 
	{ 
		get
		{
			return _AssetSizeID;
		}
		set
		{
			if(_AssetSizeID != value)
			{
				OnAssetSizeIDChanging(value);
				_AssetSizeID = value;
				OnAssetSizeIDChanged();
			}
		}
	}
	private Nullable<int> _AssetSizeID;

	partial void OnAssetSizeIDChanging(Nullable<int> newValue);
	partial void OnAssetSizeIDChanged();

    public string AssetSubnumber 
	{ 
		get
		{
			return _AssetSubnumber;
		}
		set
		{
			if(_AssetSubnumber != value)
			{
				OnAssetSubnumberChanging(value);
				_AssetSubnumber = value;
				OnAssetSubnumberChanged();
			}
		}
	}
	private string _AssetSubnumber;

	partial void OnAssetSubnumberChanging(string newValue);
	partial void OnAssetSubnumberChanged();

    public string ObjectType 
	{ 
		get
		{
			return _ObjectType;
		}
		set
		{
			if(_ObjectType != value)
			{
				OnObjectTypeChanging(value);
				_ObjectType = value;
				OnObjectTypeChanged();
			}
		}
	}
	private string _ObjectType;

	partial void OnObjectTypeChanging(string newValue);
	partial void OnObjectTypeChanged();

    public string Location 
	{ 
		get
		{
			return _Location;
		}
		set
		{
			if(_Location != value)
			{
				OnLocationChanging(value);
				_Location = value;
				OnLocationChanged();
			}
		}
	}
	private string _Location;

	partial void OnLocationChanging(string newValue);
	partial void OnLocationChanged();

    public string PlantSection 
	{ 
		get
		{
			return _PlantSection;
		}
		set
		{
			if(_PlantSection != value)
			{
				OnPlantSectionChanging(value);
				_PlantSection = value;
				OnPlantSectionChanged();
			}
		}
	}
	private string _PlantSection;

	partial void OnPlantSectionChanging(string newValue);
	partial void OnPlantSectionChanged();

    public string PlannerGroup 
	{ 
		get
		{
			return _PlannerGroup;
		}
		set
		{
			if(_PlannerGroup != value)
			{
				OnPlannerGroupChanging(value);
				_PlannerGroup = value;
				OnPlannerGroupChanged();
			}
		}
	}
	private string _PlannerGroup;

	partial void OnPlannerGroupChanging(string newValue);
	partial void OnPlannerGroupChanged();

    public string CostCenter 
	{ 
		get
		{
			return _CostCenter;
		}
		set
		{
			if(_CostCenter != value)
			{
				OnCostCenterChanging(value);
				_CostCenter = value;
				OnCostCenterChanged();
			}
		}
	}
	private string _CostCenter;

	partial void OnCostCenterChanging(string newValue);
	partial void OnCostCenterChanged();

    public Nullable<System.DateTime> AcqDate 
	{ 
		get
		{
			return _AcqDate;
		}
		set
		{
			if(_AcqDate != value)
			{
				OnAcqDateChanging(value);
				_AcqDate = value;
				OnAcqDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _AcqDate;

	partial void OnAcqDateChanging(Nullable<System.DateTime> newValue);
	partial void OnAcqDateChanged();

    public Nullable<System.DateTime> ValidDate 
	{ 
		get
		{
			return _ValidDate;
		}
		set
		{
			if(_ValidDate != value)
			{
				OnValidDateChanging(value);
				_ValidDate = value;
				OnValidDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ValidDate;

	partial void OnValidDateChanging(Nullable<System.DateTime> newValue);
	partial void OnValidDateChanged();

    public string ABCIndicator 
	{ 
		get
		{
			return _ABCIndicator;
		}
		set
		{
			if(_ABCIndicator != value)
			{
				OnABCIndicatorChanging(value);
				_ABCIndicator = value;
				OnABCIndicatorChanged();
			}
		}
	}
	private string _ABCIndicator;

	partial void OnABCIndicatorChanging(string newValue);
	partial void OnABCIndicatorChanged();

    public Nullable<int> PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private Nullable<int> _PlantID;

	partial void OnPlantIDChanging(Nullable<int> newValue);
	partial void OnPlantIDChanged();

    public string StorageLoc 
	{ 
		get
		{
			return _StorageLoc;
		}
		set
		{
			if(_StorageLoc != value)
			{
				OnStorageLocChanging(value);
				_StorageLoc = value;
				OnStorageLocChanged();
			}
		}
	}
	private string _StorageLoc;

	partial void OnStorageLocChanging(string newValue);
	partial void OnStorageLocChanged();

    public string SplStock 
	{ 
		get
		{
			return _SplStock;
		}
		set
		{
			if(_SplStock != value)
			{
				OnSplStockChanging(value);
				_SplStock = value;
				OnSplStockChanged();
			}
		}
	}
	private string _SplStock;

	partial void OnSplStockChanging(string newValue);
	partial void OnSplStockChanged();

    public Nullable<decimal> Volume 
	{ 
		get
		{
			return _Volume;
		}
		set
		{
			if(_Volume != value)
			{
				OnVolumeChanging(value);
				_Volume = value;
				OnVolumeChanged();
			}
		}
	}
	private Nullable<decimal> _Volume;

	partial void OnVolumeChanging(Nullable<decimal> newValue);
	partial void OnVolumeChanged();

    public Nullable<System.DateTime> AssetCapDate 
	{ 
		get
		{
			return _AssetCapDate;
		}
		set
		{
			if(_AssetCapDate != value)
			{
				OnAssetCapDateChanging(value);
				_AssetCapDate = value;
				OnAssetCapDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _AssetCapDate;

	partial void OnAssetCapDateChanging(Nullable<System.DateTime> newValue);
	partial void OnAssetCapDateChanged();

    public Nullable<int> PreventiveDays 
	{ 
		get
		{
			return _PreventiveDays;
		}
		set
		{
			if(_PreventiveDays != value)
			{
				OnPreventiveDaysChanging(value);
				_PreventiveDays = value;
				OnPreventiveDaysChanged();
			}
		}
	}
	private Nullable<int> _PreventiveDays;

	partial void OnPreventiveDaysChanging(Nullable<int> newValue);
	partial void OnPreventiveDaysChanged();

    public Nullable<int> MechanicEmpID 
	{ 
		get
		{
			return _MechanicEmpID;
		}
		set
		{
			if(_MechanicEmpID != value)
			{
				OnMechanicEmpIDChanging(value);
				_MechanicEmpID = value;
				OnMechanicEmpIDChanged();
			}
		}
	}
	private Nullable<int> _MechanicEmpID;

	partial void OnMechanicEmpIDChanging(Nullable<int> newValue);
	partial void OnMechanicEmpIDChanged();

    public Nullable<System.DateTime> LastMaintainanceDate 
	{ 
		get
		{
			return _LastMaintainanceDate;
		}
		set
		{
			if(_LastMaintainanceDate != value)
			{
				OnLastMaintainanceDateChanging(value);
				_LastMaintainanceDate = value;
				OnLastMaintainanceDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _LastMaintainanceDate;

	partial void OnLastMaintainanceDateChanging(Nullable<System.DateTime> newValue);
	partial void OnLastMaintainanceDateChanged();

    public string PlannerName 
	{ 
		get
		{
			return _PlannerName;
		}
		set
		{
			if(_PlannerName != value)
			{
				OnPlannerNameChanging(value);
				_PlannerName = value;
				OnPlannerNameChanged();
			}
		}
	}
	private string _PlannerName;

	partial void OnPlannerNameChanging(string newValue);
	partial void OnPlannerNameChanged();

    public Nullable<int> StorageLocID 
	{ 
		get
		{
			return _StorageLocID;
		}
		set
		{
			if(_StorageLocID != value)
			{
				OnStorageLocIDChanging(value);
				_StorageLocID = value;
				OnStorageLocIDChanged();
			}
		}
	}
	private Nullable<int> _StorageLocID;

	partial void OnStorageLocIDChanging(Nullable<int> newValue);
	partial void OnStorageLocIDChanged();

    public string Room 
	{ 
		get
		{
			return _Room;
		}
		set
		{
			if(_Room != value)
			{
				OnRoomChanging(value);
				_Room = value;
				OnRoomChanged();
			}
		}
	}
	private string _Room;

	partial void OnRoomChanging(string newValue);
	partial void OnRoomChanged();

    public string SortField 
	{ 
		get
		{
			return _SortField;
		}
		set
		{
			if(_SortField != value)
			{
				OnSortFieldChanging(value);
				_SortField = value;
				OnSortFieldChanged();
			}
		}
	}
	private string _SortField;

	partial void OnSortFieldChanging(string newValue);
	partial void OnSortFieldChanged();

    public string Brand 
	{ 
		get
		{
			return _Brand;
		}
		set
		{
			if(_Brand != value)
			{
				OnBrandChanging(value);
				_Brand = value;
				OnBrandChanged();
			}
		}
	}
	private string _Brand;

	partial void OnBrandChanging(string newValue);
	partial void OnBrandChanged();

    public virtual ICollection<AST1> AST1 { get; set; }
    public virtual ICollection<ASTCF> ASTCFs { get; set; }
    public virtual ICollection<MSTCF> MSTCFs { get; set; }
    public virtual OASTB OASTB { get; set; }
    public virtual OASTC OASTC { get; set; }
    public virtual OASTG OASTG { get; set; }
    public virtual OASTU OASTU { get; set; }
    public virtual OASTZ OASTZ { get; set; }
    public virtual OCRD OCRD { get; set; }
    public virtual OCRD OCRD1 { get; set; }
    public virtual OCRD OCRD2 { get; set; }
    public virtual OSTRL OSTRL { get; set; }
    public virtual ICollection<OASTF> OASTFs { get; set; }
    public virtual ICollection<OTASK> OTASKs { get; set; }
    public virtual ICollection<TASK2> TASK2 { get; set; }
    public virtual OASTY OASTY { get; set; }
}

[Serializable]
public partial class OASTB : ObjectWithState
{
    public OASTB() 
    { 
        this.EXASTs = new HashSet<EXAST>();
        this.OASTs = new HashSet<OAST>();
    }


    public int AssetBrandID 
	{ 
		get
		{
			return _AssetBrandID;
		}
		set
		{
			if(_AssetBrandID != value)
			{
				OnAssetBrandIDChanging(value);
				_AssetBrandID = value;
				OnAssetBrandIDChanged();
			}
		}
	}
	private int _AssetBrandID;

	partial void OnAssetBrandIDChanging(int newValue);
	partial void OnAssetBrandIDChanged();

    public string AssetBrandName 
	{ 
		get
		{
			return _AssetBrandName;
		}
		set
		{
			if(_AssetBrandName != value)
			{
				OnAssetBrandNameChanging(value);
				_AssetBrandName = value;
				OnAssetBrandNameChanged();
			}
		}
	}
	private string _AssetBrandName;

	partial void OnAssetBrandNameChanging(string newValue);
	partial void OnAssetBrandNameChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDefault 
	{ 
		get
		{
			return _IsDefault;
		}
		set
		{
			if(_IsDefault != value)
			{
				OnIsDefaultChanging(value);
				_IsDefault = value;
				OnIsDefaultChanged();
			}
		}
	}
	private bool _IsDefault;

	partial void OnIsDefaultChanging(bool newValue);
	partial void OnIsDefaultChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public int AssetSizeID 
	{ 
		get
		{
			return _AssetSizeID;
		}
		set
		{
			if(_AssetSizeID != value)
			{
				OnAssetSizeIDChanging(value);
				_AssetSizeID = value;
				OnAssetSizeIDChanged();
			}
		}
	}
	private int _AssetSizeID;

	partial void OnAssetSizeIDChanging(int newValue);
	partial void OnAssetSizeIDChanged();

    public virtual ICollection<EXAST> EXASTs { get; set; }
    public virtual OASTZ OASTZ { get; set; }
    public virtual ICollection<OAST> OASTs { get; set; }
}

[Serializable]
public partial class OASTC : ObjectWithState
{
    public OASTC() 
    { 
        this.OASTFs = new HashSet<OASTF>();
        this.ASTCFs = new HashSet<ASTCF>();
        this.MSTCFs = new HashSet<MSTCF>();
        this.OASTs = new HashSet<OAST>();
    }


    public int AssetConditionID 
	{ 
		get
		{
			return _AssetConditionID;
		}
		set
		{
			if(_AssetConditionID != value)
			{
				OnAssetConditionIDChanging(value);
				_AssetConditionID = value;
				OnAssetConditionIDChanged();
			}
		}
	}
	private int _AssetConditionID;

	partial void OnAssetConditionIDChanging(int newValue);
	partial void OnAssetConditionIDChanged();

    public string AssetConditionName 
	{ 
		get
		{
			return _AssetConditionName;
		}
		set
		{
			if(_AssetConditionName != value)
			{
				OnAssetConditionNameChanging(value);
				_AssetConditionName = value;
				OnAssetConditionNameChanged();
			}
		}
	}
	private string _AssetConditionName;

	partial void OnAssetConditionNameChanging(string newValue);
	partial void OnAssetConditionNameChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDefault 
	{ 
		get
		{
			return _IsDefault;
		}
		set
		{
			if(_IsDefault != value)
			{
				OnIsDefaultChanging(value);
				_IsDefault = value;
				OnIsDefaultChanged();
			}
		}
	}
	private bool _IsDefault;

	partial void OnIsDefaultChanging(bool newValue);
	partial void OnIsDefaultChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<OASTF> OASTFs { get; set; }
    public virtual ICollection<ASTCF> ASTCFs { get; set; }
    public virtual ICollection<MSTCF> MSTCFs { get; set; }
    public virtual ICollection<OAST> OASTs { get; set; }
}

[Serializable]
public partial class OASTCM : ObjectWithState
{

    public int OASTCMID 
	{ 
		get
		{
			return _OASTCMID;
		}
		set
		{
			if(_OASTCMID != value)
			{
				OnOASTCMIDChanging(value);
				_OASTCMID = value;
				OnOASTCMIDChanged();
			}
		}
	}
	private int _OASTCMID;

	partial void OnOASTCMIDChanging(int newValue);
	partial void OnOASTCMIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public int AssetID 
	{ 
		get
		{
			return _AssetID;
		}
		set
		{
			if(_AssetID != value)
			{
				OnAssetIDChanging(value);
				_AssetID = value;
				OnAssetIDChanged();
			}
		}
	}
	private int _AssetID;

	partial void OnAssetIDChanging(int newValue);
	partial void OnAssetIDChanged();

    public bool IsPhysical 
	{ 
		get
		{
			return _IsPhysical;
		}
		set
		{
			if(_IsPhysical != value)
			{
				OnIsPhysicalChanging(value);
				_IsPhysical = value;
				OnIsPhysicalChanged();
			}
		}
	}
	private bool _IsPhysical;

	partial void OnIsPhysicalChanging(bool newValue);
	partial void OnIsPhysicalChanged();

    public bool IsConflict 
	{ 
		get
		{
			return _IsConflict;
		}
		set
		{
			if(_IsConflict != value)
			{
				OnIsConflictChanging(value);
				_IsConflict = value;
				OnIsConflictChanged();
			}
		}
	}
	private bool _IsConflict;

	partial void OnIsConflictChanging(bool newValue);
	partial void OnIsConflictChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public System.DateTime ConflictDate 
	{ 
		get
		{
			return _ConflictDate;
		}
		set
		{
			if(_ConflictDate != value)
			{
				OnConflictDateChanging(value);
				_ConflictDate = value;
				OnConflictDateChanged();
			}
		}
	}
	private System.DateTime _ConflictDate;

	partial void OnConflictDateChanging(System.DateTime newValue);
	partial void OnConflictDateChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();
}

[Serializable]
public partial class OASTF : ObjectWithState
{
    public OASTF() 
    { 
        this.ASTF1 = new HashSet<ASTF1>();
        this.ASTCFs = new HashSet<ASTCF>();
        this.MSTCFs = new HashSet<MSTCF>();
    }


    public int AssetTransferID 
	{ 
		get
		{
			return _AssetTransferID;
		}
		set
		{
			if(_AssetTransferID != value)
			{
				OnAssetTransferIDChanging(value);
				_AssetTransferID = value;
				OnAssetTransferIDChanged();
			}
		}
	}
	private int _AssetTransferID;

	partial void OnAssetTransferIDChanging(int newValue);
	partial void OnAssetTransferIDChanged();

    public string AssetTransferCode 
	{ 
		get
		{
			return _AssetTransferCode;
		}
		set
		{
			if(_AssetTransferCode != value)
			{
				OnAssetTransferCodeChanging(value);
				_AssetTransferCode = value;
				OnAssetTransferCodeChanged();
			}
		}
	}
	private string _AssetTransferCode;

	partial void OnAssetTransferCodeChanging(string newValue);
	partial void OnAssetTransferCodeChanged();

    public Nullable<System.DateTime> AssetTransferDate 
	{ 
		get
		{
			return _AssetTransferDate;
		}
		set
		{
			if(_AssetTransferDate != value)
			{
				OnAssetTransferDateChanging(value);
				_AssetTransferDate = value;
				OnAssetTransferDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _AssetTransferDate;

	partial void OnAssetTransferDateChanging(Nullable<System.DateTime> newValue);
	partial void OnAssetTransferDateChanged();

    public Nullable<int> AssetID 
	{ 
		get
		{
			return _AssetID;
		}
		set
		{
			if(_AssetID != value)
			{
				OnAssetIDChanging(value);
				_AssetID = value;
				OnAssetIDChanged();
			}
		}
	}
	private Nullable<int> _AssetID;

	partial void OnAssetIDChanging(Nullable<int> newValue);
	partial void OnAssetIDChanged();

    public Nullable<decimal> TransferToCustomerID 
	{ 
		get
		{
			return _TransferToCustomerID;
		}
		set
		{
			if(_TransferToCustomerID != value)
			{
				OnTransferToCustomerIDChanging(value);
				_TransferToCustomerID = value;
				OnTransferToCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _TransferToCustomerID;

	partial void OnTransferToCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnTransferToCustomerIDChanged();

    public Nullable<System.DateTime> TransferDate 
	{ 
		get
		{
			return _TransferDate;
		}
		set
		{
			if(_TransferDate != value)
			{
				OnTransferDateChanging(value);
				_TransferDate = value;
				OnTransferDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _TransferDate;

	partial void OnTransferDateChanging(Nullable<System.DateTime> newValue);
	partial void OnTransferDateChanged();

    public string TransferTime 
	{ 
		get
		{
			return _TransferTime;
		}
		set
		{
			if(_TransferTime != value)
			{
				OnTransferTimeChanging(value);
				_TransferTime = value;
				OnTransferTimeChanged();
			}
		}
	}
	private string _TransferTime;

	partial void OnTransferTimeChanging(string newValue);
	partial void OnTransferTimeChanged();

    public Nullable<int> TransferReasonID 
	{ 
		get
		{
			return _TransferReasonID;
		}
		set
		{
			if(_TransferReasonID != value)
			{
				OnTransferReasonIDChanging(value);
				_TransferReasonID = value;
				OnTransferReasonIDChanged();
			}
		}
	}
	private Nullable<int> _TransferReasonID;

	partial void OnTransferReasonIDChanging(Nullable<int> newValue);
	partial void OnTransferReasonIDChanged();

    public Nullable<int> AssetConditionID 
	{ 
		get
		{
			return _AssetConditionID;
		}
		set
		{
			if(_AssetConditionID != value)
			{
				OnAssetConditionIDChanging(value);
				_AssetConditionID = value;
				OnAssetConditionIDChanged();
			}
		}
	}
	private Nullable<int> _AssetConditionID;

	partial void OnAssetConditionIDChanging(Nullable<int> newValue);
	partial void OnAssetConditionIDChanged();

    public Nullable<int> AssetStatusID 
	{ 
		get
		{
			return _AssetStatusID;
		}
		set
		{
			if(_AssetStatusID != value)
			{
				OnAssetStatusIDChanging(value);
				_AssetStatusID = value;
				OnAssetStatusIDChanged();
			}
		}
	}
	private Nullable<int> _AssetStatusID;

	partial void OnAssetStatusIDChanging(Nullable<int> newValue);
	partial void OnAssetStatusIDChanged();

    public string ShippingCriteria 
	{ 
		get
		{
			return _ShippingCriteria;
		}
		set
		{
			if(_ShippingCriteria != value)
			{
				OnShippingCriteriaChanging(value);
				_ShippingCriteria = value;
				OnShippingCriteriaChanged();
			}
		}
	}
	private string _ShippingCriteria;

	partial void OnShippingCriteriaChanging(string newValue);
	partial void OnShippingCriteriaChanged();

    public string DocketNumber 
	{ 
		get
		{
			return _DocketNumber;
		}
		set
		{
			if(_DocketNumber != value)
			{
				OnDocketNumberChanging(value);
				_DocketNumber = value;
				OnDocketNumberChanged();
			}
		}
	}
	private string _DocketNumber;

	partial void OnDocketNumberChanging(string newValue);
	partial void OnDocketNumberChanged();

    public Nullable<System.DateTime> ShippingDate 
	{ 
		get
		{
			return _ShippingDate;
		}
		set
		{
			if(_ShippingDate != value)
			{
				OnShippingDateChanging(value);
				_ShippingDate = value;
				OnShippingDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ShippingDate;

	partial void OnShippingDateChanging(Nullable<System.DateTime> newValue);
	partial void OnShippingDateChanged();

    public string ShippingTime 
	{ 
		get
		{
			return _ShippingTime;
		}
		set
		{
			if(_ShippingTime != value)
			{
				OnShippingTimeChanging(value);
				_ShippingTime = value;
				OnShippingTimeChanged();
			}
		}
	}
	private string _ShippingTime;

	partial void OnShippingTimeChanging(string newValue);
	partial void OnShippingTimeChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public Nullable<bool> IsConfirm 
	{ 
		get
		{
			return _IsConfirm;
		}
		set
		{
			if(_IsConfirm != value)
			{
				OnIsConfirmChanging(value);
				_IsConfirm = value;
				OnIsConfirmChanged();
			}
		}
	}
	private Nullable<bool> _IsConfirm;

	partial void OnIsConfirmChanging(Nullable<bool> newValue);
	partial void OnIsConfirmChanged();

    public Nullable<decimal> TransferByCustomerID 
	{ 
		get
		{
			return _TransferByCustomerID;
		}
		set
		{
			if(_TransferByCustomerID != value)
			{
				OnTransferByCustomerIDChanging(value);
				_TransferByCustomerID = value;
				OnTransferByCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _TransferByCustomerID;

	partial void OnTransferByCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnTransferByCustomerIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual OASTR OASTR { get; set; }
    public virtual OASTU OASTU { get; set; }
    public virtual OASTC OASTC { get; set; }
    public virtual ICollection<ASTF1> ASTF1 { get; set; }
    public virtual ICollection<ASTCF> ASTCFs { get; set; }
    public virtual ICollection<MSTCF> MSTCFs { get; set; }
    public virtual OCRD OCRD { get; set; }
    public virtual OAST OAST { get; set; }
}

[Serializable]
public partial class OASTG : ObjectWithState
{
    public OASTG() 
    { 
        this.OASTs = new HashSet<OAST>();
    }


    public int AssetGroupID 
	{ 
		get
		{
			return _AssetGroupID;
		}
		set
		{
			if(_AssetGroupID != value)
			{
				OnAssetGroupIDChanging(value);
				_AssetGroupID = value;
				OnAssetGroupIDChanged();
			}
		}
	}
	private int _AssetGroupID;

	partial void OnAssetGroupIDChanging(int newValue);
	partial void OnAssetGroupIDChanged();

    public string AssetGroupName 
	{ 
		get
		{
			return _AssetGroupName;
		}
		set
		{
			if(_AssetGroupName != value)
			{
				OnAssetGroupNameChanging(value);
				_AssetGroupName = value;
				OnAssetGroupNameChanged();
			}
		}
	}
	private string _AssetGroupName;

	partial void OnAssetGroupNameChanging(string newValue);
	partial void OnAssetGroupNameChanged();

    public string AssetGroupCode 
	{ 
		get
		{
			return _AssetGroupCode;
		}
		set
		{
			if(_AssetGroupCode != value)
			{
				OnAssetGroupCodeChanging(value);
				_AssetGroupCode = value;
				OnAssetGroupCodeChanged();
			}
		}
	}
	private string _AssetGroupCode;

	partial void OnAssetGroupCodeChanging(string newValue);
	partial void OnAssetGroupCodeChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDefault 
	{ 
		get
		{
			return _IsDefault;
		}
		set
		{
			if(_IsDefault != value)
			{
				OnIsDefaultChanging(value);
				_IsDefault = value;
				OnIsDefaultChanged();
			}
		}
	}
	private bool _IsDefault;

	partial void OnIsDefaultChanging(bool newValue);
	partial void OnIsDefaultChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<OAST> OASTs { get; set; }
}

[Serializable]
public partial class OASTLOC : ObjectWithState
{

    public int AssetLocationID 
	{ 
		get
		{
			return _AssetLocationID;
		}
		set
		{
			if(_AssetLocationID != value)
			{
				OnAssetLocationIDChanging(value);
				_AssetLocationID = value;
				OnAssetLocationIDChanged();
			}
		}
	}
	private int _AssetLocationID;

	partial void OnAssetLocationIDChanging(int newValue);
	partial void OnAssetLocationIDChanged();

    public string AssetLocation 
	{ 
		get
		{
			return _AssetLocation;
		}
		set
		{
			if(_AssetLocation != value)
			{
				OnAssetLocationChanging(value);
				_AssetLocation = value;
				OnAssetLocationChanged();
			}
		}
	}
	private string _AssetLocation;

	partial void OnAssetLocationChanging(string newValue);
	partial void OnAssetLocationChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();
}

[Serializable]
public partial class OASTLOG : ObjectWithState
{

    public long AutoAssetID 
	{ 
		get
		{
			return _AutoAssetID;
		}
		set
		{
			if(_AutoAssetID != value)
			{
				OnAutoAssetIDChanging(value);
				_AutoAssetID = value;
				OnAutoAssetIDChanged();
			}
		}
	}
	private long _AutoAssetID;

	partial void OnAutoAssetIDChanging(long newValue);
	partial void OnAutoAssetIDChanged();

    public int AssetID 
	{ 
		get
		{
			return _AssetID;
		}
		set
		{
			if(_AssetID != value)
			{
				OnAssetIDChanging(value);
				_AssetID = value;
				OnAssetIDChanged();
			}
		}
	}
	private int _AssetID;

	partial void OnAssetIDChanging(int newValue);
	partial void OnAssetIDChanged();

    public Nullable<decimal> HoldByCustomerID 
	{ 
		get
		{
			return _HoldByCustomerID;
		}
		set
		{
			if(_HoldByCustomerID != value)
			{
				OnHoldByCustomerIDChanging(value);
				_HoldByCustomerID = value;
				OnHoldByCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _HoldByCustomerID;

	partial void OnHoldByCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnHoldByCustomerIDChanged();

    public string AppID 
	{ 
		get
		{
			return _AppID;
		}
		set
		{
			if(_AppID != value)
			{
				OnAppIDChanging(value);
				_AppID = value;
				OnAppIDChanged();
			}
		}
	}
	private string _AppID;

	partial void OnAppIDChanging(string newValue);
	partial void OnAppIDChanged();

    public int InsertType 
	{ 
		get
		{
			return _InsertType;
		}
		set
		{
			if(_InsertType != value)
			{
				OnInsertTypeChanging(value);
				_InsertType = value;
				OnInsertTypeChanged();
			}
		}
	}
	private int _InsertType;

	partial void OnInsertTypeChanging(int newValue);
	partial void OnInsertTypeChanged();

    public System.DateTime Datetime 
	{ 
		get
		{
			return _Datetime;
		}
		set
		{
			if(_Datetime != value)
			{
				OnDatetimeChanging(value);
				_Datetime = value;
				OnDatetimeChanged();
			}
		}
	}
	private System.DateTime _Datetime;

	partial void OnDatetimeChanging(System.DateTime newValue);
	partial void OnDatetimeChanged();

    public Nullable<System.DateTime> LGMDate 
	{ 
		get
		{
			return _LGMDate;
		}
		set
		{
			if(_LGMDate != value)
			{
				OnLGMDateChanging(value);
				_LGMDate = value;
				OnLGMDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _LGMDate;

	partial void OnLGMDateChanging(Nullable<System.DateTime> newValue);
	partial void OnLGMDateChanged();

    public Nullable<System.DateTime> LiftingDate 
	{ 
		get
		{
			return _LiftingDate;
		}
		set
		{
			if(_LiftingDate != value)
			{
				OnLiftingDateChanging(value);
				_LiftingDate = value;
				OnLiftingDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _LiftingDate;

	partial void OnLiftingDateChanging(Nullable<System.DateTime> newValue);
	partial void OnLiftingDateChanged();

    public string AssetCode 
	{ 
		get
		{
			return _AssetCode;
		}
		set
		{
			if(_AssetCode != value)
			{
				OnAssetCodeChanging(value);
				_AssetCode = value;
				OnAssetCodeChanged();
			}
		}
	}
	private string _AssetCode;

	partial void OnAssetCodeChanging(string newValue);
	partial void OnAssetCodeChanged();

    public string AssetName 
	{ 
		get
		{
			return _AssetName;
		}
		set
		{
			if(_AssetName != value)
			{
				OnAssetNameChanging(value);
				_AssetName = value;
				OnAssetNameChanged();
			}
		}
	}
	private string _AssetName;

	partial void OnAssetNameChanging(string newValue);
	partial void OnAssetNameChanged();

    public Nullable<int> AssetTypeID 
	{ 
		get
		{
			return _AssetTypeID;
		}
		set
		{
			if(_AssetTypeID != value)
			{
				OnAssetTypeIDChanging(value);
				_AssetTypeID = value;
				OnAssetTypeIDChanged();
			}
		}
	}
	private Nullable<int> _AssetTypeID;

	partial void OnAssetTypeIDChanging(Nullable<int> newValue);
	partial void OnAssetTypeIDChanged();

    public Nullable<int> AssetGroupID 
	{ 
		get
		{
			return _AssetGroupID;
		}
		set
		{
			if(_AssetGroupID != value)
			{
				OnAssetGroupIDChanging(value);
				_AssetGroupID = value;
				OnAssetGroupIDChanged();
			}
		}
	}
	private Nullable<int> _AssetGroupID;

	partial void OnAssetGroupIDChanging(Nullable<int> newValue);
	partial void OnAssetGroupIDChanged();

    public string ModelNumber 
	{ 
		get
		{
			return _ModelNumber;
		}
		set
		{
			if(_ModelNumber != value)
			{
				OnModelNumberChanging(value);
				_ModelNumber = value;
				OnModelNumberChanged();
			}
		}
	}
	private string _ModelNumber;

	partial void OnModelNumberChanging(string newValue);
	partial void OnModelNumberChanged();

    public string SerialNumber 
	{ 
		get
		{
			return _SerialNumber;
		}
		set
		{
			if(_SerialNumber != value)
			{
				OnSerialNumberChanging(value);
				_SerialNumber = value;
				OnSerialNumberChanged();
			}
		}
	}
	private string _SerialNumber;

	partial void OnSerialNumberChanging(string newValue);
	partial void OnSerialNumberChanged();

    public string AdditionalIdentifier 
	{ 
		get
		{
			return _AdditionalIdentifier;
		}
		set
		{
			if(_AdditionalIdentifier != value)
			{
				OnAdditionalIdentifierChanging(value);
				_AdditionalIdentifier = value;
				OnAdditionalIdentifierChanged();
			}
		}
	}
	private string _AdditionalIdentifier;

	partial void OnAdditionalIdentifierChanging(string newValue);
	partial void OnAdditionalIdentifierChanged();

    public Nullable<decimal> AssignToCustomerID 
	{ 
		get
		{
			return _AssignToCustomerID;
		}
		set
		{
			if(_AssignToCustomerID != value)
			{
				OnAssignToCustomerIDChanging(value);
				_AssignToCustomerID = value;
				OnAssignToCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _AssignToCustomerID;

	partial void OnAssignToCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnAssignToCustomerIDChanged();

    public Nullable<int> AssetConditionID 
	{ 
		get
		{
			return _AssetConditionID;
		}
		set
		{
			if(_AssetConditionID != value)
			{
				OnAssetConditionIDChanging(value);
				_AssetConditionID = value;
				OnAssetConditionIDChanged();
			}
		}
	}
	private Nullable<int> _AssetConditionID;

	partial void OnAssetConditionIDChanging(Nullable<int> newValue);
	partial void OnAssetConditionIDChanged();

    public Nullable<int> AssetStatusID 
	{ 
		get
		{
			return _AssetStatusID;
		}
		set
		{
			if(_AssetStatusID != value)
			{
				OnAssetStatusIDChanging(value);
				_AssetStatusID = value;
				OnAssetStatusIDChanged();
			}
		}
	}
	private Nullable<int> _AssetStatusID;

	partial void OnAssetStatusIDChanging(Nullable<int> newValue);
	partial void OnAssetStatusIDChanged();

    public string VendorDetails 
	{ 
		get
		{
			return _VendorDetails;
		}
		set
		{
			if(_VendorDetails != value)
			{
				OnVendorDetailsChanging(value);
				_VendorDetails = value;
				OnVendorDetailsChanged();
			}
		}
	}
	private string _VendorDetails;

	partial void OnVendorDetailsChanging(string newValue);
	partial void OnVendorDetailsChanged();

    public string InvoiceNumber 
	{ 
		get
		{
			return _InvoiceNumber;
		}
		set
		{
			if(_InvoiceNumber != value)
			{
				OnInvoiceNumberChanging(value);
				_InvoiceNumber = value;
				OnInvoiceNumberChanged();
			}
		}
	}
	private string _InvoiceNumber;

	partial void OnInvoiceNumberChanging(string newValue);
	partial void OnInvoiceNumberChanged();

    public Nullable<System.DateTime> WarrantyExpDate 
	{ 
		get
		{
			return _WarrantyExpDate;
		}
		set
		{
			if(_WarrantyExpDate != value)
			{
				OnWarrantyExpDateChanging(value);
				_WarrantyExpDate = value;
				OnWarrantyExpDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _WarrantyExpDate;

	partial void OnWarrantyExpDateChanging(Nullable<System.DateTime> newValue);
	partial void OnWarrantyExpDateChanged();

    public string LeadTime 
	{ 
		get
		{
			return _LeadTime;
		}
		set
		{
			if(_LeadTime != value)
			{
				OnLeadTimeChanging(value);
				_LeadTime = value;
				OnLeadTimeChanged();
			}
		}
	}
	private string _LeadTime;

	partial void OnLeadTimeChanging(string newValue);
	partial void OnLeadTimeChanged();

    public string Description 
	{ 
		get
		{
			return _Description;
		}
		set
		{
			if(_Description != value)
			{
				OnDescriptionChanging(value);
				_Description = value;
				OnDescriptionChanged();
			}
		}
	}
	private string _Description;

	partial void OnDescriptionChanging(string newValue);
	partial void OnDescriptionChanged();

    public Nullable<decimal> RegisterByCustomerID 
	{ 
		get
		{
			return _RegisterByCustomerID;
		}
		set
		{
			if(_RegisterByCustomerID != value)
			{
				OnRegisterByCustomerIDChanging(value);
				_RegisterByCustomerID = value;
				OnRegisterByCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _RegisterByCustomerID;

	partial void OnRegisterByCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnRegisterByCustomerIDChanged();

    public Nullable<bool> SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private Nullable<bool> _SyncStatus;

	partial void OnSyncStatusChanging(Nullable<bool> newValue);
	partial void OnSyncStatusChanged();

    public Nullable<int> AssetBrandID 
	{ 
		get
		{
			return _AssetBrandID;
		}
		set
		{
			if(_AssetBrandID != value)
			{
				OnAssetBrandIDChanging(value);
				_AssetBrandID = value;
				OnAssetBrandIDChanged();
			}
		}
	}
	private Nullable<int> _AssetBrandID;

	partial void OnAssetBrandIDChanging(Nullable<int> newValue);
	partial void OnAssetBrandIDChanged();

    public Nullable<int> AssetSizeID 
	{ 
		get
		{
			return _AssetSizeID;
		}
		set
		{
			if(_AssetSizeID != value)
			{
				OnAssetSizeIDChanging(value);
				_AssetSizeID = value;
				OnAssetSizeIDChanged();
			}
		}
	}
	private Nullable<int> _AssetSizeID;

	partial void OnAssetSizeIDChanging(Nullable<int> newValue);
	partial void OnAssetSizeIDChanged();

    public string AssetSubnumber 
	{ 
		get
		{
			return _AssetSubnumber;
		}
		set
		{
			if(_AssetSubnumber != value)
			{
				OnAssetSubnumberChanging(value);
				_AssetSubnumber = value;
				OnAssetSubnumberChanged();
			}
		}
	}
	private string _AssetSubnumber;

	partial void OnAssetSubnumberChanging(string newValue);
	partial void OnAssetSubnumberChanged();

    public string ObjectType 
	{ 
		get
		{
			return _ObjectType;
		}
		set
		{
			if(_ObjectType != value)
			{
				OnObjectTypeChanging(value);
				_ObjectType = value;
				OnObjectTypeChanged();
			}
		}
	}
	private string _ObjectType;

	partial void OnObjectTypeChanging(string newValue);
	partial void OnObjectTypeChanged();

    public string Location 
	{ 
		get
		{
			return _Location;
		}
		set
		{
			if(_Location != value)
			{
				OnLocationChanging(value);
				_Location = value;
				OnLocationChanged();
			}
		}
	}
	private string _Location;

	partial void OnLocationChanging(string newValue);
	partial void OnLocationChanged();

    public string PlantSection 
	{ 
		get
		{
			return _PlantSection;
		}
		set
		{
			if(_PlantSection != value)
			{
				OnPlantSectionChanging(value);
				_PlantSection = value;
				OnPlantSectionChanged();
			}
		}
	}
	private string _PlantSection;

	partial void OnPlantSectionChanging(string newValue);
	partial void OnPlantSectionChanged();

    public string PlannerGroup 
	{ 
		get
		{
			return _PlannerGroup;
		}
		set
		{
			if(_PlannerGroup != value)
			{
				OnPlannerGroupChanging(value);
				_PlannerGroup = value;
				OnPlannerGroupChanged();
			}
		}
	}
	private string _PlannerGroup;

	partial void OnPlannerGroupChanging(string newValue);
	partial void OnPlannerGroupChanged();

    public string CostCenter 
	{ 
		get
		{
			return _CostCenter;
		}
		set
		{
			if(_CostCenter != value)
			{
				OnCostCenterChanging(value);
				_CostCenter = value;
				OnCostCenterChanged();
			}
		}
	}
	private string _CostCenter;

	partial void OnCostCenterChanging(string newValue);
	partial void OnCostCenterChanged();

    public Nullable<System.DateTime> AcqDate 
	{ 
		get
		{
			return _AcqDate;
		}
		set
		{
			if(_AcqDate != value)
			{
				OnAcqDateChanging(value);
				_AcqDate = value;
				OnAcqDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _AcqDate;

	partial void OnAcqDateChanging(Nullable<System.DateTime> newValue);
	partial void OnAcqDateChanged();

    public Nullable<System.DateTime> ValidDate 
	{ 
		get
		{
			return _ValidDate;
		}
		set
		{
			if(_ValidDate != value)
			{
				OnValidDateChanging(value);
				_ValidDate = value;
				OnValidDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ValidDate;

	partial void OnValidDateChanging(Nullable<System.DateTime> newValue);
	partial void OnValidDateChanged();

    public string ABCIndicator 
	{ 
		get
		{
			return _ABCIndicator;
		}
		set
		{
			if(_ABCIndicator != value)
			{
				OnABCIndicatorChanging(value);
				_ABCIndicator = value;
				OnABCIndicatorChanged();
			}
		}
	}
	private string _ABCIndicator;

	partial void OnABCIndicatorChanging(string newValue);
	partial void OnABCIndicatorChanged();

    public Nullable<int> PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private Nullable<int> _PlantID;

	partial void OnPlantIDChanging(Nullable<int> newValue);
	partial void OnPlantIDChanged();

    public string StorageLoc 
	{ 
		get
		{
			return _StorageLoc;
		}
		set
		{
			if(_StorageLoc != value)
			{
				OnStorageLocChanging(value);
				_StorageLoc = value;
				OnStorageLocChanged();
			}
		}
	}
	private string _StorageLoc;

	partial void OnStorageLocChanging(string newValue);
	partial void OnStorageLocChanged();

    public string SplStock 
	{ 
		get
		{
			return _SplStock;
		}
		set
		{
			if(_SplStock != value)
			{
				OnSplStockChanging(value);
				_SplStock = value;
				OnSplStockChanged();
			}
		}
	}
	private string _SplStock;

	partial void OnSplStockChanging(string newValue);
	partial void OnSplStockChanged();

    public Nullable<decimal> Volume 
	{ 
		get
		{
			return _Volume;
		}
		set
		{
			if(_Volume != value)
			{
				OnVolumeChanging(value);
				_Volume = value;
				OnVolumeChanged();
			}
		}
	}
	private Nullable<decimal> _Volume;

	partial void OnVolumeChanging(Nullable<decimal> newValue);
	partial void OnVolumeChanged();

    public Nullable<System.DateTime> AssetCapDate 
	{ 
		get
		{
			return _AssetCapDate;
		}
		set
		{
			if(_AssetCapDate != value)
			{
				OnAssetCapDateChanging(value);
				_AssetCapDate = value;
				OnAssetCapDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _AssetCapDate;

	partial void OnAssetCapDateChanging(Nullable<System.DateTime> newValue);
	partial void OnAssetCapDateChanged();

    public Nullable<int> PreventiveDays 
	{ 
		get
		{
			return _PreventiveDays;
		}
		set
		{
			if(_PreventiveDays != value)
			{
				OnPreventiveDaysChanging(value);
				_PreventiveDays = value;
				OnPreventiveDaysChanged();
			}
		}
	}
	private Nullable<int> _PreventiveDays;

	partial void OnPreventiveDaysChanging(Nullable<int> newValue);
	partial void OnPreventiveDaysChanged();

    public Nullable<int> MechanicEmpID 
	{ 
		get
		{
			return _MechanicEmpID;
		}
		set
		{
			if(_MechanicEmpID != value)
			{
				OnMechanicEmpIDChanging(value);
				_MechanicEmpID = value;
				OnMechanicEmpIDChanged();
			}
		}
	}
	private Nullable<int> _MechanicEmpID;

	partial void OnMechanicEmpIDChanging(Nullable<int> newValue);
	partial void OnMechanicEmpIDChanged();

    public Nullable<System.DateTime> LastMaintainanceDate 
	{ 
		get
		{
			return _LastMaintainanceDate;
		}
		set
		{
			if(_LastMaintainanceDate != value)
			{
				OnLastMaintainanceDateChanging(value);
				_LastMaintainanceDate = value;
				OnLastMaintainanceDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _LastMaintainanceDate;

	partial void OnLastMaintainanceDateChanging(Nullable<System.DateTime> newValue);
	partial void OnLastMaintainanceDateChanged();

    public string PlannerName 
	{ 
		get
		{
			return _PlannerName;
		}
		set
		{
			if(_PlannerName != value)
			{
				OnPlannerNameChanging(value);
				_PlannerName = value;
				OnPlannerNameChanged();
			}
		}
	}
	private string _PlannerName;

	partial void OnPlannerNameChanging(string newValue);
	partial void OnPlannerNameChanged();

    public Nullable<int> StorageLocID 
	{ 
		get
		{
			return _StorageLocID;
		}
		set
		{
			if(_StorageLocID != value)
			{
				OnStorageLocIDChanging(value);
				_StorageLocID = value;
				OnStorageLocIDChanged();
			}
		}
	}
	private Nullable<int> _StorageLocID;

	partial void OnStorageLocIDChanging(Nullable<int> newValue);
	partial void OnStorageLocIDChanged();

    public string Room 
	{ 
		get
		{
			return _Room;
		}
		set
		{
			if(_Room != value)
			{
				OnRoomChanging(value);
				_Room = value;
				OnRoomChanged();
			}
		}
	}
	private string _Room;

	partial void OnRoomChanging(string newValue);
	partial void OnRoomChanged();

    public string SortField 
	{ 
		get
		{
			return _SortField;
		}
		set
		{
			if(_SortField != value)
			{
				OnSortFieldChanging(value);
				_SortField = value;
				OnSortFieldChanged();
			}
		}
	}
	private string _SortField;

	partial void OnSortFieldChanging(string newValue);
	partial void OnSortFieldChanged();

    public string Brand 
	{ 
		get
		{
			return _Brand;
		}
		set
		{
			if(_Brand != value)
			{
				OnBrandChanging(value);
				_Brand = value;
				OnBrandChanged();
			}
		}
	}
	private string _Brand;

	partial void OnBrandChanging(string newValue);
	partial void OnBrandChanged();
}

[Serializable]
public partial class OASTP : ObjectWithState
{

    public int AssetApproveID 
	{ 
		get
		{
			return _AssetApproveID;
		}
		set
		{
			if(_AssetApproveID != value)
			{
				OnAssetApproveIDChanging(value);
				_AssetApproveID = value;
				OnAssetApproveIDChanged();
			}
		}
	}
	private int _AssetApproveID;

	partial void OnAssetApproveIDChanging(int newValue);
	partial void OnAssetApproveIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public int AsseRequsttID 
	{ 
		get
		{
			return _AsseRequsttID;
		}
		set
		{
			if(_AsseRequsttID != value)
			{
				OnAsseRequsttIDChanging(value);
				_AsseRequsttID = value;
				OnAsseRequsttIDChanged();
			}
		}
	}
	private int _AsseRequsttID;

	partial void OnAsseRequsttIDChanging(int newValue);
	partial void OnAsseRequsttIDChanged();

    public int AssetTypeID 
	{ 
		get
		{
			return _AssetTypeID;
		}
		set
		{
			if(_AssetTypeID != value)
			{
				OnAssetTypeIDChanging(value);
				_AssetTypeID = value;
				OnAssetTypeIDChanged();
			}
		}
	}
	private int _AssetTypeID;

	partial void OnAssetTypeIDChanging(int newValue);
	partial void OnAssetTypeIDChanged();

    public int AssetSubTypeID 
	{ 
		get
		{
			return _AssetSubTypeID;
		}
		set
		{
			if(_AssetSubTypeID != value)
			{
				OnAssetSubTypeIDChanging(value);
				_AssetSubTypeID = value;
				OnAssetSubTypeIDChanged();
			}
		}
	}
	private int _AssetSubTypeID;

	partial void OnAssetSubTypeIDChanging(int newValue);
	partial void OnAssetSubTypeIDChanged();

    public int AssetBrandID 
	{ 
		get
		{
			return _AssetBrandID;
		}
		set
		{
			if(_AssetBrandID != value)
			{
				OnAssetBrandIDChanging(value);
				_AssetBrandID = value;
				OnAssetBrandIDChanged();
			}
		}
	}
	private int _AssetBrandID;

	partial void OnAssetBrandIDChanging(int newValue);
	partial void OnAssetBrandIDChanged();

    public int AssetSizeID 
	{ 
		get
		{
			return _AssetSizeID;
		}
		set
		{
			if(_AssetSizeID != value)
			{
				OnAssetSizeIDChanging(value);
				_AssetSizeID = value;
				OnAssetSizeIDChanged();
			}
		}
	}
	private int _AssetSizeID;

	partial void OnAssetSizeIDChanging(int newValue);
	partial void OnAssetSizeIDChanged();

    public int AssetConditionID 
	{ 
		get
		{
			return _AssetConditionID;
		}
		set
		{
			if(_AssetConditionID != value)
			{
				OnAssetConditionIDChanging(value);
				_AssetConditionID = value;
				OnAssetConditionIDChanged();
			}
		}
	}
	private int _AssetConditionID;

	partial void OnAssetConditionIDChanging(int newValue);
	partial void OnAssetConditionIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public decimal AppQty 
	{ 
		get
		{
			return _AppQty;
		}
		set
		{
			if(_AppQty != value)
			{
				OnAppQtyChanging(value);
				_AppQty = value;
				OnAppQtyChanged();
			}
		}
	}
	private decimal _AppQty;

	partial void OnAppQtyChanging(decimal newValue);
	partial void OnAppQtyChanged();

    public decimal AppAmount 
	{ 
		get
		{
			return _AppAmount;
		}
		set
		{
			if(_AppAmount != value)
			{
				OnAppAmountChanging(value);
				_AppAmount = value;
				OnAppAmountChanged();
			}
		}
	}
	private decimal _AppAmount;

	partial void OnAppAmountChanging(decimal newValue);
	partial void OnAppAmountChanged();

    public Nullable<decimal> PrevAmount 
	{ 
		get
		{
			return _PrevAmount;
		}
		set
		{
			if(_PrevAmount != value)
			{
				OnPrevAmountChanging(value);
				_PrevAmount = value;
				OnPrevAmountChanged();
			}
		}
	}
	private Nullable<decimal> _PrevAmount;

	partial void OnPrevAmountChanging(Nullable<decimal> newValue);
	partial void OnPrevAmountChanged();

    public decimal AvailBudget 
	{ 
		get
		{
			return _AvailBudget;
		}
		set
		{
			if(_AvailBudget != value)
			{
				OnAvailBudgetChanging(value);
				_AvailBudget = value;
				OnAvailBudgetChanged();
			}
		}
	}
	private decimal _AvailBudget;

	partial void OnAvailBudgetChanging(decimal newValue);
	partial void OnAvailBudgetChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> NextManagerID 
	{ 
		get
		{
			return _NextManagerID;
		}
		set
		{
			if(_NextManagerID != value)
			{
				OnNextManagerIDChanging(value);
				_NextManagerID = value;
				OnNextManagerIDChanged();
			}
		}
	}
	private Nullable<int> _NextManagerID;

	partial void OnNextManagerIDChanging(Nullable<int> newValue);
	partial void OnNextManagerIDChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public Nullable<int> DOAFinalStatus 
	{ 
		get
		{
			return _DOAFinalStatus;
		}
		set
		{
			if(_DOAFinalStatus != value)
			{
				OnDOAFinalStatusChanging(value);
				_DOAFinalStatus = value;
				OnDOAFinalStatusChanged();
			}
		}
	}
	private Nullable<int> _DOAFinalStatus;

	partial void OnDOAFinalStatusChanging(Nullable<int> newValue);
	partial void OnDOAFinalStatusChanged();
}

[Serializable]
public partial class OASTQ : ObjectWithState
{

    public int AsseRequsttID 
	{ 
		get
		{
			return _AsseRequsttID;
		}
		set
		{
			if(_AsseRequsttID != value)
			{
				OnAsseRequsttIDChanging(value);
				_AsseRequsttID = value;
				OnAsseRequsttIDChanged();
			}
		}
	}
	private int _AsseRequsttID;

	partial void OnAsseRequsttIDChanging(int newValue);
	partial void OnAsseRequsttIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int AssetTypeID 
	{ 
		get
		{
			return _AssetTypeID;
		}
		set
		{
			if(_AssetTypeID != value)
			{
				OnAssetTypeIDChanging(value);
				_AssetTypeID = value;
				OnAssetTypeIDChanged();
			}
		}
	}
	private int _AssetTypeID;

	partial void OnAssetTypeIDChanging(int newValue);
	partial void OnAssetTypeIDChanged();

    public int AssetSubTypeID 
	{ 
		get
		{
			return _AssetSubTypeID;
		}
		set
		{
			if(_AssetSubTypeID != value)
			{
				OnAssetSubTypeIDChanging(value);
				_AssetSubTypeID = value;
				OnAssetSubTypeIDChanged();
			}
		}
	}
	private int _AssetSubTypeID;

	partial void OnAssetSubTypeIDChanging(int newValue);
	partial void OnAssetSubTypeIDChanged();

    public int AssetBrandID 
	{ 
		get
		{
			return _AssetBrandID;
		}
		set
		{
			if(_AssetBrandID != value)
			{
				OnAssetBrandIDChanging(value);
				_AssetBrandID = value;
				OnAssetBrandIDChanged();
			}
		}
	}
	private int _AssetBrandID;

	partial void OnAssetBrandIDChanging(int newValue);
	partial void OnAssetBrandIDChanged();

    public int AssetSizeID 
	{ 
		get
		{
			return _AssetSizeID;
		}
		set
		{
			if(_AssetSizeID != value)
			{
				OnAssetSizeIDChanging(value);
				_AssetSizeID = value;
				OnAssetSizeIDChanged();
			}
		}
	}
	private int _AssetSizeID;

	partial void OnAssetSizeIDChanging(int newValue);
	partial void OnAssetSizeIDChanged();

    public int AssetConditionID 
	{ 
		get
		{
			return _AssetConditionID;
		}
		set
		{
			if(_AssetConditionID != value)
			{
				OnAssetConditionIDChanging(value);
				_AssetConditionID = value;
				OnAssetConditionIDChanged();
			}
		}
	}
	private int _AssetConditionID;

	partial void OnAssetConditionIDChanging(int newValue);
	partial void OnAssetConditionIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public decimal Qty 
	{ 
		get
		{
			return _Qty;
		}
		set
		{
			if(_Qty != value)
			{
				OnQtyChanging(value);
				_Qty = value;
				OnQtyChanged();
			}
		}
	}
	private decimal _Qty;

	partial void OnQtyChanging(decimal newValue);
	partial void OnQtyChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public decimal Amount 
	{ 
		get
		{
			return _Amount;
		}
		set
		{
			if(_Amount != value)
			{
				OnAmountChanging(value);
				_Amount = value;
				OnAmountChanged();
			}
		}
	}
	private decimal _Amount;

	partial void OnAmountChanging(decimal newValue);
	partial void OnAmountChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> NextManagerID 
	{ 
		get
		{
			return _NextManagerID;
		}
		set
		{
			if(_NextManagerID != value)
			{
				OnNextManagerIDChanging(value);
				_NextManagerID = value;
				OnNextManagerIDChanged();
			}
		}
	}
	private Nullable<int> _NextManagerID;

	partial void OnNextManagerIDChanging(Nullable<int> newValue);
	partial void OnNextManagerIDChanged();

    public Nullable<int> BudgeterID 
	{ 
		get
		{
			return _BudgeterID;
		}
		set
		{
			if(_BudgeterID != value)
			{
				OnBudgeterIDChanging(value);
				_BudgeterID = value;
				OnBudgeterIDChanged();
			}
		}
	}
	private Nullable<int> _BudgeterID;

	partial void OnBudgeterIDChanging(Nullable<int> newValue);
	partial void OnBudgeterIDChanged();

    public System.DateTime ApplicationDate 
	{ 
		get
		{
			return _ApplicationDate;
		}
		set
		{
			if(_ApplicationDate != value)
			{
				OnApplicationDateChanging(value);
				_ApplicationDate = value;
				OnApplicationDateChanged();
			}
		}
	}
	private System.DateTime _ApplicationDate;

	partial void OnApplicationDateChanging(System.DateTime newValue);
	partial void OnApplicationDateChanged();

    public Nullable<decimal> ExpectedSell 
	{ 
		get
		{
			return _ExpectedSell;
		}
		set
		{
			if(_ExpectedSell != value)
			{
				OnExpectedSellChanging(value);
				_ExpectedSell = value;
				OnExpectedSellChanged();
			}
		}
	}
	private Nullable<decimal> _ExpectedSell;

	partial void OnExpectedSellChanging(Nullable<decimal> newValue);
	partial void OnExpectedSellChanged();

    public Nullable<int> TotalReqQty 
	{ 
		get
		{
			return _TotalReqQty;
		}
		set
		{
			if(_TotalReqQty != value)
			{
				OnTotalReqQtyChanging(value);
				_TotalReqQty = value;
				OnTotalReqQtyChanged();
			}
		}
	}
	private Nullable<int> _TotalReqQty;

	partial void OnTotalReqQtyChanging(Nullable<int> newValue);
	partial void OnTotalReqQtyChanged();

    public string AssetConditionSubType 
	{ 
		get
		{
			return _AssetConditionSubType;
		}
		set
		{
			if(_AssetConditionSubType != value)
			{
				OnAssetConditionSubTypeChanging(value);
				_AssetConditionSubType = value;
				OnAssetConditionSubTypeChanged();
			}
		}
	}
	private string _AssetConditionSubType;

	partial void OnAssetConditionSubTypeChanging(string newValue);
	partial void OnAssetConditionSubTypeChanged();

    public Nullable<int> ApprovedStatus 
	{ 
		get
		{
			return _ApprovedStatus;
		}
		set
		{
			if(_ApprovedStatus != value)
			{
				OnApprovedStatusChanging(value);
				_ApprovedStatus = value;
				OnApprovedStatusChanged();
			}
		}
	}
	private Nullable<int> _ApprovedStatus;

	partial void OnApprovedStatusChanging(Nullable<int> newValue);
	partial void OnApprovedStatusChanged();

    public Nullable<int> ApprovedBy 
	{ 
		get
		{
			return _ApprovedBy;
		}
		set
		{
			if(_ApprovedBy != value)
			{
				OnApprovedByChanging(value);
				_ApprovedBy = value;
				OnApprovedByChanged();
			}
		}
	}
	private Nullable<int> _ApprovedBy;

	partial void OnApprovedByChanging(Nullable<int> newValue);
	partial void OnApprovedByChanged();

    public Nullable<System.DateTime> ApprovedDate 
	{ 
		get
		{
			return _ApprovedDate;
		}
		set
		{
			if(_ApprovedDate != value)
			{
				OnApprovedDateChanging(value);
				_ApprovedDate = value;
				OnApprovedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ApprovedDate;

	partial void OnApprovedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnApprovedDateChanged();

    public Nullable<int> DALStatus 
	{ 
		get
		{
			return _DALStatus;
		}
		set
		{
			if(_DALStatus != value)
			{
				OnDALStatusChanging(value);
				_DALStatus = value;
				OnDALStatusChanged();
			}
		}
	}
	private Nullable<int> _DALStatus;

	partial void OnDALStatusChanging(Nullable<int> newValue);
	partial void OnDALStatusChanged();
}

[Serializable]
public partial class OASTR : ObjectWithState
{
    public OASTR() 
    { 
        this.OASTFs = new HashSet<OASTF>();
    }


    public int AssetTransferReasonID 
	{ 
		get
		{
			return _AssetTransferReasonID;
		}
		set
		{
			if(_AssetTransferReasonID != value)
			{
				OnAssetTransferReasonIDChanging(value);
				_AssetTransferReasonID = value;
				OnAssetTransferReasonIDChanged();
			}
		}
	}
	private int _AssetTransferReasonID;

	partial void OnAssetTransferReasonIDChanging(int newValue);
	partial void OnAssetTransferReasonIDChanged();

    public string AssetTransferReasonName 
	{ 
		get
		{
			return _AssetTransferReasonName;
		}
		set
		{
			if(_AssetTransferReasonName != value)
			{
				OnAssetTransferReasonNameChanging(value);
				_AssetTransferReasonName = value;
				OnAssetTransferReasonNameChanged();
			}
		}
	}
	private string _AssetTransferReasonName;

	partial void OnAssetTransferReasonNameChanging(string newValue);
	partial void OnAssetTransferReasonNameChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDefault 
	{ 
		get
		{
			return _IsDefault;
		}
		set
		{
			if(_IsDefault != value)
			{
				OnIsDefaultChanging(value);
				_IsDefault = value;
				OnIsDefaultChanged();
			}
		}
	}
	private bool _IsDefault;

	partial void OnIsDefaultChanging(bool newValue);
	partial void OnIsDefaultChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<OASTF> OASTFs { get; set; }
}

[Serializable]
public partial class OASTU : ObjectWithState
{
    public OASTU() 
    { 
        this.OASTFs = new HashSet<OASTF>();
        this.ASTCFs = new HashSet<ASTCF>();
        this.MSTCFs = new HashSet<MSTCF>();
        this.OASTs = new HashSet<OAST>();
    }


    public int AssetStatusID 
	{ 
		get
		{
			return _AssetStatusID;
		}
		set
		{
			if(_AssetStatusID != value)
			{
				OnAssetStatusIDChanging(value);
				_AssetStatusID = value;
				OnAssetStatusIDChanged();
			}
		}
	}
	private int _AssetStatusID;

	partial void OnAssetStatusIDChanging(int newValue);
	partial void OnAssetStatusIDChanged();

    public string AssetStatusName 
	{ 
		get
		{
			return _AssetStatusName;
		}
		set
		{
			if(_AssetStatusName != value)
			{
				OnAssetStatusNameChanging(value);
				_AssetStatusName = value;
				OnAssetStatusNameChanged();
			}
		}
	}
	private string _AssetStatusName;

	partial void OnAssetStatusNameChanging(string newValue);
	partial void OnAssetStatusNameChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDefault 
	{ 
		get
		{
			return _IsDefault;
		}
		set
		{
			if(_IsDefault != value)
			{
				OnIsDefaultChanging(value);
				_IsDefault = value;
				OnIsDefaultChanged();
			}
		}
	}
	private bool _IsDefault;

	partial void OnIsDefaultChanging(bool newValue);
	partial void OnIsDefaultChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<OASTF> OASTFs { get; set; }
    public virtual ICollection<ASTCF> ASTCFs { get; set; }
    public virtual ICollection<MSTCF> MSTCFs { get; set; }
    public virtual ICollection<OAST> OASTs { get; set; }
}

[Serializable]
public partial class OASTY : ObjectWithState
{
    public OASTY() 
    { 
        this.OASTs = new HashSet<OAST>();
        this.OASTYBs = new HashSet<OASTYB>();
    }


    public int AssetTypeID 
	{ 
		get
		{
			return _AssetTypeID;
		}
		set
		{
			if(_AssetTypeID != value)
			{
				OnAssetTypeIDChanging(value);
				_AssetTypeID = value;
				OnAssetTypeIDChanged();
			}
		}
	}
	private int _AssetTypeID;

	partial void OnAssetTypeIDChanging(int newValue);
	partial void OnAssetTypeIDChanged();

    public string AssetTypeName 
	{ 
		get
		{
			return _AssetTypeName;
		}
		set
		{
			if(_AssetTypeName != value)
			{
				OnAssetTypeNameChanging(value);
				_AssetTypeName = value;
				OnAssetTypeNameChanged();
			}
		}
	}
	private string _AssetTypeName;

	partial void OnAssetTypeNameChanging(string newValue);
	partial void OnAssetTypeNameChanged();

    public string AssetTypeCode 
	{ 
		get
		{
			return _AssetTypeCode;
		}
		set
		{
			if(_AssetTypeCode != value)
			{
				OnAssetTypeCodeChanging(value);
				_AssetTypeCode = value;
				OnAssetTypeCodeChanged();
			}
		}
	}
	private string _AssetTypeCode;

	partial void OnAssetTypeCodeChanging(string newValue);
	partial void OnAssetTypeCodeChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDefault 
	{ 
		get
		{
			return _IsDefault;
		}
		set
		{
			if(_IsDefault != value)
			{
				OnIsDefaultChanging(value);
				_IsDefault = value;
				OnIsDefaultChanged();
			}
		}
	}
	private bool _IsDefault;

	partial void OnIsDefaultChanging(bool newValue);
	partial void OnIsDefaultChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<OAST> OASTs { get; set; }
    public virtual ICollection<OASTYB> OASTYBs { get; set; }
}

[Serializable]
public partial class OASTYB : ObjectWithState
{
    public OASTYB() 
    { 
        this.OASTZs = new HashSet<OASTZ>();
    }


    public int AssetSubTypeID 
	{ 
		get
		{
			return _AssetSubTypeID;
		}
		set
		{
			if(_AssetSubTypeID != value)
			{
				OnAssetSubTypeIDChanging(value);
				_AssetSubTypeID = value;
				OnAssetSubTypeIDChanged();
			}
		}
	}
	private int _AssetSubTypeID;

	partial void OnAssetSubTypeIDChanging(int newValue);
	partial void OnAssetSubTypeIDChanged();

    public string AssetSubTypeName 
	{ 
		get
		{
			return _AssetSubTypeName;
		}
		set
		{
			if(_AssetSubTypeName != value)
			{
				OnAssetSubTypeNameChanging(value);
				_AssetSubTypeName = value;
				OnAssetSubTypeNameChanged();
			}
		}
	}
	private string _AssetSubTypeName;

	partial void OnAssetSubTypeNameChanging(string newValue);
	partial void OnAssetSubTypeNameChanged();

    public string AssetSubTypeCode 
	{ 
		get
		{
			return _AssetSubTypeCode;
		}
		set
		{
			if(_AssetSubTypeCode != value)
			{
				OnAssetSubTypeCodeChanging(value);
				_AssetSubTypeCode = value;
				OnAssetSubTypeCodeChanged();
			}
		}
	}
	private string _AssetSubTypeCode;

	partial void OnAssetSubTypeCodeChanging(string newValue);
	partial void OnAssetSubTypeCodeChanged();

    public int AssetTypeID 
	{ 
		get
		{
			return _AssetTypeID;
		}
		set
		{
			if(_AssetTypeID != value)
			{
				OnAssetTypeIDChanging(value);
				_AssetTypeID = value;
				OnAssetTypeIDChanged();
			}
		}
	}
	private int _AssetTypeID;

	partial void OnAssetTypeIDChanging(int newValue);
	partial void OnAssetTypeIDChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDefault 
	{ 
		get
		{
			return _IsDefault;
		}
		set
		{
			if(_IsDefault != value)
			{
				OnIsDefaultChanging(value);
				_IsDefault = value;
				OnIsDefaultChanged();
			}
		}
	}
	private bool _IsDefault;

	partial void OnIsDefaultChanging(bool newValue);
	partial void OnIsDefaultChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<OASTZ> OASTZs { get; set; }
    public virtual OASTY OASTY { get; set; }
}

[Serializable]
public partial class OASTZ : ObjectWithState
{
    public OASTZ() 
    { 
        this.EXASTs = new HashSet<EXAST>();
        this.OASTBs = new HashSet<OASTB>();
        this.OASTs = new HashSet<OAST>();
    }


    public int AssetSizeID 
	{ 
		get
		{
			return _AssetSizeID;
		}
		set
		{
			if(_AssetSizeID != value)
			{
				OnAssetSizeIDChanging(value);
				_AssetSizeID = value;
				OnAssetSizeIDChanged();
			}
		}
	}
	private int _AssetSizeID;

	partial void OnAssetSizeIDChanging(int newValue);
	partial void OnAssetSizeIDChanged();

    public string AssetSizeName 
	{ 
		get
		{
			return _AssetSizeName;
		}
		set
		{
			if(_AssetSizeName != value)
			{
				OnAssetSizeNameChanging(value);
				_AssetSizeName = value;
				OnAssetSizeNameChanged();
			}
		}
	}
	private string _AssetSizeName;

	partial void OnAssetSizeNameChanging(string newValue);
	partial void OnAssetSizeNameChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDefault 
	{ 
		get
		{
			return _IsDefault;
		}
		set
		{
			if(_IsDefault != value)
			{
				OnIsDefaultChanging(value);
				_IsDefault = value;
				OnIsDefaultChanged();
			}
		}
	}
	private bool _IsDefault;

	partial void OnIsDefaultChanging(bool newValue);
	partial void OnIsDefaultChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public int AssetSubTypeID 
	{ 
		get
		{
			return _AssetSubTypeID;
		}
		set
		{
			if(_AssetSubTypeID != value)
			{
				OnAssetSubTypeIDChanging(value);
				_AssetSubTypeID = value;
				OnAssetSubTypeIDChanged();
			}
		}
	}
	private int _AssetSubTypeID;

	partial void OnAssetSubTypeIDChanging(int newValue);
	partial void OnAssetSubTypeIDChanged();

    public virtual ICollection<EXAST> EXASTs { get; set; }
    public virtual ICollection<OASTB> OASTBs { get; set; }
    public virtual OASTYB OASTYB { get; set; }
    public virtual ICollection<OAST> OASTs { get; set; }
}

[Serializable]
public partial class OATSTU : ObjectWithState
{

    public int OATSTUID 
	{ 
		get
		{
			return _OATSTUID;
		}
		set
		{
			if(_OATSTUID != value)
			{
				OnOATSTUIDChanging(value);
				_OATSTUID = value;
				OnOATSTUIDChanged();
			}
		}
	}
	private int _OATSTUID;

	partial void OnOATSTUIDChanging(int newValue);
	partial void OnOATSTUIDChanged();

    public string Code 
	{ 
		get
		{
			return _Code;
		}
		set
		{
			if(_Code != value)
			{
				OnCodeChanging(value);
				_Code = value;
				OnCodeChanged();
			}
		}
	}
	private string _Code;

	partial void OnCodeChanging(string newValue);
	partial void OnCodeChanged();

    public string FullName 
	{ 
		get
		{
			return _FullName;
		}
		set
		{
			if(_FullName != value)
			{
				OnFullNameChanging(value);
				_FullName = value;
				OnFullNameChanged();
			}
		}
	}
	private string _FullName;

	partial void OnFullNameChanging(string newValue);
	partial void OnFullNameChanged();

    public decimal StartTime 
	{ 
		get
		{
			return _StartTime;
		}
		set
		{
			if(_StartTime != value)
			{
				OnStartTimeChanging(value);
				_StartTime = value;
				OnStartTimeChanged();
			}
		}
	}
	private decimal _StartTime;

	partial void OnStartTimeChanging(decimal newValue);
	partial void OnStartTimeChanged();

    public decimal EndTime 
	{ 
		get
		{
			return _EndTime;
		}
		set
		{
			if(_EndTime != value)
			{
				OnEndTimeChanging(value);
				_EndTime = value;
				OnEndTimeChanged();
			}
		}
	}
	private decimal _EndTime;

	partial void OnEndTimeChanging(decimal newValue);
	partial void OnEndTimeChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();
}

[Serializable]
public partial class OATT : ObjectWithState
{

    public int AttachmentID 
	{ 
		get
		{
			return _AttachmentID;
		}
		set
		{
			if(_AttachmentID != value)
			{
				OnAttachmentIDChanging(value);
				_AttachmentID = value;
				OnAttachmentIDChanged();
			}
		}
	}
	private int _AttachmentID;

	partial void OnAttachmentIDChanging(int newValue);
	partial void OnAttachmentIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public System.DateTime Date 
	{ 
		get
		{
			return _Date;
		}
		set
		{
			if(_Date != value)
			{
				OnDateChanging(value);
				_Date = value;
				OnDateChanged();
			}
		}
	}
	private System.DateTime _Date;

	partial void OnDateChanging(System.DateTime newValue);
	partial void OnDateChanged();

    public Nullable<System.DateTime> ReminderDate 
	{ 
		get
		{
			return _ReminderDate;
		}
		set
		{
			if(_ReminderDate != value)
			{
				OnReminderDateChanging(value);
				_ReminderDate = value;
				OnReminderDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ReminderDate;

	partial void OnReminderDateChanging(Nullable<System.DateTime> newValue);
	partial void OnReminderDateChanged();

    public string Attachment 
	{ 
		get
		{
			return _Attachment;
		}
		set
		{
			if(_Attachment != value)
			{
				OnAttachmentChanging(value);
				_Attachment = value;
				OnAttachmentChanged();
			}
		}
	}
	private string _Attachment;

	partial void OnAttachmentChanging(string newValue);
	partial void OnAttachmentChanged();

    public string Image 
	{ 
		get
		{
			return _Image;
		}
		set
		{
			if(_Image != value)
			{
				OnImageChanging(value);
				_Image = value;
				OnImageChanged();
			}
		}
	}
	private string _Image;

	partial void OnImageChanging(string newValue);
	partial void OnImageChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public int MainID 
	{ 
		get
		{
			return _MainID;
		}
		set
		{
			if(_MainID != value)
			{
				OnMainIDChanging(value);
				_MainID = value;
				OnMainIDChanged();
			}
		}
	}
	private int _MainID;

	partial void OnMainIDChanging(int newValue);
	partial void OnMainIDChanged();

    public string TableName 
	{ 
		get
		{
			return _TableName;
		}
		set
		{
			if(_TableName != value)
			{
				OnTableNameChanging(value);
				_TableName = value;
				OnTableNameChanged();
			}
		}
	}
	private string _TableName;

	partial void OnTableNameChanging(string newValue);
	partial void OnTableNameChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();
}

[Serializable]
public partial class OAWRK : ObjectWithState
{

    public int WorkID 
	{ 
		get
		{
			return _WorkID;
		}
		set
		{
			if(_WorkID != value)
			{
				OnWorkIDChanging(value);
				_WorkID = value;
				OnWorkIDChanged();
			}
		}
	}
	private int _WorkID;

	partial void OnWorkIDChanging(int newValue);
	partial void OnWorkIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int RequestTypeMenuID 
	{ 
		get
		{
			return _RequestTypeMenuID;
		}
		set
		{
			if(_RequestTypeMenuID != value)
			{
				OnRequestTypeMenuIDChanging(value);
				_RequestTypeMenuID = value;
				OnRequestTypeMenuIDChanged();
			}
		}
	}
	private int _RequestTypeMenuID;

	partial void OnRequestTypeMenuIDChanging(int newValue);
	partial void OnRequestTypeMenuIDChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> UserID 
	{ 
		get
		{
			return _UserID;
		}
		set
		{
			if(_UserID != value)
			{
				OnUserIDChanging(value);
				_UserID = value;
				OnUserIDChanged();
			}
		}
	}
	private Nullable<int> _UserID;

	partial void OnUserIDChanging(Nullable<int> newValue);
	partial void OnUserIDChanged();

    public bool IsManager 
	{ 
		get
		{
			return _IsManager;
		}
		set
		{
			if(_IsManager != value)
			{
				OnIsManagerChanging(value);
				_IsManager = value;
				OnIsManagerChanged();
			}
		}
	}
	private bool _IsManager;

	partial void OnIsManagerChanging(bool newValue);
	partial void OnIsManagerChanged();

    public bool IsAsk 
	{ 
		get
		{
			return _IsAsk;
		}
		set
		{
			if(_IsAsk != value)
			{
				OnIsAskChanging(value);
				_IsAsk = value;
				OnIsAskChanged();
			}
		}
	}
	private bool _IsAsk;

	partial void OnIsAskChanging(bool newValue);
	partial void OnIsAskChanged();

    public int EscDays 
	{ 
		get
		{
			return _EscDays;
		}
		set
		{
			if(_EscDays != value)
			{
				OnEscDaysChanging(value);
				_EscDays = value;
				OnEscDaysChanged();
			}
		}
	}
	private int _EscDays;

	partial void OnEscDaysChanging(int newValue);
	partial void OnEscDaysChanged();

    public bool Mandatory 
	{ 
		get
		{
			return _Mandatory;
		}
		set
		{
			if(_Mandatory != value)
			{
				OnMandatoryChanging(value);
				_Mandatory = value;
				OnMandatoryChanged();
			}
		}
	}
	private bool _Mandatory;

	partial void OnMandatoryChanging(bool newValue);
	partial void OnMandatoryChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public Nullable<int> EmpGrpID 
	{ 
		get
		{
			return _EmpGrpID;
		}
		set
		{
			if(_EmpGrpID != value)
			{
				OnEmpGrpIDChanging(value);
				_EmpGrpID = value;
				OnEmpGrpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpGrpID;

	partial void OnEmpGrpIDChanging(Nullable<int> newValue);
	partial void OnEmpGrpIDChanged();

    public Nullable<decimal> MaxLimit 
	{ 
		get
		{
			return _MaxLimit;
		}
		set
		{
			if(_MaxLimit != value)
			{
				OnMaxLimitChanging(value);
				_MaxLimit = value;
				OnMaxLimitChanged();
			}
		}
	}
	private Nullable<decimal> _MaxLimit;

	partial void OnMaxLimitChanging(Nullable<decimal> newValue);
	partial void OnMaxLimitChanged();

    public Nullable<decimal> MinLimit 
	{ 
		get
		{
			return _MinLimit;
		}
		set
		{
			if(_MinLimit != value)
			{
				OnMinLimitChanging(value);
				_MinLimit = value;
				OnMinLimitChanged();
			}
		}
	}
	private Nullable<decimal> _MinLimit;

	partial void OnMinLimitChanging(Nullable<decimal> newValue);
	partial void OnMinLimitChanged();
}

[Serializable]
public partial class OBNK : ObjectWithState
{

    public int BankId 
	{ 
		get
		{
			return _BankId;
		}
		set
		{
			if(_BankId != value)
			{
				OnBankIdChanging(value);
				_BankId = value;
				OnBankIdChanged();
			}
		}
	}
	private int _BankId;

	partial void OnBankIdChanging(int newValue);
	partial void OnBankIdChanged();

    public string BankCode 
	{ 
		get
		{
			return _BankCode;
		}
		set
		{
			if(_BankCode != value)
			{
				OnBankCodeChanging(value);
				_BankCode = value;
				OnBankCodeChanged();
			}
		}
	}
	private string _BankCode;

	partial void OnBankCodeChanging(string newValue);
	partial void OnBankCodeChanged();

    public string BankName 
	{ 
		get
		{
			return _BankName;
		}
		set
		{
			if(_BankName != value)
			{
				OnBankNameChanging(value);
				_BankName = value;
				OnBankNameChanged();
			}
		}
	}
	private string _BankName;

	partial void OnBankNameChanging(string newValue);
	partial void OnBankNameChanged();

    public Nullable<bool> IsActive 
	{ 
		get
		{
			return _IsActive;
		}
		set
		{
			if(_IsActive != value)
			{
				OnIsActiveChanging(value);
				_IsActive = value;
				OnIsActiveChanged();
			}
		}
	}
	private Nullable<bool> _IsActive;

	partial void OnIsActiveChanging(Nullable<bool> newValue);
	partial void OnIsActiveChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdateBy 
	{ 
		get
		{
			return _UpdateBy;
		}
		set
		{
			if(_UpdateBy != value)
			{
				OnUpdateByChanging(value);
				_UpdateBy = value;
				OnUpdateByChanged();
			}
		}
	}
	private Nullable<int> _UpdateBy;

	partial void OnUpdateByChanging(Nullable<int> newValue);
	partial void OnUpdateByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<bool> Deleted 
	{ 
		get
		{
			return _Deleted;
		}
		set
		{
			if(_Deleted != value)
			{
				OnDeletedChanging(value);
				_Deleted = value;
				OnDeletedChanged();
			}
		}
	}
	private Nullable<bool> _Deleted;

	partial void OnDeletedChanging(Nullable<bool> newValue);
	partial void OnDeletedChanged();
}

[Serializable]
public partial class OBOM : ObjectWithState
{
    public OBOM() 
    { 
        this.BOM1 = new HashSet<BOM1>();
    }


    public int BOMID 
	{ 
		get
		{
			return _BOMID;
		}
		set
		{
			if(_BOMID != value)
			{
				OnBOMIDChanging(value);
				_BOMID = value;
				OnBOMIDChanged();
			}
		}
	}
	private int _BOMID;

	partial void OnBOMIDChanging(int newValue);
	partial void OnBOMIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal Quantity 
	{ 
		get
		{
			return _Quantity;
		}
		set
		{
			if(_Quantity != value)
			{
				OnQuantityChanging(value);
				_Quantity = value;
				OnQuantityChanged();
			}
		}
	}
	private decimal _Quantity;

	partial void OnQuantityChanging(decimal newValue);
	partial void OnQuantityChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<BOM1> BOM1 { get; set; }
    public virtual OITM OITM { get; set; }
    public virtual OUNT OUNT { get; set; }
}

[Serializable]
public partial class OBRCHKM : ObjectWithState
{

    public int CheckID 
	{ 
		get
		{
			return _CheckID;
		}
		set
		{
			if(_CheckID != value)
			{
				OnCheckIDChanging(value);
				_CheckID = value;
				OnCheckIDChanged();
			}
		}
	}
	private int _CheckID;

	partial void OnCheckIDChanging(int newValue);
	partial void OnCheckIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public bool IsActive 
	{ 
		get
		{
			return _IsActive;
		}
		set
		{
			if(_IsActive != value)
			{
				OnIsActiveChanging(value);
				_IsActive = value;
				OnIsActiveChanged();
			}
		}
	}
	private bool _IsActive;

	partial void OnIsActiveChanging(bool newValue);
	partial void OnIsActiveChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();
}

[Serializable]
public partial class OBRND : ObjectWithState
{

    public int BrandID 
	{ 
		get
		{
			return _BrandID;
		}
		set
		{
			if(_BrandID != value)
			{
				OnBrandIDChanging(value);
				_BrandID = value;
				OnBrandIDChanged();
			}
		}
	}
	private int _BrandID;

	partial void OnBrandIDChanging(int newValue);
	partial void OnBrandIDChanged();

    public string BrandCode 
	{ 
		get
		{
			return _BrandCode;
		}
		set
		{
			if(_BrandCode != value)
			{
				OnBrandCodeChanging(value);
				_BrandCode = value;
				OnBrandCodeChanged();
			}
		}
	}
	private string _BrandCode;

	partial void OnBrandCodeChanging(string newValue);
	partial void OnBrandCodeChanged();

    public string BrandName 
	{ 
		get
		{
			return _BrandName;
		}
		set
		{
			if(_BrandName != value)
			{
				OnBrandNameChanging(value);
				_BrandName = value;
				OnBrandNameChanged();
			}
		}
	}
	private string _BrandName;

	partial void OnBrandNameChanging(string newValue);
	partial void OnBrandNameChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();
}

[Serializable]
public partial class OBUN : ObjectWithState
{

    public int BussinessID 
	{ 
		get
		{
			return _BussinessID;
		}
		set
		{
			if(_BussinessID != value)
			{
				OnBussinessIDChanging(value);
				_BussinessID = value;
				OnBussinessIDChanged();
			}
		}
	}
	private int _BussinessID;

	partial void OnBussinessIDChanging(int newValue);
	partial void OnBussinessIDChanged();

    public string BussinessCode 
	{ 
		get
		{
			return _BussinessCode;
		}
		set
		{
			if(_BussinessCode != value)
			{
				OnBussinessCodeChanging(value);
				_BussinessCode = value;
				OnBussinessCodeChanged();
			}
		}
	}
	private string _BussinessCode;

	partial void OnBussinessCodeChanging(string newValue);
	partial void OnBussinessCodeChanged();

    public string BussinessName 
	{ 
		get
		{
			return _BussinessName;
		}
		set
		{
			if(_BussinessName != value)
			{
				OnBussinessNameChanging(value);
				_BussinessName = value;
				OnBussinessNameChanged();
			}
		}
	}
	private string _BussinessName;

	partial void OnBussinessNameChanging(string newValue);
	partial void OnBussinessNameChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();
}

[Serializable]
public partial class OCAUT : ObjectWithState
{

    public int CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private int _CustomerID;

	partial void OnCustomerIDChanging(int newValue);
	partial void OnCustomerIDChanged();

    public string Token 
	{ 
		get
		{
			return _Token;
		}
		set
		{
			if(_Token != value)
			{
				OnTokenChanging(value);
				_Token = value;
				OnTokenChanged();
			}
		}
	}
	private string _Token;

	partial void OnTokenChanging(string newValue);
	partial void OnTokenChanged();
}

[Serializable]
public partial class OCFB : ObjectWithState
{
    public OCFB() 
    { 
        this.CFB1 = new HashSet<CFB1>();
    }


    public int FeedbackID 
	{ 
		get
		{
			return _FeedbackID;
		}
		set
		{
			if(_FeedbackID != value)
			{
				OnFeedbackIDChanging(value);
				_FeedbackID = value;
				OnFeedbackIDChanged();
			}
		}
	}
	private int _FeedbackID;

	partial void OnFeedbackIDChanging(int newValue);
	partial void OnFeedbackIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public Nullable<int> SalesRepresentativeID 
	{ 
		get
		{
			return _SalesRepresentativeID;
		}
		set
		{
			if(_SalesRepresentativeID != value)
			{
				OnSalesRepresentativeIDChanging(value);
				_SalesRepresentativeID = value;
				OnSalesRepresentativeIDChanged();
			}
		}
	}
	private Nullable<int> _SalesRepresentativeID;

	partial void OnSalesRepresentativeIDChanging(Nullable<int> newValue);
	partial void OnSalesRepresentativeIDChanged();

    public string FeedbackFrom 
	{ 
		get
		{
			return _FeedbackFrom;
		}
		set
		{
			if(_FeedbackFrom != value)
			{
				OnFeedbackFromChanging(value);
				_FeedbackFrom = value;
				OnFeedbackFromChanged();
			}
		}
	}
	private string _FeedbackFrom;

	partial void OnFeedbackFromChanging(string newValue);
	partial void OnFeedbackFromChanged();

    public string CompanyName 
	{ 
		get
		{
			return _CompanyName;
		}
		set
		{
			if(_CompanyName != value)
			{
				OnCompanyNameChanging(value);
				_CompanyName = value;
				OnCompanyNameChanged();
			}
		}
	}
	private string _CompanyName;

	partial void OnCompanyNameChanging(string newValue);
	partial void OnCompanyNameChanged();

    public string Industry 
	{ 
		get
		{
			return _Industry;
		}
		set
		{
			if(_Industry != value)
			{
				OnIndustryChanging(value);
				_Industry = value;
				OnIndustryChanged();
			}
		}
	}
	private string _Industry;

	partial void OnIndustryChanging(string newValue);
	partial void OnIndustryChanged();

    public string Website 
	{ 
		get
		{
			return _Website;
		}
		set
		{
			if(_Website != value)
			{
				OnWebsiteChanging(value);
				_Website = value;
				OnWebsiteChanged();
			}
		}
	}
	private string _Website;

	partial void OnWebsiteChanging(string newValue);
	partial void OnWebsiteChanged();

    public string ContactName 
	{ 
		get
		{
			return _ContactName;
		}
		set
		{
			if(_ContactName != value)
			{
				OnContactNameChanging(value);
				_ContactName = value;
				OnContactNameChanged();
			}
		}
	}
	private string _ContactName;

	partial void OnContactNameChanging(string newValue);
	partial void OnContactNameChanged();

    public string Phone 
	{ 
		get
		{
			return _Phone;
		}
		set
		{
			if(_Phone != value)
			{
				OnPhoneChanging(value);
				_Phone = value;
				OnPhoneChanged();
			}
		}
	}
	private string _Phone;

	partial void OnPhoneChanging(string newValue);
	partial void OnPhoneChanged();

    public string Email 
	{ 
		get
		{
			return _Email;
		}
		set
		{
			if(_Email != value)
			{
				OnEmailChanging(value);
				_Email = value;
				OnEmailChanged();
			}
		}
	}
	private string _Email;

	partial void OnEmailChanging(string newValue);
	partial void OnEmailChanged();

    public Nullable<System.DateTime> Date 
	{ 
		get
		{
			return _Date;
		}
		set
		{
			if(_Date != value)
			{
				OnDateChanging(value);
				_Date = value;
				OnDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _Date;

	partial void OnDateChanging(Nullable<System.DateTime> newValue);
	partial void OnDateChanged();

    public string FeedbackType 
	{ 
		get
		{
			return _FeedbackType;
		}
		set
		{
			if(_FeedbackType != value)
			{
				OnFeedbackTypeChanging(value);
				_FeedbackType = value;
				OnFeedbackTypeChanged();
			}
		}
	}
	private string _FeedbackType;

	partial void OnFeedbackTypeChanging(string newValue);
	partial void OnFeedbackTypeChanged();

    public Nullable<decimal> Rating 
	{ 
		get
		{
			return _Rating;
		}
		set
		{
			if(_Rating != value)
			{
				OnRatingChanging(value);
				_Rating = value;
				OnRatingChanged();
			}
		}
	}
	private Nullable<decimal> _Rating;

	partial void OnRatingChanging(Nullable<decimal> newValue);
	partial void OnRatingChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsMobile 
	{ 
		get
		{
			return _IsMobile;
		}
		set
		{
			if(_IsMobile != value)
			{
				OnIsMobileChanging(value);
				_IsMobile = value;
				OnIsMobileChanged();
			}
		}
	}
	private bool _IsMobile;

	partial void OnIsMobileChanging(bool newValue);
	partial void OnIsMobileChanged();

    public string Attachment 
	{ 
		get
		{
			return _Attachment;
		}
		set
		{
			if(_Attachment != value)
			{
				OnAttachmentChanging(value);
				_Attachment = value;
				OnAttachmentChanged();
			}
		}
	}
	private string _Attachment;

	partial void OnAttachmentChanging(string newValue);
	partial void OnAttachmentChanged();

    public virtual ICollection<CFB1> CFB1 { get; set; }
    public virtual OEMP OEMP { get; set; }
}

[Serializable]
public partial class OCFG : ObjectWithState
{

    public int ConfingID 
	{ 
		get
		{
			return _ConfingID;
		}
		set
		{
			if(_ConfingID != value)
			{
				OnConfingIDChanging(value);
				_ConfingID = value;
				OnConfingIDChanged();
			}
		}
	}
	private int _ConfingID;

	partial void OnConfingIDChanging(int newValue);
	partial void OnConfingIDChanged();

    public string Sync 
	{ 
		get
		{
			return _Sync;
		}
		set
		{
			if(_Sync != value)
			{
				OnSyncChanging(value);
				_Sync = value;
				OnSyncChanged();
			}
		}
	}
	private string _Sync;

	partial void OnSyncChanging(string newValue);
	partial void OnSyncChanged();

    public string Version 
	{ 
		get
		{
			return _Version;
		}
		set
		{
			if(_Version != value)
			{
				OnVersionChanging(value);
				_Version = value;
				OnVersionChanged();
			}
		}
	}
	private string _Version;

	partial void OnVersionChanging(string newValue);
	partial void OnVersionChanged();

    public bool Finance 
	{ 
		get
		{
			return _Finance;
		}
		set
		{
			if(_Finance != value)
			{
				OnFinanceChanging(value);
				_Finance = value;
				OnFinanceChanged();
			}
		}
	}
	private bool _Finance;

	partial void OnFinanceChanging(bool newValue);
	partial void OnFinanceChanged();

    public int SyncTime 
	{ 
		get
		{
			return _SyncTime;
		}
		set
		{
			if(_SyncTime != value)
			{
				OnSyncTimeChanging(value);
				_SyncTime = value;
				OnSyncTimeChanged();
			}
		}
	}
	private int _SyncTime;

	partial void OnSyncTimeChanging(int newValue);
	partial void OnSyncTimeChanged();

    public Nullable<decimal> MinOrdetAmt 
	{ 
		get
		{
			return _MinOrdetAmt;
		}
		set
		{
			if(_MinOrdetAmt != value)
			{
				OnMinOrdetAmtChanging(value);
				_MinOrdetAmt = value;
				OnMinOrdetAmtChanged();
			}
		}
	}
	private Nullable<decimal> _MinOrdetAmt;

	partial void OnMinOrdetAmtChanging(Nullable<decimal> newValue);
	partial void OnMinOrdetAmtChanged();

    public string Email 
	{ 
		get
		{
			return _Email;
		}
		set
		{
			if(_Email != value)
			{
				OnEmailChanging(value);
				_Email = value;
				OnEmailChanged();
			}
		}
	}
	private string _Email;

	partial void OnEmailChanging(string newValue);
	partial void OnEmailChanged();

    public Nullable<int> TopItem 
	{ 
		get
		{
			return _TopItem;
		}
		set
		{
			if(_TopItem != value)
			{
				OnTopItemChanging(value);
				_TopItem = value;
				OnTopItemChanged();
			}
		}
	}
	private Nullable<int> _TopItem;

	partial void OnTopItemChanging(Nullable<int> newValue);
	partial void OnTopItemChanged();

    public string SAPLINK 
	{ 
		get
		{
			return _SAPLINK;
		}
		set
		{
			if(_SAPLINK != value)
			{
				OnSAPLINKChanging(value);
				_SAPLINK = value;
				OnSAPLINKChanged();
			}
		}
	}
	private string _SAPLINK;

	partial void OnSAPLINKChanging(string newValue);
	partial void OnSAPLINKChanged();

    public string SAPRLINK 
	{ 
		get
		{
			return _SAPRLINK;
		}
		set
		{
			if(_SAPRLINK != value)
			{
				OnSAPRLINKChanging(value);
				_SAPRLINK = value;
				OnSAPRLINKChanged();
			}
		}
	}
	private string _SAPRLINK;

	partial void OnSAPRLINKChanging(string newValue);
	partial void OnSAPRLINKChanged();

    public string InvoicePrintSize 
	{ 
		get
		{
			return _InvoicePrintSize;
		}
		set
		{
			if(_InvoicePrintSize != value)
			{
				OnInvoicePrintSizeChanging(value);
				_InvoicePrintSize = value;
				OnInvoicePrintSizeChanged();
			}
		}
	}
	private string _InvoicePrintSize;

	partial void OnInvoicePrintSizeChanging(string newValue);
	partial void OnInvoicePrintSizeChanged();

    public string SAPMasterClaimLink 
	{ 
		get
		{
			return _SAPMasterClaimLink;
		}
		set
		{
			if(_SAPMasterClaimLink != value)
			{
				OnSAPMasterClaimLinkChanging(value);
				_SAPMasterClaimLink = value;
				OnSAPMasterClaimLinkChanged();
			}
		}
	}
	private string _SAPMasterClaimLink;

	partial void OnSAPMasterClaimLinkChanging(string newValue);
	partial void OnSAPMasterClaimLinkChanged();

    public string SAPQPSClaimLink 
	{ 
		get
		{
			return _SAPQPSClaimLink;
		}
		set
		{
			if(_SAPQPSClaimLink != value)
			{
				OnSAPQPSClaimLinkChanging(value);
				_SAPQPSClaimLink = value;
				OnSAPQPSClaimLinkChanged();
			}
		}
	}
	private string _SAPQPSClaimLink;

	partial void OnSAPQPSClaimLinkChanging(string newValue);
	partial void OnSAPQPSClaimLinkChanged();

    public string UserID 
	{ 
		get
		{
			return _UserID;
		}
		set
		{
			if(_UserID != value)
			{
				OnUserIDChanging(value);
				_UserID = value;
				OnUserIDChanged();
			}
		}
	}
	private string _UserID;

	partial void OnUserIDChanging(string newValue);
	partial void OnUserIDChanged();

    public string Password 
	{ 
		get
		{
			return _Password;
		}
		set
		{
			if(_Password != value)
			{
				OnPasswordChanging(value);
				_Password = value;
				OnPasswordChanged();
			}
		}
	}
	private string _Password;

	partial void OnPasswordChanging(string newValue);
	partial void OnPasswordChanged();

    public string SAPGSTLink 
	{ 
		get
		{
			return _SAPGSTLink;
		}
		set
		{
			if(_SAPGSTLink != value)
			{
				OnSAPGSTLinkChanging(value);
				_SAPGSTLink = value;
				OnSAPGSTLinkChanged();
			}
		}
	}
	private string _SAPGSTLink;

	partial void OnSAPGSTLinkChanging(string newValue);
	partial void OnSAPGSTLinkChanged();

    public Nullable<int> AdminManagerID 
	{ 
		get
		{
			return _AdminManagerID;
		}
		set
		{
			if(_AdminManagerID != value)
			{
				OnAdminManagerIDChanging(value);
				_AdminManagerID = value;
				OnAdminManagerIDChanged();
			}
		}
	}
	private Nullable<int> _AdminManagerID;

	partial void OnAdminManagerIDChanging(Nullable<int> newValue);
	partial void OnAdminManagerIDChanged();

    public Nullable<int> CurrentAdminManagerID 
	{ 
		get
		{
			return _CurrentAdminManagerID;
		}
		set
		{
			if(_CurrentAdminManagerID != value)
			{
				OnCurrentAdminManagerIDChanging(value);
				_CurrentAdminManagerID = value;
				OnCurrentAdminManagerIDChanged();
			}
		}
	}
	private Nullable<int> _CurrentAdminManagerID;

	partial void OnCurrentAdminManagerIDChanging(Nullable<int> newValue);
	partial void OnCurrentAdminManagerIDChanged();

    public Nullable<int> AvgPurchasePer 
	{ 
		get
		{
			return _AvgPurchasePer;
		}
		set
		{
			if(_AvgPurchasePer != value)
			{
				OnAvgPurchasePerChanging(value);
				_AvgPurchasePer = value;
				OnAvgPurchasePerChanged();
			}
		}
	}
	private Nullable<int> _AvgPurchasePer;

	partial void OnAvgPurchasePerChanging(Nullable<int> newValue);
	partial void OnAvgPurchasePerChanged();

    public string MechanicVersion 
	{ 
		get
		{
			return _MechanicVersion;
		}
		set
		{
			if(_MechanicVersion != value)
			{
				OnMechanicVersionChanging(value);
				_MechanicVersion = value;
				OnMechanicVersionChanged();
			}
		}
	}
	private string _MechanicVersion;

	partial void OnMechanicVersionChanging(string newValue);
	partial void OnMechanicVersionChanged();
}

[Serializable]
public partial class OCLE : ObjectWithState
{

    public int OCLEID 
	{ 
		get
		{
			return _OCLEID;
		}
		set
		{
			if(_OCLEID != value)
			{
				OnOCLEIDChanging(value);
				_OCLEID = value;
				OnOCLEIDChanged();
			}
		}
	}
	private int _OCLEID;

	partial void OnOCLEIDChanging(int newValue);
	partial void OnOCLEIDChanged();

    public Nullable<int> RegionId 
	{ 
		get
		{
			return _RegionId;
		}
		set
		{
			if(_RegionId != value)
			{
				OnRegionIdChanging(value);
				_RegionId = value;
				OnRegionIdChanged();
			}
		}
	}
	private Nullable<int> _RegionId;

	partial void OnRegionIdChanging(Nullable<int> newValue);
	partial void OnRegionIdChanged();

    public Nullable<int> EmpId 
	{ 
		get
		{
			return _EmpId;
		}
		set
		{
			if(_EmpId != value)
			{
				OnEmpIdChanging(value);
				_EmpId = value;
				OnEmpIdChanged();
			}
		}
	}
	private Nullable<int> _EmpId;

	partial void OnEmpIdChanging(Nullable<int> newValue);
	partial void OnEmpIdChanged();

    public Nullable<decimal> CustomerId 
	{ 
		get
		{
			return _CustomerId;
		}
		set
		{
			if(_CustomerId != value)
			{
				OnCustomerIdChanging(value);
				_CustomerId = value;
				OnCustomerIdChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerId;

	partial void OnCustomerIdChanging(Nullable<decimal> newValue);
	partial void OnCustomerIdChanged();

    public Nullable<bool> IsHeirarchy 
	{ 
		get
		{
			return _IsHeirarchy;
		}
		set
		{
			if(_IsHeirarchy != value)
			{
				OnIsHeirarchyChanging(value);
				_IsHeirarchy = value;
				OnIsHeirarchyChanged();
			}
		}
	}
	private Nullable<bool> _IsHeirarchy;

	partial void OnIsHeirarchyChanging(Nullable<bool> newValue);
	partial void OnIsHeirarchyChanged();

    public Nullable<int> ClaimLevel 
	{ 
		get
		{
			return _ClaimLevel;
		}
		set
		{
			if(_ClaimLevel != value)
			{
				OnClaimLevelChanging(value);
				_ClaimLevel = value;
				OnClaimLevelChanged();
			}
		}
	}
	private Nullable<int> _ClaimLevel;

	partial void OnClaimLevelChanging(Nullable<int> newValue);
	partial void OnClaimLevelChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public Nullable<bool> Deleted 
	{ 
		get
		{
			return _Deleted;
		}
		set
		{
			if(_Deleted != value)
			{
				OnDeletedChanging(value);
				_Deleted = value;
				OnDeletedChanged();
			}
		}
	}
	private Nullable<bool> _Deleted;

	partial void OnDeletedChanging(Nullable<bool> newValue);
	partial void OnDeletedChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<int> OptionId 
	{ 
		get
		{
			return _OptionId;
		}
		set
		{
			if(_OptionId != value)
			{
				OnOptionIdChanging(value);
				_OptionId = value;
				OnOptionIdChanged();
			}
		}
	}
	private Nullable<int> _OptionId;

	partial void OnOptionIdChanging(Nullable<int> newValue);
	partial void OnOptionIdChanged();
}

[Serializable]
public partial class OCLG : ObjectWithState
{

    public int LedgerReqID 
	{ 
		get
		{
			return _LedgerReqID;
		}
		set
		{
			if(_LedgerReqID != value)
			{
				OnLedgerReqIDChanging(value);
				_LedgerReqID = value;
				OnLedgerReqIDChanged();
			}
		}
	}
	private int _LedgerReqID;

	partial void OnLedgerReqIDChanging(int newValue);
	partial void OnLedgerReqIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public System.DateTime FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private System.DateTime _FromDate;

	partial void OnFromDateChanging(System.DateTime newValue);
	partial void OnFromDateChanged();

    public System.DateTime ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private System.DateTime _ToDate;

	partial void OnToDateChanging(System.DateTime newValue);
	partial void OnToDateChanged();

    public System.DateTime RequiredDate 
	{ 
		get
		{
			return _RequiredDate;
		}
		set
		{
			if(_RequiredDate != value)
			{
				OnRequiredDateChanging(value);
				_RequiredDate = value;
				OnRequiredDateChanged();
			}
		}
	}
	private System.DateTime _RequiredDate;

	partial void OnRequiredDateChanging(System.DateTime newValue);
	partial void OnRequiredDateChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public int DivisionID 
	{ 
		get
		{
			return _DivisionID;
		}
		set
		{
			if(_DivisionID != value)
			{
				OnDivisionIDChanging(value);
				_DivisionID = value;
				OnDivisionIDChanged();
			}
		}
	}
	private int _DivisionID;

	partial void OnDivisionIDChanging(int newValue);
	partial void OnDivisionIDChanged();

    public string SapMsg 
	{ 
		get
		{
			return _SapMsg;
		}
		set
		{
			if(_SapMsg != value)
			{
				OnSapMsgChanging(value);
				_SapMsg = value;
				OnSapMsgChanged();
			}
		}
	}
	private string _SapMsg;

	partial void OnSapMsgChanging(string newValue);
	partial void OnSapMsgChanged();

    public string SapFlag 
	{ 
		get
		{
			return _SapFlag;
		}
		set
		{
			if(_SapFlag != value)
			{
				OnSapFlagChanging(value);
				_SapFlag = value;
				OnSapFlagChanged();
			}
		}
	}
	private string _SapFlag;

	partial void OnSapFlagChanging(string newValue);
	partial void OnSapFlagChanged();
}

[Serializable]
public partial class OCLM : ObjectWithState
{
    public OCLM() 
    { 
        this.CLM1 = new HashSet<CLM1>();
    }


    public int ClaimID 
	{ 
		get
		{
			return _ClaimID;
		}
		set
		{
			if(_ClaimID != value)
			{
				OnClaimIDChanging(value);
				_ClaimID = value;
				OnClaimIDChanged();
			}
		}
	}
	private int _ClaimID;

	partial void OnClaimIDChanging(int newValue);
	partial void OnClaimIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int ParentClaimID 
	{ 
		get
		{
			return _ParentClaimID;
		}
		set
		{
			if(_ParentClaimID != value)
			{
				OnParentClaimIDChanging(value);
				_ParentClaimID = value;
				OnParentClaimIDChanged();
			}
		}
	}
	private int _ParentClaimID;

	partial void OnParentClaimIDChanging(int newValue);
	partial void OnParentClaimIDChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public Nullable<decimal> CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerID;

	partial void OnCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnCustomerIDChanged();

    public string SAPReasonItemCode 
	{ 
		get
		{
			return _SAPReasonItemCode;
		}
		set
		{
			if(_SAPReasonItemCode != value)
			{
				OnSAPReasonItemCodeChanging(value);
				_SAPReasonItemCode = value;
				OnSAPReasonItemCodeChanged();
			}
		}
	}
	private string _SAPReasonItemCode;

	partial void OnSAPReasonItemCodeChanging(string newValue);
	partial void OnSAPReasonItemCodeChanged();

    public Nullable<int> ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private Nullable<int> _ItemID;

	partial void OnItemIDChanging(Nullable<int> newValue);
	partial void OnItemIDChanged();

    public decimal TotalQty 
	{ 
		get
		{
			return _TotalQty;
		}
		set
		{
			if(_TotalQty != value)
			{
				OnTotalQtyChanging(value);
				_TotalQty = value;
				OnTotalQtyChanged();
			}
		}
	}
	private decimal _TotalQty;

	partial void OnTotalQtyChanging(decimal newValue);
	partial void OnTotalQtyChanged();

    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();

    public string SchemeType 
	{ 
		get
		{
			return _SchemeType;
		}
		set
		{
			if(_SchemeType != value)
			{
				OnSchemeTypeChanging(value);
				_SchemeType = value;
				OnSchemeTypeChanged();
			}
		}
	}
	private string _SchemeType;

	partial void OnSchemeTypeChanging(string newValue);
	partial void OnSchemeTypeChanged();

    public decimal SchemeAmount 
	{ 
		get
		{
			return _SchemeAmount;
		}
		set
		{
			if(_SchemeAmount != value)
			{
				OnSchemeAmountChanging(value);
				_SchemeAmount = value;
				OnSchemeAmountChanged();
			}
		}
	}
	private decimal _SchemeAmount;

	partial void OnSchemeAmountChanging(decimal newValue);
	partial void OnSchemeAmountChanged();

    public decimal CompanyCont 
	{ 
		get
		{
			return _CompanyCont;
		}
		set
		{
			if(_CompanyCont != value)
			{
				OnCompanyContChanging(value);
				_CompanyCont = value;
				OnCompanyContChanged();
			}
		}
	}
	private decimal _CompanyCont;

	partial void OnCompanyContChanging(decimal newValue);
	partial void OnCompanyContChanged();

    public decimal DistCont 
	{ 
		get
		{
			return _DistCont;
		}
		set
		{
			if(_DistCont != value)
			{
				OnDistContChanging(value);
				_DistCont = value;
				OnDistContChanged();
			}
		}
	}
	private decimal _DistCont;

	partial void OnDistContChanging(decimal newValue);
	partial void OnDistContChanged();

    public decimal DistContTax 
	{ 
		get
		{
			return _DistContTax;
		}
		set
		{
			if(_DistContTax != value)
			{
				OnDistContTaxChanging(value);
				_DistContTax = value;
				OnDistContTaxChanged();
			}
		}
	}
	private decimal _DistContTax;

	partial void OnDistContTaxChanging(decimal newValue);
	partial void OnDistContTaxChanged();

    public decimal TotalCompanyCont 
	{ 
		get
		{
			return _TotalCompanyCont;
		}
		set
		{
			if(_TotalCompanyCont != value)
			{
				OnTotalCompanyContChanging(value);
				_TotalCompanyCont = value;
				OnTotalCompanyContChanged();
			}
		}
	}
	private decimal _TotalCompanyCont;

	partial void OnTotalCompanyContChanging(decimal newValue);
	partial void OnTotalCompanyContChanged();

    public decimal Deduction 
	{ 
		get
		{
			return _Deduction;
		}
		set
		{
			if(_Deduction != value)
			{
				OnDeductionChanging(value);
				_Deduction = value;
				OnDeductionChanged();
			}
		}
	}
	private decimal _Deduction;

	partial void OnDeductionChanging(decimal newValue);
	partial void OnDeductionChanged();

    public string DeductionRemarks 
	{ 
		get
		{
			return _DeductionRemarks;
		}
		set
		{
			if(_DeductionRemarks != value)
			{
				OnDeductionRemarksChanging(value);
				_DeductionRemarks = value;
				OnDeductionRemarksChanged();
			}
		}
	}
	private string _DeductionRemarks;

	partial void OnDeductionRemarksChanging(string newValue);
	partial void OnDeductionRemarksChanged();

    public decimal ApprovedAmount 
	{ 
		get
		{
			return _ApprovedAmount;
		}
		set
		{
			if(_ApprovedAmount != value)
			{
				OnApprovedAmountChanging(value);
				_ApprovedAmount = value;
				OnApprovedAmountChanged();
			}
		}
	}
	private decimal _ApprovedAmount;

	partial void OnApprovedAmountChanging(decimal newValue);
	partial void OnApprovedAmountChanged();

    public decimal TotalPurchase 
	{ 
		get
		{
			return _TotalPurchase;
		}
		set
		{
			if(_TotalPurchase != value)
			{
				OnTotalPurchaseChanging(value);
				_TotalPurchase = value;
				OnTotalPurchaseChanged();
			}
		}
	}
	private decimal _TotalPurchase;

	partial void OnTotalPurchaseChanging(decimal newValue);
	partial void OnTotalPurchaseChanged();

    public string SAPDocNo 
	{ 
		get
		{
			return _SAPDocNo;
		}
		set
		{
			if(_SAPDocNo != value)
			{
				OnSAPDocNoChanging(value);
				_SAPDocNo = value;
				OnSAPDocNoChanged();
			}
		}
	}
	private string _SAPDocNo;

	partial void OnSAPDocNoChanging(string newValue);
	partial void OnSAPDocNoChanged();

    public string SAPErrMsg 
	{ 
		get
		{
			return _SAPErrMsg;
		}
		set
		{
			if(_SAPErrMsg != value)
			{
				OnSAPErrMsgChanging(value);
				_SAPErrMsg = value;
				OnSAPErrMsgChanged();
			}
		}
	}
	private string _SAPErrMsg;

	partial void OnSAPErrMsgChanging(string newValue);
	partial void OnSAPErrMsgChanged();

    public string Flag 
	{ 
		get
		{
			return _Flag;
		}
		set
		{
			if(_Flag != value)
			{
				OnFlagChanging(value);
				_Flag = value;
				OnFlagChanged();
			}
		}
	}
	private string _Flag;

	partial void OnFlagChanging(string newValue);
	partial void OnFlagChanged();

    public Nullable<System.DateTime> ProcessDate 
	{ 
		get
		{
			return _ProcessDate;
		}
		set
		{
			if(_ProcessDate != value)
			{
				OnProcessDateChanging(value);
				_ProcessDate = value;
				OnProcessDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ProcessDate;

	partial void OnProcessDateChanging(Nullable<System.DateTime> newValue);
	partial void OnProcessDateChanged();

    public decimal Total 
	{ 
		get
		{
			return _Total;
		}
		set
		{
			if(_Total != value)
			{
				OnTotalChanging(value);
				_Total = value;
				OnTotalChanged();
			}
		}
	}
	private decimal _Total;

	partial void OnTotalChanging(decimal newValue);
	partial void OnTotalChanged();

    public bool IsAuto 
	{ 
		get
		{
			return _IsAuto;
		}
		set
		{
			if(_IsAuto != value)
			{
				OnIsAutoChanging(value);
				_IsAuto = value;
				OnIsAutoChanged();
			}
		}
	}
	private bool _IsAuto;

	partial void OnIsAutoChanging(bool newValue);
	partial void OnIsAutoChanged();

    public virtual ICollection<CLM1> CLM1 { get; set; }
    public virtual OCRD OCRD { get; set; }
    public virtual OCLMP OCLMP { get; set; }
}

[Serializable]
public partial class OCLMC : ObjectWithState
{

    public int OCLMCID 
	{ 
		get
		{
			return _OCLMCID;
		}
		set
		{
			if(_OCLMCID != value)
			{
				OnOCLMCIDChanging(value);
				_OCLMCID = value;
				OnOCLMCIDChanged();
			}
		}
	}
	private int _OCLMCID;

	partial void OnOCLMCIDChanging(int newValue);
	partial void OnOCLMCIDChanged();

    public int ClaimUserType 
	{ 
		get
		{
			return _ClaimUserType;
		}
		set
		{
			if(_ClaimUserType != value)
			{
				OnClaimUserTypeChanging(value);
				_ClaimUserType = value;
				OnClaimUserTypeChanged();
			}
		}
	}
	private int _ClaimUserType;

	partial void OnClaimUserTypeChanging(int newValue);
	partial void OnClaimUserTypeChanged();

    public Nullable<int> RegionID 
	{ 
		get
		{
			return _RegionID;
		}
		set
		{
			if(_RegionID != value)
			{
				OnRegionIDChanging(value);
				_RegionID = value;
				OnRegionIDChanged();
			}
		}
	}
	private Nullable<int> _RegionID;

	partial void OnRegionIDChanging(Nullable<int> newValue);
	partial void OnRegionIDChanged();

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public Nullable<decimal> SSID 
	{ 
		get
		{
			return _SSID;
		}
		set
		{
			if(_SSID != value)
			{
				OnSSIDChanging(value);
				_SSID = value;
				OnSSIDChanged();
			}
		}
	}
	private Nullable<decimal> _SSID;

	partial void OnSSIDChanging(Nullable<decimal> newValue);
	partial void OnSSIDChanged();

    public Nullable<decimal> DistributorID 
	{ 
		get
		{
			return _DistributorID;
		}
		set
		{
			if(_DistributorID != value)
			{
				OnDistributorIDChanging(value);
				_DistributorID = value;
				OnDistributorIDChanged();
			}
		}
	}
	private Nullable<decimal> _DistributorID;

	partial void OnDistributorIDChanging(Nullable<decimal> newValue);
	partial void OnDistributorIDChanged();

    public bool IsInclude 
	{ 
		get
		{
			return _IsInclude;
		}
		set
		{
			if(_IsInclude != value)
			{
				OnIsIncludeChanging(value);
				_IsInclude = value;
				OnIsIncludeChanged();
			}
		}
	}
	private bool _IsInclude;

	partial void OnIsIncludeChanging(bool newValue);
	partial void OnIsIncludeChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public Nullable<int> CountryID 
	{ 
		get
		{
			return _CountryID;
		}
		set
		{
			if(_CountryID != value)
			{
				OnCountryIDChanging(value);
				_CountryID = value;
				OnCountryIDChanged();
			}
		}
	}
	private Nullable<int> _CountryID;

	partial void OnCountryIDChanging(Nullable<int> newValue);
	partial void OnCountryIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();
}

[Serializable]
public partial class OCLMCFG : ObjectWithState
{

    public int OCLMCFGID 
	{ 
		get
		{
			return _OCLMCFGID;
		}
		set
		{
			if(_OCLMCFGID != value)
			{
				OnOCLMCFGIDChanging(value);
				_OCLMCFGID = value;
				OnOCLMCFGIDChanged();
			}
		}
	}
	private int _OCLMCFGID;

	partial void OnOCLMCFGIDChanging(int newValue);
	partial void OnOCLMCFGIDChanged();

    public Nullable<int> RegionID 
	{ 
		get
		{
			return _RegionID;
		}
		set
		{
			if(_RegionID != value)
			{
				OnRegionIDChanging(value);
				_RegionID = value;
				OnRegionIDChanged();
			}
		}
	}
	private Nullable<int> _RegionID;

	partial void OnRegionIDChanging(Nullable<int> newValue);
	partial void OnRegionIDChanged();

    public Nullable<int> EmpGroupID 
	{ 
		get
		{
			return _EmpGroupID;
		}
		set
		{
			if(_EmpGroupID != value)
			{
				OnEmpGroupIDChanging(value);
				_EmpGroupID = value;
				OnEmpGroupIDChanged();
			}
		}
	}
	private Nullable<int> _EmpGroupID;

	partial void OnEmpGroupIDChanging(Nullable<int> newValue);
	partial void OnEmpGroupIDChanged();

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public Nullable<int> CountryID 
	{ 
		get
		{
			return _CountryID;
		}
		set
		{
			if(_CountryID != value)
			{
				OnCountryIDChanging(value);
				_CountryID = value;
				OnCountryIDChanged();
			}
		}
	}
	private Nullable<int> _CountryID;

	partial void OnCountryIDChanging(Nullable<int> newValue);
	partial void OnCountryIDChanged();

    public Nullable<decimal> SSID 
	{ 
		get
		{
			return _SSID;
		}
		set
		{
			if(_SSID != value)
			{
				OnSSIDChanging(value);
				_SSID = value;
				OnSSIDChanged();
			}
		}
	}
	private Nullable<decimal> _SSID;

	partial void OnSSIDChanging(Nullable<decimal> newValue);
	partial void OnSSIDChanged();

    public Nullable<decimal> DistributorID 
	{ 
		get
		{
			return _DistributorID;
		}
		set
		{
			if(_DistributorID != value)
			{
				OnDistributorIDChanging(value);
				_DistributorID = value;
				OnDistributorIDChanged();
			}
		}
	}
	private Nullable<decimal> _DistributorID;

	partial void OnDistributorIDChanging(Nullable<decimal> newValue);
	partial void OnDistributorIDChanged();

    public bool IsInclude 
	{ 
		get
		{
			return _IsInclude;
		}
		set
		{
			if(_IsInclude != value)
			{
				OnIsIncludeChanging(value);
				_IsInclude = value;
				OnIsIncludeChanged();
			}
		}
	}
	private bool _IsInclude;

	partial void OnIsIncludeChanging(bool newValue);
	partial void OnIsIncludeChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();
}

[Serializable]
public partial class OCLMCLD : ObjectWithState
{

    public int ClaimChildID 
	{ 
		get
		{
			return _ClaimChildID;
		}
		set
		{
			if(_ClaimChildID != value)
			{
				OnClaimChildIDChanging(value);
				_ClaimChildID = value;
				OnClaimChildIDChanged();
			}
		}
	}
	private int _ClaimChildID;

	partial void OnClaimChildIDChanging(int newValue);
	partial void OnClaimChildIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string DocNo 
	{ 
		get
		{
			return _DocNo;
		}
		set
		{
			if(_DocNo != value)
			{
				OnDocNoChanging(value);
				_DocNo = value;
				OnDocNoChanged();
			}
		}
	}
	private string _DocNo;

	partial void OnDocNoChanging(string newValue);
	partial void OnDocNoChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public int ParentClaimID 
	{ 
		get
		{
			return _ParentClaimID;
		}
		set
		{
			if(_ParentClaimID != value)
			{
				OnParentClaimIDChanging(value);
				_ParentClaimID = value;
				OnParentClaimIDChanged();
			}
		}
	}
	private int _ParentClaimID;

	partial void OnParentClaimIDChanging(int newValue);
	partial void OnParentClaimIDChanged();

    public System.DateTime FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private System.DateTime _FromDate;

	partial void OnFromDateChanging(System.DateTime newValue);
	partial void OnFromDateChanged();

    public System.DateTime ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private System.DateTime _ToDate;

	partial void OnToDateChanging(System.DateTime newValue);
	partial void OnToDateChanged();

    public System.DateTime ClaimDate 
	{ 
		get
		{
			return _ClaimDate;
		}
		set
		{
			if(_ClaimDate != value)
			{
				OnClaimDateChanging(value);
				_ClaimDate = value;
				OnClaimDateChanged();
			}
		}
	}
	private System.DateTime _ClaimDate;

	partial void OnClaimDateChanging(System.DateTime newValue);
	partial void OnClaimDateChanged();

    public decimal SchemeAmount 
	{ 
		get
		{
			return _SchemeAmount;
		}
		set
		{
			if(_SchemeAmount != value)
			{
				OnSchemeAmountChanging(value);
				_SchemeAmount = value;
				OnSchemeAmountChanged();
			}
		}
	}
	private decimal _SchemeAmount;

	partial void OnSchemeAmountChanging(decimal newValue);
	partial void OnSchemeAmountChanged();

    public decimal Deduction 
	{ 
		get
		{
			return _Deduction;
		}
		set
		{
			if(_Deduction != value)
			{
				OnDeductionChanging(value);
				_Deduction = value;
				OnDeductionChanged();
			}
		}
	}
	private decimal _Deduction;

	partial void OnDeductionChanging(decimal newValue);
	partial void OnDeductionChanged();

    public string DeductionRemarks 
	{ 
		get
		{
			return _DeductionRemarks;
		}
		set
		{
			if(_DeductionRemarks != value)
			{
				OnDeductionRemarksChanging(value);
				_DeductionRemarks = value;
				OnDeductionRemarksChanged();
			}
		}
	}
	private string _DeductionRemarks;

	partial void OnDeductionRemarksChanging(string newValue);
	partial void OnDeductionRemarksChanged();

    public decimal ApprovedAmount 
	{ 
		get
		{
			return _ApprovedAmount;
		}
		set
		{
			if(_ApprovedAmount != value)
			{
				OnApprovedAmountChanging(value);
				_ApprovedAmount = value;
				OnApprovedAmountChanged();
			}
		}
	}
	private decimal _ApprovedAmount;

	partial void OnApprovedAmountChanging(decimal newValue);
	partial void OnApprovedAmountChanged();

    public string ReasonCode 
	{ 
		get
		{
			return _ReasonCode;
		}
		set
		{
			if(_ReasonCode != value)
			{
				OnReasonCodeChanging(value);
				_ReasonCode = value;
				OnReasonCodeChanged();
			}
		}
	}
	private string _ReasonCode;

	partial void OnReasonCodeChanging(string newValue);
	partial void OnReasonCodeChanged();

    public bool IsAuto 
	{ 
		get
		{
			return _IsAuto;
		}
		set
		{
			if(_IsAuto != value)
			{
				OnIsAutoChanging(value);
				_IsAuto = value;
				OnIsAutoChanged();
			}
		}
	}
	private bool _IsAuto;

	partial void OnIsAutoChanging(bool newValue);
	partial void OnIsAutoChanged();

    public decimal SchemeSale 
	{ 
		get
		{
			return _SchemeSale;
		}
		set
		{
			if(_SchemeSale != value)
			{
				OnSchemeSaleChanging(value);
				_SchemeSale = value;
				OnSchemeSaleChanged();
			}
		}
	}
	private decimal _SchemeSale;

	partial void OnSchemeSaleChanging(decimal newValue);
	partial void OnSchemeSaleChanged();

    public decimal TotalSale 
	{ 
		get
		{
			return _TotalSale;
		}
		set
		{
			if(_TotalSale != value)
			{
				OnTotalSaleChanging(value);
				_TotalSale = value;
				OnTotalSaleChanged();
			}
		}
	}
	private decimal _TotalSale;

	partial void OnTotalSaleChanging(decimal newValue);
	partial void OnTotalSaleChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public string ErrMsg 
	{ 
		get
		{
			return _ErrMsg;
		}
		set
		{
			if(_ErrMsg != value)
			{
				OnErrMsgChanging(value);
				_ErrMsg = value;
				OnErrMsgChanged();
			}
		}
	}
	private string _ErrMsg;

	partial void OnErrMsgChanging(string newValue);
	partial void OnErrMsgChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();
}

[Serializable]
public partial class OCLMDM : ObjectWithState
{

    public int ClaimDMSID 
	{ 
		get
		{
			return _ClaimDMSID;
		}
		set
		{
			if(_ClaimDMSID != value)
			{
				OnClaimDMSIDChanging(value);
				_ClaimDMSID = value;
				OnClaimDMSIDChanged();
			}
		}
	}
	private int _ClaimDMSID;

	partial void OnClaimDMSIDChanging(int newValue);
	partial void OnClaimDMSIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public string ReasonCode 
	{ 
		get
		{
			return _ReasonCode;
		}
		set
		{
			if(_ReasonCode != value)
			{
				OnReasonCodeChanging(value);
				_ReasonCode = value;
				OnReasonCodeChanged();
			}
		}
	}
	private string _ReasonCode;

	partial void OnReasonCodeChanging(string newValue);
	partial void OnReasonCodeChanged();

    public int ClaimRequestID 
	{ 
		get
		{
			return _ClaimRequestID;
		}
		set
		{
			if(_ClaimRequestID != value)
			{
				OnClaimRequestIDChanging(value);
				_ClaimRequestID = value;
				OnClaimRequestIDChanged();
			}
		}
	}
	private int _ClaimRequestID;

	partial void OnClaimRequestIDChanging(int newValue);
	partial void OnClaimRequestIDChanged();

    public System.DateTime FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private System.DateTime _FromDate;

	partial void OnFromDateChanging(System.DateTime newValue);
	partial void OnFromDateChanged();

    public System.DateTime ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private System.DateTime _ToDate;

	partial void OnToDateChanging(System.DateTime newValue);
	partial void OnToDateChanged();

    public System.DateTime ClaimDate 
	{ 
		get
		{
			return _ClaimDate;
		}
		set
		{
			if(_ClaimDate != value)
			{
				OnClaimDateChanging(value);
				_ClaimDate = value;
				OnClaimDateChanged();
			}
		}
	}
	private System.DateTime _ClaimDate;

	partial void OnClaimDateChanging(System.DateTime newValue);
	partial void OnClaimDateChanged();

    public System.DateTime ApproveDate 
	{ 
		get
		{
			return _ApproveDate;
		}
		set
		{
			if(_ApproveDate != value)
			{
				OnApproveDateChanging(value);
				_ApproveDate = value;
				OnApproveDateChanged();
			}
		}
	}
	private System.DateTime _ApproveDate;

	partial void OnApproveDateChanging(System.DateTime newValue);
	partial void OnApproveDateChanged();

    public decimal SchemeAmount 
	{ 
		get
		{
			return _SchemeAmount;
		}
		set
		{
			if(_SchemeAmount != value)
			{
				OnSchemeAmountChanging(value);
				_SchemeAmount = value;
				OnSchemeAmountChanged();
			}
		}
	}
	private decimal _SchemeAmount;

	partial void OnSchemeAmountChanging(decimal newValue);
	partial void OnSchemeAmountChanged();

    public decimal ApprovedAmount 
	{ 
		get
		{
			return _ApprovedAmount;
		}
		set
		{
			if(_ApprovedAmount != value)
			{
				OnApprovedAmountChanging(value);
				_ApprovedAmount = value;
				OnApprovedAmountChanged();
			}
		}
	}
	private decimal _ApprovedAmount;

	partial void OnApprovedAmountChanging(decimal newValue);
	partial void OnApprovedAmountChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public int CreartedBy 
	{ 
		get
		{
			return _CreartedBy;
		}
		set
		{
			if(_CreartedBy != value)
			{
				OnCreartedByChanging(value);
				_CreartedBy = value;
				OnCreartedByChanged();
			}
		}
	}
	private int _CreartedBy;

	partial void OnCreartedByChanging(int newValue);
	partial void OnCreartedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public bool IsAuto 
	{ 
		get
		{
			return _IsAuto;
		}
		set
		{
			if(_IsAuto != value)
			{
				OnIsAutoChanging(value);
				_IsAuto = value;
				OnIsAutoChanged();
			}
		}
	}
	private bool _IsAuto;

	partial void OnIsAutoChanging(bool newValue);
	partial void OnIsAutoChanged();

    public decimal TotalSale 
	{ 
		get
		{
			return _TotalSale;
		}
		set
		{
			if(_TotalSale != value)
			{
				OnTotalSaleChanging(value);
				_TotalSale = value;
				OnTotalSaleChanged();
			}
		}
	}
	private decimal _TotalSale;

	partial void OnTotalSaleChanging(decimal newValue);
	partial void OnTotalSaleChanged();

    public decimal SchemeSale 
	{ 
		get
		{
			return _SchemeSale;
		}
		set
		{
			if(_SchemeSale != value)
			{
				OnSchemeSaleChanging(value);
				_SchemeSale = value;
				OnSchemeSaleChanged();
			}
		}
	}
	private decimal _SchemeSale;

	partial void OnSchemeSaleChanging(decimal newValue);
	partial void OnSchemeSaleChanged();

    public string RefNo 
	{ 
		get
		{
			return _RefNo;
		}
		set
		{
			if(_RefNo != value)
			{
				OnRefNoChanging(value);
				_RefNo = value;
				OnRefNoChanged();
			}
		}
	}
	private string _RefNo;

	partial void OnRefNoChanging(string newValue);
	partial void OnRefNoChanged();
}

[Serializable]
public partial class OCLME : ObjectWithState
{

    public int OCLMEID 
	{ 
		get
		{
			return _OCLMEID;
		}
		set
		{
			if(_OCLMEID != value)
			{
				OnOCLMEIDChanging(value);
				_OCLMEID = value;
				OnOCLMEIDChanged();
			}
		}
	}
	private int _OCLMEID;

	partial void OnOCLMEIDChanging(int newValue);
	partial void OnOCLMEIDChanged();

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public int ReasonID 
	{ 
		get
		{
			return _ReasonID;
		}
		set
		{
			if(_ReasonID != value)
			{
				OnReasonIDChanging(value);
				_ReasonID = value;
				OnReasonIDChanged();
			}
		}
	}
	private int _ReasonID;

	partial void OnReasonIDChanging(int newValue);
	partial void OnReasonIDChanged();

    public Nullable<int> CountryID 
	{ 
		get
		{
			return _CountryID;
		}
		set
		{
			if(_CountryID != value)
			{
				OnCountryIDChanging(value);
				_CountryID = value;
				OnCountryIDChanged();
			}
		}
	}
	private Nullable<int> _CountryID;

	partial void OnCountryIDChanging(Nullable<int> newValue);
	partial void OnCountryIDChanged();

    public bool IsInclude 
	{ 
		get
		{
			return _IsInclude;
		}
		set
		{
			if(_IsInclude != value)
			{
				OnIsIncludeChanging(value);
				_IsInclude = value;
				OnIsIncludeChanged();
			}
		}
	}
	private bool _IsInclude;

	partial void OnIsIncludeChanging(bool newValue);
	partial void OnIsIncludeChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();
}

[Serializable]
public partial class OCLMINV : ObjectWithState
{

    public int ClaimInvID 
	{ 
		get
		{
			return _ClaimInvID;
		}
		set
		{
			if(_ClaimInvID != value)
			{
				OnClaimInvIDChanging(value);
				_ClaimInvID = value;
				OnClaimInvIDChanged();
			}
		}
	}
	private int _ClaimInvID;

	partial void OnClaimInvIDChanging(int newValue);
	partial void OnClaimInvIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public int SaleID 
	{ 
		get
		{
			return _SaleID;
		}
		set
		{
			if(_SaleID != value)
			{
				OnSaleIDChanging(value);
				_SaleID = value;
				OnSaleIDChanged();
			}
		}
	}
	private int _SaleID;

	partial void OnSaleIDChanging(int newValue);
	partial void OnSaleIDChanged();

    public System.DateTime SaleDate 
	{ 
		get
		{
			return _SaleDate;
		}
		set
		{
			if(_SaleDate != value)
			{
				OnSaleDateChanging(value);
				_SaleDate = value;
				OnSaleDateChanged();
			}
		}
	}
	private System.DateTime _SaleDate;

	partial void OnSaleDateChanging(System.DateTime newValue);
	partial void OnSaleDateChanged();

    public decimal SaleAmount 
	{ 
		get
		{
			return _SaleAmount;
		}
		set
		{
			if(_SaleAmount != value)
			{
				OnSaleAmountChanging(value);
				_SaleAmount = value;
				OnSaleAmountChanged();
			}
		}
	}
	private decimal _SaleAmount;

	partial void OnSaleAmountChanging(decimal newValue);
	partial void OnSaleAmountChanged();

    public decimal Available 
	{ 
		get
		{
			return _Available;
		}
		set
		{
			if(_Available != value)
			{
				OnAvailableChanging(value);
				_Available = value;
				OnAvailableChanged();
			}
		}
	}
	private decimal _Available;

	partial void OnAvailableChanging(decimal newValue);
	partial void OnAvailableChanged();

    public decimal SaleDiscount 
	{ 
		get
		{
			return _SaleDiscount;
		}
		set
		{
			if(_SaleDiscount != value)
			{
				OnSaleDiscountChanging(value);
				_SaleDiscount = value;
				OnSaleDiscountChanged();
			}
		}
	}
	private decimal _SaleDiscount;

	partial void OnSaleDiscountChanging(decimal newValue);
	partial void OnSaleDiscountChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();
}

[Serializable]
public partial class OCLMP : ObjectWithState
{
    public OCLMP() 
    { 
        this.OCLMs = new HashSet<OCLM>();
        this.OCLMRQs = new HashSet<OCLMRQ>();
        this.CLMRQ1 = new HashSet<CLMRQ1>();
    }


    public int ParentClaimID 
	{ 
		get
		{
			return _ParentClaimID;
		}
		set
		{
			if(_ParentClaimID != value)
			{
				OnParentClaimIDChanging(value);
				_ParentClaimID = value;
				OnParentClaimIDChanged();
			}
		}
	}
	private int _ParentClaimID;

	partial void OnParentClaimIDChanging(int newValue);
	partial void OnParentClaimIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public System.DateTime FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private System.DateTime _FromDate;

	partial void OnFromDateChanging(System.DateTime newValue);
	partial void OnFromDateChanged();

    public System.DateTime ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private System.DateTime _ToDate;

	partial void OnToDateChanging(System.DateTime newValue);
	partial void OnToDateChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public int SAPReasonID 
	{ 
		get
		{
			return _SAPReasonID;
		}
		set
		{
			if(_SAPReasonID != value)
			{
				OnSAPReasonIDChanging(value);
				_SAPReasonID = value;
				OnSAPReasonIDChanged();
			}
		}
	}
	private int _SAPReasonID;

	partial void OnSAPReasonIDChanging(int newValue);
	partial void OnSAPReasonIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public string SchemeType 
	{ 
		get
		{
			return _SchemeType;
		}
		set
		{
			if(_SchemeType != value)
			{
				OnSchemeTypeChanging(value);
				_SchemeType = value;
				OnSchemeTypeChanged();
			}
		}
	}
	private string _SchemeType;

	partial void OnSchemeTypeChanging(string newValue);
	partial void OnSchemeTypeChanged();

    public bool IsSAP 
	{ 
		get
		{
			return _IsSAP;
		}
		set
		{
			if(_IsSAP != value)
			{
				OnIsSAPChanging(value);
				_IsSAP = value;
				OnIsSAPChanged();
			}
		}
	}
	private bool _IsSAP;

	partial void OnIsSAPChanging(bool newValue);
	partial void OnIsSAPChanged();

    public string CreatedIPAddress 
	{ 
		get
		{
			return _CreatedIPAddress;
		}
		set
		{
			if(_CreatedIPAddress != value)
			{
				OnCreatedIPAddressChanging(value);
				_CreatedIPAddress = value;
				OnCreatedIPAddressChanged();
			}
		}
	}
	private string _CreatedIPAddress;

	partial void OnCreatedIPAddressChanging(string newValue);
	partial void OnCreatedIPAddressChanged();

    public string UpdateIPAddress 
	{ 
		get
		{
			return _UpdateIPAddress;
		}
		set
		{
			if(_UpdateIPAddress != value)
			{
				OnUpdateIPAddressChanging(value);
				_UpdateIPAddress = value;
				OnUpdateIPAddressChanged();
			}
		}
	}
	private string _UpdateIPAddress;

	partial void OnUpdateIPAddressChanging(string newValue);
	partial void OnUpdateIPAddressChanged();

    public string ClaimRemarks 
	{ 
		get
		{
			return _ClaimRemarks;
		}
		set
		{
			if(_ClaimRemarks != value)
			{
				OnClaimRemarksChanging(value);
				_ClaimRemarks = value;
				OnClaimRemarksChanged();
			}
		}
	}
	private string _ClaimRemarks;

	partial void OnClaimRemarksChanging(string newValue);
	partial void OnClaimRemarksChanged();

    public string ClaimImage 
	{ 
		get
		{
			return _ClaimImage;
		}
		set
		{
			if(_ClaimImage != value)
			{
				OnClaimImageChanging(value);
				_ClaimImage = value;
				OnClaimImageChanged();
			}
		}
	}
	private string _ClaimImage;

	partial void OnClaimImageChanging(string newValue);
	partial void OnClaimImageChanged();

    public Nullable<int> ClaimLevel 
	{ 
		get
		{
			return _ClaimLevel;
		}
		set
		{
			if(_ClaimLevel != value)
			{
				OnClaimLevelChanging(value);
				_ClaimLevel = value;
				OnClaimLevelChanged();
			}
		}
	}
	private Nullable<int> _ClaimLevel;

	partial void OnClaimLevelChanging(Nullable<int> newValue);
	partial void OnClaimLevelChanged();

    public Nullable<int> HierarchyManagerId 
	{ 
		get
		{
			return _HierarchyManagerId;
		}
		set
		{
			if(_HierarchyManagerId != value)
			{
				OnHierarchyManagerIdChanging(value);
				_HierarchyManagerId = value;
				OnHierarchyManagerIdChanged();
			}
		}
	}
	private Nullable<int> _HierarchyManagerId;

	partial void OnHierarchyManagerIdChanging(Nullable<int> newValue);
	partial void OnHierarchyManagerIdChanged();

    public Nullable<bool> IsActive 
	{ 
		get
		{
			return _IsActive;
		}
		set
		{
			if(_IsActive != value)
			{
				OnIsActiveChanging(value);
				_IsActive = value;
				OnIsActiveChanged();
			}
		}
	}
	private Nullable<bool> _IsActive;

	partial void OnIsActiveChanging(Nullable<bool> newValue);
	partial void OnIsActiveChanged();

    public virtual ICollection<OCLM> OCLMs { get; set; }
    public virtual ICollection<OCLMRQ> OCLMRQs { get; set; }
    public virtual ICollection<CLMRQ1> CLMRQ1 { get; set; }
}

[Serializable]
public partial class OCLMRA : ObjectWithState
{

    public int ClaimApprovalID 
	{ 
		get
		{
			return _ClaimApprovalID;
		}
		set
		{
			if(_ClaimApprovalID != value)
			{
				OnClaimApprovalIDChanging(value);
				_ClaimApprovalID = value;
				OnClaimApprovalIDChanged();
			}
		}
	}
	private int _ClaimApprovalID;

	partial void OnClaimApprovalIDChanging(int newValue);
	partial void OnClaimApprovalIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int ClaimRequestID 
	{ 
		get
		{
			return _ClaimRequestID;
		}
		set
		{
			if(_ClaimRequestID != value)
			{
				OnClaimRequestIDChanging(value);
				_ClaimRequestID = value;
				OnClaimRequestIDChanged();
			}
		}
	}
	private int _ClaimRequestID;

	partial void OnClaimRequestIDChanging(int newValue);
	partial void OnClaimRequestIDChanged();

    public decimal SchemeAmount 
	{ 
		get
		{
			return _SchemeAmount;
		}
		set
		{
			if(_SchemeAmount != value)
			{
				OnSchemeAmountChanging(value);
				_SchemeAmount = value;
				OnSchemeAmountChanged();
			}
		}
	}
	private decimal _SchemeAmount;

	partial void OnSchemeAmountChanging(decimal newValue);
	partial void OnSchemeAmountChanged();

    public decimal Deduction 
	{ 
		get
		{
			return _Deduction;
		}
		set
		{
			if(_Deduction != value)
			{
				OnDeductionChanging(value);
				_Deduction = value;
				OnDeductionChanged();
			}
		}
	}
	private decimal _Deduction;

	partial void OnDeductionChanging(decimal newValue);
	partial void OnDeductionChanged();

    public string DeductionRemarks 
	{ 
		get
		{
			return _DeductionRemarks;
		}
		set
		{
			if(_DeductionRemarks != value)
			{
				OnDeductionRemarksChanging(value);
				_DeductionRemarks = value;
				OnDeductionRemarksChanged();
			}
		}
	}
	private string _DeductionRemarks;

	partial void OnDeductionRemarksChanging(string newValue);
	partial void OnDeductionRemarksChanged();

    public decimal ApprovedAmount 
	{ 
		get
		{
			return _ApprovedAmount;
		}
		set
		{
			if(_ApprovedAmount != value)
			{
				OnApprovedAmountChanging(value);
				_ApprovedAmount = value;
				OnApprovedAmountChanged();
			}
		}
	}
	private decimal _ApprovedAmount;

	partial void OnApprovedAmountChanging(decimal newValue);
	partial void OnApprovedAmountChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> NextManagerID 
	{ 
		get
		{
			return _NextManagerID;
		}
		set
		{
			if(_NextManagerID != value)
			{
				OnNextManagerIDChanging(value);
				_NextManagerID = value;
				OnNextManagerIDChanged();
			}
		}
	}
	private Nullable<int> _NextManagerID;

	partial void OnNextManagerIDChanging(Nullable<int> newValue);
	partial void OnNextManagerIDChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public decimal PrevApprovedAmount 
	{ 
		get
		{
			return _PrevApprovedAmount;
		}
		set
		{
			if(_PrevApprovedAmount != value)
			{
				OnPrevApprovedAmountChanging(value);
				_PrevApprovedAmount = value;
				OnPrevApprovedAmountChanged();
			}
		}
	}
	private decimal _PrevApprovedAmount;

	partial void OnPrevApprovedAmountChanging(decimal newValue);
	partial void OnPrevApprovedAmountChanged();

    public Nullable<System.DateTime> DocumentDate 
	{ 
		get
		{
			return _DocumentDate;
		}
		set
		{
			if(_DocumentDate != value)
			{
				OnDocumentDateChanging(value);
				_DocumentDate = value;
				OnDocumentDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _DocumentDate;

	partial void OnDocumentDateChanging(Nullable<System.DateTime> newValue);
	partial void OnDocumentDateChanged();

    public string CreatedIPAddress 
	{ 
		get
		{
			return _CreatedIPAddress;
		}
		set
		{
			if(_CreatedIPAddress != value)
			{
				OnCreatedIPAddressChanging(value);
				_CreatedIPAddress = value;
				OnCreatedIPAddressChanged();
			}
		}
	}
	private string _CreatedIPAddress;

	partial void OnCreatedIPAddressChanging(string newValue);
	partial void OnCreatedIPAddressChanged();

    public virtual OCLMRQ OCLMRQ { get; set; }
}

[Serializable]
public partial class OCLMRQ : ObjectWithState
{
    public OCLMRQ() 
    { 
        this.OCLMRAs = new HashSet<OCLMRA>();
    }


    public int ClaimRequestID 
	{ 
		get
		{
			return _ClaimRequestID;
		}
		set
		{
			if(_ClaimRequestID != value)
			{
				OnClaimRequestIDChanging(value);
				_ClaimRequestID = value;
				OnClaimRequestIDChanged();
			}
		}
	}
	private int _ClaimRequestID;

	partial void OnClaimRequestIDChanging(int newValue);
	partial void OnClaimRequestIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string DocNo 
	{ 
		get
		{
			return _DocNo;
		}
		set
		{
			if(_DocNo != value)
			{
				OnDocNoChanging(value);
				_DocNo = value;
				OnDocNoChanged();
			}
		}
	}
	private string _DocNo;

	partial void OnDocNoChanging(string newValue);
	partial void OnDocNoChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public int ParentClaimID 
	{ 
		get
		{
			return _ParentClaimID;
		}
		set
		{
			if(_ParentClaimID != value)
			{
				OnParentClaimIDChanging(value);
				_ParentClaimID = value;
				OnParentClaimIDChanged();
			}
		}
	}
	private int _ParentClaimID;

	partial void OnParentClaimIDChanging(int newValue);
	partial void OnParentClaimIDChanged();

    public System.DateTime FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private System.DateTime _FromDate;

	partial void OnFromDateChanging(System.DateTime newValue);
	partial void OnFromDateChanged();

    public System.DateTime ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private System.DateTime _ToDate;

	partial void OnToDateChanging(System.DateTime newValue);
	partial void OnToDateChanged();

    public System.DateTime ClaimDate 
	{ 
		get
		{
			return _ClaimDate;
		}
		set
		{
			if(_ClaimDate != value)
			{
				OnClaimDateChanging(value);
				_ClaimDate = value;
				OnClaimDateChanged();
			}
		}
	}
	private System.DateTime _ClaimDate;

	partial void OnClaimDateChanging(System.DateTime newValue);
	partial void OnClaimDateChanged();

    public decimal SchemeAmount 
	{ 
		get
		{
			return _SchemeAmount;
		}
		set
		{
			if(_SchemeAmount != value)
			{
				OnSchemeAmountChanging(value);
				_SchemeAmount = value;
				OnSchemeAmountChanged();
			}
		}
	}
	private decimal _SchemeAmount;

	partial void OnSchemeAmountChanging(decimal newValue);
	partial void OnSchemeAmountChanged();

    public decimal Deduction 
	{ 
		get
		{
			return _Deduction;
		}
		set
		{
			if(_Deduction != value)
			{
				OnDeductionChanging(value);
				_Deduction = value;
				OnDeductionChanged();
			}
		}
	}
	private decimal _Deduction;

	partial void OnDeductionChanging(decimal newValue);
	partial void OnDeductionChanged();

    public string DeductionRemarks 
	{ 
		get
		{
			return _DeductionRemarks;
		}
		set
		{
			if(_DeductionRemarks != value)
			{
				OnDeductionRemarksChanging(value);
				_DeductionRemarks = value;
				OnDeductionRemarksChanged();
			}
		}
	}
	private string _DeductionRemarks;

	partial void OnDeductionRemarksChanging(string newValue);
	partial void OnDeductionRemarksChanged();

    public decimal ApprovedAmount 
	{ 
		get
		{
			return _ApprovedAmount;
		}
		set
		{
			if(_ApprovedAmount != value)
			{
				OnApprovedAmountChanging(value);
				_ApprovedAmount = value;
				OnApprovedAmountChanged();
			}
		}
	}
	private decimal _ApprovedAmount;

	partial void OnApprovedAmountChanging(decimal newValue);
	partial void OnApprovedAmountChanged();

    public string ReasonCode 
	{ 
		get
		{
			return _ReasonCode;
		}
		set
		{
			if(_ReasonCode != value)
			{
				OnReasonCodeChanging(value);
				_ReasonCode = value;
				OnReasonCodeChanged();
			}
		}
	}
	private string _ReasonCode;

	partial void OnReasonCodeChanging(string newValue);
	partial void OnReasonCodeChanged();

    public bool IsAuto 
	{ 
		get
		{
			return _IsAuto;
		}
		set
		{
			if(_IsAuto != value)
			{
				OnIsAutoChanging(value);
				_IsAuto = value;
				OnIsAutoChanged();
			}
		}
	}
	private bool _IsAuto;

	partial void OnIsAutoChanging(bool newValue);
	partial void OnIsAutoChanged();

    public decimal SchemeSale 
	{ 
		get
		{
			return _SchemeSale;
		}
		set
		{
			if(_SchemeSale != value)
			{
				OnSchemeSaleChanging(value);
				_SchemeSale = value;
				OnSchemeSaleChanged();
			}
		}
	}
	private decimal _SchemeSale;

	partial void OnSchemeSaleChanging(decimal newValue);
	partial void OnSchemeSaleChanged();

    public decimal TotalSale 
	{ 
		get
		{
			return _TotalSale;
		}
		set
		{
			if(_TotalSale != value)
			{
				OnTotalSaleChanging(value);
				_TotalSale = value;
				OnTotalSaleChanged();
			}
		}
	}
	private decimal _TotalSale;

	partial void OnTotalSaleChanging(decimal newValue);
	partial void OnTotalSaleChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> NextManagerID 
	{ 
		get
		{
			return _NextManagerID;
		}
		set
		{
			if(_NextManagerID != value)
			{
				OnNextManagerIDChanging(value);
				_NextManagerID = value;
				OnNextManagerIDChanged();
			}
		}
	}
	private Nullable<int> _NextManagerID;

	partial void OnNextManagerIDChanging(Nullable<int> newValue);
	partial void OnNextManagerIDChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public string ErrMsg 
	{ 
		get
		{
			return _ErrMsg;
		}
		set
		{
			if(_ErrMsg != value)
			{
				OnErrMsgChanging(value);
				_ErrMsg = value;
				OnErrMsgChanged();
			}
		}
	}
	private string _ErrMsg;

	partial void OnErrMsgChanging(string newValue);
	partial void OnErrMsgChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool IsSAP 
	{ 
		get
		{
			return _IsSAP;
		}
		set
		{
			if(_IsSAP != value)
			{
				OnIsSAPChanging(value);
				_IsSAP = value;
				OnIsSAPChanged();
			}
		}
	}
	private bool _IsSAP;

	partial void OnIsSAPChanging(bool newValue);
	partial void OnIsSAPChanged();

    public decimal PrevApprovedAmount 
	{ 
		get
		{
			return _PrevApprovedAmount;
		}
		set
		{
			if(_PrevApprovedAmount != value)
			{
				OnPrevApprovedAmountChanging(value);
				_PrevApprovedAmount = value;
				OnPrevApprovedAmountChanged();
			}
		}
	}
	private decimal _PrevApprovedAmount;

	partial void OnPrevApprovedAmountChanging(decimal newValue);
	partial void OnPrevApprovedAmountChanged();

    public Nullable<int> ClaimChildID 
	{ 
		get
		{
			return _ClaimChildID;
		}
		set
		{
			if(_ClaimChildID != value)
			{
				OnClaimChildIDChanging(value);
				_ClaimChildID = value;
				OnClaimChildIDChanged();
			}
		}
	}
	private Nullable<int> _ClaimChildID;

	partial void OnClaimChildIDChanging(Nullable<int> newValue);
	partial void OnClaimChildIDChanged();

    public Nullable<decimal> ClaimChildParentID 
	{ 
		get
		{
			return _ClaimChildParentID;
		}
		set
		{
			if(_ClaimChildParentID != value)
			{
				OnClaimChildParentIDChanging(value);
				_ClaimChildParentID = value;
				OnClaimChildParentIDChanged();
			}
		}
	}
	private Nullable<decimal> _ClaimChildParentID;

	partial void OnClaimChildParentIDChanging(Nullable<decimal> newValue);
	partial void OnClaimChildParentIDChanged();

    public string CreatedIPAddress 
	{ 
		get
		{
			return _CreatedIPAddress;
		}
		set
		{
			if(_CreatedIPAddress != value)
			{
				OnCreatedIPAddressChanging(value);
				_CreatedIPAddress = value;
				OnCreatedIPAddressChanged();
			}
		}
	}
	private string _CreatedIPAddress;

	partial void OnCreatedIPAddressChanging(string newValue);
	partial void OnCreatedIPAddressChanged();

    public Nullable<bool> AccountSAPUpdate 
	{ 
		get
		{
			return _AccountSAPUpdate;
		}
		set
		{
			if(_AccountSAPUpdate != value)
			{
				OnAccountSAPUpdateChanging(value);
				_AccountSAPUpdate = value;
				OnAccountSAPUpdateChanged();
			}
		}
	}
	private Nullable<bool> _AccountSAPUpdate;

	partial void OnAccountSAPUpdateChanging(Nullable<bool> newValue);
	partial void OnAccountSAPUpdateChanged();

    public Nullable<System.DateTime> AccountUpdateDateTime 
	{ 
		get
		{
			return _AccountUpdateDateTime;
		}
		set
		{
			if(_AccountUpdateDateTime != value)
			{
				OnAccountUpdateDateTimeChanging(value);
				_AccountUpdateDateTime = value;
				OnAccountUpdateDateTimeChanged();
			}
		}
	}
	private Nullable<System.DateTime> _AccountUpdateDateTime;

	partial void OnAccountUpdateDateTimeChanging(Nullable<System.DateTime> newValue);
	partial void OnAccountUpdateDateTimeChanged();

    public Nullable<int> AccountUpdateBy 
	{ 
		get
		{
			return _AccountUpdateBy;
		}
		set
		{
			if(_AccountUpdateBy != value)
			{
				OnAccountUpdateByChanging(value);
				_AccountUpdateBy = value;
				OnAccountUpdateByChanged();
			}
		}
	}
	private Nullable<int> _AccountUpdateBy;

	partial void OnAccountUpdateByChanging(Nullable<int> newValue);
	partial void OnAccountUpdateByChanged();

    public virtual ICollection<OCLMRA> OCLMRAs { get; set; }
    public virtual OCLMP OCLMP { get; set; }
}

[Serializable]
public partial class OCLMSUM : ObjectWithState
{

    public int ClaimSumID 
	{ 
		get
		{
			return _ClaimSumID;
		}
		set
		{
			if(_ClaimSumID != value)
			{
				OnClaimSumIDChanging(value);
				_ClaimSumID = value;
				OnClaimSumIDChanged();
			}
		}
	}
	private int _ClaimSumID;

	partial void OnClaimSumIDChanging(int newValue);
	partial void OnClaimSumIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public decimal ApprovedAmount 
	{ 
		get
		{
			return _ApprovedAmount;
		}
		set
		{
			if(_ApprovedAmount != value)
			{
				OnApprovedAmountChanging(value);
				_ApprovedAmount = value;
				OnApprovedAmountChanged();
			}
		}
	}
	private decimal _ApprovedAmount;

	partial void OnApprovedAmountChanging(decimal newValue);
	partial void OnApprovedAmountChanged();

    public decimal DeductionAmount 
	{ 
		get
		{
			return _DeductionAmount;
		}
		set
		{
			if(_DeductionAmount != value)
			{
				OnDeductionAmountChanging(value);
				_DeductionAmount = value;
				OnDeductionAmountChanged();
			}
		}
	}
	private decimal _DeductionAmount;

	partial void OnDeductionAmountChanging(decimal newValue);
	partial void OnDeductionAmountChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();
}

[Serializable]
public partial class OCLPM : ObjectWithState
{

    public int OCLPMID 
	{ 
		get
		{
			return _OCLPMID;
		}
		set
		{
			if(_OCLPMID != value)
			{
				OnOCLPMIDChanging(value);
				_OCLPMID = value;
				OnOCLPMIDChanged();
			}
		}
	}
	private int _OCLPMID;

	partial void OnOCLPMIDChanging(int newValue);
	partial void OnOCLPMIDChanged();

    public Nullable<int> OptionId 
	{ 
		get
		{
			return _OptionId;
		}
		set
		{
			if(_OptionId != value)
			{
				OnOptionIdChanging(value);
				_OptionId = value;
				OnOptionIdChanged();
			}
		}
	}
	private Nullable<int> _OptionId;

	partial void OnOptionIdChanging(Nullable<int> newValue);
	partial void OnOptionIdChanged();

    public Nullable<int> RegionID 
	{ 
		get
		{
			return _RegionID;
		}
		set
		{
			if(_RegionID != value)
			{
				OnRegionIDChanging(value);
				_RegionID = value;
				OnRegionIDChanged();
			}
		}
	}
	private Nullable<int> _RegionID;

	partial void OnRegionIDChanging(Nullable<int> newValue);
	partial void OnRegionIDChanged();

    public Nullable<decimal> EmpId 
	{ 
		get
		{
			return _EmpId;
		}
		set
		{
			if(_EmpId != value)
			{
				OnEmpIdChanging(value);
				_EmpId = value;
				OnEmpIdChanged();
			}
		}
	}
	private Nullable<decimal> _EmpId;

	partial void OnEmpIdChanging(Nullable<decimal> newValue);
	partial void OnEmpIdChanged();

    public Nullable<decimal> DistributorId 
	{ 
		get
		{
			return _DistributorId;
		}
		set
		{
			if(_DistributorId != value)
			{
				OnDistributorIdChanging(value);
				_DistributorId = value;
				OnDistributorIdChanged();
			}
		}
	}
	private Nullable<decimal> _DistributorId;

	partial void OnDistributorIdChanging(Nullable<decimal> newValue);
	partial void OnDistributorIdChanged();

    public Nullable<decimal> SSID 
	{ 
		get
		{
			return _SSID;
		}
		set
		{
			if(_SSID != value)
			{
				OnSSIDChanging(value);
				_SSID = value;
				OnSSIDChanged();
			}
		}
	}
	private Nullable<decimal> _SSID;

	partial void OnSSIDChanging(Nullable<decimal> newValue);
	partial void OnSSIDChanged();

    public Nullable<int> Days 
	{ 
		get
		{
			return _Days;
		}
		set
		{
			if(_Days != value)
			{
				OnDaysChanging(value);
				_Days = value;
				OnDaysChanged();
			}
		}
	}
	private Nullable<int> _Days;

	partial void OnDaysChanging(Nullable<int> newValue);
	partial void OnDaysChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public Nullable<bool> Deleted 
	{ 
		get
		{
			return _Deleted;
		}
		set
		{
			if(_Deleted != value)
			{
				OnDeletedChanging(value);
				_Deleted = value;
				OnDeletedChanged();
			}
		}
	}
	private Nullable<bool> _Deleted;

	partial void OnDeletedChanging(Nullable<bool> newValue);
	partial void OnDeletedChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();
}

[Serializable]
public partial class OCMP : ObjectWithState
{
    public OCMP() 
    { 
        this.MCMPs = new HashSet<MCMP>();
    }


    public int CampaignID 
	{ 
		get
		{
			return _CampaignID;
		}
		set
		{
			if(_CampaignID != value)
			{
				OnCampaignIDChanging(value);
				_CampaignID = value;
				OnCampaignIDChanged();
			}
		}
	}
	private int _CampaignID;

	partial void OnCampaignIDChanging(int newValue);
	partial void OnCampaignIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string CampaignName 
	{ 
		get
		{
			return _CampaignName;
		}
		set
		{
			if(_CampaignName != value)
			{
				OnCampaignNameChanging(value);
				_CampaignName = value;
				OnCampaignNameChanged();
			}
		}
	}
	private string _CampaignName;

	partial void OnCampaignNameChanging(string newValue);
	partial void OnCampaignNameChanged();

    public string CampaignDesc 
	{ 
		get
		{
			return _CampaignDesc;
		}
		set
		{
			if(_CampaignDesc != value)
			{
				OnCampaignDescChanging(value);
				_CampaignDesc = value;
				OnCampaignDescChanged();
			}
		}
	}
	private string _CampaignDesc;

	partial void OnCampaignDescChanging(string newValue);
	partial void OnCampaignDescChanged();

    public System.DateTime StartDate 
	{ 
		get
		{
			return _StartDate;
		}
		set
		{
			if(_StartDate != value)
			{
				OnStartDateChanging(value);
				_StartDate = value;
				OnStartDateChanged();
			}
		}
	}
	private System.DateTime _StartDate;

	partial void OnStartDateChanging(System.DateTime newValue);
	partial void OnStartDateChanged();

    public System.DateTime EndDate 
	{ 
		get
		{
			return _EndDate;
		}
		set
		{
			if(_EndDate != value)
			{
				OnEndDateChanging(value);
				_EndDate = value;
				OnEndDateChanged();
			}
		}
	}
	private System.DateTime _EndDate;

	partial void OnEndDateChanging(System.DateTime newValue);
	partial void OnEndDateChanged();

    public string TargertPeoples 
	{ 
		get
		{
			return _TargertPeoples;
		}
		set
		{
			if(_TargertPeoples != value)
			{
				OnTargertPeoplesChanging(value);
				_TargertPeoples = value;
				OnTargertPeoplesChanged();
			}
		}
	}
	private string _TargertPeoples;

	partial void OnTargertPeoplesChanging(string newValue);
	partial void OnTargertPeoplesChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<MCMP> MCMPs { get; set; }
}

[Serializable]
public partial class OCNT : ObjectWithState
{

    public int CreditNoteID 
	{ 
		get
		{
			return _CreditNoteID;
		}
		set
		{
			if(_CreditNoteID != value)
			{
				OnCreditNoteIDChanging(value);
				_CreditNoteID = value;
				OnCreditNoteIDChanged();
			}
		}
	}
	private int _CreditNoteID;

	partial void OnCreditNoteIDChanging(int newValue);
	partial void OnCreditNoteIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public System.DateTime CreditNoteDate 
	{ 
		get
		{
			return _CreditNoteDate;
		}
		set
		{
			if(_CreditNoteDate != value)
			{
				OnCreditNoteDateChanging(value);
				_CreditNoteDate = value;
				OnCreditNoteDateChanged();
			}
		}
	}
	private System.DateTime _CreditNoteDate;

	partial void OnCreditNoteDateChanging(System.DateTime newValue);
	partial void OnCreditNoteDateChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public string CreditNoteType 
	{ 
		get
		{
			return _CreditNoteType;
		}
		set
		{
			if(_CreditNoteType != value)
			{
				OnCreditNoteTypeChanging(value);
				_CreditNoteType = value;
				OnCreditNoteTypeChanged();
			}
		}
	}
	private string _CreditNoteType;

	partial void OnCreditNoteTypeChanging(string newValue);
	partial void OnCreditNoteTypeChanged();

    public decimal Amount 
	{ 
		get
		{
			return _Amount;
		}
		set
		{
			if(_Amount != value)
			{
				OnAmountChanging(value);
				_Amount = value;
				OnAmountChanged();
			}
		}
	}
	private decimal _Amount;

	partial void OnAmountChanging(decimal newValue);
	partial void OnAmountChanged();

    public Nullable<System.DateTime> ValidTillDate 
	{ 
		get
		{
			return _ValidTillDate;
		}
		set
		{
			if(_ValidTillDate != value)
			{
				OnValidTillDateChanging(value);
				_ValidTillDate = value;
				OnValidTillDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ValidTillDate;

	partial void OnValidTillDateChanging(Nullable<System.DateTime> newValue);
	partial void OnValidTillDateChanged();

    public Nullable<int> PymtTermsID 
	{ 
		get
		{
			return _PymtTermsID;
		}
		set
		{
			if(_PymtTermsID != value)
			{
				OnPymtTermsIDChanging(value);
				_PymtTermsID = value;
				OnPymtTermsIDChanged();
			}
		}
	}
	private Nullable<int> _PymtTermsID;

	partial void OnPymtTermsIDChanging(Nullable<int> newValue);
	partial void OnPymtTermsIDChanged();

    public string Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private string _Status;

	partial void OnStatusChanging(string newValue);
	partial void OnStatusChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public decimal RemainAmount 
	{ 
		get
		{
			return _RemainAmount;
		}
		set
		{
			if(_RemainAmount != value)
			{
				OnRemainAmountChanging(value);
				_RemainAmount = value;
				OnRemainAmountChanged();
			}
		}
	}
	private decimal _RemainAmount;

	partial void OnRemainAmountChanging(decimal newValue);
	partial void OnRemainAmountChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public bool IsMobile 
	{ 
		get
		{
			return _IsMobile;
		}
		set
		{
			if(_IsMobile != value)
			{
				OnIsMobileChanging(value);
				_IsMobile = value;
				OnIsMobileChanged();
			}
		}
	}
	private bool _IsMobile;

	partial void OnIsMobileChanging(bool newValue);
	partial void OnIsMobileChanged();

    public virtual OPYT OPYT { get; set; }
    public virtual OCRD OCRD { get; set; }
}

[Serializable]
public partial class OCOMP : ObjectWithState
{
    public OCOMP() 
    { 
        this.CRUT1 = new HashSet<CRUT1>();
    }


    public int OCOMPID 
	{ 
		get
		{
			return _OCOMPID;
		}
		set
		{
			if(_OCOMPID != value)
			{
				OnOCOMPIDChanging(value);
				_OCOMPID = value;
				OnOCOMPIDChanged();
			}
		}
	}
	private int _OCOMPID;

	partial void OnOCOMPIDChanging(int newValue);
	partial void OnOCOMPIDChanged();

    public string Code 
	{ 
		get
		{
			return _Code;
		}
		set
		{
			if(_Code != value)
			{
				OnCodeChanging(value);
				_Code = value;
				OnCodeChanged();
			}
		}
	}
	private string _Code;

	partial void OnCodeChanging(string newValue);
	partial void OnCodeChanged();

    public string CustomerName 
	{ 
		get
		{
			return _CustomerName;
		}
		set
		{
			if(_CustomerName != value)
			{
				OnCustomerNameChanging(value);
				_CustomerName = value;
				OnCustomerNameChanged();
			}
		}
	}
	private string _CustomerName;

	partial void OnCustomerNameChanging(string newValue);
	partial void OnCustomerNameChanged();

    public string ContactPerson 
	{ 
		get
		{
			return _ContactPerson;
		}
		set
		{
			if(_ContactPerson != value)
			{
				OnContactPersonChanging(value);
				_ContactPerson = value;
				OnContactPersonChanged();
			}
		}
	}
	private string _ContactPerson;

	partial void OnContactPersonChanging(string newValue);
	partial void OnContactPersonChanged();

    public string Address1 
	{ 
		get
		{
			return _Address1;
		}
		set
		{
			if(_Address1 != value)
			{
				OnAddress1Changing(value);
				_Address1 = value;
				OnAddress1Changed();
			}
		}
	}
	private string _Address1;

	partial void OnAddress1Changing(string newValue);
	partial void OnAddress1Changed();

    public string Address2 
	{ 
		get
		{
			return _Address2;
		}
		set
		{
			if(_Address2 != value)
			{
				OnAddress2Changing(value);
				_Address2 = value;
				OnAddress2Changed();
			}
		}
	}
	private string _Address2;

	partial void OnAddress2Changing(string newValue);
	partial void OnAddress2Changed();

    public Nullable<int> CityID 
	{ 
		get
		{
			return _CityID;
		}
		set
		{
			if(_CityID != value)
			{
				OnCityIDChanging(value);
				_CityID = value;
				OnCityIDChanged();
			}
		}
	}
	private Nullable<int> _CityID;

	partial void OnCityIDChanging(Nullable<int> newValue);
	partial void OnCityIDChanged();

    public string Zipcode 
	{ 
		get
		{
			return _Zipcode;
		}
		set
		{
			if(_Zipcode != value)
			{
				OnZipcodeChanging(value);
				_Zipcode = value;
				OnZipcodeChanged();
			}
		}
	}
	private string _Zipcode;

	partial void OnZipcodeChanging(string newValue);
	partial void OnZipcodeChanged();

    public string Email 
	{ 
		get
		{
			return _Email;
		}
		set
		{
			if(_Email != value)
			{
				OnEmailChanging(value);
				_Email = value;
				OnEmailChanged();
			}
		}
	}
	private string _Email;

	partial void OnEmailChanging(string newValue);
	partial void OnEmailChanged();

    public string Location 
	{ 
		get
		{
			return _Location;
		}
		set
		{
			if(_Location != value)
			{
				OnLocationChanging(value);
				_Location = value;
				OnLocationChanged();
			}
		}
	}
	private string _Location;

	partial void OnLocationChanging(string newValue);
	partial void OnLocationChanged();

    public string Phone 
	{ 
		get
		{
			return _Phone;
		}
		set
		{
			if(_Phone != value)
			{
				OnPhoneChanging(value);
				_Phone = value;
				OnPhoneChanged();
			}
		}
	}
	private string _Phone;

	partial void OnPhoneChanging(string newValue);
	partial void OnPhoneChanged();

    public Nullable<int> StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private Nullable<int> _StateID;

	partial void OnStateIDChanging(Nullable<int> newValue);
	partial void OnStateIDChanged();

    public Nullable<int> RouteID 
	{ 
		get
		{
			return _RouteID;
		}
		set
		{
			if(_RouteID != value)
			{
				OnRouteIDChanging(value);
				_RouteID = value;
				OnRouteIDChanged();
			}
		}
	}
	private Nullable<int> _RouteID;

	partial void OnRouteIDChanging(Nullable<int> newValue);
	partial void OnRouteIDChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public string Latitude 
	{ 
		get
		{
			return _Latitude;
		}
		set
		{
			if(_Latitude != value)
			{
				OnLatitudeChanging(value);
				_Latitude = value;
				OnLatitudeChanged();
			}
		}
	}
	private string _Latitude;

	partial void OnLatitudeChanging(string newValue);
	partial void OnLatitudeChanged();

    public string Longitude 
	{ 
		get
		{
			return _Longitude;
		}
		set
		{
			if(_Longitude != value)
			{
				OnLongitudeChanging(value);
				_Longitude = value;
				OnLongitudeChanged();
			}
		}
	}
	private string _Longitude;

	partial void OnLongitudeChanging(string newValue);
	partial void OnLongitudeChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public string BrandID 
	{ 
		get
		{
			return _BrandID;
		}
		set
		{
			if(_BrandID != value)
			{
				OnBrandIDChanging(value);
				_BrandID = value;
				OnBrandIDChanged();
			}
		}
	}
	private string _BrandID;

	partial void OnBrandIDChanging(string newValue);
	partial void OnBrandIDChanged();

    public string Accuracy 
	{ 
		get
		{
			return _Accuracy;
		}
		set
		{
			if(_Accuracy != value)
			{
				OnAccuracyChanging(value);
				_Accuracy = value;
				OnAccuracyChanged();
			}
		}
	}
	private string _Accuracy;

	partial void OnAccuracyChanging(string newValue);
	partial void OnAccuracyChanged();

    public Nullable<decimal> Distance 
	{ 
		get
		{
			return _Distance;
		}
		set
		{
			if(_Distance != value)
			{
				OnDistanceChanging(value);
				_Distance = value;
				OnDistanceChanged();
			}
		}
	}
	private Nullable<decimal> _Distance;

	partial void OnDistanceChanging(Nullable<decimal> newValue);
	partial void OnDistanceChanged();

    public Nullable<decimal> ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private Nullable<decimal> _ParentID;

	partial void OnParentIDChanging(Nullable<decimal> newValue);
	partial void OnParentIDChanged();

    public virtual ICollection<CRUT1> CRUT1 { get; set; }
}

[Serializable]
public partial class OCPN : ObjectWithState
{
    public OCPN() 
    { 
        this.CPN1 = new HashSet<CPN1>();
    }


    public int CouponID 
	{ 
		get
		{
			return _CouponID;
		}
		set
		{
			if(_CouponID != value)
			{
				OnCouponIDChanging(value);
				_CouponID = value;
				OnCouponIDChanged();
			}
		}
	}
	private int _CouponID;

	partial void OnCouponIDChanging(int newValue);
	partial void OnCouponIDChanged();

    public string CouponCode 
	{ 
		get
		{
			return _CouponCode;
		}
		set
		{
			if(_CouponCode != value)
			{
				OnCouponCodeChanging(value);
				_CouponCode = value;
				OnCouponCodeChanged();
			}
		}
	}
	private string _CouponCode;

	partial void OnCouponCodeChanging(string newValue);
	partial void OnCouponCodeChanged();

    public string CouponName 
	{ 
		get
		{
			return _CouponName;
		}
		set
		{
			if(_CouponName != value)
			{
				OnCouponNameChanging(value);
				_CouponName = value;
				OnCouponNameChanged();
			}
		}
	}
	private string _CouponName;

	partial void OnCouponNameChanging(string newValue);
	partial void OnCouponNameChanged();

    public string Description 
	{ 
		get
		{
			return _Description;
		}
		set
		{
			if(_Description != value)
			{
				OnDescriptionChanging(value);
				_Description = value;
				OnDescriptionChanged();
			}
		}
	}
	private string _Description;

	partial void OnDescriptionChanging(string newValue);
	partial void OnDescriptionChanged();

    public string DiscountType 
	{ 
		get
		{
			return _DiscountType;
		}
		set
		{
			if(_DiscountType != value)
			{
				OnDiscountTypeChanging(value);
				_DiscountType = value;
				OnDiscountTypeChanged();
			}
		}
	}
	private string _DiscountType;

	partial void OnDiscountTypeChanging(string newValue);
	partial void OnDiscountTypeChanged();

    public Nullable<decimal> DiscountValue 
	{ 
		get
		{
			return _DiscountValue;
		}
		set
		{
			if(_DiscountValue != value)
			{
				OnDiscountValueChanging(value);
				_DiscountValue = value;
				OnDiscountValueChanged();
			}
		}
	}
	private Nullable<decimal> _DiscountValue;

	partial void OnDiscountValueChanging(Nullable<decimal> newValue);
	partial void OnDiscountValueChanged();

    public Nullable<System.DateTime> StartDate 
	{ 
		get
		{
			return _StartDate;
		}
		set
		{
			if(_StartDate != value)
			{
				OnStartDateChanging(value);
				_StartDate = value;
				OnStartDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _StartDate;

	partial void OnStartDateChanging(Nullable<System.DateTime> newValue);
	partial void OnStartDateChanged();

    public Nullable<System.TimeSpan> StartTime 
	{ 
		get
		{
			return _StartTime;
		}
		set
		{
			if(_StartTime != value)
			{
				OnStartTimeChanging(value);
				_StartTime = value;
				OnStartTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _StartTime;

	partial void OnStartTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnStartTimeChanged();

    public Nullable<System.DateTime> ExpireDate 
	{ 
		get
		{
			return _ExpireDate;
		}
		set
		{
			if(_ExpireDate != value)
			{
				OnExpireDateChanging(value);
				_ExpireDate = value;
				OnExpireDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ExpireDate;

	partial void OnExpireDateChanging(Nullable<System.DateTime> newValue);
	partial void OnExpireDateChanged();

    public Nullable<System.TimeSpan> ExpireTime 
	{ 
		get
		{
			return _ExpireTime;
		}
		set
		{
			if(_ExpireTime != value)
			{
				OnExpireTimeChanging(value);
				_ExpireTime = value;
				OnExpireTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _ExpireTime;

	partial void OnExpireTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnExpireTimeChanged();

    public Nullable<bool> IsMultipleUse 
	{ 
		get
		{
			return _IsMultipleUse;
		}
		set
		{
			if(_IsMultipleUse != value)
			{
				OnIsMultipleUseChanging(value);
				_IsMultipleUse = value;
				OnIsMultipleUseChanged();
			}
		}
	}
	private Nullable<bool> _IsMultipleUse;

	partial void OnIsMultipleUseChanging(Nullable<bool> newValue);
	partial void OnIsMultipleUseChanged();

    public Nullable<int> MaxNoUsuable 
	{ 
		get
		{
			return _MaxNoUsuable;
		}
		set
		{
			if(_MaxNoUsuable != value)
			{
				OnMaxNoUsuableChanging(value);
				_MaxNoUsuable = value;
				OnMaxNoUsuableChanged();
			}
		}
	}
	private Nullable<int> _MaxNoUsuable;

	partial void OnMaxNoUsuableChanging(Nullable<int> newValue);
	partial void OnMaxNoUsuableChanged();

    public Nullable<int> TotalNoUsuable 
	{ 
		get
		{
			return _TotalNoUsuable;
		}
		set
		{
			if(_TotalNoUsuable != value)
			{
				OnTotalNoUsuableChanging(value);
				_TotalNoUsuable = value;
				OnTotalNoUsuableChanged();
			}
		}
	}
	private Nullable<int> _TotalNoUsuable;

	partial void OnTotalNoUsuableChanging(Nullable<int> newValue);
	partial void OnTotalNoUsuableChanged();

    public Nullable<bool> IsNewUser 
	{ 
		get
		{
			return _IsNewUser;
		}
		set
		{
			if(_IsNewUser != value)
			{
				OnIsNewUserChanging(value);
				_IsNewUser = value;
				OnIsNewUserChanged();
			}
		}
	}
	private Nullable<bool> _IsNewUser;

	partial void OnIsNewUserChanging(Nullable<bool> newValue);
	partial void OnIsNewUserChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public Nullable<decimal> MinBillValue 
	{ 
		get
		{
			return _MinBillValue;
		}
		set
		{
			if(_MinBillValue != value)
			{
				OnMinBillValueChanging(value);
				_MinBillValue = value;
				OnMinBillValueChanged();
			}
		}
	}
	private Nullable<decimal> _MinBillValue;

	partial void OnMinBillValueChanging(Nullable<decimal> newValue);
	partial void OnMinBillValueChanged();

    public Nullable<decimal> MaxBillValue 
	{ 
		get
		{
			return _MaxBillValue;
		}
		set
		{
			if(_MaxBillValue != value)
			{
				OnMaxBillValueChanging(value);
				_MaxBillValue = value;
				OnMaxBillValueChanged();
			}
		}
	}
	private Nullable<decimal> _MaxBillValue;

	partial void OnMaxBillValueChanging(Nullable<decimal> newValue);
	partial void OnMaxBillValueChanged();

    public bool IsApplyToAll 
	{ 
		get
		{
			return _IsApplyToAll;
		}
		set
		{
			if(_IsApplyToAll != value)
			{
				OnIsApplyToAllChanging(value);
				_IsApplyToAll = value;
				OnIsApplyToAllChanged();
			}
		}
	}
	private bool _IsApplyToAll;

	partial void OnIsApplyToAllChanging(bool newValue);
	partial void OnIsApplyToAllChanged();

    public virtual ICollection<CPN1> CPN1 { get; set; }
}

[Serializable]
public partial class OCPY : ObjectWithState
{
    public OCPY() 
    { 
        this.OGCRDs = new HashSet<OGCRD>();
        this.OGITMs = new HashSet<OGITM>();
    }


    public int CompanyID 
	{ 
		get
		{
			return _CompanyID;
		}
		set
		{
			if(_CompanyID != value)
			{
				OnCompanyIDChanging(value);
				_CompanyID = value;
				OnCompanyIDChanged();
			}
		}
	}
	private int _CompanyID;

	partial void OnCompanyIDChanging(int newValue);
	partial void OnCompanyIDChanged();

    public string CompanyCode 
	{ 
		get
		{
			return _CompanyCode;
		}
		set
		{
			if(_CompanyCode != value)
			{
				OnCompanyCodeChanging(value);
				_CompanyCode = value;
				OnCompanyCodeChanged();
			}
		}
	}
	private string _CompanyCode;

	partial void OnCompanyCodeChanging(string newValue);
	partial void OnCompanyCodeChanged();

    public string CompanyName 
	{ 
		get
		{
			return _CompanyName;
		}
		set
		{
			if(_CompanyName != value)
			{
				OnCompanyNameChanging(value);
				_CompanyName = value;
				OnCompanyNameChanged();
			}
		}
	}
	private string _CompanyName;

	partial void OnCompanyNameChanging(string newValue);
	partial void OnCompanyNameChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public string SalesOrg 
	{ 
		get
		{
			return _SalesOrg;
		}
		set
		{
			if(_SalesOrg != value)
			{
				OnSalesOrgChanging(value);
				_SalesOrg = value;
				OnSalesOrgChanged();
			}
		}
	}
	private string _SalesOrg;

	partial void OnSalesOrgChanging(string newValue);
	partial void OnSalesOrgChanged();

    public string Address1 
	{ 
		get
		{
			return _Address1;
		}
		set
		{
			if(_Address1 != value)
			{
				OnAddress1Changing(value);
				_Address1 = value;
				OnAddress1Changed();
			}
		}
	}
	private string _Address1;

	partial void OnAddress1Changing(string newValue);
	partial void OnAddress1Changed();

    public string Address2 
	{ 
		get
		{
			return _Address2;
		}
		set
		{
			if(_Address2 != value)
			{
				OnAddress2Changing(value);
				_Address2 = value;
				OnAddress2Changed();
			}
		}
	}
	private string _Address2;

	partial void OnAddress2Changing(string newValue);
	partial void OnAddress2Changed();

    public string City 
	{ 
		get
		{
			return _City;
		}
		set
		{
			if(_City != value)
			{
				OnCityChanging(value);
				_City = value;
				OnCityChanged();
			}
		}
	}
	private string _City;

	partial void OnCityChanging(string newValue);
	partial void OnCityChanged();

    public string State 
	{ 
		get
		{
			return _State;
		}
		set
		{
			if(_State != value)
			{
				OnStateChanging(value);
				_State = value;
				OnStateChanged();
			}
		}
	}
	private string _State;

	partial void OnStateChanging(string newValue);
	partial void OnStateChanged();

    public string Pincode 
	{ 
		get
		{
			return _Pincode;
		}
		set
		{
			if(_Pincode != value)
			{
				OnPincodeChanging(value);
				_Pincode = value;
				OnPincodeChanged();
			}
		}
	}
	private string _Pincode;

	partial void OnPincodeChanging(string newValue);
	partial void OnPincodeChanged();

    public string Country 
	{ 
		get
		{
			return _Country;
		}
		set
		{
			if(_Country != value)
			{
				OnCountryChanging(value);
				_Country = value;
				OnCountryChanged();
			}
		}
	}
	private string _Country;

	partial void OnCountryChanging(string newValue);
	partial void OnCountryChanged();

    public virtual ICollection<OGCRD> OGCRDs { get; set; }
    public virtual ICollection<OGITM> OGITMs { get; set; }
}

[Serializable]
public partial class OCRD : ObjectWithState
{
    public OCRD() 
    { 
        this.ASTCFs = new HashSet<ASTCF>();
        this.CRD1 = new HashSet<CRD1>();
        this.CRD2 = new HashSet<CRD2>();
        this.EXASTs = new HashSet<EXAST>();
        this.HELPs = new HashSet<HELP>();
        this.INRTs = new HashSet<INRT>();
        this.MSTCFs = new HashSet<MSTCF>();
        this.OASTFs = new HashSet<OASTF>();
        this.OCNTs = new HashSet<OCNT>();
        this.OEMPs = new HashSet<OEMP>();
        this.OGCRDs = new HashSet<OGCRD>();
        this.OPOS = new HashSet<OPOS>();
        this.OTLTs = new HashSet<OTLT>();
        this.SCM1 = new HashSet<SCM1>();
        this.RUT1 = new HashSet<RUT1>();
        this.ORDRs = new HashSet<ORDR>();
        this.CLM1 = new HashSet<CLM1>();
        this.OCLMs = new HashSet<OCLM>();
        this.OMIDs = new HashSet<OMID>();
        this.ACRD1 = new HashSet<ACRD1>();
        this.AOCRDs = new HashSet<AOCRD>();
        this.OTASKs = new HashSet<OTASK>();
        this.OTASKs1 = new HashSet<OTASK>();
        this.TASK1 = new HashSet<TASK1>();
        this.TASK2 = new HashSet<TASK2>();
        this.OASTs = new HashSet<OAST>();
        this.OASTs1 = new HashSet<OAST>();
        this.OASTs2 = new HashSet<OAST>();
        this.ENT1 = new HashSet<ENT1>();
        this.OCRD1 = new HashSet<OCRD>();
        this.DCLM1 = new HashSet<DCLM1>();
        this.DOCLMs = new HashSet<DOCLM>();
        this.AORDRs = new HashSet<AORDR>();
    }


    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private int _Type;

	partial void OnTypeChanging(int newValue);
	partial void OnTypeChanged();

    public string CustomerCode 
	{ 
		get
		{
			return _CustomerCode;
		}
		set
		{
			if(_CustomerCode != value)
			{
				OnCustomerCodeChanging(value);
				_CustomerCode = value;
				OnCustomerCodeChanged();
			}
		}
	}
	private string _CustomerCode;

	partial void OnCustomerCodeChanging(string newValue);
	partial void OnCustomerCodeChanged();

    public string CustomerName 
	{ 
		get
		{
			return _CustomerName;
		}
		set
		{
			if(_CustomerName != value)
			{
				OnCustomerNameChanging(value);
				_CustomerName = value;
				OnCustomerNameChanged();
			}
		}
	}
	private string _CustomerName;

	partial void OnCustomerNameChanging(string newValue);
	partial void OnCustomerNameChanged();

    public int CustGroupID 
	{ 
		get
		{
			return _CustGroupID;
		}
		set
		{
			if(_CustGroupID != value)
			{
				OnCustGroupIDChanging(value);
				_CustGroupID = value;
				OnCustGroupIDChanged();
			}
		}
	}
	private int _CustGroupID;

	partial void OnCustGroupIDChanging(int newValue);
	partial void OnCustGroupIDChanged();

    public string Website 
	{ 
		get
		{
			return _Website;
		}
		set
		{
			if(_Website != value)
			{
				OnWebsiteChanging(value);
				_Website = value;
				OnWebsiteChanged();
			}
		}
	}
	private string _Website;

	partial void OnWebsiteChanging(string newValue);
	partial void OnWebsiteChanged();

    public string EMail1 
	{ 
		get
		{
			return _EMail1;
		}
		set
		{
			if(_EMail1 != value)
			{
				OnEMail1Changing(value);
				_EMail1 = value;
				OnEMail1Changed();
			}
		}
	}
	private string _EMail1;

	partial void OnEMail1Changing(string newValue);
	partial void OnEMail1Changed();

    public string Phone 
	{ 
		get
		{
			return _Phone;
		}
		set
		{
			if(_Phone != value)
			{
				OnPhoneChanging(value);
				_Phone = value;
				OnPhoneChanged();
			}
		}
	}
	private string _Phone;

	partial void OnPhoneChanging(string newValue);
	partial void OnPhoneChanged();

    public string Fax 
	{ 
		get
		{
			return _Fax;
		}
		set
		{
			if(_Fax != value)
			{
				OnFaxChanging(value);
				_Fax = value;
				OnFaxChanged();
			}
		}
	}
	private string _Fax;

	partial void OnFaxChanging(string newValue);
	partial void OnFaxChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public string Bank 
	{ 
		get
		{
			return _Bank;
		}
		set
		{
			if(_Bank != value)
			{
				OnBankChanging(value);
				_Bank = value;
				OnBankChanged();
			}
		}
	}
	private string _Bank;

	partial void OnBankChanging(string newValue);
	partial void OnBankChanged();

    public string BankBranch 
	{ 
		get
		{
			return _BankBranch;
		}
		set
		{
			if(_BankBranch != value)
			{
				OnBankBranchChanging(value);
				_BankBranch = value;
				OnBankBranchChanged();
			}
		}
	}
	private string _BankBranch;

	partial void OnBankBranchChanging(string newValue);
	partial void OnBankBranchChanged();

    public string IFSCCode 
	{ 
		get
		{
			return _IFSCCode;
		}
		set
		{
			if(_IFSCCode != value)
			{
				OnIFSCCodeChanging(value);
				_IFSCCode = value;
				OnIFSCCodeChanged();
			}
		}
	}
	private string _IFSCCode;

	partial void OnIFSCCodeChanging(string newValue);
	partial void OnIFSCCodeChanged();

    public string PANNumber 
	{ 
		get
		{
			return _PANNumber;
		}
		set
		{
			if(_PANNumber != value)
			{
				OnPANNumberChanging(value);
				_PANNumber = value;
				OnPANNumberChanged();
			}
		}
	}
	private string _PANNumber;

	partial void OnPANNumberChanging(string newValue);
	partial void OnPANNumberChanged();

    public string VATNumber 
	{ 
		get
		{
			return _VATNumber;
		}
		set
		{
			if(_VATNumber != value)
			{
				OnVATNumberChanging(value);
				_VATNumber = value;
				OnVATNumberChanged();
			}
		}
	}
	private string _VATNumber;

	partial void OnVATNumberChanging(string newValue);
	partial void OnVATNumberChanged();

    public string CSTNumber 
	{ 
		get
		{
			return _CSTNumber;
		}
		set
		{
			if(_CSTNumber != value)
			{
				OnCSTNumberChanging(value);
				_CSTNumber = value;
				OnCSTNumberChanged();
			}
		}
	}
	private string _CSTNumber;

	partial void OnCSTNumberChanging(string newValue);
	partial void OnCSTNumberChanged();

    public string GSTIN 
	{ 
		get
		{
			return _GSTIN;
		}
		set
		{
			if(_GSTIN != value)
			{
				OnGSTINChanging(value);
				_GSTIN = value;
				OnGSTINChanged();
			}
		}
	}
	private string _GSTIN;

	partial void OnGSTINChanging(string newValue);
	partial void OnGSTINChanged();

    public string FoodLicenceNo 
	{ 
		get
		{
			return _FoodLicenceNo;
		}
		set
		{
			if(_FoodLicenceNo != value)
			{
				OnFoodLicenceNoChanging(value);
				_FoodLicenceNo = value;
				OnFoodLicenceNoChanged();
			}
		}
	}
	private string _FoodLicenceNo;

	partial void OnFoodLicenceNoChanging(string newValue);
	partial void OnFoodLicenceNoChanged();

    public string BarCode 
	{ 
		get
		{
			return _BarCode;
		}
		set
		{
			if(_BarCode != value)
			{
				OnBarCodeChanging(value);
				_BarCode = value;
				OnBarCodeChanged();
			}
		}
	}
	private string _BarCode;

	partial void OnBarCodeChanging(string newValue);
	partial void OnBarCodeChanged();

    public string Photo 
	{ 
		get
		{
			return _Photo;
		}
		set
		{
			if(_Photo != value)
			{
				OnPhotoChanging(value);
				_Photo = value;
				OnPhotoChanged();
			}
		}
	}
	private string _Photo;

	partial void OnPhotoChanging(string newValue);
	partial void OnPhotoChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsMobile 
	{ 
		get
		{
			return _IsMobile;
		}
		set
		{
			if(_IsMobile != value)
			{
				OnIsMobileChanging(value);
				_IsMobile = value;
				OnIsMobileChanged();
			}
		}
	}
	private bool _IsMobile;

	partial void OnIsMobileChanging(bool newValue);
	partial void OnIsMobileChanged();

    public decimal CreditLimit 
	{ 
		get
		{
			return _CreditLimit;
		}
		set
		{
			if(_CreditLimit != value)
			{
				OnCreditLimitChanging(value);
				_CreditLimit = value;
				OnCreditLimitChanged();
			}
		}
	}
	private decimal _CreditLimit;

	partial void OnCreditLimitChanging(decimal newValue);
	partial void OnCreditLimitChanged();

    public bool BulkEmail 
	{ 
		get
		{
			return _BulkEmail;
		}
		set
		{
			if(_BulkEmail != value)
			{
				OnBulkEmailChanging(value);
				_BulkEmail = value;
				OnBulkEmailChanged();
			}
		}
	}
	private bool _BulkEmail;

	partial void OnBulkEmailChanging(bool newValue);
	partial void OnBulkEmailChanged();

    public bool BulkSMS 
	{ 
		get
		{
			return _BulkSMS;
		}
		set
		{
			if(_BulkSMS != value)
			{
				OnBulkSMSChanging(value);
				_BulkSMS = value;
				OnBulkSMSChanged();
			}
		}
	}
	private bool _BulkSMS;

	partial void OnBulkSMSChanging(bool newValue);
	partial void OnBulkSMSChanged();

    public bool IsTemp 
	{ 
		get
		{
			return _IsTemp;
		}
		set
		{
			if(_IsTemp != value)
			{
				OnIsTempChanging(value);
				_IsTemp = value;
				OnIsTempChanged();
			}
		}
	}
	private bool _IsTemp;

	partial void OnIsTempChanging(bool newValue);
	partial void OnIsTempChanged();

    public string CUsername 
	{ 
		get
		{
			return _CUsername;
		}
		set
		{
			if(_CUsername != value)
			{
				OnCUsernameChanging(value);
				_CUsername = value;
				OnCUsernameChanged();
			}
		}
	}
	private string _CUsername;

	partial void OnCUsernameChanging(string newValue);
	partial void OnCUsernameChanged();

    public string CPassword 
	{ 
		get
		{
			return _CPassword;
		}
		set
		{
			if(_CPassword != value)
			{
				OnCPasswordChanging(value);
				_CPassword = value;
				OnCPasswordChanged();
			}
		}
	}
	private string _CPassword;

	partial void OnCPasswordChanging(string newValue);
	partial void OnCPasswordChanged();

    public string CSeqAnswer 
	{ 
		get
		{
			return _CSeqAnswer;
		}
		set
		{
			if(_CSeqAnswer != value)
			{
				OnCSeqAnswerChanging(value);
				_CSeqAnswer = value;
				OnCSeqAnswerChanged();
			}
		}
	}
	private string _CSeqAnswer;

	partial void OnCSeqAnswerChanging(string newValue);
	partial void OnCSeqAnswerChanged();

    public bool IsApplication 
	{ 
		get
		{
			return _IsApplication;
		}
		set
		{
			if(_IsApplication != value)
			{
				OnIsApplicationChanging(value);
				_IsApplication = value;
				OnIsApplicationChanged();
			}
		}
	}
	private bool _IsApplication;

	partial void OnIsApplicationChanging(bool newValue);
	partial void OnIsApplicationChanged();

    public string Gender 
	{ 
		get
		{
			return _Gender;
		}
		set
		{
			if(_Gender != value)
			{
				OnGenderChanging(value);
				_Gender = value;
				OnGenderChanged();
			}
		}
	}
	private string _Gender;

	partial void OnGenderChanging(string newValue);
	partial void OnGenderChanged();

    public bool AllowNotify 
	{ 
		get
		{
			return _AllowNotify;
		}
		set
		{
			if(_AllowNotify != value)
			{
				OnAllowNotifyChanging(value);
				_AllowNotify = value;
				OnAllowNotifyChanged();
			}
		}
	}
	private bool _AllowNotify;

	partial void OnAllowNotifyChanging(bool newValue);
	partial void OnAllowNotifyChanged();

    public string DeviceID 
	{ 
		get
		{
			return _DeviceID;
		}
		set
		{
			if(_DeviceID != value)
			{
				OnDeviceIDChanging(value);
				_DeviceID = value;
				OnDeviceIDChanged();
			}
		}
	}
	private string _DeviceID;

	partial void OnDeviceIDChanging(string newValue);
	partial void OnDeviceIDChanged();

    public Nullable<decimal> Ratings 
	{ 
		get
		{
			return _Ratings;
		}
		set
		{
			if(_Ratings != value)
			{
				OnRatingsChanging(value);
				_Ratings = value;
				OnRatingsChanged();
			}
		}
	}
	private Nullable<decimal> _Ratings;

	partial void OnRatingsChanging(Nullable<decimal> newValue);
	partial void OnRatingsChanged();

    public bool IsDiscount 
	{ 
		get
		{
			return _IsDiscount;
		}
		set
		{
			if(_IsDiscount != value)
			{
				OnIsDiscountChanging(value);
				_IsDiscount = value;
				OnIsDiscountChanged();
			}
		}
	}
	private bool _IsDiscount;

	partial void OnIsDiscountChanging(bool newValue);
	partial void OnIsDiscountChanged();

    public string Latitude 
	{ 
		get
		{
			return _Latitude;
		}
		set
		{
			if(_Latitude != value)
			{
				OnLatitudeChanging(value);
				_Latitude = value;
				OnLatitudeChanged();
			}
		}
	}
	private string _Latitude;

	partial void OnLatitudeChanging(string newValue);
	partial void OnLatitudeChanged();

    public string Longitude 
	{ 
		get
		{
			return _Longitude;
		}
		set
		{
			if(_Longitude != value)
			{
				OnLongitudeChanging(value);
				_Longitude = value;
				OnLongitudeChanged();
			}
		}
	}
	private string _Longitude;

	partial void OnLongitudeChanging(string newValue);
	partial void OnLongitudeChanged();

    public bool CompositeScheme 
	{ 
		get
		{
			return _CompositeScheme;
		}
		set
		{
			if(_CompositeScheme != value)
			{
				OnCompositeSchemeChanging(value);
				_CompositeScheme = value;
				OnCompositeSchemeChanged();
			}
		}
	}
	private bool _CompositeScheme;

	partial void OnCompositeSchemeChanging(bool newValue);
	partial void OnCompositeSchemeChanged();

    public Nullable<int> CompetitorID 
	{ 
		get
		{
			return _CompetitorID;
		}
		set
		{
			if(_CompetitorID != value)
			{
				OnCompetitorIDChanging(value);
				_CompetitorID = value;
				OnCompetitorIDChanged();
			}
		}
	}
	private Nullable<int> _CompetitorID;

	partial void OnCompetitorIDChanging(Nullable<int> newValue);
	partial void OnCompetitorIDChanged();

    public Nullable<decimal> YearlySale 
	{ 
		get
		{
			return _YearlySale;
		}
		set
		{
			if(_YearlySale != value)
			{
				OnYearlySaleChanging(value);
				_YearlySale = value;
				OnYearlySaleChanged();
			}
		}
	}
	private Nullable<decimal> _YearlySale;

	partial void OnYearlySaleChanging(Nullable<decimal> newValue);
	partial void OnYearlySaleChanged();

    public string Remarks1 
	{ 
		get
		{
			return _Remarks1;
		}
		set
		{
			if(_Remarks1 != value)
			{
				OnRemarks1Changing(value);
				_Remarks1 = value;
				OnRemarks1Changed();
			}
		}
	}
	private string _Remarks1;

	partial void OnRemarks1Changing(string newValue);
	partial void OnRemarks1Changed();

    public string Remarks2 
	{ 
		get
		{
			return _Remarks2;
		}
		set
		{
			if(_Remarks2 != value)
			{
				OnRemarks2Changing(value);
				_Remarks2 = value;
				OnRemarks2Changed();
			}
		}
	}
	private string _Remarks2;

	partial void OnRemarks2Changing(string newValue);
	partial void OnRemarks2Changed();

    public Nullable<bool> IsTempPR 
	{ 
		get
		{
			return _IsTempPR;
		}
		set
		{
			if(_IsTempPR != value)
			{
				OnIsTempPRChanging(value);
				_IsTempPR = value;
				OnIsTempPRChanged();
			}
		}
	}
	private Nullable<bool> _IsTempPR;

	partial void OnIsTempPRChanging(Nullable<bool> newValue);
	partial void OnIsTempPRChanged();

    public Nullable<decimal> BillToPartyCustID 
	{ 
		get
		{
			return _BillToPartyCustID;
		}
		set
		{
			if(_BillToPartyCustID != value)
			{
				OnBillToPartyCustIDChanging(value);
				_BillToPartyCustID = value;
				OnBillToPartyCustIDChanged();
			}
		}
	}
	private Nullable<decimal> _BillToPartyCustID;

	partial void OnBillToPartyCustIDChanging(Nullable<decimal> newValue);
	partial void OnBillToPartyCustIDChanged();

    public string Email2 
	{ 
		get
		{
			return _Email2;
		}
		set
		{
			if(_Email2 != value)
			{
				OnEmail2Changing(value);
				_Email2 = value;
				OnEmail2Changed();
			}
		}
	}
	private string _Email2;

	partial void OnEmail2Changing(string newValue);
	partial void OnEmail2Changed();

    public string Email3 
	{ 
		get
		{
			return _Email3;
		}
		set
		{
			if(_Email3 != value)
			{
				OnEmail3Changing(value);
				_Email3 = value;
				OnEmail3Changed();
			}
		}
	}
	private string _Email3;

	partial void OnEmail3Changing(string newValue);
	partial void OnEmail3Changed();

    public string Email4 
	{ 
		get
		{
			return _Email4;
		}
		set
		{
			if(_Email4 != value)
			{
				OnEmail4Changing(value);
				_Email4 = value;
				OnEmail4Changed();
			}
		}
	}
	private string _Email4;

	partial void OnEmail4Changing(string newValue);
	partial void OnEmail4Changed();

    public string Phone3 
	{ 
		get
		{
			return _Phone3;
		}
		set
		{
			if(_Phone3 != value)
			{
				OnPhone3Changing(value);
				_Phone3 = value;
				OnPhone3Changed();
			}
		}
	}
	private string _Phone3;

	partial void OnPhone3Changing(string newValue);
	partial void OnPhone3Changed();

    public string Phone2 
	{ 
		get
		{
			return _Phone2;
		}
		set
		{
			if(_Phone2 != value)
			{
				OnPhone2Changing(value);
				_Phone2 = value;
				OnPhone2Changed();
			}
		}
	}
	private string _Phone2;

	partial void OnPhone2Changing(string newValue);
	partial void OnPhone2Changed();

    public string ParentCode 
	{ 
		get
		{
			return _ParentCode;
		}
		set
		{
			if(_ParentCode != value)
			{
				OnParentCodeChanging(value);
				_ParentCode = value;
				OnParentCodeChanged();
			}
		}
	}
	private string _ParentCode;

	partial void OnParentCodeChanging(string newValue);
	partial void OnParentCodeChanged();

    public Nullable<bool> PANonInvoice 
	{ 
		get
		{
			return _PANonInvoice;
		}
		set
		{
			if(_PANonInvoice != value)
			{
				OnPANonInvoiceChanging(value);
				_PANonInvoice = value;
				OnPANonInvoiceChanged();
			}
		}
	}
	private Nullable<bool> _PANonInvoice;

	partial void OnPANonInvoiceChanging(Nullable<bool> newValue);
	partial void OnPANonInvoiceChanged();

    public Nullable<bool> GSTonInvoice 
	{ 
		get
		{
			return _GSTonInvoice;
		}
		set
		{
			if(_GSTonInvoice != value)
			{
				OnGSTonInvoiceChanging(value);
				_GSTonInvoice = value;
				OnGSTonInvoiceChanged();
			}
		}
	}
	private Nullable<bool> _GSTonInvoice;

	partial void OnGSTonInvoiceChanging(Nullable<bool> newValue);
	partial void OnGSTonInvoiceChanged();

    public virtual ICollection<ASTCF> ASTCFs { get; set; }
    public virtual CGRP CGRP { get; set; }
    public virtual ICollection<CRD1> CRD1 { get; set; }
    public virtual ICollection<CRD2> CRD2 { get; set; }
    public virtual ICollection<EXAST> EXASTs { get; set; }
    public virtual ICollection<HELP> HELPs { get; set; }
    public virtual ICollection<INRT> INRTs { get; set; }
    public virtual ICollection<MSTCF> MSTCFs { get; set; }
    public virtual ICollection<OASTF> OASTFs { get; set; }
    public virtual ICollection<OCNT> OCNTs { get; set; }
    public virtual ICollection<OEMP> OEMPs { get; set; }
    public virtual ICollection<OGCRD> OGCRDs { get; set; }
    public virtual ICollection<OPOS> OPOS { get; set; }
    public virtual ICollection<OTLT> OTLTs { get; set; }
    public virtual ICollection<SCM1> SCM1 { get; set; }
    public virtual ICollection<RUT1> RUT1 { get; set; }
    public virtual ICollection<ORDR> ORDRs { get; set; }
    public virtual ICollection<CLM1> CLM1 { get; set; }
    public virtual ICollection<OCLM> OCLMs { get; set; }
    public virtual ICollection<OMID> OMIDs { get; set; }
    public virtual ICollection<ACRD1> ACRD1 { get; set; }
    public virtual ICollection<AOCRD> AOCRDs { get; set; }
    public virtual ICollection<OTASK> OTASKs { get; set; }
    public virtual ICollection<OTASK> OTASKs1 { get; set; }
    public virtual ICollection<TASK1> TASK1 { get; set; }
    public virtual ICollection<TASK2> TASK2 { get; set; }
    public virtual ICollection<OAST> OASTs { get; set; }
    public virtual ICollection<OAST> OASTs1 { get; set; }
    public virtual ICollection<OAST> OASTs2 { get; set; }
    public virtual ICollection<ENT1> ENT1 { get; set; }
    public virtual ICollection<OCRD> OCRD1 { get; set; }
    public virtual OCRD OCRD2 { get; set; }
    public virtual ICollection<DCLM1> DCLM1 { get; set; }
    public virtual ICollection<DOCLM> DOCLMs { get; set; }
    public virtual ICollection<AORDR> AORDRs { get; set; }
}

[Serializable]
public partial class OCRUT : ObjectWithState
{
    public OCRUT() 
    { 
        this.CRUT1 = new HashSet<CRUT1>();
    }


    public int CompRouteID 
	{ 
		get
		{
			return _CompRouteID;
		}
		set
		{
			if(_CompRouteID != value)
			{
				OnCompRouteIDChanging(value);
				_CompRouteID = value;
				OnCompRouteIDChanged();
			}
		}
	}
	private int _CompRouteID;

	partial void OnCompRouteIDChanging(int newValue);
	partial void OnCompRouteIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string RouteCode 
	{ 
		get
		{
			return _RouteCode;
		}
		set
		{
			if(_RouteCode != value)
			{
				OnRouteCodeChanging(value);
				_RouteCode = value;
				OnRouteCodeChanged();
			}
		}
	}
	private string _RouteCode;

	partial void OnRouteCodeChanging(string newValue);
	partial void OnRouteCodeChanged();

    public string RouteName 
	{ 
		get
		{
			return _RouteName;
		}
		set
		{
			if(_RouteName != value)
			{
				OnRouteNameChanging(value);
				_RouteName = value;
				OnRouteNameChanged();
			}
		}
	}
	private string _RouteName;

	partial void OnRouteNameChanging(string newValue);
	partial void OnRouteNameChanged();

    public Nullable<int> PrefSalesPersonID 
	{ 
		get
		{
			return _PrefSalesPersonID;
		}
		set
		{
			if(_PrefSalesPersonID != value)
			{
				OnPrefSalesPersonIDChanging(value);
				_PrefSalesPersonID = value;
				OnPrefSalesPersonIDChanged();
			}
		}
	}
	private Nullable<int> _PrefSalesPersonID;

	partial void OnPrefSalesPersonIDChanging(Nullable<int> newValue);
	partial void OnPrefSalesPersonIDChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public string CreatedIpAddress 
	{ 
		get
		{
			return _CreatedIpAddress;
		}
		set
		{
			if(_CreatedIpAddress != value)
			{
				OnCreatedIpAddressChanging(value);
				_CreatedIpAddress = value;
				OnCreatedIpAddressChanged();
			}
		}
	}
	private string _CreatedIpAddress;

	partial void OnCreatedIpAddressChanging(string newValue);
	partial void OnCreatedIpAddressChanged();

    public string UpdatedIpAddress 
	{ 
		get
		{
			return _UpdatedIpAddress;
		}
		set
		{
			if(_UpdatedIpAddress != value)
			{
				OnUpdatedIpAddressChanging(value);
				_UpdatedIpAddress = value;
				OnUpdatedIpAddressChanged();
			}
		}
	}
	private string _UpdatedIpAddress;

	partial void OnUpdatedIpAddressChanging(string newValue);
	partial void OnUpdatedIpAddressChanged();

    public virtual ICollection<CRUT1> CRUT1 { get; set; }
    public virtual OEMP OEMP { get; set; }
}

[Serializable]
public partial class OCRY : ObjectWithState
{
    public OCRY() 
    { 
        this.CRD1 = new HashSet<CRD1>();
        this.OCSTs = new HashSet<OCST>();
        this.OVNDs = new HashSet<OVND>();
        this.OWHS = new HashSet<OWH>();
        this.EMP1 = new HashSet<EMP1>();
    }


    public int CountryID 
	{ 
		get
		{
			return _CountryID;
		}
		set
		{
			if(_CountryID != value)
			{
				OnCountryIDChanging(value);
				_CountryID = value;
				OnCountryIDChanged();
			}
		}
	}
	private int _CountryID;

	partial void OnCountryIDChanging(int newValue);
	partial void OnCountryIDChanged();

    public string CountryName 
	{ 
		get
		{
			return _CountryName;
		}
		set
		{
			if(_CountryName != value)
			{
				OnCountryNameChanging(value);
				_CountryName = value;
				OnCountryNameChanged();
			}
		}
	}
	private string _CountryName;

	partial void OnCountryNameChanging(string newValue);
	partial void OnCountryNameChanged();

    public string CountryDesc 
	{ 
		get
		{
			return _CountryDesc;
		}
		set
		{
			if(_CountryDesc != value)
			{
				OnCountryDescChanging(value);
				_CountryDesc = value;
				OnCountryDescChanged();
			}
		}
	}
	private string _CountryDesc;

	partial void OnCountryDescChanging(string newValue);
	partial void OnCountryDescChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<CRD1> CRD1 { get; set; }
    public virtual ICollection<OCST> OCSTs { get; set; }
    public virtual ICollection<OVND> OVNDs { get; set; }
    public virtual ICollection<OWH> OWHS { get; set; }
    public virtual ICollection<EMP1> EMP1 { get; set; }
}

[Serializable]
public partial class OCSE : ObjectWithState
{
    public OCSE() 
    { 
        this.CSE1 = new HashSet<CSE1>();
    }


    public int CallID 
	{ 
		get
		{
			return _CallID;
		}
		set
		{
			if(_CallID != value)
			{
				OnCallIDChanging(value);
				_CallID = value;
				OnCallIDChanged();
			}
		}
	}
	private int _CallID;

	partial void OnCallIDChanging(int newValue);
	partial void OnCallIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int EntryID 
	{ 
		get
		{
			return _EntryID;
		}
		set
		{
			if(_EntryID != value)
			{
				OnEntryIDChanging(value);
				_EntryID = value;
				OnEntryIDChanged();
			}
		}
	}
	private int _EntryID;

	partial void OnEntryIDChanging(int newValue);
	partial void OnEntryIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public System.DateTime StartDate 
	{ 
		get
		{
			return _StartDate;
		}
		set
		{
			if(_StartDate != value)
			{
				OnStartDateChanging(value);
				_StartDate = value;
				OnStartDateChanged();
			}
		}
	}
	private System.DateTime _StartDate;

	partial void OnStartDateChanging(System.DateTime newValue);
	partial void OnStartDateChanged();

    public System.TimeSpan StartTime 
	{ 
		get
		{
			return _StartTime;
		}
		set
		{
			if(_StartTime != value)
			{
				OnStartTimeChanging(value);
				_StartTime = value;
				OnStartTimeChanged();
			}
		}
	}
	private System.TimeSpan _StartTime;

	partial void OnStartTimeChanging(System.TimeSpan newValue);
	partial void OnStartTimeChanged();

    public string StartLat 
	{ 
		get
		{
			return _StartLat;
		}
		set
		{
			if(_StartLat != value)
			{
				OnStartLatChanging(value);
				_StartLat = value;
				OnStartLatChanged();
			}
		}
	}
	private string _StartLat;

	partial void OnStartLatChanging(string newValue);
	partial void OnStartLatChanged();

    public string StartLong 
	{ 
		get
		{
			return _StartLong;
		}
		set
		{
			if(_StartLong != value)
			{
				OnStartLongChanging(value);
				_StartLong = value;
				OnStartLongChanged();
			}
		}
	}
	private string _StartLong;

	partial void OnStartLongChanging(string newValue);
	partial void OnStartLongChanged();

    public Nullable<System.DateTime> EndDate 
	{ 
		get
		{
			return _EndDate;
		}
		set
		{
			if(_EndDate != value)
			{
				OnEndDateChanging(value);
				_EndDate = value;
				OnEndDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _EndDate;

	partial void OnEndDateChanging(Nullable<System.DateTime> newValue);
	partial void OnEndDateChanged();

    public Nullable<System.TimeSpan> EndTime 
	{ 
		get
		{
			return _EndTime;
		}
		set
		{
			if(_EndTime != value)
			{
				OnEndTimeChanging(value);
				_EndTime = value;
				OnEndTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _EndTime;

	partial void OnEndTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnEndTimeChanged();

    public string EndLat 
	{ 
		get
		{
			return _EndLat;
		}
		set
		{
			if(_EndLat != value)
			{
				OnEndLatChanging(value);
				_EndLat = value;
				OnEndLatChanged();
			}
		}
	}
	private string _EndLat;

	partial void OnEndLatChanging(string newValue);
	partial void OnEndLatChanged();

    public string EndLong 
	{ 
		get
		{
			return _EndLong;
		}
		set
		{
			if(_EndLong != value)
			{
				OnEndLongChanging(value);
				_EndLong = value;
				OnEndLongChanged();
			}
		}
	}
	private string _EndLong;

	partial void OnEndLongChanging(string newValue);
	partial void OnEndLongChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public string InAccuracy 
	{ 
		get
		{
			return _InAccuracy;
		}
		set
		{
			if(_InAccuracy != value)
			{
				OnInAccuracyChanging(value);
				_InAccuracy = value;
				OnInAccuracyChanged();
			}
		}
	}
	private string _InAccuracy;

	partial void OnInAccuracyChanging(string newValue);
	partial void OnInAccuracyChanged();

    public string OutAccuracy 
	{ 
		get
		{
			return _OutAccuracy;
		}
		set
		{
			if(_OutAccuracy != value)
			{
				OnOutAccuracyChanging(value);
				_OutAccuracy = value;
				OnOutAccuracyChanged();
			}
		}
	}
	private string _OutAccuracy;

	partial void OnOutAccuracyChanging(string newValue);
	partial void OnOutAccuracyChanged();

    public Nullable<decimal> InDistance 
	{ 
		get
		{
			return _InDistance;
		}
		set
		{
			if(_InDistance != value)
			{
				OnInDistanceChanging(value);
				_InDistance = value;
				OnInDistanceChanged();
			}
		}
	}
	private Nullable<decimal> _InDistance;

	partial void OnInDistanceChanging(Nullable<decimal> newValue);
	partial void OnInDistanceChanged();

    public Nullable<int> RouteID 
	{ 
		get
		{
			return _RouteID;
		}
		set
		{
			if(_RouteID != value)
			{
				OnRouteIDChanging(value);
				_RouteID = value;
				OnRouteIDChanged();
			}
		}
	}
	private Nullable<int> _RouteID;

	partial void OnRouteIDChanging(Nullable<int> newValue);
	partial void OnRouteIDChanged();

    public virtual ICollection<CSE1> CSE1 { get; set; }
}

[Serializable]
public partial class OCST : ObjectWithState
{
    public OCST() 
    { 
        this.CRD1 = new HashSet<CRD1>();
        this.OCTies = new HashSet<OCTY>();
        this.OVNDs = new HashSet<OVND>();
        this.OWHS = new HashSet<OWH>();
        this.EMP1 = new HashSet<EMP1>();
        this.CPN1 = new HashSet<CPN1>();
        this.OESMs = new HashSet<OESM>();
        this.OTEMs = new HashSet<OTEM>();
    }


    public int StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private int _StateID;

	partial void OnStateIDChanging(int newValue);
	partial void OnStateIDChanged();

    public int CountryID 
	{ 
		get
		{
			return _CountryID;
		}
		set
		{
			if(_CountryID != value)
			{
				OnCountryIDChanging(value);
				_CountryID = value;
				OnCountryIDChanged();
			}
		}
	}
	private int _CountryID;

	partial void OnCountryIDChanging(int newValue);
	partial void OnCountryIDChanged();

    public string StateName 
	{ 
		get
		{
			return _StateName;
		}
		set
		{
			if(_StateName != value)
			{
				OnStateNameChanging(value);
				_StateName = value;
				OnStateNameChanged();
			}
		}
	}
	private string _StateName;

	partial void OnStateNameChanging(string newValue);
	partial void OnStateNameChanged();

    public string StateDesc 
	{ 
		get
		{
			return _StateDesc;
		}
		set
		{
			if(_StateDesc != value)
			{
				OnStateDescChanging(value);
				_StateDesc = value;
				OnStateDescChanged();
			}
		}
	}
	private string _StateDesc;

	partial void OnStateDescChanging(string newValue);
	partial void OnStateDescChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string GSTStateCode 
	{ 
		get
		{
			return _GSTStateCode;
		}
		set
		{
			if(_GSTStateCode != value)
			{
				OnGSTStateCodeChanging(value);
				_GSTStateCode = value;
				OnGSTStateCodeChanged();
			}
		}
	}
	private string _GSTStateCode;

	partial void OnGSTStateCodeChanging(string newValue);
	partial void OnGSTStateCodeChanged();

    public string StateType 
	{ 
		get
		{
			return _StateType;
		}
		set
		{
			if(_StateType != value)
			{
				OnStateTypeChanging(value);
				_StateType = value;
				OnStateTypeChanged();
			}
		}
	}
	private string _StateType;

	partial void OnStateTypeChanging(string newValue);
	partial void OnStateTypeChanged();

    public string ISO 
	{ 
		get
		{
			return _ISO;
		}
		set
		{
			if(_ISO != value)
			{
				OnISOChanging(value);
				_ISO = value;
				OnISOChanged();
			}
		}
	}
	private string _ISO;

	partial void OnISOChanging(string newValue);
	partial void OnISOChanged();

    public virtual ICollection<CRD1> CRD1 { get; set; }
    public virtual OCRY OCRY { get; set; }
    public virtual ICollection<OCTY> OCTies { get; set; }
    public virtual ICollection<OVND> OVNDs { get; set; }
    public virtual ICollection<OWH> OWHS { get; set; }
    public virtual ICollection<EMP1> EMP1 { get; set; }
    public virtual ICollection<CPN1> CPN1 { get; set; }
    public virtual ICollection<OESM> OESMs { get; set; }
    public virtual ICollection<OTEM> OTEMs { get; set; }
}

[Serializable]
public partial class OCTG : ObjectWithState
{

    public int CategoryId 
	{ 
		get
		{
			return _CategoryId;
		}
		set
		{
			if(_CategoryId != value)
			{
				OnCategoryIdChanging(value);
				_CategoryId = value;
				OnCategoryIdChanged();
			}
		}
	}
	private int _CategoryId;

	partial void OnCategoryIdChanging(int newValue);
	partial void OnCategoryIdChanged();

    public string CategoryCode 
	{ 
		get
		{
			return _CategoryCode;
		}
		set
		{
			if(_CategoryCode != value)
			{
				OnCategoryCodeChanging(value);
				_CategoryCode = value;
				OnCategoryCodeChanged();
			}
		}
	}
	private string _CategoryCode;

	partial void OnCategoryCodeChanging(string newValue);
	partial void OnCategoryCodeChanged();

    public string Description 
	{ 
		get
		{
			return _Description;
		}
		set
		{
			if(_Description != value)
			{
				OnDescriptionChanging(value);
				_Description = value;
				OnDescriptionChanged();
			}
		}
	}
	private string _Description;

	partial void OnDescriptionChanging(string newValue);
	partial void OnDescriptionChanged();

    public Nullable<System.DateTime> FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _FromDate;

	partial void OnFromDateChanging(Nullable<System.DateTime> newValue);
	partial void OnFromDateChanged();

    public Nullable<System.DateTime> ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ToDate;

	partial void OnToDateChanging(Nullable<System.DateTime> newValue);
	partial void OnToDateChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdateBy 
	{ 
		get
		{
			return _UpdateBy;
		}
		set
		{
			if(_UpdateBy != value)
			{
				OnUpdateByChanging(value);
				_UpdateBy = value;
				OnUpdateByChanged();
			}
		}
	}
	private Nullable<int> _UpdateBy;

	partial void OnUpdateByChanging(Nullable<int> newValue);
	partial void OnUpdateByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<bool> Deleted 
	{ 
		get
		{
			return _Deleted;
		}
		set
		{
			if(_Deleted != value)
			{
				OnDeletedChanging(value);
				_Deleted = value;
				OnDeletedChanged();
			}
		}
	}
	private Nullable<bool> _Deleted;

	partial void OnDeletedChanging(Nullable<bool> newValue);
	partial void OnDeletedChanged();
}

[Serializable]
public partial class OCTM : ObjectWithState
{

    public int OCTMID 
	{ 
		get
		{
			return _OCTMID;
		}
		set
		{
			if(_OCTMID != value)
			{
				OnOCTMIDChanging(value);
				_OCTMID = value;
				OnOCTMIDChanged();
			}
		}
	}
	private int _OCTMID;

	partial void OnOCTMIDChanging(int newValue);
	partial void OnOCTMIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public string EmailID 
	{ 
		get
		{
			return _EmailID;
		}
		set
		{
			if(_EmailID != value)
			{
				OnEmailIDChanging(value);
				_EmailID = value;
				OnEmailIDChanged();
			}
		}
	}
	private string _EmailID;

	partial void OnEmailIDChanging(string newValue);
	partial void OnEmailIDChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();
}

[Serializable]
public partial class OCTY : ObjectWithState
{
    public OCTY() 
    { 
        this.CRD1 = new HashSet<CRD1>();
        this.OVNDs = new HashSet<OVND>();
        this.OWHS = new HashSet<OWH>();
        this.EMP1 = new HashSet<EMP1>();
        this.CPN1 = new HashSet<CPN1>();
        this.ONTFs = new HashSet<ONTF>();
    }


    public int CityID 
	{ 
		get
		{
			return _CityID;
		}
		set
		{
			if(_CityID != value)
			{
				OnCityIDChanging(value);
				_CityID = value;
				OnCityIDChanged();
			}
		}
	}
	private int _CityID;

	partial void OnCityIDChanging(int newValue);
	partial void OnCityIDChanged();

    public Nullable<int> StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private Nullable<int> _StateID;

	partial void OnStateIDChanging(Nullable<int> newValue);
	partial void OnStateIDChanged();

    public string CityName 
	{ 
		get
		{
			return _CityName;
		}
		set
		{
			if(_CityName != value)
			{
				OnCityNameChanging(value);
				_CityName = value;
				OnCityNameChanged();
			}
		}
	}
	private string _CityName;

	partial void OnCityNameChanging(string newValue);
	partial void OnCityNameChanged();

    public string CityDesc 
	{ 
		get
		{
			return _CityDesc;
		}
		set
		{
			if(_CityDesc != value)
			{
				OnCityDescChanging(value);
				_CityDesc = value;
				OnCityDescChanged();
			}
		}
	}
	private string _CityDesc;

	partial void OnCityDescChanging(string newValue);
	partial void OnCityDescChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<CRD1> CRD1 { get; set; }
    public virtual OCST OCST { get; set; }
    public virtual ICollection<OVND> OVNDs { get; set; }
    public virtual ICollection<OWH> OWHS { get; set; }
    public virtual ICollection<EMP1> EMP1 { get; set; }
    public virtual ICollection<CPN1> CPN1 { get; set; }
    public virtual ICollection<ONTF> ONTFs { get; set; }
}

[Serializable]
public partial class OCUM : ObjectWithState
{

    public int OCUMID 
	{ 
		get
		{
			return _OCUMID;
		}
		set
		{
			if(_OCUMID != value)
			{
				OnOCUMIDChanging(value);
				_OCUMID = value;
				OnOCUMIDChanged();
			}
		}
	}
	private int _OCUMID;

	partial void OnOCUMIDChanging(int newValue);
	partial void OnOCUMIDChanged();

    public Nullable<int> OptionId 
	{ 
		get
		{
			return _OptionId;
		}
		set
		{
			if(_OptionId != value)
			{
				OnOptionIdChanging(value);
				_OptionId = value;
				OnOptionIdChanged();
			}
		}
	}
	private Nullable<int> _OptionId;

	partial void OnOptionIdChanging(Nullable<int> newValue);
	partial void OnOptionIdChanged();

    public Nullable<decimal> CustID 
	{ 
		get
		{
			return _CustID;
		}
		set
		{
			if(_CustID != value)
			{
				OnCustIDChanging(value);
				_CustID = value;
				OnCustIDChanged();
			}
		}
	}
	private Nullable<decimal> _CustID;

	partial void OnCustIDChanging(Nullable<decimal> newValue);
	partial void OnCustIDChanged();

    public Nullable<int> Unit 
	{ 
		get
		{
			return _Unit;
		}
		set
		{
			if(_Unit != value)
			{
				OnUnitChanging(value);
				_Unit = value;
				OnUnitChanged();
			}
		}
	}
	private Nullable<int> _Unit;

	partial void OnUnitChanging(Nullable<int> newValue);
	partial void OnUnitChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<bool> IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private Nullable<bool> _IsDeleted;

	partial void OnIsDeletedChanging(Nullable<bool> newValue);
	partial void OnIsDeletedChanged();
}

[Serializable]
public partial class OCVE : ObjectWithState
{

    public int CallValidationID 
	{ 
		get
		{
			return _CallValidationID;
		}
		set
		{
			if(_CallValidationID != value)
			{
				OnCallValidationIDChanging(value);
				_CallValidationID = value;
				OnCallValidationIDChanged();
			}
		}
	}
	private int _CallValidationID;

	partial void OnCallValidationIDChanging(int newValue);
	partial void OnCallValidationIDChanged();

    public int EmpGroupId 
	{ 
		get
		{
			return _EmpGroupId;
		}
		set
		{
			if(_EmpGroupId != value)
			{
				OnEmpGroupIdChanging(value);
				_EmpGroupId = value;
				OnEmpGroupIdChanged();
			}
		}
	}
	private int _EmpGroupId;

	partial void OnEmpGroupIdChanging(int newValue);
	partial void OnEmpGroupIdChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int PRCall 
	{ 
		get
		{
			return _PRCall;
		}
		set
		{
			if(_PRCall != value)
			{
				OnPRCallChanging(value);
				_PRCall = value;
				OnPRCallChanged();
			}
		}
	}
	private int _PRCall;

	partial void OnPRCallChanging(int newValue);
	partial void OnPRCallChanged();

    public int NPRCall 
	{ 
		get
		{
			return _NPRCall;
		}
		set
		{
			if(_NPRCall != value)
			{
				OnNPRCallChanging(value);
				_NPRCall = value;
				OnNPRCallChanged();
			}
		}
	}
	private int _NPRCall;

	partial void OnNPRCallChanging(int newValue);
	partial void OnNPRCallChanged();

    public int TotalCall 
	{ 
		get
		{
			return _TotalCall;
		}
		set
		{
			if(_TotalCall != value)
			{
				OnTotalCallChanging(value);
				_TotalCall = value;
				OnTotalCallChanged();
			}
		}
	}
	private int _TotalCall;

	partial void OnTotalCallChanging(int newValue);
	partial void OnTotalCallChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public string CreatedIPAddress 
	{ 
		get
		{
			return _CreatedIPAddress;
		}
		set
		{
			if(_CreatedIPAddress != value)
			{
				OnCreatedIPAddressChanging(value);
				_CreatedIPAddress = value;
				OnCreatedIPAddressChanged();
			}
		}
	}
	private string _CreatedIPAddress;

	partial void OnCreatedIPAddressChanging(string newValue);
	partial void OnCreatedIPAddressChanged();

    public string UpdateIPAddress 
	{ 
		get
		{
			return _UpdateIPAddress;
		}
		set
		{
			if(_UpdateIPAddress != value)
			{
				OnUpdateIPAddressChanging(value);
				_UpdateIPAddress = value;
				OnUpdateIPAddressChanged();
			}
		}
	}
	private string _UpdateIPAddress;

	partial void OnUpdateIPAddressChanging(string newValue);
	partial void OnUpdateIPAddressChanged();

    public virtual OGRP OGRP { get; set; }
}

[Serializable]
public partial class ODCL : ObjectWithState
{
    public ODCL() 
    { 
        this.OGCRDs = new HashSet<OGCRD>();
        this.OGITMs = new HashSet<OGITM>();
    }


    public int DistriChannelID 
	{ 
		get
		{
			return _DistriChannelID;
		}
		set
		{
			if(_DistriChannelID != value)
			{
				OnDistriChannelIDChanging(value);
				_DistriChannelID = value;
				OnDistriChannelIDChanged();
			}
		}
	}
	private int _DistriChannelID;

	partial void OnDistriChannelIDChanging(int newValue);
	partial void OnDistriChannelIDChanged();

    public string DistriChannelCode 
	{ 
		get
		{
			return _DistriChannelCode;
		}
		set
		{
			if(_DistriChannelCode != value)
			{
				OnDistriChannelCodeChanging(value);
				_DistriChannelCode = value;
				OnDistriChannelCodeChanged();
			}
		}
	}
	private string _DistriChannelCode;

	partial void OnDistriChannelCodeChanging(string newValue);
	partial void OnDistriChannelCodeChanged();

    public string DistriChannelName 
	{ 
		get
		{
			return _DistriChannelName;
		}
		set
		{
			if(_DistriChannelName != value)
			{
				OnDistriChannelNameChanging(value);
				_DistriChannelName = value;
				OnDistriChannelNameChanged();
			}
		}
	}
	private string _DistriChannelName;

	partial void OnDistriChannelNameChanging(string newValue);
	partial void OnDistriChannelNameChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual ICollection<OGCRD> OGCRDs { get; set; }
    public virtual ICollection<OGITM> OGITMs { get; set; }
}

[Serializable]
public partial class ODCM : ObjectWithState
{

    public int CompanyMappingId 
	{ 
		get
		{
			return _CompanyMappingId;
		}
		set
		{
			if(_CompanyMappingId != value)
			{
				OnCompanyMappingIdChanging(value);
				_CompanyMappingId = value;
				OnCompanyMappingIdChanged();
			}
		}
	}
	private int _CompanyMappingId;

	partial void OnCompanyMappingIdChanging(int newValue);
	partial void OnCompanyMappingIdChanged();

    public Nullable<int> OptionId 
	{ 
		get
		{
			return _OptionId;
		}
		set
		{
			if(_OptionId != value)
			{
				OnOptionIdChanging(value);
				_OptionId = value;
				OnOptionIdChanged();
			}
		}
	}
	private Nullable<int> _OptionId;

	partial void OnOptionIdChanging(Nullable<int> newValue);
	partial void OnOptionIdChanged();

    public Nullable<int> RegionId 
	{ 
		get
		{
			return _RegionId;
		}
		set
		{
			if(_RegionId != value)
			{
				OnRegionIdChanging(value);
				_RegionId = value;
				OnRegionIdChanged();
			}
		}
	}
	private Nullable<int> _RegionId;

	partial void OnRegionIdChanging(Nullable<int> newValue);
	partial void OnRegionIdChanged();

    public Nullable<int> SalesOrgId 
	{ 
		get
		{
			return _SalesOrgId;
		}
		set
		{
			if(_SalesOrgId != value)
			{
				OnSalesOrgIdChanging(value);
				_SalesOrgId = value;
				OnSalesOrgIdChanged();
			}
		}
	}
	private Nullable<int> _SalesOrgId;

	partial void OnSalesOrgIdChanging(Nullable<int> newValue);
	partial void OnSalesOrgIdChanged();

    public string Logo 
	{ 
		get
		{
			return _Logo;
		}
		set
		{
			if(_Logo != value)
			{
				OnLogoChanging(value);
				_Logo = value;
				OnLogoChanged();
			}
		}
	}
	private string _Logo;

	partial void OnLogoChanging(string newValue);
	partial void OnLogoChanged();

    public Nullable<int> UpdateBy 
	{ 
		get
		{
			return _UpdateBy;
		}
		set
		{
			if(_UpdateBy != value)
			{
				OnUpdateByChanging(value);
				_UpdateBy = value;
				OnUpdateByChanged();
			}
		}
	}
	private Nullable<int> _UpdateBy;

	partial void OnUpdateByChanging(Nullable<int> newValue);
	partial void OnUpdateByChanged();

    public Nullable<System.DateTime> UpdateDatetime 
	{ 
		get
		{
			return _UpdateDatetime;
		}
		set
		{
			if(_UpdateDatetime != value)
			{
				OnUpdateDatetimeChanging(value);
				_UpdateDatetime = value;
				OnUpdateDatetimeChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdateDatetime;

	partial void OnUpdateDatetimeChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdateDatetimeChanged();

    public string ImageBase64 
	{ 
		get
		{
			return _ImageBase64;
		}
		set
		{
			if(_ImageBase64 != value)
			{
				OnImageBase64Changing(value);
				_ImageBase64 = value;
				OnImageBase64Changed();
			}
		}
	}
	private string _ImageBase64;

	partial void OnImageBase64Changing(string newValue);
	partial void OnImageBase64Changed();
}

[Serializable]
public partial class ODIM : ObjectWithState
{

    public int DealerItemMapID 
	{ 
		get
		{
			return _DealerItemMapID;
		}
		set
		{
			if(_DealerItemMapID != value)
			{
				OnDealerItemMapIDChanging(value);
				_DealerItemMapID = value;
				OnDealerItemMapIDChanged();
			}
		}
	}
	private int _DealerItemMapID;

	partial void OnDealerItemMapIDChanging(int newValue);
	partial void OnDealerItemMapIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public System.DateTime StartDate 
	{ 
		get
		{
			return _StartDate;
		}
		set
		{
			if(_StartDate != value)
			{
				OnStartDateChanging(value);
				_StartDate = value;
				OnStartDateChanged();
			}
		}
	}
	private System.DateTime _StartDate;

	partial void OnStartDateChanging(System.DateTime newValue);
	partial void OnStartDateChanged();

    public System.DateTime EndDate 
	{ 
		get
		{
			return _EndDate;
		}
		set
		{
			if(_EndDate != value)
			{
				OnEndDateChanging(value);
				_EndDate = value;
				OnEndDateChanged();
			}
		}
	}
	private System.DateTime _EndDate;

	partial void OnEndDateChanging(System.DateTime newValue);
	partial void OnEndDateChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();
}

[Serializable]
public partial class ODIMBKP : ObjectWithState
{

    public int DealerItemMapID 
	{ 
		get
		{
			return _DealerItemMapID;
		}
		set
		{
			if(_DealerItemMapID != value)
			{
				OnDealerItemMapIDChanging(value);
				_DealerItemMapID = value;
				OnDealerItemMapIDChanged();
			}
		}
	}
	private int _DealerItemMapID;

	partial void OnDealerItemMapIDChanging(int newValue);
	partial void OnDealerItemMapIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public System.DateTime StartDate 
	{ 
		get
		{
			return _StartDate;
		}
		set
		{
			if(_StartDate != value)
			{
				OnStartDateChanging(value);
				_StartDate = value;
				OnStartDateChanged();
			}
		}
	}
	private System.DateTime _StartDate;

	partial void OnStartDateChanging(System.DateTime newValue);
	partial void OnStartDateChanged();

    public System.DateTime EndDate 
	{ 
		get
		{
			return _EndDate;
		}
		set
		{
			if(_EndDate != value)
			{
				OnEndDateChanging(value);
				_EndDate = value;
				OnEndDateChanged();
			}
		}
	}
	private System.DateTime _EndDate;

	partial void OnEndDateChanging(System.DateTime newValue);
	partial void OnEndDateChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();
}

[Serializable]
public partial class ODIV : ObjectWithState
{
    public ODIV() 
    { 
        this.OGITMs = new HashSet<OGITM>();
        this.OTMPs = new HashSet<OTMP>();
        this.OGCRDs = new HashSet<OGCRD>();
        this.OTRGs = new HashSet<OTRG>();
    }


    public int DivisionlID 
	{ 
		get
		{
			return _DivisionlID;
		}
		set
		{
			if(_DivisionlID != value)
			{
				OnDivisionlIDChanging(value);
				_DivisionlID = value;
				OnDivisionlIDChanged();
			}
		}
	}
	private int _DivisionlID;

	partial void OnDivisionlIDChanging(int newValue);
	partial void OnDivisionlIDChanged();

    public string DivisionCode 
	{ 
		get
		{
			return _DivisionCode;
		}
		set
		{
			if(_DivisionCode != value)
			{
				OnDivisionCodeChanging(value);
				_DivisionCode = value;
				OnDivisionCodeChanged();
			}
		}
	}
	private string _DivisionCode;

	partial void OnDivisionCodeChanging(string newValue);
	partial void OnDivisionCodeChanged();

    public string DivisionName 
	{ 
		get
		{
			return _DivisionName;
		}
		set
		{
			if(_DivisionName != value)
			{
				OnDivisionNameChanging(value);
				_DivisionName = value;
				OnDivisionNameChanged();
			}
		}
	}
	private string _DivisionName;

	partial void OnDivisionNameChanging(string newValue);
	partial void OnDivisionNameChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual ICollection<OGITM> OGITMs { get; set; }
    public virtual ICollection<OTMP> OTMPs { get; set; }
    public virtual ICollection<OGCRD> OGCRDs { get; set; }
    public virtual ICollection<OTRG> OTRGs { get; set; }
}

[Serializable]
public partial class ODRM : ObjectWithState
{

    public int RemarksId 
	{ 
		get
		{
			return _RemarksId;
		}
		set
		{
			if(_RemarksId != value)
			{
				OnRemarksIdChanging(value);
				_RemarksId = value;
				OnRemarksIdChanged();
			}
		}
	}
	private int _RemarksId;

	partial void OnRemarksIdChanging(int newValue);
	partial void OnRemarksIdChanged();

    public string Remarks1 
	{ 
		get
		{
			return _Remarks1;
		}
		set
		{
			if(_Remarks1 != value)
			{
				OnRemarks1Changing(value);
				_Remarks1 = value;
				OnRemarks1Changed();
			}
		}
	}
	private string _Remarks1;

	partial void OnRemarks1Changing(string newValue);
	partial void OnRemarks1Changed();

    public string Remarks2 
	{ 
		get
		{
			return _Remarks2;
		}
		set
		{
			if(_Remarks2 != value)
			{
				OnRemarks2Changing(value);
				_Remarks2 = value;
				OnRemarks2Changed();
			}
		}
	}
	private string _Remarks2;

	partial void OnRemarks2Changing(string newValue);
	partial void OnRemarks2Changed();

    public Nullable<decimal> DealerId 
	{ 
		get
		{
			return _DealerId;
		}
		set
		{
			if(_DealerId != value)
			{
				OnDealerIdChanging(value);
				_DealerId = value;
				OnDealerIdChanged();
			}
		}
	}
	private Nullable<decimal> _DealerId;

	partial void OnDealerIdChanging(Nullable<decimal> newValue);
	partial void OnDealerIdChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public Nullable<bool> Include 
	{ 
		get
		{
			return _Include;
		}
		set
		{
			if(_Include != value)
			{
				OnIncludeChanging(value);
				_Include = value;
				OnIncludeChanged();
			}
		}
	}
	private Nullable<bool> _Include;

	partial void OnIncludeChanging(Nullable<bool> newValue);
	partial void OnIncludeChanged();

    public Nullable<System.DateTime> FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _FromDate;

	partial void OnFromDateChanging(Nullable<System.DateTime> newValue);
	partial void OnFromDateChanged();

    public Nullable<System.DateTime> ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ToDate;

	partial void OnToDateChanging(Nullable<System.DateTime> newValue);
	partial void OnToDateChanged();

    public Nullable<decimal> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<decimal> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<decimal> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<decimal> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<decimal> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<decimal> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<bool> Deleted 
	{ 
		get
		{
			return _Deleted;
		}
		set
		{
			if(_Deleted != value)
			{
				OnDeletedChanging(value);
				_Deleted = value;
				OnDeletedChanged();
			}
		}
	}
	private Nullable<bool> _Deleted;

	partial void OnDeletedChanging(Nullable<bool> newValue);
	partial void OnDeletedChanged();
}

[Serializable]
public partial class ODTIE : ObjectWithState
{

    public int DiscountExcId 
	{ 
		get
		{
			return _DiscountExcId;
		}
		set
		{
			if(_DiscountExcId != value)
			{
				OnDiscountExcIdChanging(value);
				_DiscountExcId = value;
				OnDiscountExcIdChanged();
			}
		}
	}
	private int _DiscountExcId;

	partial void OnDiscountExcIdChanging(int newValue);
	partial void OnDiscountExcIdChanged();

    public Nullable<int> OptionId 
	{ 
		get
		{
			return _OptionId;
		}
		set
		{
			if(_OptionId != value)
			{
				OnOptionIdChanging(value);
				_OptionId = value;
				OnOptionIdChanged();
			}
		}
	}
	private Nullable<int> _OptionId;

	partial void OnOptionIdChanging(Nullable<int> newValue);
	partial void OnOptionIdChanged();

    public Nullable<int> RefNo 
	{ 
		get
		{
			return _RefNo;
		}
		set
		{
			if(_RefNo != value)
			{
				OnRefNoChanging(value);
				_RefNo = value;
				OnRefNoChanged();
			}
		}
	}
	private Nullable<int> _RefNo;

	partial void OnRefNoChanging(Nullable<int> newValue);
	partial void OnRefNoChanged();

    public Nullable<int> DivisionId 
	{ 
		get
		{
			return _DivisionId;
		}
		set
		{
			if(_DivisionId != value)
			{
				OnDivisionIdChanging(value);
				_DivisionId = value;
				OnDivisionIdChanged();
			}
		}
	}
	private Nullable<int> _DivisionId;

	partial void OnDivisionIdChanging(Nullable<int> newValue);
	partial void OnDivisionIdChanged();

    public Nullable<int> ProdGroupId 
	{ 
		get
		{
			return _ProdGroupId;
		}
		set
		{
			if(_ProdGroupId != value)
			{
				OnProdGroupIdChanging(value);
				_ProdGroupId = value;
				OnProdGroupIdChanged();
			}
		}
	}
	private Nullable<int> _ProdGroupId;

	partial void OnProdGroupIdChanging(Nullable<int> newValue);
	partial void OnProdGroupIdChanged();

    public Nullable<int> ProdSubGroupId 
	{ 
		get
		{
			return _ProdSubGroupId;
		}
		set
		{
			if(_ProdSubGroupId != value)
			{
				OnProdSubGroupIdChanging(value);
				_ProdSubGroupId = value;
				OnProdSubGroupIdChanged();
			}
		}
	}
	private Nullable<int> _ProdSubGroupId;

	partial void OnProdSubGroupIdChanging(Nullable<int> newValue);
	partial void OnProdSubGroupIdChanged();

    public Nullable<int> ItemId 
	{ 
		get
		{
			return _ItemId;
		}
		set
		{
			if(_ItemId != value)
			{
				OnItemIdChanging(value);
				_ItemId = value;
				OnItemIdChanged();
			}
		}
	}
	private Nullable<int> _ItemId;

	partial void OnItemIdChanging(Nullable<int> newValue);
	partial void OnItemIdChanged();

    public Nullable<System.DateTime> FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _FromDate;

	partial void OnFromDateChanging(Nullable<System.DateTime> newValue);
	partial void OnFromDateChanged();

    public Nullable<System.DateTime> ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ToDate;

	partial void OnToDateChanging(Nullable<System.DateTime> newValue);
	partial void OnToDateChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdateBy 
	{ 
		get
		{
			return _UpdateBy;
		}
		set
		{
			if(_UpdateBy != value)
			{
				OnUpdateByChanging(value);
				_UpdateBy = value;
				OnUpdateByChanged();
			}
		}
	}
	private Nullable<int> _UpdateBy;

	partial void OnUpdateByChanging(Nullable<int> newValue);
	partial void OnUpdateByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<bool> Deleted 
	{ 
		get
		{
			return _Deleted;
		}
		set
		{
			if(_Deleted != value)
			{
				OnDeletedChanging(value);
				_Deleted = value;
				OnDeletedChanged();
			}
		}
	}
	private Nullable<bool> _Deleted;

	partial void OnDeletedChanging(Nullable<bool> newValue);
	partial void OnDeletedChanged();

    public Nullable<decimal> MRP 
	{ 
		get
		{
			return _MRP;
		}
		set
		{
			if(_MRP != value)
			{
				OnMRPChanging(value);
				_MRP = value;
				OnMRPChanged();
			}
		}
	}
	private Nullable<decimal> _MRP;

	partial void OnMRPChanging(Nullable<decimal> newValue);
	partial void OnMRPChanged();
}

[Serializable]
public partial class ODTIEEmp : ObjectWithState
{

    public int DiscountExcEmpId 
	{ 
		get
		{
			return _DiscountExcEmpId;
		}
		set
		{
			if(_DiscountExcEmpId != value)
			{
				OnDiscountExcEmpIdChanging(value);
				_DiscountExcEmpId = value;
				OnDiscountExcEmpIdChanged();
			}
		}
	}
	private int _DiscountExcEmpId;

	partial void OnDiscountExcEmpIdChanging(int newValue);
	partial void OnDiscountExcEmpIdChanged();

    public Nullable<int> OptionId 
	{ 
		get
		{
			return _OptionId;
		}
		set
		{
			if(_OptionId != value)
			{
				OnOptionIdChanging(value);
				_OptionId = value;
				OnOptionIdChanged();
			}
		}
	}
	private Nullable<int> _OptionId;

	partial void OnOptionIdChanging(Nullable<int> newValue);
	partial void OnOptionIdChanged();

    public Nullable<int> RefNo 
	{ 
		get
		{
			return _RefNo;
		}
		set
		{
			if(_RefNo != value)
			{
				OnRefNoChanging(value);
				_RefNo = value;
				OnRefNoChanged();
			}
		}
	}
	private Nullable<int> _RefNo;

	partial void OnRefNoChanging(Nullable<int> newValue);
	partial void OnRefNoChanged();

    public Nullable<int> EmpId 
	{ 
		get
		{
			return _EmpId;
		}
		set
		{
			if(_EmpId != value)
			{
				OnEmpIdChanging(value);
				_EmpId = value;
				OnEmpIdChanged();
			}
		}
	}
	private Nullable<int> _EmpId;

	partial void OnEmpIdChanging(Nullable<int> newValue);
	partial void OnEmpIdChanged();

    public Nullable<int> RegionId 
	{ 
		get
		{
			return _RegionId;
		}
		set
		{
			if(_RegionId != value)
			{
				OnRegionIdChanging(value);
				_RegionId = value;
				OnRegionIdChanged();
			}
		}
	}
	private Nullable<int> _RegionId;

	partial void OnRegionIdChanging(Nullable<int> newValue);
	partial void OnRegionIdChanged();

    public Nullable<decimal> SSID 
	{ 
		get
		{
			return _SSID;
		}
		set
		{
			if(_SSID != value)
			{
				OnSSIDChanging(value);
				_SSID = value;
				OnSSIDChanged();
			}
		}
	}
	private Nullable<decimal> _SSID;

	partial void OnSSIDChanging(Nullable<decimal> newValue);
	partial void OnSSIDChanged();

    public Nullable<decimal> DistributorId 
	{ 
		get
		{
			return _DistributorId;
		}
		set
		{
			if(_DistributorId != value)
			{
				OnDistributorIdChanging(value);
				_DistributorId = value;
				OnDistributorIdChanged();
			}
		}
	}
	private Nullable<decimal> _DistributorId;

	partial void OnDistributorIdChanging(Nullable<decimal> newValue);
	partial void OnDistributorIdChanged();

    public Nullable<int> CustGroupId 
	{ 
		get
		{
			return _CustGroupId;
		}
		set
		{
			if(_CustGroupId != value)
			{
				OnCustGroupIdChanging(value);
				_CustGroupId = value;
				OnCustGroupIdChanged();
			}
		}
	}
	private Nullable<int> _CustGroupId;

	partial void OnCustGroupIdChanging(Nullable<int> newValue);
	partial void OnCustGroupIdChanged();

    public Nullable<decimal> CustomerId 
	{ 
		get
		{
			return _CustomerId;
		}
		set
		{
			if(_CustomerId != value)
			{
				OnCustomerIdChanging(value);
				_CustomerId = value;
				OnCustomerIdChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerId;

	partial void OnCustomerIdChanging(Nullable<decimal> newValue);
	partial void OnCustomerIdChanged();

    public Nullable<bool> Master 
	{ 
		get
		{
			return _Master;
		}
		set
		{
			if(_Master != value)
			{
				OnMasterChanging(value);
				_Master = value;
				OnMasterChanged();
			}
		}
	}
	private Nullable<bool> _Master;

	partial void OnMasterChanging(Nullable<bool> newValue);
	partial void OnMasterChanged();

    public Nullable<bool> Machine 
	{ 
		get
		{
			return _Machine;
		}
		set
		{
			if(_Machine != value)
			{
				OnMachineChanging(value);
				_Machine = value;
				OnMachineChanged();
			}
		}
	}
	private Nullable<bool> _Machine;

	partial void OnMachineChanging(Nullable<bool> newValue);
	partial void OnMachineChanged();

    public Nullable<bool> Parlour 
	{ 
		get
		{
			return _Parlour;
		}
		set
		{
			if(_Parlour != value)
			{
				OnParlourChanging(value);
				_Parlour = value;
				OnParlourChanged();
			}
		}
	}
	private Nullable<bool> _Parlour;

	partial void OnParlourChanging(Nullable<bool> newValue);
	partial void OnParlourChanged();

    public Nullable<bool> STOD 
	{ 
		get
		{
			return _STOD;
		}
		set
		{
			if(_STOD != value)
			{
				OnSTODChanging(value);
				_STOD = value;
				OnSTODChanged();
			}
		}
	}
	private Nullable<bool> _STOD;

	partial void OnSTODChanging(Nullable<bool> newValue);
	partial void OnSTODChanged();

    public Nullable<System.DateTime> FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _FromDate;

	partial void OnFromDateChanging(Nullable<System.DateTime> newValue);
	partial void OnFromDateChanged();

    public Nullable<System.DateTime> ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ToDate;

	partial void OnToDateChanging(Nullable<System.DateTime> newValue);
	partial void OnToDateChanged();

    public Nullable<bool> IncExc 
	{ 
		get
		{
			return _IncExc;
		}
		set
		{
			if(_IncExc != value)
			{
				OnIncExcChanging(value);
				_IncExc = value;
				OnIncExcChanged();
			}
		}
	}
	private Nullable<bool> _IncExc;

	partial void OnIncExcChanging(Nullable<bool> newValue);
	partial void OnIncExcChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<bool> Deleted 
	{ 
		get
		{
			return _Deleted;
		}
		set
		{
			if(_Deleted != value)
			{
				OnDeletedChanging(value);
				_Deleted = value;
				OnDeletedChanged();
			}
		}
	}
	private Nullable<bool> _Deleted;

	partial void OnDeletedChanging(Nullable<bool> newValue);
	partial void OnDeletedChanged();

    public Nullable<int> EmpGroupId 
	{ 
		get
		{
			return _EmpGroupId;
		}
		set
		{
			if(_EmpGroupId != value)
			{
				OnEmpGroupIdChanging(value);
				_EmpGroupId = value;
				OnEmpGroupIdChanged();
			}
		}
	}
	private Nullable<int> _EmpGroupId;

	partial void OnEmpGroupIdChanging(Nullable<int> newValue);
	partial void OnEmpGroupIdChanged();
}

[Serializable]
public partial class OEA : ObjectWithState
{

    public int AppStatusID 
	{ 
		get
		{
			return _AppStatusID;
		}
		set
		{
			if(_AppStatusID != value)
			{
				OnAppStatusIDChanging(value);
				_AppStatusID = value;
				OnAppStatusIDChanged();
			}
		}
	}
	private int _AppStatusID;

	partial void OnAppStatusIDChanging(int newValue);
	partial void OnAppStatusIDChanged();

    public string Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private string _Status;

	partial void OnStatusChanging(string newValue);
	partial void OnStatusChanged();

    public bool LeaveStatus 
	{ 
		get
		{
			return _LeaveStatus;
		}
		set
		{
			if(_LeaveStatus != value)
			{
				OnLeaveStatusChanging(value);
				_LeaveStatus = value;
				OnLeaveStatusChanged();
			}
		}
	}
	private bool _LeaveStatus;

	partial void OnLeaveStatusChanging(bool newValue);
	partial void OnLeaveStatusChanged();

    public bool ExpStatus 
	{ 
		get
		{
			return _ExpStatus;
		}
		set
		{
			if(_ExpStatus != value)
			{
				OnExpStatusChanging(value);
				_ExpStatus = value;
				OnExpStatusChanged();
			}
		}
	}
	private bool _ExpStatus;

	partial void OnExpStatusChanging(bool newValue);
	partial void OnExpStatusChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public string StatusFilter 
	{ 
		get
		{
			return _StatusFilter;
		}
		set
		{
			if(_StatusFilter != value)
			{
				OnStatusFilterChanging(value);
				_StatusFilter = value;
				OnStatusFilterChanged();
			}
		}
	}
	private string _StatusFilter;

	partial void OnStatusFilterChanging(string newValue);
	partial void OnStatusFilterChanged();
}

[Serializable]
public partial class OEAP : ObjectWithState
{

    public int OEAPID 
	{ 
		get
		{
			return _OEAPID;
		}
		set
		{
			if(_OEAPID != value)
			{
				OnOEAPIDChanging(value);
				_OEAPID = value;
				OnOEAPIDChanged();
			}
		}
	}
	private int _OEAPID;

	partial void OnOEAPIDChanging(int newValue);
	partial void OnOEAPIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int OERQID 
	{ 
		get
		{
			return _OERQID;
		}
		set
		{
			if(_OERQID != value)
			{
				OnOERQIDChanging(value);
				_OERQID = value;
				OnOERQIDChanged();
			}
		}
	}
	private int _OERQID;

	partial void OnOERQIDChanging(int newValue);
	partial void OnOERQIDChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> NextManagerID 
	{ 
		get
		{
			return _NextManagerID;
		}
		set
		{
			if(_NextManagerID != value)
			{
				OnNextManagerIDChanging(value);
				_NextManagerID = value;
				OnNextManagerIDChanged();
			}
		}
	}
	private Nullable<int> _NextManagerID;

	partial void OnNextManagerIDChanging(Nullable<int> newValue);
	partial void OnNextManagerIDChanged();

    public decimal AvailBudget 
	{ 
		get
		{
			return _AvailBudget;
		}
		set
		{
			if(_AvailBudget != value)
			{
				OnAvailBudgetChanging(value);
				_AvailBudget = value;
				OnAvailBudgetChanged();
			}
		}
	}
	private decimal _AvailBudget;

	partial void OnAvailBudgetChanging(decimal newValue);
	partial void OnAvailBudgetChanged();

    public decimal AppAmount 
	{ 
		get
		{
			return _AppAmount;
		}
		set
		{
			if(_AppAmount != value)
			{
				OnAppAmountChanging(value);
				_AppAmount = value;
				OnAppAmountChanged();
			}
		}
	}
	private decimal _AppAmount;

	partial void OnAppAmountChanging(decimal newValue);
	partial void OnAppAmountChanged();

    public Nullable<decimal> PrevAmount 
	{ 
		get
		{
			return _PrevAmount;
		}
		set
		{
			if(_PrevAmount != value)
			{
				OnPrevAmountChanging(value);
				_PrevAmount = value;
				OnPrevAmountChanged();
			}
		}
	}
	private Nullable<decimal> _PrevAmount;

	partial void OnPrevAmountChanging(Nullable<decimal> newValue);
	partial void OnPrevAmountChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();
}

[Serializable]
public partial class OECG : ObjectWithState
{
    public OECG() 
    { 
        this.OSFCs = new HashSet<OSFC>();
    }


    public int CityGradeID 
	{ 
		get
		{
			return _CityGradeID;
		}
		set
		{
			if(_CityGradeID != value)
			{
				OnCityGradeIDChanging(value);
				_CityGradeID = value;
				OnCityGradeIDChanged();
			}
		}
	}
	private int _CityGradeID;

	partial void OnCityGradeIDChanging(int newValue);
	partial void OnCityGradeIDChanged();

    public string CityGrade 
	{ 
		get
		{
			return _CityGrade;
		}
		set
		{
			if(_CityGrade != value)
			{
				OnCityGradeChanging(value);
				_CityGrade = value;
				OnCityGradeChanged();
			}
		}
	}
	private string _CityGrade;

	partial void OnCityGradeChanging(string newValue);
	partial void OnCityGradeChanged();

    public string CityGradeName 
	{ 
		get
		{
			return _CityGradeName;
		}
		set
		{
			if(_CityGradeName != value)
			{
				OnCityGradeNameChanging(value);
				_CityGradeName = value;
				OnCityGradeNameChanged();
			}
		}
	}
	private string _CityGradeName;

	partial void OnCityGradeNameChanging(string newValue);
	partial void OnCityGradeNameChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual ICollection<OSFC> OSFCs { get; set; }
}

[Serializable]
public partial class OEEG : ObjectWithState
{
    public OEEG() 
    { 
        this.OEXMs = new HashSet<OEXM>();
        this.OSFCs = new HashSet<OSFC>();
    }


    public int EmpGradeID 
	{ 
		get
		{
			return _EmpGradeID;
		}
		set
		{
			if(_EmpGradeID != value)
			{
				OnEmpGradeIDChanging(value);
				_EmpGradeID = value;
				OnEmpGradeIDChanged();
			}
		}
	}
	private int _EmpGradeID;

	partial void OnEmpGradeIDChanging(int newValue);
	partial void OnEmpGradeIDChanged();

    public string EmpGrade 
	{ 
		get
		{
			return _EmpGrade;
		}
		set
		{
			if(_EmpGrade != value)
			{
				OnEmpGradeChanging(value);
				_EmpGrade = value;
				OnEmpGradeChanged();
			}
		}
	}
	private string _EmpGrade;

	partial void OnEmpGradeChanging(string newValue);
	partial void OnEmpGradeChanged();

    public string EmpGradeName 
	{ 
		get
		{
			return _EmpGradeName;
		}
		set
		{
			if(_EmpGradeName != value)
			{
				OnEmpGradeNameChanging(value);
				_EmpGradeName = value;
				OnEmpGradeNameChanged();
			}
		}
	}
	private string _EmpGradeName;

	partial void OnEmpGradeNameChanging(string newValue);
	partial void OnEmpGradeNameChanged();

    public Nullable<int> EmpLevel 
	{ 
		get
		{
			return _EmpLevel;
		}
		set
		{
			if(_EmpLevel != value)
			{
				OnEmpLevelChanging(value);
				_EmpLevel = value;
				OnEmpLevelChanged();
			}
		}
	}
	private Nullable<int> _EmpLevel;

	partial void OnEmpLevelChanging(Nullable<int> newValue);
	partial void OnEmpLevelChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual ICollection<OEXM> OEXMs { get; set; }
    public virtual ICollection<OSFC> OSFCs { get; set; }
}

[Serializable]
public partial class OEIC : ObjectWithState
{

    public int SrNo 
	{ 
		get
		{
			return _SrNo;
		}
		set
		{
			if(_SrNo != value)
			{
				OnSrNoChanging(value);
				_SrNo = value;
				OnSrNoChanged();
			}
		}
	}
	private int _SrNo;

	partial void OnSrNoChanging(int newValue);
	partial void OnSrNoChanged();

    public Nullable<decimal> CustomerId 
	{ 
		get
		{
			return _CustomerId;
		}
		set
		{
			if(_CustomerId != value)
			{
				OnCustomerIdChanging(value);
				_CustomerId = value;
				OnCustomerIdChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerId;

	partial void OnCustomerIdChanging(Nullable<decimal> newValue);
	partial void OnCustomerIdChanged();

    public Nullable<int> ItemGroupId 
	{ 
		get
		{
			return _ItemGroupId;
		}
		set
		{
			if(_ItemGroupId != value)
			{
				OnItemGroupIdChanging(value);
				_ItemGroupId = value;
				OnItemGroupIdChanged();
			}
		}
	}
	private Nullable<int> _ItemGroupId;

	partial void OnItemGroupIdChanging(Nullable<int> newValue);
	partial void OnItemGroupIdChanged();

    public Nullable<int> ItemSubGroupId 
	{ 
		get
		{
			return _ItemSubGroupId;
		}
		set
		{
			if(_ItemSubGroupId != value)
			{
				OnItemSubGroupIdChanging(value);
				_ItemSubGroupId = value;
				OnItemSubGroupIdChanged();
			}
		}
	}
	private Nullable<int> _ItemSubGroupId;

	partial void OnItemSubGroupIdChanging(Nullable<int> newValue);
	partial void OnItemSubGroupIdChanged();

    public Nullable<int> ItemId 
	{ 
		get
		{
			return _ItemId;
		}
		set
		{
			if(_ItemId != value)
			{
				OnItemIdChanging(value);
				_ItemId = value;
				OnItemIdChanged();
			}
		}
	}
	private Nullable<int> _ItemId;

	partial void OnItemIdChanging(Nullable<int> newValue);
	partial void OnItemIdChanged();

    public Nullable<System.DateTime> FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _FromDate;

	partial void OnFromDateChanging(Nullable<System.DateTime> newValue);
	partial void OnFromDateChanged();

    public Nullable<System.DateTime> ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ToDate;

	partial void OnToDateChanging(Nullable<System.DateTime> newValue);
	partial void OnToDateChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public Nullable<System.DateTime> UpdateDate 
	{ 
		get
		{
			return _UpdateDate;
		}
		set
		{
			if(_UpdateDate != value)
			{
				OnUpdateDateChanging(value);
				_UpdateDate = value;
				OnUpdateDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdateDate;

	partial void OnUpdateDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdateDateChanged();

    public Nullable<int> UpdateBy 
	{ 
		get
		{
			return _UpdateBy;
		}
		set
		{
			if(_UpdateBy != value)
			{
				OnUpdateByChanging(value);
				_UpdateBy = value;
				OnUpdateByChanged();
			}
		}
	}
	private Nullable<int> _UpdateBy;

	partial void OnUpdateByChanging(Nullable<int> newValue);
	partial void OnUpdateByChanged();
}

[Serializable]
public partial class OEIRM : ObjectWithState
{

    public int OEIRMId 
	{ 
		get
		{
			return _OEIRMId;
		}
		set
		{
			if(_OEIRMId != value)
			{
				OnOEIRMIdChanging(value);
				_OEIRMId = value;
				OnOEIRMIdChanged();
			}
		}
	}
	private int _OEIRMId;

	partial void OnOEIRMIdChanging(int newValue);
	partial void OnOEIRMIdChanged();

    public Nullable<int> OptionId 
	{ 
		get
		{
			return _OptionId;
		}
		set
		{
			if(_OptionId != value)
			{
				OnOptionIdChanging(value);
				_OptionId = value;
				OnOptionIdChanged();
			}
		}
	}
	private Nullable<int> _OptionId;

	partial void OnOptionIdChanging(Nullable<int> newValue);
	partial void OnOptionIdChanged();

    public Nullable<int> RefNo 
	{ 
		get
		{
			return _RefNo;
		}
		set
		{
			if(_RefNo != value)
			{
				OnRefNoChanging(value);
				_RefNo = value;
				OnRefNoChanged();
			}
		}
	}
	private Nullable<int> _RefNo;

	partial void OnRefNoChanging(Nullable<int> newValue);
	partial void OnRefNoChanged();

    public Nullable<int> RegionId 
	{ 
		get
		{
			return _RegionId;
		}
		set
		{
			if(_RegionId != value)
			{
				OnRegionIdChanging(value);
				_RegionId = value;
				OnRegionIdChanged();
			}
		}
	}
	private Nullable<int> _RegionId;

	partial void OnRegionIdChanging(Nullable<int> newValue);
	partial void OnRegionIdChanged();

    public Nullable<int> EmpId 
	{ 
		get
		{
			return _EmpId;
		}
		set
		{
			if(_EmpId != value)
			{
				OnEmpIdChanging(value);
				_EmpId = value;
				OnEmpIdChanged();
			}
		}
	}
	private Nullable<int> _EmpId;

	partial void OnEmpIdChanging(Nullable<int> newValue);
	partial void OnEmpIdChanged();

    public Nullable<int> EmpGroupId 
	{ 
		get
		{
			return _EmpGroupId;
		}
		set
		{
			if(_EmpGroupId != value)
			{
				OnEmpGroupIdChanging(value);
				_EmpGroupId = value;
				OnEmpGroupIdChanged();
			}
		}
	}
	private Nullable<int> _EmpGroupId;

	partial void OnEmpGroupIdChanging(Nullable<int> newValue);
	partial void OnEmpGroupIdChanged();

    public Nullable<decimal> SSID 
	{ 
		get
		{
			return _SSID;
		}
		set
		{
			if(_SSID != value)
			{
				OnSSIDChanging(value);
				_SSID = value;
				OnSSIDChanged();
			}
		}
	}
	private Nullable<decimal> _SSID;

	partial void OnSSIDChanging(Nullable<decimal> newValue);
	partial void OnSSIDChanged();

    public Nullable<decimal> DistributorId 
	{ 
		get
		{
			return _DistributorId;
		}
		set
		{
			if(_DistributorId != value)
			{
				OnDistributorIdChanging(value);
				_DistributorId = value;
				OnDistributorIdChanged();
			}
		}
	}
	private Nullable<decimal> _DistributorId;

	partial void OnDistributorIdChanging(Nullable<decimal> newValue);
	partial void OnDistributorIdChanged();

    public Nullable<int> CustGroupId 
	{ 
		get
		{
			return _CustGroupId;
		}
		set
		{
			if(_CustGroupId != value)
			{
				OnCustGroupIdChanging(value);
				_CustGroupId = value;
				OnCustGroupIdChanged();
			}
		}
	}
	private Nullable<int> _CustGroupId;

	partial void OnCustGroupIdChanging(Nullable<int> newValue);
	partial void OnCustGroupIdChanged();

    public Nullable<decimal> CustomerId 
	{ 
		get
		{
			return _CustomerId;
		}
		set
		{
			if(_CustomerId != value)
			{
				OnCustomerIdChanging(value);
				_CustomerId = value;
				OnCustomerIdChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerId;

	partial void OnCustomerIdChanging(Nullable<decimal> newValue);
	partial void OnCustomerIdChanged();

    public Nullable<System.DateTime> FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _FromDate;

	partial void OnFromDateChanging(Nullable<System.DateTime> newValue);
	partial void OnFromDateChanged();

    public Nullable<System.DateTime> ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ToDate;

	partial void OnToDateChanging(Nullable<System.DateTime> newValue);
	partial void OnToDateChanged();

    public Nullable<bool> IncExc 
	{ 
		get
		{
			return _IncExc;
		}
		set
		{
			if(_IncExc != value)
			{
				OnIncExcChanging(value);
				_IncExc = value;
				OnIncExcChanged();
			}
		}
	}
	private Nullable<bool> _IncExc;

	partial void OnIncExcChanging(Nullable<bool> newValue);
	partial void OnIncExcChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<bool> Deleted 
	{ 
		get
		{
			return _Deleted;
		}
		set
		{
			if(_Deleted != value)
			{
				OnDeletedChanging(value);
				_Deleted = value;
				OnDeletedChanged();
			}
		}
	}
	private Nullable<bool> _Deleted;

	partial void OnDeletedChanging(Nullable<bool> newValue);
	partial void OnDeletedChanged();
}

[Serializable]
public partial class OELM : ObjectWithState
{

    public int OELMID 
	{ 
		get
		{
			return _OELMID;
		}
		set
		{
			if(_OELMID != value)
			{
				OnOELMIDChanging(value);
				_OELMID = value;
				OnOELMIDChanged();
			}
		}
	}
	private int _OELMID;

	partial void OnOELMIDChanging(int newValue);
	partial void OnOELMIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int StorageLocID 
	{ 
		get
		{
			return _StorageLocID;
		}
		set
		{
			if(_StorageLocID != value)
			{
				OnStorageLocIDChanging(value);
				_StorageLocID = value;
				OnStorageLocIDChanged();
			}
		}
	}
	private int _StorageLocID;

	partial void OnStorageLocIDChanging(int newValue);
	partial void OnStorageLocIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDelete 
	{ 
		get
		{
			return _IsDelete;
		}
		set
		{
			if(_IsDelete != value)
			{
				OnIsDeleteChanging(value);
				_IsDelete = value;
				OnIsDeleteChanged();
			}
		}
	}
	private bool _IsDelete;

	partial void OnIsDeleteChanging(bool newValue);
	partial void OnIsDeleteChanged();

    public virtual OEMP OEMP { get; set; }
    public virtual OSTRL OSTRL { get; set; }
}

[Serializable]
public partial class OEML : ObjectWithState
{

    public int EmailID 
	{ 
		get
		{
			return _EmailID;
		}
		set
		{
			if(_EmailID != value)
			{
				OnEmailIDChanging(value);
				_EmailID = value;
				OnEmailIDChanged();
			}
		}
	}
	private int _EmailID;

	partial void OnEmailIDChanging(int newValue);
	partial void OnEmailIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public string Email 
	{ 
		get
		{
			return _Email;
		}
		set
		{
			if(_Email != value)
			{
				OnEmailChanging(value);
				_Email = value;
				OnEmailChanged();
			}
		}
	}
	private string _Email;

	partial void OnEmailChanging(string newValue);
	partial void OnEmailChanged();

    public string Password 
	{ 
		get
		{
			return _Password;
		}
		set
		{
			if(_Password != value)
			{
				OnPasswordChanging(value);
				_Password = value;
				OnPasswordChanged();
			}
		}
	}
	private string _Password;

	partial void OnPasswordChanging(string newValue);
	partial void OnPasswordChanged();

    public string Domain 
	{ 
		get
		{
			return _Domain;
		}
		set
		{
			if(_Domain != value)
			{
				OnDomainChanging(value);
				_Domain = value;
				OnDomainChanged();
			}
		}
	}
	private string _Domain;

	partial void OnDomainChanging(string newValue);
	partial void OnDomainChanged();

    public int Port 
	{ 
		get
		{
			return _Port;
		}
		set
		{
			if(_Port != value)
			{
				OnPortChanging(value);
				_Port = value;
				OnPortChanged();
			}
		}
	}
	private int _Port;

	partial void OnPortChanging(int newValue);
	partial void OnPortChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string UserName 
	{ 
		get
		{
			return _UserName;
		}
		set
		{
			if(_UserName != value)
			{
				OnUserNameChanging(value);
				_UserName = value;
				OnUserNameChanged();
			}
		}
	}
	private string _UserName;

	partial void OnUserNameChanging(string newValue);
	partial void OnUserNameChanged();

    public virtual OEMP OEMP { get; set; }
}

[Serializable]
public partial class OEMP : ObjectWithState
{
    public OEMP() 
    { 
        this.OEMLs = new HashSet<OEML>();
        this.OPOS = new HashSet<OPOS>();
        this.HELPs = new HashSet<HELP>();
        this.EMP1 = new HashSet<EMP1>();
        this.EML1 = new HashSet<EML1>();
        this.OCFBs = new HashSet<OCFB>();
        this.OENTs = new HashSet<OENT>();
        this.ORDRs = new HashSet<ORDR>();
        this.RDR1 = new HashSet<RDR1>();
        this.OAAPs = new HashSet<OAAP>();
        this.OARQs = new HashSet<OARQ>();
        this.OERQs = new HashSet<OERQ>();
        this.OLVAPs = new HashSet<OLVAP>();
        this.OLVBLs = new HashSet<OLVBL>();
        this.HRY1 = new HashSet<HRY1>();
        this.OESMs = new HashSet<OESM>();
        this.OELMs = new HashSet<OELM>();
        this.OGCMs = new HashSet<OGCM>();
        this.OGPS = new HashSet<OGP>();
        this.OMDAPs = new HashSet<OMDAP>();
        this.OMDRQs = new HashSet<OMDRQ>();
        this.OTRGs = new HashSet<OTRG>();
        this.POS1 = new HashSet<POS1>();
        this.OCRUTs = new HashSet<OCRUT>();
        this.ORUTs = new HashSet<ORUT>();
        this.ORUTs1 = new HashSet<ORUT>();
    }


    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string EmpCode 
	{ 
		get
		{
			return _EmpCode;
		}
		set
		{
			if(_EmpCode != value)
			{
				OnEmpCodeChanging(value);
				_EmpCode = value;
				OnEmpCodeChanged();
			}
		}
	}
	private string _EmpCode;

	partial void OnEmpCodeChanging(string newValue);
	partial void OnEmpCodeChanged();

    public string UserName 
	{ 
		get
		{
			return _UserName;
		}
		set
		{
			if(_UserName != value)
			{
				OnUserNameChanging(value);
				_UserName = value;
				OnUserNameChanged();
			}
		}
	}
	private string _UserName;

	partial void OnUserNameChanging(string newValue);
	partial void OnUserNameChanged();

    public string Password 
	{ 
		get
		{
			return _Password;
		}
		set
		{
			if(_Password != value)
			{
				OnPasswordChanging(value);
				_Password = value;
				OnPasswordChanged();
			}
		}
	}
	private string _Password;

	partial void OnPasswordChanging(string newValue);
	partial void OnPasswordChanged();

    public string Password2 
	{ 
		get
		{
			return _Password2;
		}
		set
		{
			if(_Password2 != value)
			{
				OnPassword2Changing(value);
				_Password2 = value;
				OnPassword2Changed();
			}
		}
	}
	private string _Password2;

	partial void OnPassword2Changing(string newValue);
	partial void OnPassword2Changed();

    public string Password3 
	{ 
		get
		{
			return _Password3;
		}
		set
		{
			if(_Password3 != value)
			{
				OnPassword3Changing(value);
				_Password3 = value;
				OnPassword3Changed();
			}
		}
	}
	private string _Password3;

	partial void OnPassword3Changing(string newValue);
	partial void OnPassword3Changed();

    public string Password4 
	{ 
		get
		{
			return _Password4;
		}
		set
		{
			if(_Password4 != value)
			{
				OnPassword4Changing(value);
				_Password4 = value;
				OnPassword4Changed();
			}
		}
	}
	private string _Password4;

	partial void OnPassword4Changing(string newValue);
	partial void OnPassword4Changed();

    public string Name 
	{ 
		get
		{
			return _Name;
		}
		set
		{
			if(_Name != value)
			{
				OnNameChanging(value);
				_Name = value;
				OnNameChanged();
			}
		}
	}
	private string _Name;

	partial void OnNameChanging(string newValue);
	partial void OnNameChanged();

    public string Gender 
	{ 
		get
		{
			return _Gender;
		}
		set
		{
			if(_Gender != value)
			{
				OnGenderChanging(value);
				_Gender = value;
				OnGenderChanged();
			}
		}
	}
	private string _Gender;

	partial void OnGenderChanging(string newValue);
	partial void OnGenderChanged();

    public Nullable<int> Age 
	{ 
		get
		{
			return _Age;
		}
		set
		{
			if(_Age != value)
			{
				OnAgeChanging(value);
				_Age = value;
				OnAgeChanged();
			}
		}
	}
	private Nullable<int> _Age;

	partial void OnAgeChanging(Nullable<int> newValue);
	partial void OnAgeChanged();

    public Nullable<int> EmpGroupID 
	{ 
		get
		{
			return _EmpGroupID;
		}
		set
		{
			if(_EmpGroupID != value)
			{
				OnEmpGroupIDChanging(value);
				_EmpGroupID = value;
				OnEmpGroupIDChanged();
			}
		}
	}
	private Nullable<int> _EmpGroupID;

	partial void OnEmpGroupIDChanging(Nullable<int> newValue);
	partial void OnEmpGroupIDChanged();

    public Nullable<int> BranchID 
	{ 
		get
		{
			return _BranchID;
		}
		set
		{
			if(_BranchID != value)
			{
				OnBranchIDChanging(value);
				_BranchID = value;
				OnBranchIDChanged();
			}
		}
	}
	private Nullable<int> _BranchID;

	partial void OnBranchIDChanging(Nullable<int> newValue);
	partial void OnBranchIDChanged();

    public string WorkPhone 
	{ 
		get
		{
			return _WorkPhone;
		}
		set
		{
			if(_WorkPhone != value)
			{
				OnWorkPhoneChanging(value);
				_WorkPhone = value;
				OnWorkPhoneChanged();
			}
		}
	}
	private string _WorkPhone;

	partial void OnWorkPhoneChanging(string newValue);
	partial void OnWorkPhoneChanged();

    public string Extension 
	{ 
		get
		{
			return _Extension;
		}
		set
		{
			if(_Extension != value)
			{
				OnExtensionChanging(value);
				_Extension = value;
				OnExtensionChanged();
			}
		}
	}
	private string _Extension;

	partial void OnExtensionChanging(string newValue);
	partial void OnExtensionChanged();

    public string HomePhone 
	{ 
		get
		{
			return _HomePhone;
		}
		set
		{
			if(_HomePhone != value)
			{
				OnHomePhoneChanging(value);
				_HomePhone = value;
				OnHomePhoneChanged();
			}
		}
	}
	private string _HomePhone;

	partial void OnHomePhoneChanging(string newValue);
	partial void OnHomePhoneChanged();

    public string Mobile 
	{ 
		get
		{
			return _Mobile;
		}
		set
		{
			if(_Mobile != value)
			{
				OnMobileChanging(value);
				_Mobile = value;
				OnMobileChanged();
			}
		}
	}
	private string _Mobile;

	partial void OnMobileChanging(string newValue);
	partial void OnMobileChanged();

    public byte[] Photo 
	{ 
		get
		{
			return _Photo;
		}
		set
		{
			if(_Photo != value)
			{
				OnPhotoChanging(value);
				_Photo = value;
				OnPhotoChanged();
			}
		}
	}
	private byte[] _Photo;

	partial void OnPhotoChanging(byte[] newValue);
	partial void OnPhotoChanged();

    public string WorkEmail 
	{ 
		get
		{
			return _WorkEmail;
		}
		set
		{
			if(_WorkEmail != value)
			{
				OnWorkEmailChanging(value);
				_WorkEmail = value;
				OnWorkEmailChanged();
			}
		}
	}
	private string _WorkEmail;

	partial void OnWorkEmailChanging(string newValue);
	partial void OnWorkEmailChanged();

    public string PersonalEmail 
	{ 
		get
		{
			return _PersonalEmail;
		}
		set
		{
			if(_PersonalEmail != value)
			{
				OnPersonalEmailChanging(value);
				_PersonalEmail = value;
				OnPersonalEmailChanged();
			}
		}
	}
	private string _PersonalEmail;

	partial void OnPersonalEmailChanging(string newValue);
	partial void OnPersonalEmailChanged();

    public Nullable<int> Rating 
	{ 
		get
		{
			return _Rating;
		}
		set
		{
			if(_Rating != value)
			{
				OnRatingChanging(value);
				_Rating = value;
				OnRatingChanged();
			}
		}
	}
	private Nullable<int> _Rating;

	partial void OnRatingChanging(Nullable<int> newValue);
	partial void OnRatingChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public Nullable<int> ManagerID 
	{ 
		get
		{
			return _ManagerID;
		}
		set
		{
			if(_ManagerID != value)
			{
				OnManagerIDChanging(value);
				_ManagerID = value;
				OnManagerIDChanged();
			}
		}
	}
	private Nullable<int> _ManagerID;

	partial void OnManagerIDChanging(Nullable<int> newValue);
	partial void OnManagerIDChanged();

    public string LicenceNumber 
	{ 
		get
		{
			return _LicenceNumber;
		}
		set
		{
			if(_LicenceNumber != value)
			{
				OnLicenceNumberChanging(value);
				_LicenceNumber = value;
				OnLicenceNumberChanged();
			}
		}
	}
	private string _LicenceNumber;

	partial void OnLicenceNumberChanging(string newValue);
	partial void OnLicenceNumberChanged();

    public Nullable<System.DateTime> LicenseExpDt 
	{ 
		get
		{
			return _LicenseExpDt;
		}
		set
		{
			if(_LicenseExpDt != value)
			{
				OnLicenseExpDtChanging(value);
				_LicenseExpDt = value;
				OnLicenseExpDtChanged();
			}
		}
	}
	private Nullable<System.DateTime> _LicenseExpDt;

	partial void OnLicenseExpDtChanging(Nullable<System.DateTime> newValue);
	partial void OnLicenseExpDtChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public Nullable<System.DateTime> JoiningDate 
	{ 
		get
		{
			return _JoiningDate;
		}
		set
		{
			if(_JoiningDate != value)
			{
				OnJoiningDateChanging(value);
				_JoiningDate = value;
				OnJoiningDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _JoiningDate;

	partial void OnJoiningDateChanging(Nullable<System.DateTime> newValue);
	partial void OnJoiningDateChanged();

    public string Education 
	{ 
		get
		{
			return _Education;
		}
		set
		{
			if(_Education != value)
			{
				OnEducationChanging(value);
				_Education = value;
				OnEducationChanged();
			}
		}
	}
	private string _Education;

	partial void OnEducationChanging(string newValue);
	partial void OnEducationChanged();

    public string LanguagesKnown 
	{ 
		get
		{
			return _LanguagesKnown;
		}
		set
		{
			if(_LanguagesKnown != value)
			{
				OnLanguagesKnownChanging(value);
				_LanguagesKnown = value;
				OnLanguagesKnownChanged();
			}
		}
	}
	private string _LanguagesKnown;

	partial void OnLanguagesKnownChanging(string newValue);
	partial void OnLanguagesKnownChanged();

    public string Hobbies 
	{ 
		get
		{
			return _Hobbies;
		}
		set
		{
			if(_Hobbies != value)
			{
				OnHobbiesChanging(value);
				_Hobbies = value;
				OnHobbiesChanged();
			}
		}
	}
	private string _Hobbies;

	partial void OnHobbiesChanging(string newValue);
	partial void OnHobbiesChanged();

    public Nullable<int> SecQueID 
	{ 
		get
		{
			return _SecQueID;
		}
		set
		{
			if(_SecQueID != value)
			{
				OnSecQueIDChanging(value);
				_SecQueID = value;
				OnSecQueIDChanged();
			}
		}
	}
	private Nullable<int> _SecQueID;

	partial void OnSecQueIDChanging(Nullable<int> newValue);
	partial void OnSecQueIDChanged();

    public string SecAns 
	{ 
		get
		{
			return _SecAns;
		}
		set
		{
			if(_SecAns != value)
			{
				OnSecAnsChanging(value);
				_SecAns = value;
				OnSecAnsChanged();
			}
		}
	}
	private string _SecAns;

	partial void OnSecAnsChanging(string newValue);
	partial void OnSecAnsChanged();

    public string SpecialitySkills 
	{ 
		get
		{
			return _SpecialitySkills;
		}
		set
		{
			if(_SpecialitySkills != value)
			{
				OnSpecialitySkillsChanging(value);
				_SpecialitySkills = value;
				OnSpecialitySkillsChanged();
			}
		}
	}
	private string _SpecialitySkills;

	partial void OnSpecialitySkillsChanging(string newValue);
	partial void OnSpecialitySkillsChanged();

    public string PANNumber 
	{ 
		get
		{
			return _PANNumber;
		}
		set
		{
			if(_PANNumber != value)
			{
				OnPANNumberChanging(value);
				_PANNumber = value;
				OnPANNumberChanged();
			}
		}
	}
	private string _PANNumber;

	partial void OnPANNumberChanging(string newValue);
	partial void OnPANNumberChanged();

    public Nullable<decimal> Salary 
	{ 
		get
		{
			return _Salary;
		}
		set
		{
			if(_Salary != value)
			{
				OnSalaryChanging(value);
				_Salary = value;
				OnSalaryChanged();
			}
		}
	}
	private Nullable<decimal> _Salary;

	partial void OnSalaryChanging(Nullable<decimal> newValue);
	partial void OnSalaryChanged();

    public string SalaryType 
	{ 
		get
		{
			return _SalaryType;
		}
		set
		{
			if(_SalaryType != value)
			{
				OnSalaryTypeChanging(value);
				_SalaryType = value;
				OnSalaryTypeChanged();
			}
		}
	}
	private string _SalaryType;

	partial void OnSalaryTypeChanging(string newValue);
	partial void OnSalaryTypeChanged();

    public string PaymentMode 
	{ 
		get
		{
			return _PaymentMode;
		}
		set
		{
			if(_PaymentMode != value)
			{
				OnPaymentModeChanging(value);
				_PaymentMode = value;
				OnPaymentModeChanged();
			}
		}
	}
	private string _PaymentMode;

	partial void OnPaymentModeChanging(string newValue);
	partial void OnPaymentModeChanged();

    public string Bank 
	{ 
		get
		{
			return _Bank;
		}
		set
		{
			if(_Bank != value)
			{
				OnBankChanging(value);
				_Bank = value;
				OnBankChanged();
			}
		}
	}
	private string _Bank;

	partial void OnBankChanging(string newValue);
	partial void OnBankChanged();

    public string BankBranch 
	{ 
		get
		{
			return _BankBranch;
		}
		set
		{
			if(_BankBranch != value)
			{
				OnBankBranchChanging(value);
				_BankBranch = value;
				OnBankBranchChanged();
			}
		}
	}
	private string _BankBranch;

	partial void OnBankBranchChanging(string newValue);
	partial void OnBankBranchChanged();

    public string Image 
	{ 
		get
		{
			return _Image;
		}
		set
		{
			if(_Image != value)
			{
				OnImageChanging(value);
				_Image = value;
				OnImageChanged();
			}
		}
	}
	private string _Image;

	partial void OnImageChanging(string newValue);
	partial void OnImageChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string MobileID 
	{ 
		get
		{
			return _MobileID;
		}
		set
		{
			if(_MobileID != value)
			{
				OnMobileIDChanging(value);
				_MobileID = value;
				OnMobileIDChanged();
			}
		}
	}
	private string _MobileID;

	partial void OnMobileIDChanging(string newValue);
	partial void OnMobileIDChanged();

    public string MobileName 
	{ 
		get
		{
			return _MobileName;
		}
		set
		{
			if(_MobileName != value)
			{
				OnMobileNameChanging(value);
				_MobileName = value;
				OnMobileNameChanged();
			}
		}
	}
	private string _MobileName;

	partial void OnMobileNameChanging(string newValue);
	partial void OnMobileNameChanged();

    public bool IsDiscount 
	{ 
		get
		{
			return _IsDiscount;
		}
		set
		{
			if(_IsDiscount != value)
			{
				OnIsDiscountChanging(value);
				_IsDiscount = value;
				OnIsDiscountChanged();
			}
		}
	}
	private bool _IsDiscount;

	partial void OnIsDiscountChanging(bool newValue);
	partial void OnIsDiscountChanged();

    public Nullable<decimal> MinDiscount 
	{ 
		get
		{
			return _MinDiscount;
		}
		set
		{
			if(_MinDiscount != value)
			{
				OnMinDiscountChanging(value);
				_MinDiscount = value;
				OnMinDiscountChanged();
			}
		}
	}
	private Nullable<decimal> _MinDiscount;

	partial void OnMinDiscountChanging(Nullable<decimal> newValue);
	partial void OnMinDiscountChanged();

    public Nullable<decimal> MaxDiscount 
	{ 
		get
		{
			return _MaxDiscount;
		}
		set
		{
			if(_MaxDiscount != value)
			{
				OnMaxDiscountChanging(value);
				_MaxDiscount = value;
				OnMaxDiscountChanged();
			}
		}
	}
	private Nullable<decimal> _MaxDiscount;

	partial void OnMaxDiscountChanging(Nullable<decimal> newValue);
	partial void OnMaxDiscountChanged();

    public string TermsNConditions 
	{ 
		get
		{
			return _TermsNConditions;
		}
		set
		{
			if(_TermsNConditions != value)
			{
				OnTermsNConditionsChanging(value);
				_TermsNConditions = value;
				OnTermsNConditionsChanged();
			}
		}
	}
	private string _TermsNConditions;

	partial void OnTermsNConditionsChanging(string newValue);
	partial void OnTermsNConditionsChanged();

    public string GCMID 
	{ 
		get
		{
			return _GCMID;
		}
		set
		{
			if(_GCMID != value)
			{
				OnGCMIDChanging(value);
				_GCMID = value;
				OnGCMIDChanged();
			}
		}
	}
	private string _GCMID;

	partial void OnGCMIDChanging(string newValue);
	partial void OnGCMIDChanged();

    public string GCM2ID 
	{ 
		get
		{
			return _GCM2ID;
		}
		set
		{
			if(_GCM2ID != value)
			{
				OnGCM2IDChanging(value);
				_GCM2ID = value;
				OnGCM2IDChanged();
			}
		}
	}
	private string _GCM2ID;

	partial void OnGCM2IDChanging(string newValue);
	partial void OnGCM2IDChanged();

    public Nullable<int> EmpGradeID 
	{ 
		get
		{
			return _EmpGradeID;
		}
		set
		{
			if(_EmpGradeID != value)
			{
				OnEmpGradeIDChanging(value);
				_EmpGradeID = value;
				OnEmpGradeIDChanged();
			}
		}
	}
	private Nullable<int> _EmpGradeID;

	partial void OnEmpGradeIDChanging(Nullable<int> newValue);
	partial void OnEmpGradeIDChanged();

    public bool IsSAP 
	{ 
		get
		{
			return _IsSAP;
		}
		set
		{
			if(_IsSAP != value)
			{
				OnIsSAPChanging(value);
				_IsSAP = value;
				OnIsSAPChanged();
			}
		}
	}
	private bool _IsSAP;

	partial void OnIsSAPChanging(bool newValue);
	partial void OnIsSAPChanged();

    public bool IsApprover 
	{ 
		get
		{
			return _IsApprover;
		}
		set
		{
			if(_IsApprover != value)
			{
				OnIsApproverChanging(value);
				_IsApprover = value;
				OnIsApproverChanged();
			}
		}
	}
	private bool _IsApprover;

	partial void OnIsApproverChanging(bool newValue);
	partial void OnIsApproverChanged();

    public bool IsAdmin 
	{ 
		get
		{
			return _IsAdmin;
		}
		set
		{
			if(_IsAdmin != value)
			{
				OnIsAdminChanging(value);
				_IsAdmin = value;
				OnIsAdminChanged();
			}
		}
	}
	private bool _IsAdmin;

	partial void OnIsAdminChanging(bool newValue);
	partial void OnIsAdminChanged();

    public string Institute 
	{ 
		get
		{
			return _Institute;
		}
		set
		{
			if(_Institute != value)
			{
				OnInstituteChanging(value);
				_Institute = value;
				OnInstituteChanged();
			}
		}
	}
	private string _Institute;

	partial void OnInstituteChanging(string newValue);
	partial void OnInstituteChanged();

    public string Certificate 
	{ 
		get
		{
			return _Certificate;
		}
		set
		{
			if(_Certificate != value)
			{
				OnCertificateChanging(value);
				_Certificate = value;
				OnCertificateChanged();
			}
		}
	}
	private string _Certificate;

	partial void OnCertificateChanging(string newValue);
	partial void OnCertificateChanged();

    public bool IsDMS 
	{ 
		get
		{
			return _IsDMS;
		}
		set
		{
			if(_IsDMS != value)
			{
				OnIsDMSChanging(value);
				_IsDMS = value;
				OnIsDMSChanged();
			}
		}
	}
	private bool _IsDMS;

	partial void OnIsDMSChanging(bool newValue);
	partial void OnIsDMSChanged();

    public string HeadQuarter 
	{ 
		get
		{
			return _HeadQuarter;
		}
		set
		{
			if(_HeadQuarter != value)
			{
				OnHeadQuarterChanging(value);
				_HeadQuarter = value;
				OnHeadQuarterChanged();
			}
		}
	}
	private string _HeadQuarter;

	partial void OnHeadQuarterChanging(string newValue);
	partial void OnHeadQuarterChanged();

    public Nullable<decimal> HomeDistance 
	{ 
		get
		{
			return _HomeDistance;
		}
		set
		{
			if(_HomeDistance != value)
			{
				OnHomeDistanceChanging(value);
				_HomeDistance = value;
				OnHomeDistanceChanged();
			}
		}
	}
	private Nullable<decimal> _HomeDistance;

	partial void OnHomeDistanceChanging(Nullable<decimal> newValue);
	partial void OnHomeDistanceChanged();

    public bool SAPActive 
	{ 
		get
		{
			return _SAPActive;
		}
		set
		{
			if(_SAPActive != value)
			{
				OnSAPActiveChanging(value);
				_SAPActive = value;
				OnSAPActiveChanged();
			}
		}
	}
	private bool _SAPActive;

	partial void OnSAPActiveChanging(bool newValue);
	partial void OnSAPActiveChanged();

    public Nullable<int> StartDay 
	{ 
		get
		{
			return _StartDay;
		}
		set
		{
			if(_StartDay != value)
			{
				OnStartDayChanging(value);
				_StartDay = value;
				OnStartDayChanged();
			}
		}
	}
	private Nullable<int> _StartDay;

	partial void OnStartDayChanging(Nullable<int> newValue);
	partial void OnStartDayChanged();

    public Nullable<int> FieldStaffManagerID 
	{ 
		get
		{
			return _FieldStaffManagerID;
		}
		set
		{
			if(_FieldStaffManagerID != value)
			{
				OnFieldStaffManagerIDChanging(value);
				_FieldStaffManagerID = value;
				OnFieldStaffManagerIDChanged();
			}
		}
	}
	private Nullable<int> _FieldStaffManagerID;

	partial void OnFieldStaffManagerIDChanging(Nullable<int> newValue);
	partial void OnFieldStaffManagerIDChanged();

    public string UserType 
	{ 
		get
		{
			return _UserType;
		}
		set
		{
			if(_UserType != value)
			{
				OnUserTypeChanging(value);
				_UserType = value;
				OnUserTypeChanged();
			}
		}
	}
	private string _UserType;

	partial void OnUserTypeChanging(string newValue);
	partial void OnUserTypeChanged();

    public string EmpType 
	{ 
		get
		{
			return _EmpType;
		}
		set
		{
			if(_EmpType != value)
			{
				OnEmpTypeChanging(value);
				_EmpType = value;
				OnEmpTypeChanged();
			}
		}
	}
	private string _EmpType;

	partial void OnEmpTypeChanging(string newValue);
	partial void OnEmpTypeChanged();

    public virtual CRD1 CRD1 { get; set; }
    public virtual ICollection<OEML> OEMLs { get; set; }
    public virtual OGRP OGRP { get; set; }
    public virtual OQU OQU { get; set; }
    public virtual ICollection<OPOS> OPOS { get; set; }
    public virtual ICollection<HELP> HELPs { get; set; }
    public virtual ICollection<EMP1> EMP1 { get; set; }
    public virtual ICollection<EML1> EML1 { get; set; }
    public virtual ICollection<OCFB> OCFBs { get; set; }
    public virtual OCRD OCRD { get; set; }
    public virtual ICollection<OENT> OENTs { get; set; }
    public virtual ICollection<ORDR> ORDRs { get; set; }
    public virtual ICollection<RDR1> RDR1 { get; set; }
    public virtual ICollection<OAAP> OAAPs { get; set; }
    public virtual ICollection<OARQ> OARQs { get; set; }
    public virtual ICollection<OERQ> OERQs { get; set; }
    public virtual ICollection<OLVAP> OLVAPs { get; set; }
    public virtual ICollection<OLVBL> OLVBLs { get; set; }
    public virtual ICollection<HRY1> HRY1 { get; set; }
    public virtual ICollection<OESM> OESMs { get; set; }
    public virtual ICollection<OELM> OELMs { get; set; }
    public virtual ICollection<OGCM> OGCMs { get; set; }
    public virtual ICollection<OGP> OGPS { get; set; }
    public virtual ICollection<OMDAP> OMDAPs { get; set; }
    public virtual ICollection<OMDRQ> OMDRQs { get; set; }
    public virtual ICollection<OTRG> OTRGs { get; set; }
    public virtual ICollection<POS1> POS1 { get; set; }
    public virtual ICollection<OCRUT> OCRUTs { get; set; }
    public virtual ICollection<ORUT> ORUTs { get; set; }
    public virtual ICollection<ORUT> ORUTs1 { get; set; }
}

[Serializable]
public partial class OENT : ObjectWithState
{
    public OENT() 
    { 
        this.ENT1 = new HashSet<ENT1>();
    }


    public int EntryID 
	{ 
		get
		{
			return _EntryID;
		}
		set
		{
			if(_EntryID != value)
			{
				OnEntryIDChanging(value);
				_EntryID = value;
				OnEntryIDChanged();
			}
		}
	}
	private int _EntryID;

	partial void OnEntryIDChanging(int newValue);
	partial void OnEntryIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public System.DateTime InDate 
	{ 
		get
		{
			return _InDate;
		}
		set
		{
			if(_InDate != value)
			{
				OnInDateChanging(value);
				_InDate = value;
				OnInDateChanged();
			}
		}
	}
	private System.DateTime _InDate;

	partial void OnInDateChanging(System.DateTime newValue);
	partial void OnInDateChanged();

    public string InLat 
	{ 
		get
		{
			return _InLat;
		}
		set
		{
			if(_InLat != value)
			{
				OnInLatChanging(value);
				_InLat = value;
				OnInLatChanged();
			}
		}
	}
	private string _InLat;

	partial void OnInLatChanging(string newValue);
	partial void OnInLatChanged();

    public string InLong 
	{ 
		get
		{
			return _InLong;
		}
		set
		{
			if(_InLong != value)
			{
				OnInLongChanging(value);
				_InLong = value;
				OnInLongChanged();
			}
		}
	}
	private string _InLong;

	partial void OnInLongChanging(string newValue);
	partial void OnInLongChanged();

    public bool InCity 
	{ 
		get
		{
			return _InCity;
		}
		set
		{
			if(_InCity != value)
			{
				OnInCityChanging(value);
				_InCity = value;
				OnInCityChanged();
			}
		}
	}
	private bool _InCity;

	partial void OnInCityChanging(bool newValue);
	partial void OnInCityChanged();

    public string InCItyName 
	{ 
		get
		{
			return _InCItyName;
		}
		set
		{
			if(_InCItyName != value)
			{
				OnInCItyNameChanging(value);
				_InCItyName = value;
				OnInCItyNameChanged();
			}
		}
	}
	private string _InCItyName;

	partial void OnInCItyNameChanging(string newValue);
	partial void OnInCItyNameChanged();

    public Nullable<System.DateTime> OutDate 
	{ 
		get
		{
			return _OutDate;
		}
		set
		{
			if(_OutDate != value)
			{
				OnOutDateChanging(value);
				_OutDate = value;
				OnOutDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _OutDate;

	partial void OnOutDateChanging(Nullable<System.DateTime> newValue);
	partial void OnOutDateChanged();

    public string OutLat 
	{ 
		get
		{
			return _OutLat;
		}
		set
		{
			if(_OutLat != value)
			{
				OnOutLatChanging(value);
				_OutLat = value;
				OnOutLatChanged();
			}
		}
	}
	private string _OutLat;

	partial void OnOutLatChanging(string newValue);
	partial void OnOutLatChanged();

    public string OutLong 
	{ 
		get
		{
			return _OutLong;
		}
		set
		{
			if(_OutLong != value)
			{
				OnOutLongChanging(value);
				_OutLong = value;
				OnOutLongChanged();
			}
		}
	}
	private string _OutLong;

	partial void OnOutLongChanging(string newValue);
	partial void OnOutLongChanged();

    public Nullable<bool> OutCity 
	{ 
		get
		{
			return _OutCity;
		}
		set
		{
			if(_OutCity != value)
			{
				OnOutCityChanging(value);
				_OutCity = value;
				OnOutCityChanged();
			}
		}
	}
	private Nullable<bool> _OutCity;

	partial void OnOutCityChanging(Nullable<bool> newValue);
	partial void OnOutCityChanged();

    public string OutCItyName 
	{ 
		get
		{
			return _OutCItyName;
		}
		set
		{
			if(_OutCItyName != value)
			{
				OnOutCItyNameChanging(value);
				_OutCItyName = value;
				OnOutCItyNameChanged();
			}
		}
	}
	private string _OutCItyName;

	partial void OnOutCItyNameChanging(string newValue);
	partial void OnOutCItyNameChanged();

    public string DeviceID 
	{ 
		get
		{
			return _DeviceID;
		}
		set
		{
			if(_DeviceID != value)
			{
				OnDeviceIDChanging(value);
				_DeviceID = value;
				OnDeviceIDChanged();
			}
		}
	}
	private string _DeviceID;

	partial void OnDeviceIDChanging(string newValue);
	partial void OnDeviceIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public string InAccuracy 
	{ 
		get
		{
			return _InAccuracy;
		}
		set
		{
			if(_InAccuracy != value)
			{
				OnInAccuracyChanging(value);
				_InAccuracy = value;
				OnInAccuracyChanged();
			}
		}
	}
	private string _InAccuracy;

	partial void OnInAccuracyChanging(string newValue);
	partial void OnInAccuracyChanged();

    public string OutAccuracy 
	{ 
		get
		{
			return _OutAccuracy;
		}
		set
		{
			if(_OutAccuracy != value)
			{
				OnOutAccuracyChanging(value);
				_OutAccuracy = value;
				OnOutAccuracyChanged();
			}
		}
	}
	private string _OutAccuracy;

	partial void OnOutAccuracyChanging(string newValue);
	partial void OnOutAccuracyChanged();

    public Nullable<decimal> InDistance 
	{ 
		get
		{
			return _InDistance;
		}
		set
		{
			if(_InDistance != value)
			{
				OnInDistanceChanging(value);
				_InDistance = value;
				OnInDistanceChanged();
			}
		}
	}
	private Nullable<decimal> _InDistance;

	partial void OnInDistanceChanging(Nullable<decimal> newValue);
	partial void OnInDistanceChanged();

    public Nullable<decimal> OutDistance 
	{ 
		get
		{
			return _OutDistance;
		}
		set
		{
			if(_OutDistance != value)
			{
				OnOutDistanceChanging(value);
				_OutDistance = value;
				OnOutDistanceChanged();
			}
		}
	}
	private Nullable<decimal> _OutDistance;

	partial void OnOutDistanceChanging(Nullable<decimal> newValue);
	partial void OnOutDistanceChanged();

    public string StartLocation 
	{ 
		get
		{
			return _StartLocation;
		}
		set
		{
			if(_StartLocation != value)
			{
				OnStartLocationChanging(value);
				_StartLocation = value;
				OnStartLocationChanged();
			}
		}
	}
	private string _StartLocation;

	partial void OnStartLocationChanging(string newValue);
	partial void OnStartLocationChanged();

    public string EndLocation 
	{ 
		get
		{
			return _EndLocation;
		}
		set
		{
			if(_EndLocation != value)
			{
				OnEndLocationChanging(value);
				_EndLocation = value;
				OnEndLocationChanged();
			}
		}
	}
	private string _EndLocation;

	partial void OnEndLocationChanging(string newValue);
	partial void OnEndLocationChanged();

    public string Location 
	{ 
		get
		{
			return _Location;
		}
		set
		{
			if(_Location != value)
			{
				OnLocationChanging(value);
				_Location = value;
				OnLocationChanged();
			}
		}
	}
	private string _Location;

	partial void OnLocationChanging(string newValue);
	partial void OnLocationChanged();

    public virtual OEMP OEMP { get; set; }
    public virtual ICollection<ENT1> ENT1 { get; set; }
}

[Serializable]
public partial class OEOD : ObjectWithState
{
    public OEOD() 
    { 
        this.EOD1 = new HashSet<EOD1>();
        this.EOD2 = new HashSet<EOD2>();
        this.EOD3 = new HashSet<EOD3>();
        this.EOD4 = new HashSet<EOD4>();
    }


    public int DayCloseID 
	{ 
		get
		{
			return _DayCloseID;
		}
		set
		{
			if(_DayCloseID != value)
			{
				OnDayCloseIDChanging(value);
				_DayCloseID = value;
				OnDayCloseIDChanged();
			}
		}
	}
	private int _DayCloseID;

	partial void OnDayCloseIDChanging(int newValue);
	partial void OnDayCloseIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public System.DateTime Date 
	{ 
		get
		{
			return _Date;
		}
		set
		{
			if(_Date != value)
			{
				OnDateChanging(value);
				_Date = value;
				OnDateChanged();
			}
		}
	}
	private System.DateTime _Date;

	partial void OnDateChanging(System.DateTime newValue);
	partial void OnDateChanged();

    public decimal Opening 
	{ 
		get
		{
			return _Opening;
		}
		set
		{
			if(_Opening != value)
			{
				OnOpeningChanging(value);
				_Opening = value;
				OnOpeningChanged();
			}
		}
	}
	private decimal _Opening;

	partial void OnOpeningChanging(decimal newValue);
	partial void OnOpeningChanged();

    public decimal Inward 
	{ 
		get
		{
			return _Inward;
		}
		set
		{
			if(_Inward != value)
			{
				OnInwardChanging(value);
				_Inward = value;
				OnInwardChanged();
			}
		}
	}
	private decimal _Inward;

	partial void OnInwardChanging(decimal newValue);
	partial void OnInwardChanged();

    public decimal Dispatch 
	{ 
		get
		{
			return _Dispatch;
		}
		set
		{
			if(_Dispatch != value)
			{
				OnDispatchChanging(value);
				_Dispatch = value;
				OnDispatchChanged();
			}
		}
	}
	private decimal _Dispatch;

	partial void OnDispatchChanging(decimal newValue);
	partial void OnDispatchChanged();

    public decimal Transfer 
	{ 
		get
		{
			return _Transfer;
		}
		set
		{
			if(_Transfer != value)
			{
				OnTransferChanging(value);
				_Transfer = value;
				OnTransferChanged();
			}
		}
	}
	private decimal _Transfer;

	partial void OnTransferChanging(decimal newValue);
	partial void OnTransferChanged();

    public decimal Consume 
	{ 
		get
		{
			return _Consume;
		}
		set
		{
			if(_Consume != value)
			{
				OnConsumeChanging(value);
				_Consume = value;
				OnConsumeChanged();
			}
		}
	}
	private decimal _Consume;

	partial void OnConsumeChanging(decimal newValue);
	partial void OnConsumeChanged();

    public decimal RetailSales 
	{ 
		get
		{
			return _RetailSales;
		}
		set
		{
			if(_RetailSales != value)
			{
				OnRetailSalesChanging(value);
				_RetailSales = value;
				OnRetailSalesChanged();
			}
		}
	}
	private decimal _RetailSales;

	partial void OnRetailSalesChanging(decimal newValue);
	partial void OnRetailSalesChanged();

    public decimal WholeSales 
	{ 
		get
		{
			return _WholeSales;
		}
		set
		{
			if(_WholeSales != value)
			{
				OnWholeSalesChanging(value);
				_WholeSales = value;
				OnWholeSalesChanged();
			}
		}
	}
	private decimal _WholeSales;

	partial void OnWholeSalesChanging(decimal newValue);
	partial void OnWholeSalesChanged();

    public decimal Wastage 
	{ 
		get
		{
			return _Wastage;
		}
		set
		{
			if(_Wastage != value)
			{
				OnWastageChanging(value);
				_Wastage = value;
				OnWastageChanged();
			}
		}
	}
	private decimal _Wastage;

	partial void OnWastageChanging(decimal newValue);
	partial void OnWastageChanged();

    public decimal Closing 
	{ 
		get
		{
			return _Closing;
		}
		set
		{
			if(_Closing != value)
			{
				OnClosingChanging(value);
				_Closing = value;
				OnClosingChanged();
			}
		}
	}
	private decimal _Closing;

	partial void OnClosingChanging(decimal newValue);
	partial void OnClosingChanged();

    public decimal OtherSale 
	{ 
		get
		{
			return _OtherSale;
		}
		set
		{
			if(_OtherSale != value)
			{
				OnOtherSaleChanging(value);
				_OtherSale = value;
				OnOtherSaleChanged();
			}
		}
	}
	private decimal _OtherSale;

	partial void OnOtherSaleChanging(decimal newValue);
	partial void OnOtherSaleChanged();

    public decimal GodownSale 
	{ 
		get
		{
			return _GodownSale;
		}
		set
		{
			if(_GodownSale != value)
			{
				OnGodownSaleChanging(value);
				_GodownSale = value;
				OnGodownSaleChanged();
			}
		}
	}
	private decimal _GodownSale;

	partial void OnGodownSaleChanging(decimal newValue);
	partial void OnGodownSaleChanged();

    public decimal PettyCash 
	{ 
		get
		{
			return _PettyCash;
		}
		set
		{
			if(_PettyCash != value)
			{
				OnPettyCashChanging(value);
				_PettyCash = value;
				OnPettyCashChanged();
			}
		}
	}
	private decimal _PettyCash;

	partial void OnPettyCashChanging(decimal newValue);
	partial void OnPettyCashChanged();

    public decimal PaidAmount 
	{ 
		get
		{
			return _PaidAmount;
		}
		set
		{
			if(_PaidAmount != value)
			{
				OnPaidAmountChanging(value);
				_PaidAmount = value;
				OnPaidAmountChanged();
			}
		}
	}
	private decimal _PaidAmount;

	partial void OnPaidAmountChanging(decimal newValue);
	partial void OnPaidAmountChanged();

    public decimal UnPaidAmount 
	{ 
		get
		{
			return _UnPaidAmount;
		}
		set
		{
			if(_UnPaidAmount != value)
			{
				OnUnPaidAmountChanging(value);
				_UnPaidAmount = value;
				OnUnPaidAmountChanged();
			}
		}
	}
	private decimal _UnPaidAmount;

	partial void OnUnPaidAmountChanging(decimal newValue);
	partial void OnUnPaidAmountChanged();

    public decimal MiscExpense 
	{ 
		get
		{
			return _MiscExpense;
		}
		set
		{
			if(_MiscExpense != value)
			{
				OnMiscExpenseChanging(value);
				_MiscExpense = value;
				OnMiscExpenseChanged();
			}
		}
	}
	private decimal _MiscExpense;

	partial void OnMiscExpenseChanging(decimal newValue);
	partial void OnMiscExpenseChanged();

    public decimal Advance 
	{ 
		get
		{
			return _Advance;
		}
		set
		{
			if(_Advance != value)
			{
				OnAdvanceChanging(value);
				_Advance = value;
				OnAdvanceChanged();
			}
		}
	}
	private decimal _Advance;

	partial void OnAdvanceChanging(decimal newValue);
	partial void OnAdvanceChanged();

    public bool IsConfirm 
	{ 
		get
		{
			return _IsConfirm;
		}
		set
		{
			if(_IsConfirm != value)
			{
				OnIsConfirmChanging(value);
				_IsConfirm = value;
				OnIsConfirmChanged();
			}
		}
	}
	private bool _IsConfirm;

	partial void OnIsConfirmChanging(bool newValue);
	partial void OnIsConfirmChanged();

    public decimal ReturnQty 
	{ 
		get
		{
			return _ReturnQty;
		}
		set
		{
			if(_ReturnQty != value)
			{
				OnReturnQtyChanging(value);
				_ReturnQty = value;
				OnReturnQtyChanged();
			}
		}
	}
	private decimal _ReturnQty;

	partial void OnReturnQtyChanging(decimal newValue);
	partial void OnReturnQtyChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string Ref1 
	{ 
		get
		{
			return _Ref1;
		}
		set
		{
			if(_Ref1 != value)
			{
				OnRef1Changing(value);
				_Ref1 = value;
				OnRef1Changed();
			}
		}
	}
	private string _Ref1;

	partial void OnRef1Changing(string newValue);
	partial void OnRef1Changed();

    public string ErrMsg 
	{ 
		get
		{
			return _ErrMsg;
		}
		set
		{
			if(_ErrMsg != value)
			{
				OnErrMsgChanging(value);
				_ErrMsg = value;
				OnErrMsgChanged();
			}
		}
	}
	private string _ErrMsg;

	partial void OnErrMsgChanging(string newValue);
	partial void OnErrMsgChanged();

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public Nullable<decimal> HandoverAmount 
	{ 
		get
		{
			return _HandoverAmount;
		}
		set
		{
			if(_HandoverAmount != value)
			{
				OnHandoverAmountChanging(value);
				_HandoverAmount = value;
				OnHandoverAmountChanged();
			}
		}
	}
	private Nullable<decimal> _HandoverAmount;

	partial void OnHandoverAmountChanging(Nullable<decimal> newValue);
	partial void OnHandoverAmountChanged();

    public Nullable<int> HandoverTo 
	{ 
		get
		{
			return _HandoverTo;
		}
		set
		{
			if(_HandoverTo != value)
			{
				OnHandoverToChanging(value);
				_HandoverTo = value;
				OnHandoverToChanged();
			}
		}
	}
	private Nullable<int> _HandoverTo;

	partial void OnHandoverToChanging(Nullable<int> newValue);
	partial void OnHandoverToChanged();

    public decimal OtherSales 
	{ 
		get
		{
			return _OtherSales;
		}
		set
		{
			if(_OtherSales != value)
			{
				OnOtherSalesChanging(value);
				_OtherSales = value;
				OnOtherSalesChanged();
			}
		}
	}
	private decimal _OtherSales;

	partial void OnOtherSalesChanging(decimal newValue);
	partial void OnOtherSalesChanged();

    public decimal PPayment 
	{ 
		get
		{
			return _PPayment;
		}
		set
		{
			if(_PPayment != value)
			{
				OnPPaymentChanging(value);
				_PPayment = value;
				OnPPaymentChanged();
			}
		}
	}
	private decimal _PPayment;

	partial void OnPPaymentChanging(decimal newValue);
	partial void OnPPaymentChanged();

    public decimal SaleRturn 
	{ 
		get
		{
			return _SaleRturn;
		}
		set
		{
			if(_SaleRturn != value)
			{
				OnSaleRturnChanging(value);
				_SaleRturn = value;
				OnSaleRturnChanged();
			}
		}
	}
	private decimal _SaleRturn;

	partial void OnSaleRturnChanging(decimal newValue);
	partial void OnSaleRturnChanged();

    public decimal OtherClosing 
	{ 
		get
		{
			return _OtherClosing;
		}
		set
		{
			if(_OtherClosing != value)
			{
				OnOtherClosingChanging(value);
				_OtherClosing = value;
				OnOtherClosingChanged();
			}
		}
	}
	private decimal _OtherClosing;

	partial void OnOtherClosingChanging(decimal newValue);
	partial void OnOtherClosingChanged();

    public virtual ICollection<EOD1> EOD1 { get; set; }
    public virtual ICollection<EOD2> EOD2 { get; set; }
    public virtual ICollection<EOD3> EOD3 { get; set; }
    public virtual ICollection<EOD4> EOD4 { get; set; }
}

[Serializable]
public partial class OEREM : ObjectWithState
{

    public int OERId 
	{ 
		get
		{
			return _OERId;
		}
		set
		{
			if(_OERId != value)
			{
				OnOERIdChanging(value);
				_OERId = value;
				OnOERIdChanged();
			}
		}
	}
	private int _OERId;

	partial void OnOERIdChanging(int newValue);
	partial void OnOERIdChanged();

    public Nullable<int> Refid 
	{ 
		get
		{
			return _Refid;
		}
		set
		{
			if(_Refid != value)
			{
				OnRefidChanging(value);
				_Refid = value;
				OnRefidChanged();
			}
		}
	}
	private Nullable<int> _Refid;

	partial void OnRefidChanging(Nullable<int> newValue);
	partial void OnRefidChanged();

    public string Remarks1 
	{ 
		get
		{
			return _Remarks1;
		}
		set
		{
			if(_Remarks1 != value)
			{
				OnRemarks1Changing(value);
				_Remarks1 = value;
				OnRemarks1Changed();
			}
		}
	}
	private string _Remarks1;

	partial void OnRemarks1Changing(string newValue);
	partial void OnRemarks1Changed();

    public string Remarks2 
	{ 
		get
		{
			return _Remarks2;
		}
		set
		{
			if(_Remarks2 != value)
			{
				OnRemarks2Changing(value);
				_Remarks2 = value;
				OnRemarks2Changed();
			}
		}
	}
	private string _Remarks2;

	partial void OnRemarks2Changing(string newValue);
	partial void OnRemarks2Changed();

    public string Remarks3 
	{ 
		get
		{
			return _Remarks3;
		}
		set
		{
			if(_Remarks3 != value)
			{
				OnRemarks3Changing(value);
				_Remarks3 = value;
				OnRemarks3Changed();
			}
		}
	}
	private string _Remarks3;

	partial void OnRemarks3Changing(string newValue);
	partial void OnRemarks3Changed();

    public Nullable<System.DateTime> FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _FromDate;

	partial void OnFromDateChanging(Nullable<System.DateTime> newValue);
	partial void OnFromDateChanged();

    public Nullable<System.DateTime> ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ToDate;

	partial void OnToDateChanging(Nullable<System.DateTime> newValue);
	partial void OnToDateChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public Nullable<bool> Deleted 
	{ 
		get
		{
			return _Deleted;
		}
		set
		{
			if(_Deleted != value)
			{
				OnDeletedChanging(value);
				_Deleted = value;
				OnDeletedChanged();
			}
		}
	}
	private Nullable<bool> _Deleted;

	partial void OnDeletedChanging(Nullable<bool> newValue);
	partial void OnDeletedChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();
}

[Serializable]
public partial class OERM : ObjectWithState
{

    public int OERMId 
	{ 
		get
		{
			return _OERMId;
		}
		set
		{
			if(_OERMId != value)
			{
				OnOERMIdChanging(value);
				_OERMId = value;
				OnOERMIdChanged();
			}
		}
	}
	private int _OERMId;

	partial void OnOERMIdChanging(int newValue);
	partial void OnOERMIdChanged();

    public Nullable<int> EmpId 
	{ 
		get
		{
			return _EmpId;
		}
		set
		{
			if(_EmpId != value)
			{
				OnEmpIdChanging(value);
				_EmpId = value;
				OnEmpIdChanged();
			}
		}
	}
	private Nullable<int> _EmpId;

	partial void OnEmpIdChanging(Nullable<int> newValue);
	partial void OnEmpIdChanged();

    public Nullable<int> ReasonId 
	{ 
		get
		{
			return _ReasonId;
		}
		set
		{
			if(_ReasonId != value)
			{
				OnReasonIdChanging(value);
				_ReasonId = value;
				OnReasonIdChanged();
			}
		}
	}
	private Nullable<int> _ReasonId;

	partial void OnReasonIdChanging(Nullable<int> newValue);
	partial void OnReasonIdChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public Nullable<bool> IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private Nullable<bool> _IsDeleted;

	partial void OnIsDeletedChanging(Nullable<bool> newValue);
	partial void OnIsDeletedChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<int> RegionId 
	{ 
		get
		{
			return _RegionId;
		}
		set
		{
			if(_RegionId != value)
			{
				OnRegionIdChanging(value);
				_RegionId = value;
				OnRegionIdChanged();
			}
		}
	}
	private Nullable<int> _RegionId;

	partial void OnRegionIdChanging(Nullable<int> newValue);
	partial void OnRegionIdChanged();

    public Nullable<int> FwdToEmpId 
	{ 
		get
		{
			return _FwdToEmpId;
		}
		set
		{
			if(_FwdToEmpId != value)
			{
				OnFwdToEmpIdChanging(value);
				_FwdToEmpId = value;
				OnFwdToEmpIdChanged();
			}
		}
	}
	private Nullable<int> _FwdToEmpId;

	partial void OnFwdToEmpIdChanging(Nullable<int> newValue);
	partial void OnFwdToEmpIdChanged();

    public Nullable<int> SubEmpId 
	{ 
		get
		{
			return _SubEmpId;
		}
		set
		{
			if(_SubEmpId != value)
			{
				OnSubEmpIdChanging(value);
				_SubEmpId = value;
				OnSubEmpIdChanged();
			}
		}
	}
	private Nullable<int> _SubEmpId;

	partial void OnSubEmpIdChanging(Nullable<int> newValue);
	partial void OnSubEmpIdChanged();

    public Nullable<int> OptionId 
	{ 
		get
		{
			return _OptionId;
		}
		set
		{
			if(_OptionId != value)
			{
				OnOptionIdChanging(value);
				_OptionId = value;
				OnOptionIdChanged();
			}
		}
	}
	private Nullable<int> _OptionId;

	partial void OnOptionIdChanging(Nullable<int> newValue);
	partial void OnOptionIdChanged();
}

[Serializable]
public partial class OERQ : ObjectWithState
{

    public int OERQID 
	{ 
		get
		{
			return _OERQID;
		}
		set
		{
			if(_OERQID != value)
			{
				OnOERQIDChanging(value);
				_OERQID = value;
				OnOERQIDChanged();
			}
		}
	}
	private int _OERQID;

	partial void OnOERQIDChanging(int newValue);
	partial void OnOERQIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> NextManagerID 
	{ 
		get
		{
			return _NextManagerID;
		}
		set
		{
			if(_NextManagerID != value)
			{
				OnNextManagerIDChanging(value);
				_NextManagerID = value;
				OnNextManagerIDChanged();
			}
		}
	}
	private Nullable<int> _NextManagerID;

	partial void OnNextManagerIDChanging(Nullable<int> newValue);
	partial void OnNextManagerIDChanged();

    public Nullable<int> OTRQID 
	{ 
		get
		{
			return _OTRQID;
		}
		set
		{
			if(_OTRQID != value)
			{
				OnOTRQIDChanging(value);
				_OTRQID = value;
				OnOTRQIDChanged();
			}
		}
	}
	private Nullable<int> _OTRQID;

	partial void OnOTRQIDChanging(Nullable<int> newValue);
	partial void OnOTRQIDChanged();

    public Nullable<int> OTAPID 
	{ 
		get
		{
			return _OTAPID;
		}
		set
		{
			if(_OTAPID != value)
			{
				OnOTAPIDChanging(value);
				_OTAPID = value;
				OnOTAPIDChanged();
			}
		}
	}
	private Nullable<int> _OTAPID;

	partial void OnOTAPIDChanging(Nullable<int> newValue);
	partial void OnOTAPIDChanged();

    public Nullable<int> BudgeterID 
	{ 
		get
		{
			return _BudgeterID;
		}
		set
		{
			if(_BudgeterID != value)
			{
				OnBudgeterIDChanging(value);
				_BudgeterID = value;
				OnBudgeterIDChanged();
			}
		}
	}
	private Nullable<int> _BudgeterID;

	partial void OnBudgeterIDChanging(Nullable<int> newValue);
	partial void OnBudgeterIDChanged();

    public System.DateTime FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private System.DateTime _FromDate;

	partial void OnFromDateChanging(System.DateTime newValue);
	partial void OnFromDateChanged();

    public System.TimeSpan FromTime 
	{ 
		get
		{
			return _FromTime;
		}
		set
		{
			if(_FromTime != value)
			{
				OnFromTimeChanging(value);
				_FromTime = value;
				OnFromTimeChanged();
			}
		}
	}
	private System.TimeSpan _FromTime;

	partial void OnFromTimeChanging(System.TimeSpan newValue);
	partial void OnFromTimeChanged();

    public System.DateTime ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private System.DateTime _ToDate;

	partial void OnToDateChanging(System.DateTime newValue);
	partial void OnToDateChanged();

    public System.TimeSpan ToTime 
	{ 
		get
		{
			return _ToTime;
		}
		set
		{
			if(_ToTime != value)
			{
				OnToTimeChanging(value);
				_ToTime = value;
				OnToTimeChanged();
			}
		}
	}
	private System.TimeSpan _ToTime;

	partial void OnToTimeChanging(System.TimeSpan newValue);
	partial void OnToTimeChanged();

    public int CountryID 
	{ 
		get
		{
			return _CountryID;
		}
		set
		{
			if(_CountryID != value)
			{
				OnCountryIDChanging(value);
				_CountryID = value;
				OnCountryIDChanged();
			}
		}
	}
	private int _CountryID;

	partial void OnCountryIDChanging(int newValue);
	partial void OnCountryIDChanged();

    public int StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private int _StateID;

	partial void OnStateIDChanging(int newValue);
	partial void OnStateIDChanged();

    public int CityID 
	{ 
		get
		{
			return _CityID;
		}
		set
		{
			if(_CityID != value)
			{
				OnCityIDChanging(value);
				_CityID = value;
				OnCityIDChanged();
			}
		}
	}
	private int _CityID;

	partial void OnCityIDChanging(int newValue);
	partial void OnCityIDChanged();

    public int ExpTypeID 
	{ 
		get
		{
			return _ExpTypeID;
		}
		set
		{
			if(_ExpTypeID != value)
			{
				OnExpTypeIDChanging(value);
				_ExpTypeID = value;
				OnExpTypeIDChanged();
			}
		}
	}
	private int _ExpTypeID;

	partial void OnExpTypeIDChanging(int newValue);
	partial void OnExpTypeIDChanged();

    public int ExpModeID 
	{ 
		get
		{
			return _ExpModeID;
		}
		set
		{
			if(_ExpModeID != value)
			{
				OnExpModeIDChanging(value);
				_ExpModeID = value;
				OnExpModeIDChanged();
			}
		}
	}
	private int _ExpModeID;

	partial void OnExpModeIDChanging(int newValue);
	partial void OnExpModeIDChanged();

    public decimal ExpAmount 
	{ 
		get
		{
			return _ExpAmount;
		}
		set
		{
			if(_ExpAmount != value)
			{
				OnExpAmountChanging(value);
				_ExpAmount = value;
				OnExpAmountChanged();
			}
		}
	}
	private decimal _ExpAmount;

	partial void OnExpAmountChanging(decimal newValue);
	partial void OnExpAmountChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public string Attachment 
	{ 
		get
		{
			return _Attachment;
		}
		set
		{
			if(_Attachment != value)
			{
				OnAttachmentChanging(value);
				_Attachment = value;
				OnAttachmentChanged();
			}
		}
	}
	private string _Attachment;

	partial void OnAttachmentChanging(string newValue);
	partial void OnAttachmentChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public System.DateTime ApplicationDate 
	{ 
		get
		{
			return _ApplicationDate;
		}
		set
		{
			if(_ApplicationDate != value)
			{
				OnApplicationDateChanging(value);
				_ApplicationDate = value;
				OnApplicationDateChanged();
			}
		}
	}
	private System.DateTime _ApplicationDate;

	partial void OnApplicationDateChanging(System.DateTime newValue);
	partial void OnApplicationDateChanged();

    public virtual OEMP OEMP { get; set; }
}

[Serializable]
public partial class OESM : ObjectWithState
{

    public int OESMID 
	{ 
		get
		{
			return _OESMID;
		}
		set
		{
			if(_OESMID != value)
			{
				OnOESMIDChanging(value);
				_OESMID = value;
				OnOESMIDChanged();
			}
		}
	}
	private int _OESMID;

	partial void OnOESMIDChanging(int newValue);
	partial void OnOESMIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private int _StateID;

	partial void OnStateIDChanging(int newValue);
	partial void OnStateIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDelete 
	{ 
		get
		{
			return _IsDelete;
		}
		set
		{
			if(_IsDelete != value)
			{
				OnIsDeleteChanging(value);
				_IsDelete = value;
				OnIsDeleteChanged();
			}
		}
	}
	private bool _IsDelete;

	partial void OnIsDeleteChanging(bool newValue);
	partial void OnIsDeleteChanged();

    public virtual OCST OCST { get; set; }
    public virtual OEMP OEMP { get; set; }
}

[Serializable]
public partial class OEUN : ObjectWithState
{

    public int ExpUnitID 
	{ 
		get
		{
			return _ExpUnitID;
		}
		set
		{
			if(_ExpUnitID != value)
			{
				OnExpUnitIDChanging(value);
				_ExpUnitID = value;
				OnExpUnitIDChanged();
			}
		}
	}
	private int _ExpUnitID;

	partial void OnExpUnitIDChanging(int newValue);
	partial void OnExpUnitIDChanged();

    public string Unit 
	{ 
		get
		{
			return _Unit;
		}
		set
		{
			if(_Unit != value)
			{
				OnUnitChanging(value);
				_Unit = value;
				OnUnitChanged();
			}
		}
	}
	private string _Unit;

	partial void OnUnitChanging(string newValue);
	partial void OnUnitChanged();

    public Nullable<int> ExpModeID 
	{ 
		get
		{
			return _ExpModeID;
		}
		set
		{
			if(_ExpModeID != value)
			{
				OnExpModeIDChanging(value);
				_ExpModeID = value;
				OnExpModeIDChanged();
			}
		}
	}
	private Nullable<int> _ExpModeID;

	partial void OnExpModeIDChanging(Nullable<int> newValue);
	partial void OnExpModeIDChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual OEXM OEXM { get; set; }
}

[Serializable]
public partial class OEXM : ObjectWithState
{
    public OEXM() 
    { 
        this.OARQs = new HashSet<OARQ>();
        this.SFC1 = new HashSet<SFC1>();
        this.OEUNs = new HashSet<OEUN>();
    }


    public int ExpModeID 
	{ 
		get
		{
			return _ExpModeID;
		}
		set
		{
			if(_ExpModeID != value)
			{
				OnExpModeIDChanging(value);
				_ExpModeID = value;
				OnExpModeIDChanged();
			}
		}
	}
	private int _ExpModeID;

	partial void OnExpModeIDChanging(int newValue);
	partial void OnExpModeIDChanged();

    public string ExpMode 
	{ 
		get
		{
			return _ExpMode;
		}
		set
		{
			if(_ExpMode != value)
			{
				OnExpModeChanging(value);
				_ExpMode = value;
				OnExpModeChanged();
			}
		}
	}
	private string _ExpMode;

	partial void OnExpModeChanging(string newValue);
	partial void OnExpModeChanged();

    public Nullable<int> ExpTypeID 
	{ 
		get
		{
			return _ExpTypeID;
		}
		set
		{
			if(_ExpTypeID != value)
			{
				OnExpTypeIDChanging(value);
				_ExpTypeID = value;
				OnExpTypeIDChanged();
			}
		}
	}
	private Nullable<int> _ExpTypeID;

	partial void OnExpTypeIDChanging(Nullable<int> newValue);
	partial void OnExpTypeIDChanged();

    public Nullable<int> EmpGradeID 
	{ 
		get
		{
			return _EmpGradeID;
		}
		set
		{
			if(_EmpGradeID != value)
			{
				OnEmpGradeIDChanging(value);
				_EmpGradeID = value;
				OnEmpGradeIDChanged();
			}
		}
	}
	private Nullable<int> _EmpGradeID;

	partial void OnEmpGradeIDChanging(Nullable<int> newValue);
	partial void OnEmpGradeIDChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual ICollection<OARQ> OARQs { get; set; }
    public virtual ICollection<SFC1> SFC1 { get; set; }
    public virtual OEXT OEXT { get; set; }
    public virtual OEEG OEEG { get; set; }
    public virtual ICollection<OEUN> OEUNs { get; set; }
}

[Serializable]
public partial class OEXP : ObjectWithState
{
    public OEXP() 
    { 
        this.EOD3 = new HashSet<EOD3>();
    }


    public int ExpenseID 
	{ 
		get
		{
			return _ExpenseID;
		}
		set
		{
			if(_ExpenseID != value)
			{
				OnExpenseIDChanging(value);
				_ExpenseID = value;
				OnExpenseIDChanged();
			}
		}
	}
	private int _ExpenseID;

	partial void OnExpenseIDChanging(int newValue);
	partial void OnExpenseIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string Name 
	{ 
		get
		{
			return _Name;
		}
		set
		{
			if(_Name != value)
			{
				OnNameChanging(value);
				_Name = value;
				OnNameChanged();
			}
		}
	}
	private string _Name;

	partial void OnNameChanging(string newValue);
	partial void OnNameChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<EOD3> EOD3 { get; set; }
}

[Serializable]
public partial class OEXT : ObjectWithState
{
    public OEXT() 
    { 
        this.OARQs = new HashSet<OARQ>();
        this.OEXMs = new HashSet<OEXM>();
        this.SFC1 = new HashSet<SFC1>();
    }


    public int ExpTypeID 
	{ 
		get
		{
			return _ExpTypeID;
		}
		set
		{
			if(_ExpTypeID != value)
			{
				OnExpTypeIDChanging(value);
				_ExpTypeID = value;
				OnExpTypeIDChanged();
			}
		}
	}
	private int _ExpTypeID;

	partial void OnExpTypeIDChanging(int newValue);
	partial void OnExpTypeIDChanged();

    public string ExpType 
	{ 
		get
		{
			return _ExpType;
		}
		set
		{
			if(_ExpType != value)
			{
				OnExpTypeChanging(value);
				_ExpType = value;
				OnExpTypeChanged();
			}
		}
	}
	private string _ExpType;

	partial void OnExpTypeChanging(string newValue);
	partial void OnExpTypeChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public string GLCode 
	{ 
		get
		{
			return _GLCode;
		}
		set
		{
			if(_GLCode != value)
			{
				OnGLCodeChanging(value);
				_GLCode = value;
				OnGLCodeChanged();
			}
		}
	}
	private string _GLCode;

	partial void OnGLCodeChanging(string newValue);
	partial void OnGLCodeChanged();

    public virtual ICollection<OARQ> OARQs { get; set; }
    public virtual ICollection<OEXM> OEXMs { get; set; }
    public virtual ICollection<SFC1> SFC1 { get; set; }
}

[Serializable]
public partial class OFBT : ObjectWithState
{
    public OFBT() 
    { 
        this.DFQUES = new HashSet<DFQUE>();
    }


    public int FeedbackTypeID 
	{ 
		get
		{
			return _FeedbackTypeID;
		}
		set
		{
			if(_FeedbackTypeID != value)
			{
				OnFeedbackTypeIDChanging(value);
				_FeedbackTypeID = value;
				OnFeedbackTypeIDChanged();
			}
		}
	}
	private int _FeedbackTypeID;

	partial void OnFeedbackTypeIDChanging(int newValue);
	partial void OnFeedbackTypeIDChanged();

    public Nullable<int> FeedbackCode 
	{ 
		get
		{
			return _FeedbackCode;
		}
		set
		{
			if(_FeedbackCode != value)
			{
				OnFeedbackCodeChanging(value);
				_FeedbackCode = value;
				OnFeedbackCodeChanged();
			}
		}
	}
	private Nullable<int> _FeedbackCode;

	partial void OnFeedbackCodeChanging(Nullable<int> newValue);
	partial void OnFeedbackCodeChanged();

    public string FeedbackName 
	{ 
		get
		{
			return _FeedbackName;
		}
		set
		{
			if(_FeedbackName != value)
			{
				OnFeedbackNameChanging(value);
				_FeedbackName = value;
				OnFeedbackNameChanged();
			}
		}
	}
	private string _FeedbackName;

	partial void OnFeedbackNameChanging(string newValue);
	partial void OnFeedbackNameChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual ICollection<DFQUE> DFQUES { get; set; }
}

[Serializable]
public partial class OFGT : ObjectWithState
{

    public int FreightID 
	{ 
		get
		{
			return _FreightID;
		}
		set
		{
			if(_FreightID != value)
			{
				OnFreightIDChanging(value);
				_FreightID = value;
				OnFreightIDChanged();
			}
		}
	}
	private int _FreightID;

	partial void OnFreightIDChanging(int newValue);
	partial void OnFreightIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public System.DateTime StartDate 
	{ 
		get
		{
			return _StartDate;
		}
		set
		{
			if(_StartDate != value)
			{
				OnStartDateChanging(value);
				_StartDate = value;
				OnStartDateChanged();
			}
		}
	}
	private System.DateTime _StartDate;

	partial void OnStartDateChanging(System.DateTime newValue);
	partial void OnStartDateChanged();

    public System.DateTime EndDate 
	{ 
		get
		{
			return _EndDate;
		}
		set
		{
			if(_EndDate != value)
			{
				OnEndDateChanging(value);
				_EndDate = value;
				OnEndDateChanged();
			}
		}
	}
	private System.DateTime _EndDate;

	partial void OnEndDateChanging(System.DateTime newValue);
	partial void OnEndDateChanged();

    public decimal Discount 
	{ 
		get
		{
			return _Discount;
		}
		set
		{
			if(_Discount != value)
			{
				OnDiscountChanging(value);
				_Discount = value;
				OnDiscountChanged();
			}
		}
	}
	private decimal _Discount;

	partial void OnDiscountChanging(decimal newValue);
	partial void OnDiscountChanged();

    public string DiscountType 
	{ 
		get
		{
			return _DiscountType;
		}
		set
		{
			if(_DiscountType != value)
			{
				OnDiscountTypeChanging(value);
				_DiscountType = value;
				OnDiscountTypeChanged();
			}
		}
	}
	private string _DiscountType;

	partial void OnDiscountTypeChanging(string newValue);
	partial void OnDiscountTypeChanged();

    public int DivisionID 
	{ 
		get
		{
			return _DivisionID;
		}
		set
		{
			if(_DivisionID != value)
			{
				OnDivisionIDChanging(value);
				_DivisionID = value;
				OnDivisionIDChanged();
			}
		}
	}
	private int _DivisionID;

	partial void OnDivisionIDChanging(int newValue);
	partial void OnDivisionIDChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public string SAPCREATEDBY 
	{ 
		get
		{
			return _SAPCREATEDBY;
		}
		set
		{
			if(_SAPCREATEDBY != value)
			{
				OnSAPCREATEDBYChanging(value);
				_SAPCREATEDBY = value;
				OnSAPCREATEDBYChanged();
			}
		}
	}
	private string _SAPCREATEDBY;

	partial void OnSAPCREATEDBYChanging(string newValue);
	partial void OnSAPCREATEDBYChanged();

    public Nullable<System.DateTime> SAPCREATEDDATE 
	{ 
		get
		{
			return _SAPCREATEDDATE;
		}
		set
		{
			if(_SAPCREATEDDATE != value)
			{
				OnSAPCREATEDDATEChanging(value);
				_SAPCREATEDDATE = value;
				OnSAPCREATEDDATEChanged();
			}
		}
	}
	private Nullable<System.DateTime> _SAPCREATEDDATE;

	partial void OnSAPCREATEDDATEChanging(Nullable<System.DateTime> newValue);
	partial void OnSAPCREATEDDATEChanged();

    public string SAPCHANGEBY 
	{ 
		get
		{
			return _SAPCHANGEBY;
		}
		set
		{
			if(_SAPCHANGEBY != value)
			{
				OnSAPCHANGEBYChanging(value);
				_SAPCHANGEBY = value;
				OnSAPCHANGEBYChanged();
			}
		}
	}
	private string _SAPCHANGEBY;

	partial void OnSAPCHANGEBYChanging(string newValue);
	partial void OnSAPCHANGEBYChanged();

    public Nullable<System.DateTime> SAPCHANGEDATE 
	{ 
		get
		{
			return _SAPCHANGEDATE;
		}
		set
		{
			if(_SAPCHANGEDATE != value)
			{
				OnSAPCHANGEDATEChanging(value);
				_SAPCHANGEDATE = value;
				OnSAPCHANGEDATEChanged();
			}
		}
	}
	private Nullable<System.DateTime> _SAPCHANGEDATE;

	partial void OnSAPCHANGEDATEChanging(Nullable<System.DateTime> newValue);
	partial void OnSAPCHANGEDATEChanged();

    public string SAPSYNCUSER 
	{ 
		get
		{
			return _SAPSYNCUSER;
		}
		set
		{
			if(_SAPSYNCUSER != value)
			{
				OnSAPSYNCUSERChanging(value);
				_SAPSYNCUSER = value;
				OnSAPSYNCUSERChanged();
			}
		}
	}
	private string _SAPSYNCUSER;

	partial void OnSAPSYNCUSERChanging(string newValue);
	partial void OnSAPSYNCUSERChanged();

    public Nullable<decimal> ParentCode 
	{ 
		get
		{
			return _ParentCode;
		}
		set
		{
			if(_ParentCode != value)
			{
				OnParentCodeChanging(value);
				_ParentCode = value;
				OnParentCodeChanged();
			}
		}
	}
	private Nullable<decimal> _ParentCode;

	partial void OnParentCodeChanging(Nullable<decimal> newValue);
	partial void OnParentCodeChanged();
}

[Serializable]
public partial class OFSSI : ObjectWithState
{

    public int OFSSIID 
	{ 
		get
		{
			return _OFSSIID;
		}
		set
		{
			if(_OFSSIID != value)
			{
				OnOFSSIIDChanging(value);
				_OFSSIID = value;
				OnOFSSIIDChanged();
			}
		}
	}
	private int _OFSSIID;

	partial void OnOFSSIIDChanging(int newValue);
	partial void OnOFSSIIDChanged();

    public int Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private int _Type;

	partial void OnTypeChanging(int newValue);
	partial void OnTypeChanged();

    public decimal FSSIForID 
	{ 
		get
		{
			return _FSSIForID;
		}
		set
		{
			if(_FSSIForID != value)
			{
				OnFSSIForIDChanging(value);
				_FSSIForID = value;
				OnFSSIForIDChanged();
			}
		}
	}
	private decimal _FSSIForID;

	partial void OnFSSIForIDChanging(decimal newValue);
	partial void OnFSSIForIDChanged();

    public string VehicleNumber 
	{ 
		get
		{
			return _VehicleNumber;
		}
		set
		{
			if(_VehicleNumber != value)
			{
				OnVehicleNumberChanging(value);
				_VehicleNumber = value;
				OnVehicleNumberChanged();
			}
		}
	}
	private string _VehicleNumber;

	partial void OnVehicleNumberChanging(string newValue);
	partial void OnVehicleNumberChanged();

    public Nullable<decimal> VehicleParentID 
	{ 
		get
		{
			return _VehicleParentID;
		}
		set
		{
			if(_VehicleParentID != value)
			{
				OnVehicleParentIDChanging(value);
				_VehicleParentID = value;
				OnVehicleParentIDChanged();
			}
		}
	}
	private Nullable<decimal> _VehicleParentID;

	partial void OnVehicleParentIDChanging(Nullable<decimal> newValue);
	partial void OnVehicleParentIDChanged();

    public string FSSINO 
	{ 
		get
		{
			return _FSSINO;
		}
		set
		{
			if(_FSSINO != value)
			{
				OnFSSINOChanging(value);
				_FSSINO = value;
				OnFSSINOChanged();
			}
		}
	}
	private string _FSSINO;

	partial void OnFSSINOChanging(string newValue);
	partial void OnFSSINOChanged();

    public System.DateTime StartDate 
	{ 
		get
		{
			return _StartDate;
		}
		set
		{
			if(_StartDate != value)
			{
				OnStartDateChanging(value);
				_StartDate = value;
				OnStartDateChanged();
			}
		}
	}
	private System.DateTime _StartDate;

	partial void OnStartDateChanging(System.DateTime newValue);
	partial void OnStartDateChanged();

    public System.DateTime EndDate 
	{ 
		get
		{
			return _EndDate;
		}
		set
		{
			if(_EndDate != value)
			{
				OnEndDateChanging(value);
				_EndDate = value;
				OnEndDateChanged();
			}
		}
	}
	private System.DateTime _EndDate;

	partial void OnEndDateChanging(System.DateTime newValue);
	partial void OnEndDateChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public string FSSAIImage 
	{ 
		get
		{
			return _FSSAIImage;
		}
		set
		{
			if(_FSSAIImage != value)
			{
				OnFSSAIImageChanging(value);
				_FSSAIImage = value;
				OnFSSAIImageChanged();
			}
		}
	}
	private string _FSSAIImage;

	partial void OnFSSAIImageChanging(string newValue);
	partial void OnFSSAIImageChanged();

    public Nullable<bool> IsVerify 
	{ 
		get
		{
			return _IsVerify;
		}
		set
		{
			if(_IsVerify != value)
			{
				OnIsVerifyChanging(value);
				_IsVerify = value;
				OnIsVerifyChanged();
			}
		}
	}
	private Nullable<bool> _IsVerify;

	partial void OnIsVerifyChanging(Nullable<bool> newValue);
	partial void OnIsVerifyChanged();

    public Nullable<int> VerifyBy 
	{ 
		get
		{
			return _VerifyBy;
		}
		set
		{
			if(_VerifyBy != value)
			{
				OnVerifyByChanging(value);
				_VerifyBy = value;
				OnVerifyByChanged();
			}
		}
	}
	private Nullable<int> _VerifyBy;

	partial void OnVerifyByChanging(Nullable<int> newValue);
	partial void OnVerifyByChanged();

    public Nullable<System.DateTime> VerifyDateTime 
	{ 
		get
		{
			return _VerifyDateTime;
		}
		set
		{
			if(_VerifyDateTime != value)
			{
				OnVerifyDateTimeChanging(value);
				_VerifyDateTime = value;
				OnVerifyDateTimeChanged();
			}
		}
	}
	private Nullable<System.DateTime> _VerifyDateTime;

	partial void OnVerifyDateTimeChanging(Nullable<System.DateTime> newValue);
	partial void OnVerifyDateTimeChanged();

    public string Imagebase64 
	{ 
		get
		{
			return _Imagebase64;
		}
		set
		{
			if(_Imagebase64 != value)
			{
				OnImagebase64Changing(value);
				_Imagebase64 = value;
				OnImagebase64Changed();
			}
		}
	}
	private string _Imagebase64;

	partial void OnImagebase64Changing(string newValue);
	partial void OnImagebase64Changed();

    public Nullable<int> FwdTo 
	{ 
		get
		{
			return _FwdTo;
		}
		set
		{
			if(_FwdTo != value)
			{
				OnFwdToChanging(value);
				_FwdTo = value;
				OnFwdToChanged();
			}
		}
	}
	private Nullable<int> _FwdTo;

	partial void OnFwdToChanging(Nullable<int> newValue);
	partial void OnFwdToChanged();

    public Nullable<int> VerifyIs 
	{ 
		get
		{
			return _VerifyIs;
		}
		set
		{
			if(_VerifyIs != value)
			{
				OnVerifyIsChanging(value);
				_VerifyIs = value;
				OnVerifyIsChanged();
			}
		}
	}
	private Nullable<int> _VerifyIs;

	partial void OnVerifyIsChanging(Nullable<int> newValue);
	partial void OnVerifyIsChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();
}

[Serializable]
public partial class OFSSILOG : ObjectWithState
{

    public int OFSSIIDLOGID 
	{ 
		get
		{
			return _OFSSIIDLOGID;
		}
		set
		{
			if(_OFSSIIDLOGID != value)
			{
				OnOFSSIIDLOGIDChanging(value);
				_OFSSIIDLOGID = value;
				OnOFSSIIDLOGIDChanged();
			}
		}
	}
	private int _OFSSIIDLOGID;

	partial void OnOFSSIIDLOGIDChanging(int newValue);
	partial void OnOFSSIIDLOGIDChanged();

    public int OFSSIID 
	{ 
		get
		{
			return _OFSSIID;
		}
		set
		{
			if(_OFSSIID != value)
			{
				OnOFSSIIDChanging(value);
				_OFSSIID = value;
				OnOFSSIIDChanged();
			}
		}
	}
	private int _OFSSIID;

	partial void OnOFSSIIDChanging(int newValue);
	partial void OnOFSSIIDChanged();

    public int Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private int _Type;

	partial void OnTypeChanging(int newValue);
	partial void OnTypeChanged();

    public decimal FSSIForID 
	{ 
		get
		{
			return _FSSIForID;
		}
		set
		{
			if(_FSSIForID != value)
			{
				OnFSSIForIDChanging(value);
				_FSSIForID = value;
				OnFSSIForIDChanged();
			}
		}
	}
	private decimal _FSSIForID;

	partial void OnFSSIForIDChanging(decimal newValue);
	partial void OnFSSIForIDChanged();

    public string VehicleNumber 
	{ 
		get
		{
			return _VehicleNumber;
		}
		set
		{
			if(_VehicleNumber != value)
			{
				OnVehicleNumberChanging(value);
				_VehicleNumber = value;
				OnVehicleNumberChanged();
			}
		}
	}
	private string _VehicleNumber;

	partial void OnVehicleNumberChanging(string newValue);
	partial void OnVehicleNumberChanged();

    public Nullable<decimal> VehicleParentID 
	{ 
		get
		{
			return _VehicleParentID;
		}
		set
		{
			if(_VehicleParentID != value)
			{
				OnVehicleParentIDChanging(value);
				_VehicleParentID = value;
				OnVehicleParentIDChanged();
			}
		}
	}
	private Nullable<decimal> _VehicleParentID;

	partial void OnVehicleParentIDChanging(Nullable<decimal> newValue);
	partial void OnVehicleParentIDChanged();

    public string FSSINO 
	{ 
		get
		{
			return _FSSINO;
		}
		set
		{
			if(_FSSINO != value)
			{
				OnFSSINOChanging(value);
				_FSSINO = value;
				OnFSSINOChanged();
			}
		}
	}
	private string _FSSINO;

	partial void OnFSSINOChanging(string newValue);
	partial void OnFSSINOChanged();

    public System.DateTime StartDate 
	{ 
		get
		{
			return _StartDate;
		}
		set
		{
			if(_StartDate != value)
			{
				OnStartDateChanging(value);
				_StartDate = value;
				OnStartDateChanged();
			}
		}
	}
	private System.DateTime _StartDate;

	partial void OnStartDateChanging(System.DateTime newValue);
	partial void OnStartDateChanged();

    public System.DateTime EndDate 
	{ 
		get
		{
			return _EndDate;
		}
		set
		{
			if(_EndDate != value)
			{
				OnEndDateChanging(value);
				_EndDate = value;
				OnEndDateChanged();
			}
		}
	}
	private System.DateTime _EndDate;

	partial void OnEndDateChanging(System.DateTime newValue);
	partial void OnEndDateChanged();

    public string AppID 
	{ 
		get
		{
			return _AppID;
		}
		set
		{
			if(_AppID != value)
			{
				OnAppIDChanging(value);
				_AppID = value;
				OnAppIDChanged();
			}
		}
	}
	private string _AppID;

	partial void OnAppIDChanging(string newValue);
	partial void OnAppIDChanged();

    public System.DateTime Datetime 
	{ 
		get
		{
			return _Datetime;
		}
		set
		{
			if(_Datetime != value)
			{
				OnDatetimeChanging(value);
				_Datetime = value;
				OnDatetimeChanged();
			}
		}
	}
	private System.DateTime _Datetime;

	partial void OnDatetimeChanging(System.DateTime newValue);
	partial void OnDatetimeChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public string FSSAIImage 
	{ 
		get
		{
			return _FSSAIImage;
		}
		set
		{
			if(_FSSAIImage != value)
			{
				OnFSSAIImageChanging(value);
				_FSSAIImage = value;
				OnFSSAIImageChanged();
			}
		}
	}
	private string _FSSAIImage;

	partial void OnFSSAIImageChanging(string newValue);
	partial void OnFSSAIImageChanged();

    public Nullable<bool> IsVerify 
	{ 
		get
		{
			return _IsVerify;
		}
		set
		{
			if(_IsVerify != value)
			{
				OnIsVerifyChanging(value);
				_IsVerify = value;
				OnIsVerifyChanged();
			}
		}
	}
	private Nullable<bool> _IsVerify;

	partial void OnIsVerifyChanging(Nullable<bool> newValue);
	partial void OnIsVerifyChanged();

    public Nullable<int> VerifyBy 
	{ 
		get
		{
			return _VerifyBy;
		}
		set
		{
			if(_VerifyBy != value)
			{
				OnVerifyByChanging(value);
				_VerifyBy = value;
				OnVerifyByChanged();
			}
		}
	}
	private Nullable<int> _VerifyBy;

	partial void OnVerifyByChanging(Nullable<int> newValue);
	partial void OnVerifyByChanged();

    public Nullable<System.DateTime> VerifyDateTime 
	{ 
		get
		{
			return _VerifyDateTime;
		}
		set
		{
			if(_VerifyDateTime != value)
			{
				OnVerifyDateTimeChanging(value);
				_VerifyDateTime = value;
				OnVerifyDateTimeChanged();
			}
		}
	}
	private Nullable<System.DateTime> _VerifyDateTime;

	partial void OnVerifyDateTimeChanging(Nullable<System.DateTime> newValue);
	partial void OnVerifyDateTimeChanged();

    public string Imagebase64 
	{ 
		get
		{
			return _Imagebase64;
		}
		set
		{
			if(_Imagebase64 != value)
			{
				OnImagebase64Changing(value);
				_Imagebase64 = value;
				OnImagebase64Changed();
			}
		}
	}
	private string _Imagebase64;

	partial void OnImagebase64Changing(string newValue);
	partial void OnImagebase64Changed();

    public Nullable<int> FwdTo 
	{ 
		get
		{
			return _FwdTo;
		}
		set
		{
			if(_FwdTo != value)
			{
				OnFwdToChanging(value);
				_FwdTo = value;
				OnFwdToChanged();
			}
		}
	}
	private Nullable<int> _FwdTo;

	partial void OnFwdToChanging(Nullable<int> newValue);
	partial void OnFwdToChanged();

    public Nullable<int> verifyIs 
	{ 
		get
		{
			return _verifyIs;
		}
		set
		{
			if(_verifyIs != value)
			{
				OnverifyIsChanging(value);
				_verifyIs = value;
				OnverifyIsChanged();
			}
		}
	}
	private Nullable<int> _verifyIs;

	partial void OnverifyIsChanging(Nullable<int> newValue);
	partial void OnverifyIsChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();
}

[Serializable]
public partial class OFTP : ObjectWithState
{
    public OFTP() 
    { 
        this.RDR1 = new HashSet<RDR1>();
        this.POS1 = new HashSet<POS1>();
    }


    public int TypeID 
	{ 
		get
		{
			return _TypeID;
		}
		set
		{
			if(_TypeID != value)
			{
				OnTypeIDChanging(value);
				_TypeID = value;
				OnTypeIDChanged();
			}
		}
	}
	private int _TypeID;

	partial void OnTypeIDChanging(int newValue);
	partial void OnTypeIDChanged();

    public string TypeName 
	{ 
		get
		{
			return _TypeName;
		}
		set
		{
			if(_TypeName != value)
			{
				OnTypeNameChanging(value);
				_TypeName = value;
				OnTypeNameChanged();
			}
		}
	}
	private string _TypeName;

	partial void OnTypeNameChanging(string newValue);
	partial void OnTypeNameChanged();

    public string TypeDesc 
	{ 
		get
		{
			return _TypeDesc;
		}
		set
		{
			if(_TypeDesc != value)
			{
				OnTypeDescChanging(value);
				_TypeDesc = value;
				OnTypeDescChanged();
			}
		}
	}
	private string _TypeDesc;

	partial void OnTypeDescChanging(string newValue);
	partial void OnTypeDescChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string TypeSortName 
	{ 
		get
		{
			return _TypeSortName;
		}
		set
		{
			if(_TypeSortName != value)
			{
				OnTypeSortNameChanging(value);
				_TypeSortName = value;
				OnTypeSortNameChanged();
			}
		}
	}
	private string _TypeSortName;

	partial void OnTypeSortNameChanging(string newValue);
	partial void OnTypeSortNameChanged();

    public virtual ICollection<RDR1> RDR1 { get; set; }
    public virtual ICollection<POS1> POS1 { get; set; }
}

[Serializable]
public partial class OGCM : ObjectWithState
{
    public OGCM() 
    { 
        this.GCM1 = new HashSet<GCM1>();
    }


    public int DeviceID 
	{ 
		get
		{
			return _DeviceID;
		}
		set
		{
			if(_DeviceID != value)
			{
				OnDeviceIDChanging(value);
				_DeviceID = value;
				OnDeviceIDChanged();
			}
		}
	}
	private int _DeviceID;

	partial void OnDeviceIDChanging(int newValue);
	partial void OnDeviceIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public string DeviceNo 
	{ 
		get
		{
			return _DeviceNo;
		}
		set
		{
			if(_DeviceNo != value)
			{
				OnDeviceNoChanging(value);
				_DeviceNo = value;
				OnDeviceNoChanged();
			}
		}
	}
	private string _DeviceNo;

	partial void OnDeviceNoChanging(string newValue);
	partial void OnDeviceNoChanged();

    public string Token 
	{ 
		get
		{
			return _Token;
		}
		set
		{
			if(_Token != value)
			{
				OnTokenChanging(value);
				_Token = value;
				OnTokenChanged();
			}
		}
	}
	private string _Token;

	partial void OnTokenChanging(string newValue);
	partial void OnTokenChanged();

    public System.DateTime RegisteredDate 
	{ 
		get
		{
			return _RegisteredDate;
		}
		set
		{
			if(_RegisteredDate != value)
			{
				OnRegisteredDateChanging(value);
				_RegisteredDate = value;
				OnRegisteredDateChanged();
			}
		}
	}
	private System.DateTime _RegisteredDate;

	partial void OnRegisteredDateChanging(System.DateTime newValue);
	partial void OnRegisteredDateChanged();

    public bool IsActive 
	{ 
		get
		{
			return _IsActive;
		}
		set
		{
			if(_IsActive != value)
			{
				OnIsActiveChanging(value);
				_IsActive = value;
				OnIsActiveChanged();
			}
		}
	}
	private bool _IsActive;

	partial void OnIsActiveChanging(bool newValue);
	partial void OnIsActiveChanged();

    public System.DateTime LastLogin 
	{ 
		get
		{
			return _LastLogin;
		}
		set
		{
			if(_LastLogin != value)
			{
				OnLastLoginChanging(value);
				_LastLogin = value;
				OnLastLoginChanged();
			}
		}
	}
	private System.DateTime _LastLogin;

	partial void OnLastLoginChanging(System.DateTime newValue);
	partial void OnLastLoginChanged();

    public string ModelNo 
	{ 
		get
		{
			return _ModelNo;
		}
		set
		{
			if(_ModelNo != value)
			{
				OnModelNoChanging(value);
				_ModelNo = value;
				OnModelNoChanged();
			}
		}
	}
	private string _ModelNo;

	partial void OnModelNoChanging(string newValue);
	partial void OnModelNoChanged();

    public string AndroidVersion 
	{ 
		get
		{
			return _AndroidVersion;
		}
		set
		{
			if(_AndroidVersion != value)
			{
				OnAndroidVersionChanging(value);
				_AndroidVersion = value;
				OnAndroidVersionChanged();
			}
		}
	}
	private string _AndroidVersion;

	partial void OnAndroidVersionChanging(string newValue);
	partial void OnAndroidVersionChanged();

    public string OS 
	{ 
		get
		{
			return _OS;
		}
		set
		{
			if(_OS != value)
			{
				OnOSChanging(value);
				_OS = value;
				OnOSChanged();
			}
		}
	}
	private string _OS;

	partial void OnOSChanging(string newValue);
	partial void OnOSChanged();

    public string MAC 
	{ 
		get
		{
			return _MAC;
		}
		set
		{
			if(_MAC != value)
			{
				OnMACChanging(value);
				_MAC = value;
				OnMACChanged();
			}
		}
	}
	private string _MAC;

	partial void OnMACChanging(string newValue);
	partial void OnMACChanged();

    public string IMEI 
	{ 
		get
		{
			return _IMEI;
		}
		set
		{
			if(_IMEI != value)
			{
				OnIMEIChanging(value);
				_IMEI = value;
				OnIMEIChanged();
			}
		}
	}
	private string _IMEI;

	partial void OnIMEIChanging(string newValue);
	partial void OnIMEIChanged();

    public string EmailID 
	{ 
		get
		{
			return _EmailID;
		}
		set
		{
			if(_EmailID != value)
			{
				OnEmailIDChanging(value);
				_EmailID = value;
				OnEmailIDChanged();
			}
		}
	}
	private string _EmailID;

	partial void OnEmailIDChanging(string newValue);
	partial void OnEmailIDChanged();

    public string BatteryInfo 
	{ 
		get
		{
			return _BatteryInfo;
		}
		set
		{
			if(_BatteryInfo != value)
			{
				OnBatteryInfoChanging(value);
				_BatteryInfo = value;
				OnBatteryInfoChanged();
			}
		}
	}
	private string _BatteryInfo;

	partial void OnBatteryInfoChanging(string newValue);
	partial void OnBatteryInfoChanged();

    public string AppVersionName 
	{ 
		get
		{
			return _AppVersionName;
		}
		set
		{
			if(_AppVersionName != value)
			{
				OnAppVersionNameChanging(value);
				_AppVersionName = value;
				OnAppVersionNameChanged();
			}
		}
	}
	private string _AppVersionName;

	partial void OnAppVersionNameChanging(string newValue);
	partial void OnAppVersionNameChanged();

    public Nullable<int> AppVersionNumber 
	{ 
		get
		{
			return _AppVersionNumber;
		}
		set
		{
			if(_AppVersionNumber != value)
			{
				OnAppVersionNumberChanging(value);
				_AppVersionNumber = value;
				OnAppVersionNumberChanged();
			}
		}
	}
	private Nullable<int> _AppVersionNumber;

	partial void OnAppVersionNumberChanging(Nullable<int> newValue);
	partial void OnAppVersionNumberChanged();

    public virtual ICollection<GCM1> GCM1 { get; set; }
    public virtual OEMP OEMP { get; set; }
}

[Serializable]
public partial class OGCRD : ObjectWithState
{

    public int GlobalCustID 
	{ 
		get
		{
			return _GlobalCustID;
		}
		set
		{
			if(_GlobalCustID != value)
			{
				OnGlobalCustIDChanging(value);
				_GlobalCustID = value;
				OnGlobalCustIDChanged();
			}
		}
	}
	private int _GlobalCustID;

	partial void OnGlobalCustIDChanging(int newValue);
	partial void OnGlobalCustIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public Nullable<int> CompanyID 
	{ 
		get
		{
			return _CompanyID;
		}
		set
		{
			if(_CompanyID != value)
			{
				OnCompanyIDChanging(value);
				_CompanyID = value;
				OnCompanyIDChanged();
			}
		}
	}
	private Nullable<int> _CompanyID;

	partial void OnCompanyIDChanging(Nullable<int> newValue);
	partial void OnCompanyIDChanged();

    public Nullable<int> SaleOrgID 
	{ 
		get
		{
			return _SaleOrgID;
		}
		set
		{
			if(_SaleOrgID != value)
			{
				OnSaleOrgIDChanging(value);
				_SaleOrgID = value;
				OnSaleOrgIDChanged();
			}
		}
	}
	private Nullable<int> _SaleOrgID;

	partial void OnSaleOrgIDChanging(Nullable<int> newValue);
	partial void OnSaleOrgIDChanged();

    public Nullable<int> DistriChannelID 
	{ 
		get
		{
			return _DistriChannelID;
		}
		set
		{
			if(_DistriChannelID != value)
			{
				OnDistriChannelIDChanging(value);
				_DistriChannelID = value;
				OnDistriChannelIDChanged();
			}
		}
	}
	private Nullable<int> _DistriChannelID;

	partial void OnDistriChannelIDChanging(Nullable<int> newValue);
	partial void OnDistriChannelIDChanged();

    public Nullable<int> DivisionlID 
	{ 
		get
		{
			return _DivisionlID;
		}
		set
		{
			if(_DivisionlID != value)
			{
				OnDivisionlIDChanging(value);
				_DivisionlID = value;
				OnDivisionlIDChanged();
			}
		}
	}
	private Nullable<int> _DivisionlID;

	partial void OnDivisionlIDChanging(Nullable<int> newValue);
	partial void OnDivisionlIDChanged();

    public Nullable<int> PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private Nullable<int> _PlantID;

	partial void OnPlantIDChanging(Nullable<int> newValue);
	partial void OnPlantIDChanged();

    public Nullable<int> PriceListID 
	{ 
		get
		{
			return _PriceListID;
		}
		set
		{
			if(_PriceListID != value)
			{
				OnPriceListIDChanging(value);
				_PriceListID = value;
				OnPriceListIDChanged();
			}
		}
	}
	private Nullable<int> _PriceListID;

	partial void OnPriceListIDChanging(Nullable<int> newValue);
	partial void OnPriceListIDChanged();

    public virtual ODIV ODIV { get; set; }
    public virtual OIPL OIPL { get; set; }
    public virtual OSRG OSRG { get; set; }
    public virtual OCPY OCPY { get; set; }
    public virtual OCRD OCRD { get; set; }
    public virtual OPLT OPLT { get; set; }
    public virtual ODCL ODCL { get; set; }
}

[Serializable]
public partial class OGEMP : ObjectWithState
{

    public int GlobalEmpID 
	{ 
		get
		{
			return _GlobalEmpID;
		}
		set
		{
			if(_GlobalEmpID != value)
			{
				OnGlobalEmpIDChanging(value);
				_GlobalEmpID = value;
				OnGlobalEmpIDChanged();
			}
		}
	}
	private int _GlobalEmpID;

	partial void OnGlobalEmpIDChanging(int newValue);
	partial void OnGlobalEmpIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int BussinessID 
	{ 
		get
		{
			return _BussinessID;
		}
		set
		{
			if(_BussinessID != value)
			{
				OnBussinessIDChanging(value);
				_BussinessID = value;
				OnBussinessIDChanged();
			}
		}
	}
	private int _BussinessID;

	partial void OnBussinessIDChanging(int newValue);
	partial void OnBussinessIDChanged();

    public int DivisionID 
	{ 
		get
		{
			return _DivisionID;
		}
		set
		{
			if(_DivisionID != value)
			{
				OnDivisionIDChanging(value);
				_DivisionID = value;
				OnDivisionIDChanged();
			}
		}
	}
	private int _DivisionID;

	partial void OnDivisionIDChanging(int newValue);
	partial void OnDivisionIDChanged();

    public int PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private int _PlantID;

	partial void OnPlantIDChanging(int newValue);
	partial void OnPlantIDChanged();
}

[Serializable]
public partial class OGITM : ObjectWithState
{

    public int GlobalItemID 
	{ 
		get
		{
			return _GlobalItemID;
		}
		set
		{
			if(_GlobalItemID != value)
			{
				OnGlobalItemIDChanging(value);
				_GlobalItemID = value;
				OnGlobalItemIDChanged();
			}
		}
	}
	private int _GlobalItemID;

	partial void OnGlobalItemIDChanging(int newValue);
	partial void OnGlobalItemIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public Nullable<int> CompanyID 
	{ 
		get
		{
			return _CompanyID;
		}
		set
		{
			if(_CompanyID != value)
			{
				OnCompanyIDChanging(value);
				_CompanyID = value;
				OnCompanyIDChanged();
			}
		}
	}
	private Nullable<int> _CompanyID;

	partial void OnCompanyIDChanging(Nullable<int> newValue);
	partial void OnCompanyIDChanged();

    public Nullable<int> SaleOrgID 
	{ 
		get
		{
			return _SaleOrgID;
		}
		set
		{
			if(_SaleOrgID != value)
			{
				OnSaleOrgIDChanging(value);
				_SaleOrgID = value;
				OnSaleOrgIDChanged();
			}
		}
	}
	private Nullable<int> _SaleOrgID;

	partial void OnSaleOrgIDChanging(Nullable<int> newValue);
	partial void OnSaleOrgIDChanged();

    public Nullable<int> DistriChannelID 
	{ 
		get
		{
			return _DistriChannelID;
		}
		set
		{
			if(_DistriChannelID != value)
			{
				OnDistriChannelIDChanging(value);
				_DistriChannelID = value;
				OnDistriChannelIDChanged();
			}
		}
	}
	private Nullable<int> _DistriChannelID;

	partial void OnDistriChannelIDChanging(Nullable<int> newValue);
	partial void OnDistriChannelIDChanged();

    public Nullable<int> DivisionlID 
	{ 
		get
		{
			return _DivisionlID;
		}
		set
		{
			if(_DivisionlID != value)
			{
				OnDivisionlIDChanging(value);
				_DivisionlID = value;
				OnDivisionlIDChanged();
			}
		}
	}
	private Nullable<int> _DivisionlID;

	partial void OnDivisionlIDChanging(Nullable<int> newValue);
	partial void OnDivisionlIDChanged();

    public Nullable<int> PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private Nullable<int> _PlantID;

	partial void OnPlantIDChanging(Nullable<int> newValue);
	partial void OnPlantIDChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual OITM OITM { get; set; }
    public virtual ODIV ODIV { get; set; }
    public virtual OSRG OSRG { get; set; }
    public virtual OCPY OCPY { get; set; }
    public virtual OPLT OPLT { get; set; }
    public virtual ODCL ODCL { get; set; }
}

[Serializable]
public partial class OGLA : ObjectWithState
{
    public OGLA() 
    { 
        this.OJETs = new HashSet<OJET>();
    }


    public int GLAccID 
	{ 
		get
		{
			return _GLAccID;
		}
		set
		{
			if(_GLAccID != value)
			{
				OnGLAccIDChanging(value);
				_GLAccID = value;
				OnGLAccIDChanged();
			}
		}
	}
	private int _GLAccID;

	partial void OnGLAccIDChanging(int newValue);
	partial void OnGLAccIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string GLAccCode 
	{ 
		get
		{
			return _GLAccCode;
		}
		set
		{
			if(_GLAccCode != value)
			{
				OnGLAccCodeChanging(value);
				_GLAccCode = value;
				OnGLAccCodeChanged();
			}
		}
	}
	private string _GLAccCode;

	partial void OnGLAccCodeChanging(string newValue);
	partial void OnGLAccCodeChanged();

    public string GLAccName 
	{ 
		get
		{
			return _GLAccName;
		}
		set
		{
			if(_GLAccName != value)
			{
				OnGLAccNameChanging(value);
				_GLAccName = value;
				OnGLAccNameChanged();
			}
		}
	}
	private string _GLAccName;

	partial void OnGLAccNameChanging(string newValue);
	partial void OnGLAccNameChanged();

    public string GLType 
	{ 
		get
		{
			return _GLType;
		}
		set
		{
			if(_GLType != value)
			{
				OnGLTypeChanging(value);
				_GLType = value;
				OnGLTypeChanged();
			}
		}
	}
	private string _GLType;

	partial void OnGLTypeChanging(string newValue);
	partial void OnGLTypeChanged();

    public int GLAccGroupID 
	{ 
		get
		{
			return _GLAccGroupID;
		}
		set
		{
			if(_GLAccGroupID != value)
			{
				OnGLAccGroupIDChanging(value);
				_GLAccGroupID = value;
				OnGLAccGroupIDChanged();
			}
		}
	}
	private int _GLAccGroupID;

	partial void OnGLAccGroupIDChanging(int newValue);
	partial void OnGLAccGroupIDChanged();

    public Nullable<int> ParentGL 
	{ 
		get
		{
			return _ParentGL;
		}
		set
		{
			if(_ParentGL != value)
			{
				OnParentGLChanging(value);
				_ParentGL = value;
				OnParentGLChanged();
			}
		}
	}
	private Nullable<int> _ParentGL;

	partial void OnParentGLChanging(Nullable<int> newValue);
	partial void OnParentGLChanged();

    public Nullable<decimal> UserID 
	{ 
		get
		{
			return _UserID;
		}
		set
		{
			if(_UserID != value)
			{
				OnUserIDChanging(value);
				_UserID = value;
				OnUserIDChanged();
			}
		}
	}
	private Nullable<decimal> _UserID;

	partial void OnUserIDChanging(Nullable<decimal> newValue);
	partial void OnUserIDChanged();

    public Nullable<decimal> ParentUserID 
	{ 
		get
		{
			return _ParentUserID;
		}
		set
		{
			if(_ParentUserID != value)
			{
				OnParentUserIDChanging(value);
				_ParentUserID = value;
				OnParentUserIDChanged();
			}
		}
	}
	private Nullable<decimal> _ParentUserID;

	partial void OnParentUserIDChanging(Nullable<decimal> newValue);
	partial void OnParentUserIDChanged();

    public decimal GLAmount 
	{ 
		get
		{
			return _GLAmount;
		}
		set
		{
			if(_GLAmount != value)
			{
				OnGLAmountChanging(value);
				_GLAmount = value;
				OnGLAmountChanged();
			}
		}
	}
	private decimal _GLAmount;

	partial void OnGLAmountChanging(decimal newValue);
	partial void OnGLAmountChanged();

    public Nullable<int> CreditDays 
	{ 
		get
		{
			return _CreditDays;
		}
		set
		{
			if(_CreditDays != value)
			{
				OnCreditDaysChanging(value);
				_CreditDays = value;
				OnCreditDaysChanged();
			}
		}
	}
	private Nullable<int> _CreditDays;

	partial void OnCreditDaysChanging(Nullable<int> newValue);
	partial void OnCreditDaysChanged();

    public decimal CreditLimit 
	{ 
		get
		{
			return _CreditLimit;
		}
		set
		{
			if(_CreditLimit != value)
			{
				OnCreditLimitChanging(value);
				_CreditLimit = value;
				OnCreditLimitChanged();
			}
		}
	}
	private decimal _CreditLimit;

	partial void OnCreditLimitChanging(decimal newValue);
	partial void OnCreditLimitChanged();

    public string Currency 
	{ 
		get
		{
			return _Currency;
		}
		set
		{
			if(_Currency != value)
			{
				OnCurrencyChanging(value);
				_Currency = value;
				OnCurrencyChanged();
			}
		}
	}
	private string _Currency;

	partial void OnCurrencyChanging(string newValue);
	partial void OnCurrencyChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsSystem 
	{ 
		get
		{
			return _IsSystem;
		}
		set
		{
			if(_IsSystem != value)
			{
				OnIsSystemChanging(value);
				_IsSystem = value;
				OnIsSystemChanged();
			}
		}
	}
	private bool _IsSystem;

	partial void OnIsSystemChanging(bool newValue);
	partial void OnIsSystemChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<OJET> OJETs { get; set; }
    public virtual GLAG GLAG { get; set; }
}

[Serializable]
public partial class OGP : ObjectWithState
{

    public int GPSID 
	{ 
		get
		{
			return _GPSID;
		}
		set
		{
			if(_GPSID != value)
			{
				OnGPSIDChanging(value);
				_GPSID = value;
				OnGPSIDChanged();
			}
		}
	}
	private int _GPSID;

	partial void OnGPSIDChanging(int newValue);
	partial void OnGPSIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public System.DateTime Datetime 
	{ 
		get
		{
			return _Datetime;
		}
		set
		{
			if(_Datetime != value)
			{
				OnDatetimeChanging(value);
				_Datetime = value;
				OnDatetimeChanged();
			}
		}
	}
	private System.DateTime _Datetime;

	partial void OnDatetimeChanging(System.DateTime newValue);
	partial void OnDatetimeChanged();

    public string Lat 
	{ 
		get
		{
			return _Lat;
		}
		set
		{
			if(_Lat != value)
			{
				OnLatChanging(value);
				_Lat = value;
				OnLatChanged();
			}
		}
	}
	private string _Lat;

	partial void OnLatChanging(string newValue);
	partial void OnLatChanged();

    public string Long 
	{ 
		get
		{
			return _Long;
		}
		set
		{
			if(_Long != value)
			{
				OnLongChanging(value);
				_Long = value;
				OnLongChanged();
			}
		}
	}
	private string _Long;

	partial void OnLongChanging(string newValue);
	partial void OnLongChanged();

    public string Accuracy 
	{ 
		get
		{
			return _Accuracy;
		}
		set
		{
			if(_Accuracy != value)
			{
				OnAccuracyChanging(value);
				_Accuracy = value;
				OnAccuracyChanged();
			}
		}
	}
	private string _Accuracy;

	partial void OnAccuracyChanging(string newValue);
	partial void OnAccuracyChanged();

    public Nullable<decimal> Distance 
	{ 
		get
		{
			return _Distance;
		}
		set
		{
			if(_Distance != value)
			{
				OnDistanceChanging(value);
				_Distance = value;
				OnDistanceChanged();
			}
		}
	}
	private Nullable<decimal> _Distance;

	partial void OnDistanceChanging(Nullable<decimal> newValue);
	partial void OnDistanceChanged();

    public string Location 
	{ 
		get
		{
			return _Location;
		}
		set
		{
			if(_Location != value)
			{
				OnLocationChanging(value);
				_Location = value;
				OnLocationChanged();
			}
		}
	}
	private string _Location;

	partial void OnLocationChanging(string newValue);
	partial void OnLocationChanged();

    public virtual OEMP OEMP { get; set; }
}

[Serializable]
public partial class OGRP : ObjectWithState
{
    public OGRP() 
    { 
        this.OEMPs = new HashSet<OEMP>();
        this.TEM1 = new HashSet<TEM1>();
        this.TEM11 = new HashSet<TEM1>();
        this.GRP1 = new HashSet<GRP1>();
        this.OCVEs = new HashSet<OCVE>();
    }


    public int EmpGroupID 
	{ 
		get
		{
			return _EmpGroupID;
		}
		set
		{
			if(_EmpGroupID != value)
			{
				OnEmpGroupIDChanging(value);
				_EmpGroupID = value;
				OnEmpGroupIDChanged();
			}
		}
	}
	private int _EmpGroupID;

	partial void OnEmpGroupIDChanging(int newValue);
	partial void OnEmpGroupIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string EmpGroupName 
	{ 
		get
		{
			return _EmpGroupName;
		}
		set
		{
			if(_EmpGroupName != value)
			{
				OnEmpGroupNameChanging(value);
				_EmpGroupName = value;
				OnEmpGroupNameChanged();
			}
		}
	}
	private string _EmpGroupName;

	partial void OnEmpGroupNameChanging(string newValue);
	partial void OnEmpGroupNameChanged();

    public string EmpGroupDesc 
	{ 
		get
		{
			return _EmpGroupDesc;
		}
		set
		{
			if(_EmpGroupDesc != value)
			{
				OnEmpGroupDescChanging(value);
				_EmpGroupDesc = value;
				OnEmpGroupDescChanged();
			}
		}
	}
	private string _EmpGroupDesc;

	partial void OnEmpGroupDescChanging(string newValue);
	partial void OnEmpGroupDescChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public short SortOrder 
	{ 
		get
		{
			return _SortOrder;
		}
		set
		{
			if(_SortOrder != value)
			{
				OnSortOrderChanging(value);
				_SortOrder = value;
				OnSortOrderChanged();
			}
		}
	}
	private short _SortOrder;

	partial void OnSortOrderChanging(short newValue);
	partial void OnSortOrderChanged();

    public virtual ICollection<OEMP> OEMPs { get; set; }
    public virtual ICollection<TEM1> TEM1 { get; set; }
    public virtual ICollection<TEM1> TEM11 { get; set; }
    public virtual ICollection<GRP1> GRP1 { get; set; }
    public virtual ICollection<OCVE> OCVEs { get; set; }
}

[Serializable]
public partial class OGRPM : ObjectWithState
{

    public int DiscountGroupId 
	{ 
		get
		{
			return _DiscountGroupId;
		}
		set
		{
			if(_DiscountGroupId != value)
			{
				OnDiscountGroupIdChanging(value);
				_DiscountGroupId = value;
				OnDiscountGroupIdChanged();
			}
		}
	}
	private int _DiscountGroupId;

	partial void OnDiscountGroupIdChanging(int newValue);
	partial void OnDiscountGroupIdChanged();

    public string PageName 
	{ 
		get
		{
			return _PageName;
		}
		set
		{
			if(_PageName != value)
			{
				OnPageNameChanging(value);
				_PageName = value;
				OnPageNameChanged();
			}
		}
	}
	private string _PageName;

	partial void OnPageNameChanging(string newValue);
	partial void OnPageNameChanged();

    public string ForOption 
	{ 
		get
		{
			return _ForOption;
		}
		set
		{
			if(_ForOption != value)
			{
				OnForOptionChanging(value);
				_ForOption = value;
				OnForOptionChanged();
			}
		}
	}
	private string _ForOption;

	partial void OnForOptionChanging(string newValue);
	partial void OnForOptionChanged();

    public string GroupName 
	{ 
		get
		{
			return _GroupName;
		}
		set
		{
			if(_GroupName != value)
			{
				OnGroupNameChanging(value);
				_GroupName = value;
				OnGroupNameChanged();
			}
		}
	}
	private string _GroupName;

	partial void OnGroupNameChanging(string newValue);
	partial void OnGroupNameChanged();

    public Nullable<System.DateTime> FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _FromDate;

	partial void OnFromDateChanging(Nullable<System.DateTime> newValue);
	partial void OnFromDateChanged();

    public Nullable<System.DateTime> ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ToDate;

	partial void OnToDateChanging(Nullable<System.DateTime> newValue);
	partial void OnToDateChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public Nullable<bool> Flag 
	{ 
		get
		{
			return _Flag;
		}
		set
		{
			if(_Flag != value)
			{
				OnFlagChanging(value);
				_Flag = value;
				OnFlagChanged();
			}
		}
	}
	private Nullable<bool> _Flag;

	partial void OnFlagChanging(Nullable<bool> newValue);
	partial void OnFlagChanged();

    public Nullable<bool> Deleted 
	{ 
		get
		{
			return _Deleted;
		}
		set
		{
			if(_Deleted != value)
			{
				OnDeletedChanging(value);
				_Deleted = value;
				OnDeletedChanged();
			}
		}
	}
	private Nullable<bool> _Deleted;

	partial void OnDeletedChanging(Nullable<bool> newValue);
	partial void OnDeletedChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();
}

[Serializable]
public partial class OGST : ObjectWithState
{

    public int GSTID 
	{ 
		get
		{
			return _GSTID;
		}
		set
		{
			if(_GSTID != value)
			{
				OnGSTIDChanging(value);
				_GSTID = value;
				OnGSTIDChanged();
			}
		}
	}
	private int _GSTID;

	partial void OnGSTIDChanging(int newValue);
	partial void OnGSTIDChanged();

    public Nullable<int> OptionId 
	{ 
		get
		{
			return _OptionId;
		}
		set
		{
			if(_OptionId != value)
			{
				OnOptionIdChanging(value);
				_OptionId = value;
				OnOptionIdChanged();
			}
		}
	}
	private Nullable<int> _OptionId;

	partial void OnOptionIdChanging(Nullable<int> newValue);
	partial void OnOptionIdChanged();

    public Nullable<decimal> CustomerId 
	{ 
		get
		{
			return _CustomerId;
		}
		set
		{
			if(_CustomerId != value)
			{
				OnCustomerIdChanging(value);
				_CustomerId = value;
				OnCustomerIdChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerId;

	partial void OnCustomerIdChanging(Nullable<decimal> newValue);
	partial void OnCustomerIdChanged();

    public Nullable<bool> GSTRequired 
	{ 
		get
		{
			return _GSTRequired;
		}
		set
		{
			if(_GSTRequired != value)
			{
				OnGSTRequiredChanging(value);
				_GSTRequired = value;
				OnGSTRequiredChanged();
			}
		}
	}
	private Nullable<bool> _GSTRequired;

	partial void OnGSTRequiredChanging(Nullable<bool> newValue);
	partial void OnGSTRequiredChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public string GSTNo 
	{ 
		get
		{
			return _GSTNo;
		}
		set
		{
			if(_GSTNo != value)
			{
				OnGSTNoChanging(value);
				_GSTNo = value;
				OnGSTNoChanged();
			}
		}
	}
	private string _GSTNo;

	partial void OnGSTNoChanging(string newValue);
	partial void OnGSTNoChanged();

    public string Password 
	{ 
		get
		{
			return _Password;
		}
		set
		{
			if(_Password != value)
			{
				OnPasswordChanging(value);
				_Password = value;
				OnPasswordChanged();
			}
		}
	}
	private string _Password;

	partial void OnPasswordChanging(string newValue);
	partial void OnPasswordChanged();

    public Nullable<bool> IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private Nullable<bool> _IsDeleted;

	partial void OnIsDeletedChanging(Nullable<bool> newValue);
	partial void OnIsDeletedChanged();
}

[Serializable]
public partial class OHRD : ObjectWithState
{

    public int OHRDID 
	{ 
		get
		{
			return _OHRDID;
		}
		set
		{
			if(_OHRDID != value)
			{
				OnOHRDIDChanging(value);
				_OHRDID = value;
				OnOHRDIDChanged();
			}
		}
	}
	private int _OHRDID;

	partial void OnOHRDIDChanging(int newValue);
	partial void OnOHRDIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int EntryID 
	{ 
		get
		{
			return _EntryID;
		}
		set
		{
			if(_EntryID != value)
			{
				OnEntryIDChanging(value);
				_EntryID = value;
				OnEntryIDChanged();
			}
		}
	}
	private int _EntryID;

	partial void OnEntryIDChanging(int newValue);
	partial void OnEntryIDChanged();

    public System.DateTime Date 
	{ 
		get
		{
			return _Date;
		}
		set
		{
			if(_Date != value)
			{
				OnDateChanging(value);
				_Date = value;
				OnDateChanged();
			}
		}
	}
	private System.DateTime _Date;

	partial void OnDateChanging(System.DateTime newValue);
	partial void OnDateChanged();

    public string HomeLat 
	{ 
		get
		{
			return _HomeLat;
		}
		set
		{
			if(_HomeLat != value)
			{
				OnHomeLatChanging(value);
				_HomeLat = value;
				OnHomeLatChanged();
			}
		}
	}
	private string _HomeLat;

	partial void OnHomeLatChanging(string newValue);
	partial void OnHomeLatChanged();

    public string HomeLong 
	{ 
		get
		{
			return _HomeLong;
		}
		set
		{
			if(_HomeLong != value)
			{
				OnHomeLongChanging(value);
				_HomeLong = value;
				OnHomeLongChanged();
			}
		}
	}
	private string _HomeLong;

	partial void OnHomeLongChanging(string newValue);
	partial void OnHomeLongChanged();

    public string CurrentLat 
	{ 
		get
		{
			return _CurrentLat;
		}
		set
		{
			if(_CurrentLat != value)
			{
				OnCurrentLatChanging(value);
				_CurrentLat = value;
				OnCurrentLatChanged();
			}
		}
	}
	private string _CurrentLat;

	partial void OnCurrentLatChanging(string newValue);
	partial void OnCurrentLatChanged();

    public string CurrentLong 
	{ 
		get
		{
			return _CurrentLong;
		}
		set
		{
			if(_CurrentLong != value)
			{
				OnCurrentLongChanging(value);
				_CurrentLong = value;
				OnCurrentLongChanged();
			}
		}
	}
	private string _CurrentLong;

	partial void OnCurrentLongChanging(string newValue);
	partial void OnCurrentLongChanged();

    public string Direction 
	{ 
		get
		{
			return _Direction;
		}
		set
		{
			if(_Direction != value)
			{
				OnDirectionChanging(value);
				_Direction = value;
				OnDirectionChanged();
			}
		}
	}
	private string _Direction;

	partial void OnDirectionChanging(string newValue);
	partial void OnDirectionChanged();

    public decimal Distance 
	{ 
		get
		{
			return _Distance;
		}
		set
		{
			if(_Distance != value)
			{
				OnDistanceChanging(value);
				_Distance = value;
				OnDistanceChanged();
			}
		}
	}
	private decimal _Distance;

	partial void OnDistanceChanging(decimal newValue);
	partial void OnDistanceChanged();

    public int OGCMID 
	{ 
		get
		{
			return _OGCMID;
		}
		set
		{
			if(_OGCMID != value)
			{
				OnOGCMIDChanging(value);
				_OGCMID = value;
				OnOGCMIDChanged();
			}
		}
	}
	private int _OGCMID;

	partial void OnOGCMIDChanging(int newValue);
	partial void OnOGCMIDChanged();

    public decimal HomeDistance 
	{ 
		get
		{
			return _HomeDistance;
		}
		set
		{
			if(_HomeDistance != value)
			{
				OnHomeDistanceChanging(value);
				_HomeDistance = value;
				OnHomeDistanceChanged();
			}
		}
	}
	private decimal _HomeDistance;

	partial void OnHomeDistanceChanging(decimal newValue);
	partial void OnHomeDistanceChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public int DayActivityStatus 
	{ 
		get
		{
			return _DayActivityStatus;
		}
		set
		{
			if(_DayActivityStatus != value)
			{
				OnDayActivityStatusChanging(value);
				_DayActivityStatus = value;
				OnDayActivityStatusChanged();
			}
		}
	}
	private int _DayActivityStatus;

	partial void OnDayActivityStatusChanging(int newValue);
	partial void OnDayActivityStatusChanged();
}

[Serializable]
public partial class OHRY : ObjectWithState
{

    public int OHRYID 
	{ 
		get
		{
			return _OHRYID;
		}
		set
		{
			if(_OHRYID != value)
			{
				OnOHRYIDChanging(value);
				_OHRYID = value;
				OnOHRYIDChanged();
			}
		}
	}
	private int _OHRYID;

	partial void OnOHRYIDChanging(int newValue);
	partial void OnOHRYIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int HDocID 
	{ 
		get
		{
			return _HDocID;
		}
		set
		{
			if(_HDocID != value)
			{
				OnHDocIDChanging(value);
				_HDocID = value;
				OnHDocIDChanged();
			}
		}
	}
	private int _HDocID;

	partial void OnHDocIDChanging(int newValue);
	partial void OnHDocIDChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public decimal TypeID 
	{ 
		get
		{
			return _TypeID;
		}
		set
		{
			if(_TypeID != value)
			{
				OnTypeIDChanging(value);
				_TypeID = value;
				OnTypeIDChanged();
			}
		}
	}
	private decimal _TypeID;

	partial void OnTypeIDChanging(decimal newValue);
	partial void OnTypeIDChanged();

    public Nullable<int> TypeGroupID 
	{ 
		get
		{
			return _TypeGroupID;
		}
		set
		{
			if(_TypeGroupID != value)
			{
				OnTypeGroupIDChanging(value);
				_TypeGroupID = value;
				OnTypeGroupIDChanged();
			}
		}
	}
	private Nullable<int> _TypeGroupID;

	partial void OnTypeGroupIDChanging(Nullable<int> newValue);
	partial void OnTypeGroupIDChanged();

    public Nullable<int> TypeGradeID 
	{ 
		get
		{
			return _TypeGradeID;
		}
		set
		{
			if(_TypeGradeID != value)
			{
				OnTypeGradeIDChanging(value);
				_TypeGradeID = value;
				OnTypeGradeIDChanged();
			}
		}
	}
	private Nullable<int> _TypeGradeID;

	partial void OnTypeGradeIDChanging(Nullable<int> newValue);
	partial void OnTypeGradeIDChanged();

    public Nullable<int> LevelType 
	{ 
		get
		{
			return _LevelType;
		}
		set
		{
			if(_LevelType != value)
			{
				OnLevelTypeChanging(value);
				_LevelType = value;
				OnLevelTypeChanged();
			}
		}
	}
	private Nullable<int> _LevelType;

	partial void OnLevelTypeChanging(Nullable<int> newValue);
	partial void OnLevelTypeChanged();
}

[Serializable]
public partial class OICM : ObjectWithState
{

    public int OICMID 
	{ 
		get
		{
			return _OICMID;
		}
		set
		{
			if(_OICMID != value)
			{
				OnOICMIDChanging(value);
				_OICMID = value;
				OnOICMIDChanged();
			}
		}
	}
	private int _OICMID;

	partial void OnOICMIDChanging(int newValue);
	partial void OnOICMIDChanged();

    public Nullable<int> DivisionId 
	{ 
		get
		{
			return _DivisionId;
		}
		set
		{
			if(_DivisionId != value)
			{
				OnDivisionIdChanging(value);
				_DivisionId = value;
				OnDivisionIdChanged();
			}
		}
	}
	private Nullable<int> _DivisionId;

	partial void OnDivisionIdChanging(Nullable<int> newValue);
	partial void OnDivisionIdChanged();

    public Nullable<int> OptionId 
	{ 
		get
		{
			return _OptionId;
		}
		set
		{
			if(_OptionId != value)
			{
				OnOptionIdChanging(value);
				_OptionId = value;
				OnOptionIdChanged();
			}
		}
	}
	private Nullable<int> _OptionId;

	partial void OnOptionIdChanging(Nullable<int> newValue);
	partial void OnOptionIdChanged();

    public Nullable<int> ItemId 
	{ 
		get
		{
			return _ItemId;
		}
		set
		{
			if(_ItemId != value)
			{
				OnItemIdChanging(value);
				_ItemId = value;
				OnItemIdChanged();
			}
		}
	}
	private Nullable<int> _ItemId;

	partial void OnItemIdChanging(Nullable<int> newValue);
	partial void OnItemIdChanged();

    public Nullable<System.DateTime> FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _FromDate;

	partial void OnFromDateChanging(Nullable<System.DateTime> newValue);
	partial void OnFromDateChanged();

    public Nullable<System.DateTime> ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ToDate;

	partial void OnToDateChanging(Nullable<System.DateTime> newValue);
	partial void OnToDateChanged();

    public string MRPORCate 
	{ 
		get
		{
			return _MRPORCate;
		}
		set
		{
			if(_MRPORCate != value)
			{
				OnMRPORCateChanging(value);
				_MRPORCate = value;
				OnMRPORCateChanged();
			}
		}
	}
	private string _MRPORCate;

	partial void OnMRPORCateChanging(string newValue);
	partial void OnMRPORCateChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public Nullable<bool> IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private Nullable<bool> _IsDeleted;

	partial void OnIsDeletedChanging(Nullable<bool> newValue);
	partial void OnIsDeletedChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();
}

[Serializable]
public partial class OIDM : ObjectWithState
{

    public int OIDMId 
	{ 
		get
		{
			return _OIDMId;
		}
		set
		{
			if(_OIDMId != value)
			{
				OnOIDMIdChanging(value);
				_OIDMId = value;
				OnOIDMIdChanged();
			}
		}
	}
	private int _OIDMId;

	partial void OnOIDMIdChanging(int newValue);
	partial void OnOIDMIdChanged();

    public Nullable<int> SaleId 
	{ 
		get
		{
			return _SaleId;
		}
		set
		{
			if(_SaleId != value)
			{
				OnSaleIdChanging(value);
				_SaleId = value;
				OnSaleIdChanged();
			}
		}
	}
	private Nullable<int> _SaleId;

	partial void OnSaleIdChanging(Nullable<int> newValue);
	partial void OnSaleIdChanged();

    public Nullable<decimal> ParentId 
	{ 
		get
		{
			return _ParentId;
		}
		set
		{
			if(_ParentId != value)
			{
				OnParentIdChanging(value);
				_ParentId = value;
				OnParentIdChanged();
			}
		}
	}
	private Nullable<decimal> _ParentId;

	partial void OnParentIdChanging(Nullable<decimal> newValue);
	partial void OnParentIdChanged();

    public Nullable<int> ItemId 
	{ 
		get
		{
			return _ItemId;
		}
		set
		{
			if(_ItemId != value)
			{
				OnItemIdChanging(value);
				_ItemId = value;
				OnItemIdChanged();
			}
		}
	}
	private Nullable<int> _ItemId;

	partial void OnItemIdChanging(Nullable<int> newValue);
	partial void OnItemIdChanged();

    public Nullable<System.DateTime> InvoiceDate 
	{ 
		get
		{
			return _InvoiceDate;
		}
		set
		{
			if(_InvoiceDate != value)
			{
				OnInvoiceDateChanging(value);
				_InvoiceDate = value;
				OnInvoiceDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _InvoiceDate;

	partial void OnInvoiceDateChanging(Nullable<System.DateTime> newValue);
	partial void OnInvoiceDateChanged();

    public string SchemeMode 
	{ 
		get
		{
			return _SchemeMode;
		}
		set
		{
			if(_SchemeMode != value)
			{
				OnSchemeModeChanging(value);
				_SchemeMode = value;
				OnSchemeModeChanged();
			}
		}
	}
	private string _SchemeMode;

	partial void OnSchemeModeChanging(string newValue);
	partial void OnSchemeModeChanged();

    public Nullable<int> SchemeId 
	{ 
		get
		{
			return _SchemeId;
		}
		set
		{
			if(_SchemeId != value)
			{
				OnSchemeIdChanging(value);
				_SchemeId = value;
				OnSchemeIdChanged();
			}
		}
	}
	private Nullable<int> _SchemeId;

	partial void OnSchemeIdChanging(Nullable<int> newValue);
	partial void OnSchemeIdChanged();

    public Nullable<decimal> CompanyContri 
	{ 
		get
		{
			return _CompanyContri;
		}
		set
		{
			if(_CompanyContri != value)
			{
				OnCompanyContriChanging(value);
				_CompanyContri = value;
				OnCompanyContriChanged();
			}
		}
	}
	private Nullable<decimal> _CompanyContri;

	partial void OnCompanyContriChanging(Nullable<decimal> newValue);
	partial void OnCompanyContriChanged();

    public Nullable<decimal> DistributorContri 
	{ 
		get
		{
			return _DistributorContri;
		}
		set
		{
			if(_DistributorContri != value)
			{
				OnDistributorContriChanging(value);
				_DistributorContri = value;
				OnDistributorContriChanged();
			}
		}
	}
	private Nullable<decimal> _DistributorContri;

	partial void OnDistributorContriChanging(Nullable<decimal> newValue);
	partial void OnDistributorContriChanged();

    public Nullable<decimal> TotalDiscount 
	{ 
		get
		{
			return _TotalDiscount;
		}
		set
		{
			if(_TotalDiscount != value)
			{
				OnTotalDiscountChanging(value);
				_TotalDiscount = value;
				OnTotalDiscountChanged();
			}
		}
	}
	private Nullable<decimal> _TotalDiscount;

	partial void OnTotalDiscountChanging(Nullable<decimal> newValue);
	partial void OnTotalDiscountChanged();

    public Nullable<int> Qty 
	{ 
		get
		{
			return _Qty;
		}
		set
		{
			if(_Qty != value)
			{
				OnQtyChanging(value);
				_Qty = value;
				OnQtyChanged();
			}
		}
	}
	private Nullable<int> _Qty;

	partial void OnQtyChanging(Nullable<int> newValue);
	partial void OnQtyChanged();

    public Nullable<int> ORETID 
	{ 
		get
		{
			return _ORETID;
		}
		set
		{
			if(_ORETID != value)
			{
				OnORETIDChanging(value);
				_ORETID = value;
				OnORETIDChanged();
			}
		}
	}
	private Nullable<int> _ORETID;

	partial void OnORETIDChanging(Nullable<int> newValue);
	partial void OnORETIDChanged();

    public virtual OPOS OPOS { get; set; }
    public virtual ORET ORET { get; set; }
}

[Serializable]
public partial class OIDMRET : ObjectWithState
{

    public int OIDMRETId 
	{ 
		get
		{
			return _OIDMRETId;
		}
		set
		{
			if(_OIDMRETId != value)
			{
				OnOIDMRETIdChanging(value);
				_OIDMRETId = value;
				OnOIDMRETIdChanged();
			}
		}
	}
	private int _OIDMRETId;

	partial void OnOIDMRETIdChanging(int newValue);
	partial void OnOIDMRETIdChanged();

    public Nullable<int> ORETID 
	{ 
		get
		{
			return _ORETID;
		}
		set
		{
			if(_ORETID != value)
			{
				OnORETIDChanging(value);
				_ORETID = value;
				OnORETIDChanged();
			}
		}
	}
	private Nullable<int> _ORETID;

	partial void OnORETIDChanging(Nullable<int> newValue);
	partial void OnORETIDChanged();

    public Nullable<decimal> ParentId 
	{ 
		get
		{
			return _ParentId;
		}
		set
		{
			if(_ParentId != value)
			{
				OnParentIdChanging(value);
				_ParentId = value;
				OnParentIdChanged();
			}
		}
	}
	private Nullable<decimal> _ParentId;

	partial void OnParentIdChanging(Nullable<decimal> newValue);
	partial void OnParentIdChanged();

    public Nullable<int> ItemId 
	{ 
		get
		{
			return _ItemId;
		}
		set
		{
			if(_ItemId != value)
			{
				OnItemIdChanging(value);
				_ItemId = value;
				OnItemIdChanged();
			}
		}
	}
	private Nullable<int> _ItemId;

	partial void OnItemIdChanging(Nullable<int> newValue);
	partial void OnItemIdChanged();

    public Nullable<int> Qty 
	{ 
		get
		{
			return _Qty;
		}
		set
		{
			if(_Qty != value)
			{
				OnQtyChanging(value);
				_Qty = value;
				OnQtyChanged();
			}
		}
	}
	private Nullable<int> _Qty;

	partial void OnQtyChanging(Nullable<int> newValue);
	partial void OnQtyChanged();

    public Nullable<System.DateTime> InvoiceDate 
	{ 
		get
		{
			return _InvoiceDate;
		}
		set
		{
			if(_InvoiceDate != value)
			{
				OnInvoiceDateChanging(value);
				_InvoiceDate = value;
				OnInvoiceDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _InvoiceDate;

	partial void OnInvoiceDateChanging(Nullable<System.DateTime> newValue);
	partial void OnInvoiceDateChanged();

    public string SchemeMode 
	{ 
		get
		{
			return _SchemeMode;
		}
		set
		{
			if(_SchemeMode != value)
			{
				OnSchemeModeChanging(value);
				_SchemeMode = value;
				OnSchemeModeChanged();
			}
		}
	}
	private string _SchemeMode;

	partial void OnSchemeModeChanging(string newValue);
	partial void OnSchemeModeChanged();

    public Nullable<int> SchemeId 
	{ 
		get
		{
			return _SchemeId;
		}
		set
		{
			if(_SchemeId != value)
			{
				OnSchemeIdChanging(value);
				_SchemeId = value;
				OnSchemeIdChanged();
			}
		}
	}
	private Nullable<int> _SchemeId;

	partial void OnSchemeIdChanging(Nullable<int> newValue);
	partial void OnSchemeIdChanged();

    public Nullable<decimal> CompanyContri 
	{ 
		get
		{
			return _CompanyContri;
		}
		set
		{
			if(_CompanyContri != value)
			{
				OnCompanyContriChanging(value);
				_CompanyContri = value;
				OnCompanyContriChanged();
			}
		}
	}
	private Nullable<decimal> _CompanyContri;

	partial void OnCompanyContriChanging(Nullable<decimal> newValue);
	partial void OnCompanyContriChanged();

    public Nullable<decimal> DistributorContri 
	{ 
		get
		{
			return _DistributorContri;
		}
		set
		{
			if(_DistributorContri != value)
			{
				OnDistributorContriChanging(value);
				_DistributorContri = value;
				OnDistributorContriChanged();
			}
		}
	}
	private Nullable<decimal> _DistributorContri;

	partial void OnDistributorContriChanging(Nullable<decimal> newValue);
	partial void OnDistributorContriChanged();

    public Nullable<decimal> TotalDiscount 
	{ 
		get
		{
			return _TotalDiscount;
		}
		set
		{
			if(_TotalDiscount != value)
			{
				OnTotalDiscountChanging(value);
				_TotalDiscount = value;
				OnTotalDiscountChanged();
			}
		}
	}
	private Nullable<decimal> _TotalDiscount;

	partial void OnTotalDiscountChanging(Nullable<decimal> newValue);
	partial void OnTotalDiscountChanged();

    public virtual ORET ORET { get; set; }
}

[Serializable]
public partial class OIMG : ObjectWithState
{

    public int ImageID 
	{ 
		get
		{
			return _ImageID;
		}
		set
		{
			if(_ImageID != value)
			{
				OnImageIDChanging(value);
				_ImageID = value;
				OnImageIDChanged();
			}
		}
	}
	private int _ImageID;

	partial void OnImageIDChanging(int newValue);
	partial void OnImageIDChanged();

    public string ImageName 
	{ 
		get
		{
			return _ImageName;
		}
		set
		{
			if(_ImageName != value)
			{
				OnImageNameChanging(value);
				_ImageName = value;
				OnImageNameChanged();
			}
		}
	}
	private string _ImageName;

	partial void OnImageNameChanging(string newValue);
	partial void OnImageNameChanged();

    public int SortOrder 
	{ 
		get
		{
			return _SortOrder;
		}
		set
		{
			if(_SortOrder != value)
			{
				OnSortOrderChanging(value);
				_SortOrder = value;
				OnSortOrderChanged();
			}
		}
	}
	private int _SortOrder;

	partial void OnSortOrderChanging(int newValue);
	partial void OnSortOrderChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();
}

[Serializable]
public partial class OINSC : ObjectWithState
{

    public int OINSCID 
	{ 
		get
		{
			return _OINSCID;
		}
		set
		{
			if(_OINSCID != value)
			{
				OnOINSCIDChanging(value);
				_OINSCID = value;
				OnOINSCIDChanged();
			}
		}
	}
	private int _OINSCID;

	partial void OnOINSCIDChanging(int newValue);
	partial void OnOINSCIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public System.DateTime ScanDate 
	{ 
		get
		{
			return _ScanDate;
		}
		set
		{
			if(_ScanDate != value)
			{
				OnScanDateChanging(value);
				_ScanDate = value;
				OnScanDateChanged();
			}
		}
	}
	private System.DateTime _ScanDate;

	partial void OnScanDateChanging(System.DateTime newValue);
	partial void OnScanDateChanged();

    public decimal DealerID 
	{ 
		get
		{
			return _DealerID;
		}
		set
		{
			if(_DealerID != value)
			{
				OnDealerIDChanging(value);
				_DealerID = value;
				OnDealerIDChanged();
			}
		}
	}
	private decimal _DealerID;

	partial void OnDealerIDChanging(decimal newValue);
	partial void OnDealerIDChanged();

    public string Barcode 
	{ 
		get
		{
			return _Barcode;
		}
		set
		{
			if(_Barcode != value)
			{
				OnBarcodeChanging(value);
				_Barcode = value;
				OnBarcodeChanged();
			}
		}
	}
	private string _Barcode;

	partial void OnBarcodeChanging(string newValue);
	partial void OnBarcodeChanged();

    public bool IsConflict 
	{ 
		get
		{
			return _IsConflict;
		}
		set
		{
			if(_IsConflict != value)
			{
				OnIsConflictChanging(value);
				_IsConflict = value;
				OnIsConflictChanged();
			}
		}
	}
	private bool _IsConflict;

	partial void OnIsConflictChanging(bool newValue);
	partial void OnIsConflictChanged();

    public string Lat 
	{ 
		get
		{
			return _Lat;
		}
		set
		{
			if(_Lat != value)
			{
				OnLatChanging(value);
				_Lat = value;
				OnLatChanged();
			}
		}
	}
	private string _Lat;

	partial void OnLatChanging(string newValue);
	partial void OnLatChanged();

    public string Long 
	{ 
		get
		{
			return _Long;
		}
		set
		{
			if(_Long != value)
			{
				OnLongChanging(value);
				_Long = value;
				OnLongChanged();
			}
		}
	}
	private string _Long;

	partial void OnLongChanging(string newValue);
	partial void OnLongChanged();

    public string Location 
	{ 
		get
		{
			return _Location;
		}
		set
		{
			if(_Location != value)
			{
				OnLocationChanging(value);
				_Location = value;
				OnLocationChanged();
			}
		}
	}
	private string _Location;

	partial void OnLocationChanging(string newValue);
	partial void OnLocationChanged();

    public string DeviceID 
	{ 
		get
		{
			return _DeviceID;
		}
		set
		{
			if(_DeviceID != value)
			{
				OnDeviceIDChanging(value);
				_DeviceID = value;
				OnDeviceIDChanged();
			}
		}
	}
	private string _DeviceID;

	partial void OnDeviceIDChanging(string newValue);
	partial void OnDeviceIDChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();
}

[Serializable]
public partial class OINVR : ObjectWithState
{
    public OINVR() 
    { 
        this.INVR1 = new HashSet<INVR1>();
    }


    public int OINVRID 
	{ 
		get
		{
			return _OINVRID;
		}
		set
		{
			if(_OINVRID != value)
			{
				OnOINVRIDChanging(value);
				_OINVRID = value;
				OnOINVRIDChanged();
			}
		}
	}
	private int _OINVRID;

	partial void OnOINVRIDChanging(int newValue);
	partial void OnOINVRIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public System.DateTime FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private System.DateTime _FromDate;

	partial void OnFromDateChanging(System.DateTime newValue);
	partial void OnFromDateChanged();

    public System.DateTime ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private System.DateTime _ToDate;

	partial void OnToDateChanging(System.DateTime newValue);
	partial void OnToDateChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public decimal Subtotal 
	{ 
		get
		{
			return _Subtotal;
		}
		set
		{
			if(_Subtotal != value)
			{
				OnSubtotalChanging(value);
				_Subtotal = value;
				OnSubtotalChanged();
			}
		}
	}
	private decimal _Subtotal;

	partial void OnSubtotalChanging(decimal newValue);
	partial void OnSubtotalChanged();

    public decimal Rounding 
	{ 
		get
		{
			return _Rounding;
		}
		set
		{
			if(_Rounding != value)
			{
				OnRoundingChanging(value);
				_Rounding = value;
				OnRoundingChanged();
			}
		}
	}
	private decimal _Rounding;

	partial void OnRoundingChanging(decimal newValue);
	partial void OnRoundingChanged();

    public decimal Total 
	{ 
		get
		{
			return _Total;
		}
		set
		{
			if(_Total != value)
			{
				OnTotalChanging(value);
				_Total = value;
				OnTotalChanged();
			}
		}
	}
	private decimal _Total;

	partial void OnTotalChanging(decimal newValue);
	partial void OnTotalChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public bool IsCompany 
	{ 
		get
		{
			return _IsCompany;
		}
		set
		{
			if(_IsCompany != value)
			{
				OnIsCompanyChanging(value);
				_IsCompany = value;
				OnIsCompanyChanged();
			}
		}
	}
	private bool _IsCompany;

	partial void OnIsCompanyChanging(bool newValue);
	partial void OnIsCompanyChanged();

    public virtual ICollection<INVR1> INVR1 { get; set; }
}

[Serializable]
public partial class OIOU : ObjectWithState
{

    public int OIOUID 
	{ 
		get
		{
			return _OIOUID;
		}
		set
		{
			if(_OIOUID != value)
			{
				OnOIOUIDChanging(value);
				_OIOUID = value;
				OnOIOUIDChanged();
			}
		}
	}
	private int _OIOUID;

	partial void OnOIOUIDChanging(int newValue);
	partial void OnOIOUIDChanged();

    public Nullable<int> StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private Nullable<int> _StateID;

	partial void OnStateIDChanging(Nullable<int> newValue);
	partial void OnStateIDChanged();

    public Nullable<decimal> ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private Nullable<decimal> _ParentID;

	partial void OnParentIDChanging(Nullable<decimal> newValue);
	partial void OnParentIDChanged();

    public decimal PerClaimAmt 
	{ 
		get
		{
			return _PerClaimAmt;
		}
		set
		{
			if(_PerClaimAmt != value)
			{
				OnPerClaimAmtChanging(value);
				_PerClaimAmt = value;
				OnPerClaimAmtChanged();
			}
		}
	}
	private decimal _PerClaimAmt;

	partial void OnPerClaimAmtChanging(decimal newValue);
	partial void OnPerClaimAmtChanged();

    public decimal PerPurchaseAmt 
	{ 
		get
		{
			return _PerPurchaseAmt;
		}
		set
		{
			if(_PerPurchaseAmt != value)
			{
				OnPerPurchaseAmtChanging(value);
				_PerPurchaseAmt = value;
				OnPerPurchaseAmtChanged();
			}
		}
	}
	private decimal _PerPurchaseAmt;

	partial void OnPerPurchaseAmtChanging(decimal newValue);
	partial void OnPerPurchaseAmtChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();
}

[Serializable]
public partial class OIOULOG : ObjectWithState
{

    public int OIOULOGID 
	{ 
		get
		{
			return _OIOULOGID;
		}
		set
		{
			if(_OIOULOGID != value)
			{
				OnOIOULOGIDChanging(value);
				_OIOULOGID = value;
				OnOIOULOGIDChanged();
			}
		}
	}
	private int _OIOULOGID;

	partial void OnOIOULOGIDChanging(int newValue);
	partial void OnOIOULOGIDChanged();

    public int OIOUID 
	{ 
		get
		{
			return _OIOUID;
		}
		set
		{
			if(_OIOUID != value)
			{
				OnOIOUIDChanging(value);
				_OIOUID = value;
				OnOIOUIDChanged();
			}
		}
	}
	private int _OIOUID;

	partial void OnOIOUIDChanging(int newValue);
	partial void OnOIOUIDChanged();

    public Nullable<int> StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private Nullable<int> _StateID;

	partial void OnStateIDChanging(Nullable<int> newValue);
	partial void OnStateIDChanged();

    public Nullable<decimal> ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private Nullable<decimal> _ParentID;

	partial void OnParentIDChanging(Nullable<decimal> newValue);
	partial void OnParentIDChanged();

    public decimal PerClaimAmt 
	{ 
		get
		{
			return _PerClaimAmt;
		}
		set
		{
			if(_PerClaimAmt != value)
			{
				OnPerClaimAmtChanging(value);
				_PerClaimAmt = value;
				OnPerClaimAmtChanged();
			}
		}
	}
	private decimal _PerClaimAmt;

	partial void OnPerClaimAmtChanging(decimal newValue);
	partial void OnPerClaimAmtChanged();

    public decimal PerPurchaseAmt 
	{ 
		get
		{
			return _PerPurchaseAmt;
		}
		set
		{
			if(_PerPurchaseAmt != value)
			{
				OnPerPurchaseAmtChanging(value);
				_PerPurchaseAmt = value;
				OnPerPurchaseAmtChanged();
			}
		}
	}
	private decimal _PerPurchaseAmt;

	partial void OnPerPurchaseAmtChanging(decimal newValue);
	partial void OnPerPurchaseAmtChanged();

    public string AppID 
	{ 
		get
		{
			return _AppID;
		}
		set
		{
			if(_AppID != value)
			{
				OnAppIDChanging(value);
				_AppID = value;
				OnAppIDChanged();
			}
		}
	}
	private string _AppID;

	partial void OnAppIDChanging(string newValue);
	partial void OnAppIDChanged();

    public System.DateTime Datetime 
	{ 
		get
		{
			return _Datetime;
		}
		set
		{
			if(_Datetime != value)
			{
				OnDatetimeChanging(value);
				_Datetime = value;
				OnDatetimeChanged();
			}
		}
	}
	private System.DateTime _Datetime;

	partial void OnDatetimeChanging(System.DateTime newValue);
	partial void OnDatetimeChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();
}

[Serializable]
public partial class OIPL : ObjectWithState
{
    public OIPL() 
    { 
        this.CGRPs = new HashSet<CGRP>();
        this.OTLTs = new HashSet<OTLT>();
        this.OTLTs1 = new HashSet<OTLT>();
        this.OGCRDs = new HashSet<OGCRD>();
        this.IPL1 = new HashSet<IPL1>();
    }


    public int PriceListID 
	{ 
		get
		{
			return _PriceListID;
		}
		set
		{
			if(_PriceListID != value)
			{
				OnPriceListIDChanging(value);
				_PriceListID = value;
				OnPriceListIDChanged();
			}
		}
	}
	private int _PriceListID;

	partial void OnPriceListIDChanging(int newValue);
	partial void OnPriceListIDChanged();

    public string Name 
	{ 
		get
		{
			return _Name;
		}
		set
		{
			if(_Name != value)
			{
				OnNameChanging(value);
				_Name = value;
				OnNameChanged();
			}
		}
	}
	private string _Name;

	partial void OnNameChanging(string newValue);
	partial void OnNameChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public string Currency 
	{ 
		get
		{
			return _Currency;
		}
		set
		{
			if(_Currency != value)
			{
				OnCurrencyChanging(value);
				_Currency = value;
				OnCurrencyChanged();
			}
		}
	}
	private string _Currency;

	partial void OnCurrencyChanging(string newValue);
	partial void OnCurrencyChanged();

    public Nullable<int> StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private Nullable<int> _StateID;

	partial void OnStateIDChanging(Nullable<int> newValue);
	partial void OnStateIDChanged();

    public System.DateTime EffectiveDate 
	{ 
		get
		{
			return _EffectiveDate;
		}
		set
		{
			if(_EffectiveDate != value)
			{
				OnEffectiveDateChanging(value);
				_EffectiveDate = value;
				OnEffectiveDateChanged();
			}
		}
	}
	private System.DateTime _EffectiveDate;

	partial void OnEffectiveDateChanging(System.DateTime newValue);
	partial void OnEffectiveDateChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string Description 
	{ 
		get
		{
			return _Description;
		}
		set
		{
			if(_Description != value)
			{
				OnDescriptionChanging(value);
				_Description = value;
				OnDescriptionChanged();
			}
		}
	}
	private string _Description;

	partial void OnDescriptionChanging(string newValue);
	partial void OnDescriptionChanged();

    public virtual ICollection<CGRP> CGRPs { get; set; }
    public virtual ICollection<OTLT> OTLTs { get; set; }
    public virtual ICollection<OTLT> OTLTs1 { get; set; }
    public virtual ICollection<OGCRD> OGCRDs { get; set; }
    public virtual ICollection<IPL1> IPL1 { get; set; }
}

[Serializable]
public partial class OITB : ObjectWithState
{
    public OITB() 
    { 
        this.OITGs = new HashSet<OITG>();
        this.OITMs = new HashSet<OITM>();
        this.SCM3 = new HashSet<SCM3>();
        this.SCM4 = new HashSet<SCM4>();
    }


    public int ItemGroupID 
	{ 
		get
		{
			return _ItemGroupID;
		}
		set
		{
			if(_ItemGroupID != value)
			{
				OnItemGroupIDChanging(value);
				_ItemGroupID = value;
				OnItemGroupIDChanged();
			}
		}
	}
	private int _ItemGroupID;

	partial void OnItemGroupIDChanging(int newValue);
	partial void OnItemGroupIDChanged();

    public string ItemGroupName 
	{ 
		get
		{
			return _ItemGroupName;
		}
		set
		{
			if(_ItemGroupName != value)
			{
				OnItemGroupNameChanging(value);
				_ItemGroupName = value;
				OnItemGroupNameChanged();
			}
		}
	}
	private string _ItemGroupName;

	partial void OnItemGroupNameChanging(string newValue);
	partial void OnItemGroupNameChanged();

    public int SortOrder 
	{ 
		get
		{
			return _SortOrder;
		}
		set
		{
			if(_SortOrder != value)
			{
				OnSortOrderChanging(value);
				_SortOrder = value;
				OnSortOrderChanged();
			}
		}
	}
	private int _SortOrder;

	partial void OnSortOrderChanging(int newValue);
	partial void OnSortOrderChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string Image 
	{ 
		get
		{
			return _Image;
		}
		set
		{
			if(_Image != value)
			{
				OnImageChanging(value);
				_Image = value;
				OnImageChanged();
			}
		}
	}
	private string _Image;

	partial void OnImageChanging(string newValue);
	partial void OnImageChanged();

    public string Banner 
	{ 
		get
		{
			return _Banner;
		}
		set
		{
			if(_Banner != value)
			{
				OnBannerChanging(value);
				_Banner = value;
				OnBannerChanged();
			}
		}
	}
	private string _Banner;

	partial void OnBannerChanging(string newValue);
	partial void OnBannerChanged();

    public virtual ICollection<OITG> OITGs { get; set; }
    public virtual ICollection<OITM> OITMs { get; set; }
    public virtual ICollection<SCM3> SCM3 { get; set; }
    public virtual ICollection<SCM4> SCM4 { get; set; }
}

[Serializable]
public partial class OITG : ObjectWithState
{
    public OITG() 
    { 
        this.OITMs = new HashSet<OITM>();
        this.SCM3 = new HashSet<SCM3>();
        this.SCM4 = new HashSet<SCM4>();
    }


    public int ItemSubGroupID 
	{ 
		get
		{
			return _ItemSubGroupID;
		}
		set
		{
			if(_ItemSubGroupID != value)
			{
				OnItemSubGroupIDChanging(value);
				_ItemSubGroupID = value;
				OnItemSubGroupIDChanged();
			}
		}
	}
	private int _ItemSubGroupID;

	partial void OnItemSubGroupIDChanging(int newValue);
	partial void OnItemSubGroupIDChanged();

    public string ItemSubGroupName 
	{ 
		get
		{
			return _ItemSubGroupName;
		}
		set
		{
			if(_ItemSubGroupName != value)
			{
				OnItemSubGroupNameChanging(value);
				_ItemSubGroupName = value;
				OnItemSubGroupNameChanged();
			}
		}
	}
	private string _ItemSubGroupName;

	partial void OnItemSubGroupNameChanging(string newValue);
	partial void OnItemSubGroupNameChanged();

    public int ItemGroupID 
	{ 
		get
		{
			return _ItemGroupID;
		}
		set
		{
			if(_ItemGroupID != value)
			{
				OnItemGroupIDChanging(value);
				_ItemGroupID = value;
				OnItemGroupIDChanged();
			}
		}
	}
	private int _ItemGroupID;

	partial void OnItemGroupIDChanging(int newValue);
	partial void OnItemGroupIDChanged();

    public int SortOrder 
	{ 
		get
		{
			return _SortOrder;
		}
		set
		{
			if(_SortOrder != value)
			{
				OnSortOrderChanging(value);
				_SortOrder = value;
				OnSortOrderChanged();
			}
		}
	}
	private int _SortOrder;

	partial void OnSortOrderChanging(int newValue);
	partial void OnSortOrderChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string Image 
	{ 
		get
		{
			return _Image;
		}
		set
		{
			if(_Image != value)
			{
				OnImageChanging(value);
				_Image = value;
				OnImageChanged();
			}
		}
	}
	private string _Image;

	partial void OnImageChanging(string newValue);
	partial void OnImageChanged();

    public virtual OITB OITB { get; set; }
    public virtual ICollection<OITM> OITMs { get; set; }
    public virtual ICollection<SCM3> SCM3 { get; set; }
    public virtual ICollection<SCM4> SCM4 { get; set; }
}

[Serializable]
public partial class OITM : ObjectWithState
{
    public OITM() 
    { 
        this.EOD2 = new HashSet<EOD2>();
        this.ITM1 = new HashSet<ITM1>();
        this.ITM11 = new HashSet<ITM1>();
        this.ITM2 = new HashSet<ITM2>();
        this.MID1 = new HashSet<MID1>();
        this.MIT1 = new HashSet<MIT1>();
        this.OGITMs = new HashSet<OGITM>();
        this.SCM3 = new HashSet<SCM3>();
        this.SCM4 = new HashSet<SCM4>();
        this.SITMs = new HashSet<SITM>();
        this.VND1 = new HashSet<VND1>();
        this.NRT1 = new HashSet<NRT1>();
        this.NTF1 = new HashSet<NTF1>();
        this.IPL1 = new HashSet<IPL1>();
        this.RET1 = new HashSet<RET1>();
        this.RDR1 = new HashSet<RDR1>();
        this.BOM1 = new HashSet<BOM1>();
        this.ITM4 = new HashSet<ITM4>();
        this.OBOMs = new HashSet<OBOM>();
        this.TASK4 = new HashSet<TASK4>();
        this.POS1 = new HashSet<POS1>();
        this.OPCATs = new HashSet<OPCAT>();
    }


    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public string ItemCode 
	{ 
		get
		{
			return _ItemCode;
		}
		set
		{
			if(_ItemCode != value)
			{
				OnItemCodeChanging(value);
				_ItemCode = value;
				OnItemCodeChanged();
			}
		}
	}
	private string _ItemCode;

	partial void OnItemCodeChanging(string newValue);
	partial void OnItemCodeChanged();

    public string ItemName 
	{ 
		get
		{
			return _ItemName;
		}
		set
		{
			if(_ItemName != value)
			{
				OnItemNameChanging(value);
				_ItemName = value;
				OnItemNameChanged();
			}
		}
	}
	private string _ItemName;

	partial void OnItemNameChanging(string newValue);
	partial void OnItemNameChanged();

    public string Image 
	{ 
		get
		{
			return _Image;
		}
		set
		{
			if(_Image != value)
			{
				OnImageChanging(value);
				_Image = value;
				OnImageChanged();
			}
		}
	}
	private string _Image;

	partial void OnImageChanging(string newValue);
	partial void OnImageChanged();

    public Nullable<System.DateTime> Date 
	{ 
		get
		{
			return _Date;
		}
		set
		{
			if(_Date != value)
			{
				OnDateChanging(value);
				_Date = value;
				OnDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _Date;

	partial void OnDateChanging(Nullable<System.DateTime> newValue);
	partial void OnDateChanged();

    public int GroupID 
	{ 
		get
		{
			return _GroupID;
		}
		set
		{
			if(_GroupID != value)
			{
				OnGroupIDChanging(value);
				_GroupID = value;
				OnGroupIDChanged();
			}
		}
	}
	private int _GroupID;

	partial void OnGroupIDChanging(int newValue);
	partial void OnGroupIDChanged();

    public Nullable<int> SubGroupID 
	{ 
		get
		{
			return _SubGroupID;
		}
		set
		{
			if(_SubGroupID != value)
			{
				OnSubGroupIDChanging(value);
				_SubGroupID = value;
				OnSubGroupIDChanged();
			}
		}
	}
	private Nullable<int> _SubGroupID;

	partial void OnSubGroupIDChanging(Nullable<int> newValue);
	partial void OnSubGroupIDChanged();

    public int ManagedBy 
	{ 
		get
		{
			return _ManagedBy;
		}
		set
		{
			if(_ManagedBy != value)
			{
				OnManagedByChanging(value);
				_ManagedBy = value;
				OnManagedByChanged();
			}
		}
	}
	private int _ManagedBy;

	partial void OnManagedByChanging(int newValue);
	partial void OnManagedByChanged();

    public int Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private int _Type;

	partial void OnTypeChanging(int newValue);
	partial void OnTypeChanged();

    public string BarCode 
	{ 
		get
		{
			return _BarCode;
		}
		set
		{
			if(_BarCode != value)
			{
				OnBarCodeChanging(value);
				_BarCode = value;
				OnBarCodeChanged();
			}
		}
	}
	private string _BarCode;

	partial void OnBarCodeChanging(string newValue);
	partial void OnBarCodeChanged();

    public string Ingredients 
	{ 
		get
		{
			return _Ingredients;
		}
		set
		{
			if(_Ingredients != value)
			{
				OnIngredientsChanging(value);
				_Ingredients = value;
				OnIngredientsChanged();
			}
		}
	}
	private string _Ingredients;

	partial void OnIngredientsChanging(string newValue);
	partial void OnIngredientsChanged();

    public bool IsSellable 
	{ 
		get
		{
			return _IsSellable;
		}
		set
		{
			if(_IsSellable != value)
			{
				OnIsSellableChanging(value);
				_IsSellable = value;
				OnIsSellableChanged();
			}
		}
	}
	private bool _IsSellable;

	partial void OnIsSellableChanging(bool newValue);
	partial void OnIsSellableChanged();

    public bool IsKOT 
	{ 
		get
		{
			return _IsKOT;
		}
		set
		{
			if(_IsKOT != value)
			{
				OnIsKOTChanging(value);
				_IsKOT = value;
				OnIsKOTChanged();
			}
		}
	}
	private bool _IsKOT;

	partial void OnIsKOTChanging(bool newValue);
	partial void OnIsKOTChanged();

    public Nullable<System.DateTime> AvailableAfter 
	{ 
		get
		{
			return _AvailableAfter;
		}
		set
		{
			if(_AvailableAfter != value)
			{
				OnAvailableAfterChanging(value);
				_AvailableAfter = value;
				OnAvailableAfterChanged();
			}
		}
	}
	private Nullable<System.DateTime> _AvailableAfter;

	partial void OnAvailableAfterChanging(Nullable<System.DateTime> newValue);
	partial void OnAvailableAfterChanged();

    public Nullable<System.DateTime> AvailableTill 
	{ 
		get
		{
			return _AvailableTill;
		}
		set
		{
			if(_AvailableTill != value)
			{
				OnAvailableTillChanging(value);
				_AvailableTill = value;
				OnAvailableTillChanged();
			}
		}
	}
	private Nullable<System.DateTime> _AvailableTill;

	partial void OnAvailableTillChanging(Nullable<System.DateTime> newValue);
	partial void OnAvailableTillChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string GujaratiItemName 
	{ 
		get
		{
			return _GujaratiItemName;
		}
		set
		{
			if(_GujaratiItemName != value)
			{
				OnGujaratiItemNameChanging(value);
				_GujaratiItemName = value;
				OnGujaratiItemNameChanged();
			}
		}
	}
	private string _GujaratiItemName;

	partial void OnGujaratiItemNameChanging(string newValue);
	partial void OnGujaratiItemNameChanged();

    public string HindiItemName 
	{ 
		get
		{
			return _HindiItemName;
		}
		set
		{
			if(_HindiItemName != value)
			{
				OnHindiItemNameChanging(value);
				_HindiItemName = value;
				OnHindiItemNameChanged();
			}
		}
	}
	private string _HindiItemName;

	partial void OnHindiItemNameChanging(string newValue);
	partial void OnHindiItemNameChanged();

    public decimal PPrice 
	{ 
		get
		{
			return _PPrice;
		}
		set
		{
			if(_PPrice != value)
			{
				OnPPriceChanging(value);
				_PPrice = value;
				OnPPriceChanged();
			}
		}
	}
	private decimal _PPrice;

	partial void OnPPriceChanging(decimal newValue);
	partial void OnPPriceChanged();

    public string HSNCode 
	{ 
		get
		{
			return _HSNCode;
		}
		set
		{
			if(_HSNCode != value)
			{
				OnHSNCodeChanging(value);
				_HSNCode = value;
				OnHSNCodeChanged();
			}
		}
	}
	private string _HSNCode;

	partial void OnHSNCodeChanging(string newValue);
	partial void OnHSNCodeChanged();

    public Nullable<int> GroupSortOrder 
	{ 
		get
		{
			return _GroupSortOrder;
		}
		set
		{
			if(_GroupSortOrder != value)
			{
				OnGroupSortOrderChanging(value);
				_GroupSortOrder = value;
				OnGroupSortOrderChanged();
			}
		}
	}
	private Nullable<int> _GroupSortOrder;

	partial void OnGroupSortOrderChanging(Nullable<int> newValue);
	partial void OnGroupSortOrderChanged();

    public Nullable<int> ItemSortOrder 
	{ 
		get
		{
			return _ItemSortOrder;
		}
		set
		{
			if(_ItemSortOrder != value)
			{
				OnItemSortOrderChanging(value);
				_ItemSortOrder = value;
				OnItemSortOrderChanged();
			}
		}
	}
	private Nullable<int> _ItemSortOrder;

	partial void OnItemSortOrderChanging(Nullable<int> newValue);
	partial void OnItemSortOrderChanged();

    public Nullable<decimal> MRP 
	{ 
		get
		{
			return _MRP;
		}
		set
		{
			if(_MRP != value)
			{
				OnMRPChanging(value);
				_MRP = value;
				OnMRPChanged();
			}
		}
	}
	private Nullable<decimal> _MRP;

	partial void OnMRPChanging(Nullable<decimal> newValue);
	partial void OnMRPChanged();

    public virtual ICollection<EOD2> EOD2 { get; set; }
    public virtual ICollection<ITM1> ITM1 { get; set; }
    public virtual ICollection<ITM1> ITM11 { get; set; }
    public virtual ICollection<ITM2> ITM2 { get; set; }
    public virtual ICollection<MID1> MID1 { get; set; }
    public virtual ICollection<MIT1> MIT1 { get; set; }
    public virtual ICollection<OGITM> OGITMs { get; set; }
    public virtual OITB OITB { get; set; }
    public virtual OITG OITG { get; set; }
    public virtual ICollection<SCM3> SCM3 { get; set; }
    public virtual ICollection<SCM4> SCM4 { get; set; }
    public virtual ICollection<SITM> SITMs { get; set; }
    public virtual OITP OITP { get; set; }
    public virtual ICollection<VND1> VND1 { get; set; }
    public virtual ICollection<NRT1> NRT1 { get; set; }
    public virtual ICollection<NTF1> NTF1 { get; set; }
    public virtual ICollection<IPL1> IPL1 { get; set; }
    public virtual ICollection<RET1> RET1 { get; set; }
    public virtual ICollection<RDR1> RDR1 { get; set; }
    public virtual ICollection<BOM1> BOM1 { get; set; }
    public virtual ICollection<ITM4> ITM4 { get; set; }
    public virtual ICollection<OBOM> OBOMs { get; set; }
    public virtual ICollection<TASK4> TASK4 { get; set; }
    public virtual ICollection<POS1> POS1 { get; set; }
    public virtual ICollection<OPCAT> OPCATs { get; set; }
}

[Serializable]
public partial class OITMIMG : ObjectWithState
{

    public int ItemMappingID 
	{ 
		get
		{
			return _ItemMappingID;
		}
		set
		{
			if(_ItemMappingID != value)
			{
				OnItemMappingIDChanging(value);
				_ItemMappingID = value;
				OnItemMappingIDChanged();
			}
		}
	}
	private int _ItemMappingID;

	partial void OnItemMappingIDChanging(int newValue);
	partial void OnItemMappingIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public string Logo 
	{ 
		get
		{
			return _Logo;
		}
		set
		{
			if(_Logo != value)
			{
				OnLogoChanging(value);
				_Logo = value;
				OnLogoChanged();
			}
		}
	}
	private string _Logo;

	partial void OnLogoChanging(string newValue);
	partial void OnLogoChanged();

    public Nullable<int> UpdateBy 
	{ 
		get
		{
			return _UpdateBy;
		}
		set
		{
			if(_UpdateBy != value)
			{
				OnUpdateByChanging(value);
				_UpdateBy = value;
				OnUpdateByChanged();
			}
		}
	}
	private Nullable<int> _UpdateBy;

	partial void OnUpdateByChanging(Nullable<int> newValue);
	partial void OnUpdateByChanged();

    public Nullable<System.DateTime> UpdateDatetime 
	{ 
		get
		{
			return _UpdateDatetime;
		}
		set
		{
			if(_UpdateDatetime != value)
			{
				OnUpdateDatetimeChanging(value);
				_UpdateDatetime = value;
				OnUpdateDatetimeChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdateDatetime;

	partial void OnUpdateDatetimeChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdateDatetimeChanged();

    public string ImageBase64 
	{ 
		get
		{
			return _ImageBase64;
		}
		set
		{
			if(_ImageBase64 != value)
			{
				OnImageBase64Changing(value);
				_ImageBase64 = value;
				OnImageBase64Changed();
			}
		}
	}
	private string _ImageBase64;

	partial void OnImageBase64Changing(string newValue);
	partial void OnImageBase64Changed();
}

[Serializable]
public partial class OITP : ObjectWithState
{
    public OITP() 
    { 
        this.OITMs = new HashSet<OITM>();
    }


    public int TypeID 
	{ 
		get
		{
			return _TypeID;
		}
		set
		{
			if(_TypeID != value)
			{
				OnTypeIDChanging(value);
				_TypeID = value;
				OnTypeIDChanged();
			}
		}
	}
	private int _TypeID;

	partial void OnTypeIDChanging(int newValue);
	partial void OnTypeIDChanged();

    public string TypeName 
	{ 
		get
		{
			return _TypeName;
		}
		set
		{
			if(_TypeName != value)
			{
				OnTypeNameChanging(value);
				_TypeName = value;
				OnTypeNameChanged();
			}
		}
	}
	private string _TypeName;

	partial void OnTypeNameChanging(string newValue);
	partial void OnTypeNameChanged();

    public string TypeDesc 
	{ 
		get
		{
			return _TypeDesc;
		}
		set
		{
			if(_TypeDesc != value)
			{
				OnTypeDescChanging(value);
				_TypeDesc = value;
				OnTypeDescChanged();
			}
		}
	}
	private string _TypeDesc;

	partial void OnTypeDescChanging(string newValue);
	partial void OnTypeDescChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<OITM> OITMs { get; set; }
}

[Serializable]
public partial class OJET : ObjectWithState
{

    public int JournalID 
	{ 
		get
		{
			return _JournalID;
		}
		set
		{
			if(_JournalID != value)
			{
				OnJournalIDChanging(value);
				_JournalID = value;
				OnJournalIDChanged();
			}
		}
	}
	private int _JournalID;

	partial void OnJournalIDChanging(int newValue);
	partial void OnJournalIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int GLAccID 
	{ 
		get
		{
			return _GLAccID;
		}
		set
		{
			if(_GLAccID != value)
			{
				OnGLAccIDChanging(value);
				_GLAccID = value;
				OnGLAccIDChanged();
			}
		}
	}
	private int _GLAccID;

	partial void OnGLAccIDChanging(int newValue);
	partial void OnGLAccIDChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public int ID 
	{ 
		get
		{
			return _ID;
		}
		set
		{
			if(_ID != value)
			{
				OnIDChanging(value);
				_ID = value;
				OnIDChanged();
			}
		}
	}
	private int _ID;

	partial void OnIDChanging(int newValue);
	partial void OnIDChanged();

    public decimal Available 
	{ 
		get
		{
			return _Available;
		}
		set
		{
			if(_Available != value)
			{
				OnAvailableChanging(value);
				_Available = value;
				OnAvailableChanged();
			}
		}
	}
	private decimal _Available;

	partial void OnAvailableChanging(decimal newValue);
	partial void OnAvailableChanged();

    public decimal Debit 
	{ 
		get
		{
			return _Debit;
		}
		set
		{
			if(_Debit != value)
			{
				OnDebitChanging(value);
				_Debit = value;
				OnDebitChanged();
			}
		}
	}
	private decimal _Debit;

	partial void OnDebitChanging(decimal newValue);
	partial void OnDebitChanged();

    public decimal Credit 
	{ 
		get
		{
			return _Credit;
		}
		set
		{
			if(_Credit != value)
			{
				OnCreditChanging(value);
				_Credit = value;
				OnCreditChanged();
			}
		}
	}
	private decimal _Credit;

	partial void OnCreditChanging(decimal newValue);
	partial void OnCreditChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsMobile 
	{ 
		get
		{
			return _IsMobile;
		}
		set
		{
			if(_IsMobile != value)
			{
				OnIsMobileChanging(value);
				_IsMobile = value;
				OnIsMobileChanged();
			}
		}
	}
	private bool _IsMobile;

	partial void OnIsMobileChanging(bool newValue);
	partial void OnIsMobileChanged();

    public virtual OGLA OGLA { get; set; }
}

[Serializable]
public partial class OLVAP : ObjectWithState
{

    public int OLVAPID 
	{ 
		get
		{
			return _OLVAPID;
		}
		set
		{
			if(_OLVAPID != value)
			{
				OnOLVAPIDChanging(value);
				_OLVAPID = value;
				OnOLVAPIDChanged();
			}
		}
	}
	private int _OLVAPID;

	partial void OnOLVAPIDChanging(int newValue);
	partial void OnOLVAPIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int LeaveReqID 
	{ 
		get
		{
			return _LeaveReqID;
		}
		set
		{
			if(_LeaveReqID != value)
			{
				OnLeaveReqIDChanging(value);
				_LeaveReqID = value;
				OnLeaveReqIDChanged();
			}
		}
	}
	private int _LeaveReqID;

	partial void OnLeaveReqIDChanging(int newValue);
	partial void OnLeaveReqIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int ManagerID 
	{ 
		get
		{
			return _ManagerID;
		}
		set
		{
			if(_ManagerID != value)
			{
				OnManagerIDChanging(value);
				_ManagerID = value;
				OnManagerIDChanged();
			}
		}
	}
	private int _ManagerID;

	partial void OnManagerIDChanging(int newValue);
	partial void OnManagerIDChanged();

    public int LeaveTypeID 
	{ 
		get
		{
			return _LeaveTypeID;
		}
		set
		{
			if(_LeaveTypeID != value)
			{
				OnLeaveTypeIDChanging(value);
				_LeaveTypeID = value;
				OnLeaveTypeIDChanged();
			}
		}
	}
	private int _LeaveTypeID;

	partial void OnLeaveTypeIDChanging(int newValue);
	partial void OnLeaveTypeIDChanged();

    public decimal NoOfDays 
	{ 
		get
		{
			return _NoOfDays;
		}
		set
		{
			if(_NoOfDays != value)
			{
				OnNoOfDaysChanging(value);
				_NoOfDays = value;
				OnNoOfDaysChanged();
			}
		}
	}
	private decimal _NoOfDays;

	partial void OnNoOfDaysChanging(decimal newValue);
	partial void OnNoOfDaysChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> NextManagerID 
	{ 
		get
		{
			return _NextManagerID;
		}
		set
		{
			if(_NextManagerID != value)
			{
				OnNextManagerIDChanging(value);
				_NextManagerID = value;
				OnNextManagerIDChanged();
			}
		}
	}
	private Nullable<int> _NextManagerID;

	partial void OnNextManagerIDChanging(Nullable<int> newValue);
	partial void OnNextManagerIDChanged();

    public virtual OEMP OEMP { get; set; }
    public virtual OLVRQ OLVRQ { get; set; }
}

[Serializable]
public partial class OLVBL : ObjectWithState
{

    public int LeaveBalanceID 
	{ 
		get
		{
			return _LeaveBalanceID;
		}
		set
		{
			if(_LeaveBalanceID != value)
			{
				OnLeaveBalanceIDChanging(value);
				_LeaveBalanceID = value;
				OnLeaveBalanceIDChanged();
			}
		}
	}
	private int _LeaveBalanceID;

	partial void OnLeaveBalanceIDChanging(int newValue);
	partial void OnLeaveBalanceIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int LeaveTypeID 
	{ 
		get
		{
			return _LeaveTypeID;
		}
		set
		{
			if(_LeaveTypeID != value)
			{
				OnLeaveTypeIDChanging(value);
				_LeaveTypeID = value;
				OnLeaveTypeIDChanged();
			}
		}
	}
	private int _LeaveTypeID;

	partial void OnLeaveTypeIDChanging(int newValue);
	partial void OnLeaveTypeIDChanged();

    public decimal LeaveBalance 
	{ 
		get
		{
			return _LeaveBalance;
		}
		set
		{
			if(_LeaveBalance != value)
			{
				OnLeaveBalanceChanging(value);
				_LeaveBalance = value;
				OnLeaveBalanceChanged();
			}
		}
	}
	private decimal _LeaveBalance;

	partial void OnLeaveBalanceChanging(decimal newValue);
	partial void OnLeaveBalanceChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual OEMP OEMP { get; set; }
    public virtual OLVTY OLVTY { get; set; }
}

[Serializable]
public partial class OLVHO : ObjectWithState
{

    public int HolidayLeaveID 
	{ 
		get
		{
			return _HolidayLeaveID;
		}
		set
		{
			if(_HolidayLeaveID != value)
			{
				OnHolidayLeaveIDChanging(value);
				_HolidayLeaveID = value;
				OnHolidayLeaveIDChanged();
			}
		}
	}
	private int _HolidayLeaveID;

	partial void OnHolidayLeaveIDChanging(int newValue);
	partial void OnHolidayLeaveIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private int _StateID;

	partial void OnStateIDChanging(int newValue);
	partial void OnStateIDChanged();

    public string HolidayName 
	{ 
		get
		{
			return _HolidayName;
		}
		set
		{
			if(_HolidayName != value)
			{
				OnHolidayNameChanging(value);
				_HolidayName = value;
				OnHolidayNameChanged();
			}
		}
	}
	private string _HolidayName;

	partial void OnHolidayNameChanging(string newValue);
	partial void OnHolidayNameChanged();

    public System.DateTime date 
	{ 
		get
		{
			return _date;
		}
		set
		{
			if(_date != value)
			{
				OndateChanging(value);
				_date = value;
				OndateChanged();
			}
		}
	}
	private System.DateTime _date;

	partial void OndateChanging(System.DateTime newValue);
	partial void OndateChanged();

    public string LeaveMode 
	{ 
		get
		{
			return _LeaveMode;
		}
		set
		{
			if(_LeaveMode != value)
			{
				OnLeaveModeChanging(value);
				_LeaveMode = value;
				OnLeaveModeChanged();
			}
		}
	}
	private string _LeaveMode;

	partial void OnLeaveModeChanging(string newValue);
	partial void OnLeaveModeChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();
}

[Serializable]
public partial class OLVPY : ObjectWithState
{

    public int LeavePolicyID 
	{ 
		get
		{
			return _LeavePolicyID;
		}
		set
		{
			if(_LeavePolicyID != value)
			{
				OnLeavePolicyIDChanging(value);
				_LeavePolicyID = value;
				OnLeavePolicyIDChanged();
			}
		}
	}
	private int _LeavePolicyID;

	partial void OnLeavePolicyIDChanging(int newValue);
	partial void OnLeavePolicyIDChanged();

    public Nullable<System.DateTime> FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _FromDate;

	partial void OnFromDateChanging(Nullable<System.DateTime> newValue);
	partial void OnFromDateChanged();

    public Nullable<System.DateTime> ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ToDate;

	partial void OnToDateChanging(Nullable<System.DateTime> newValue);
	partial void OnToDateChanged();

    public Nullable<int> StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private Nullable<int> _StateID;

	partial void OnStateIDChanging(Nullable<int> newValue);
	partial void OnStateIDChanged();

    public Nullable<int> PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private Nullable<int> _PlantID;

	partial void OnPlantIDChanging(Nullable<int> newValue);
	partial void OnPlantIDChanged();

    public string FilePath 
	{ 
		get
		{
			return _FilePath;
		}
		set
		{
			if(_FilePath != value)
			{
				OnFilePathChanging(value);
				_FilePath = value;
				OnFilePathChanged();
			}
		}
	}
	private string _FilePath;

	partial void OnFilePathChanging(string newValue);
	partial void OnFilePathChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public string PolicyName 
	{ 
		get
		{
			return _PolicyName;
		}
		set
		{
			if(_PolicyName != value)
			{
				OnPolicyNameChanging(value);
				_PolicyName = value;
				OnPolicyNameChanged();
			}
		}
	}
	private string _PolicyName;

	partial void OnPolicyNameChanging(string newValue);
	partial void OnPolicyNameChanged();
}

[Serializable]
public partial class OLVRQ : ObjectWithState
{
    public OLVRQ() 
    { 
        this.OLVAPs = new HashSet<OLVAP>();
    }


    public int LeaveReqID 
	{ 
		get
		{
			return _LeaveReqID;
		}
		set
		{
			if(_LeaveReqID != value)
			{
				OnLeaveReqIDChanging(value);
				_LeaveReqID = value;
				OnLeaveReqIDChanged();
			}
		}
	}
	private int _LeaveReqID;

	partial void OnLeaveReqIDChanging(int newValue);
	partial void OnLeaveReqIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int ManagerID 
	{ 
		get
		{
			return _ManagerID;
		}
		set
		{
			if(_ManagerID != value)
			{
				OnManagerIDChanging(value);
				_ManagerID = value;
				OnManagerIDChanged();
			}
		}
	}
	private int _ManagerID;

	partial void OnManagerIDChanging(int newValue);
	partial void OnManagerIDChanged();

    public int LeaveTypeID 
	{ 
		get
		{
			return _LeaveTypeID;
		}
		set
		{
			if(_LeaveTypeID != value)
			{
				OnLeaveTypeIDChanging(value);
				_LeaveTypeID = value;
				OnLeaveTypeIDChanged();
			}
		}
	}
	private int _LeaveTypeID;

	partial void OnLeaveTypeIDChanging(int newValue);
	partial void OnLeaveTypeIDChanged();

    public string ApplicationType 
	{ 
		get
		{
			return _ApplicationType;
		}
		set
		{
			if(_ApplicationType != value)
			{
				OnApplicationTypeChanging(value);
				_ApplicationType = value;
				OnApplicationTypeChanged();
			}
		}
	}
	private string _ApplicationType;

	partial void OnApplicationTypeChanging(string newValue);
	partial void OnApplicationTypeChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public decimal NoOfDays 
	{ 
		get
		{
			return _NoOfDays;
		}
		set
		{
			if(_NoOfDays != value)
			{
				OnNoOfDaysChanging(value);
				_NoOfDays = value;
				OnNoOfDaysChanged();
			}
		}
	}
	private decimal _NoOfDays;

	partial void OnNoOfDaysChanging(decimal newValue);
	partial void OnNoOfDaysChanged();

    public System.DateTime FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private System.DateTime _FromDate;

	partial void OnFromDateChanging(System.DateTime newValue);
	partial void OnFromDateChanged();

    public System.DateTime ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private System.DateTime _ToDate;

	partial void OnToDateChanging(System.DateTime newValue);
	partial void OnToDateChanged();

    public string FromLeaveMode 
	{ 
		get
		{
			return _FromLeaveMode;
		}
		set
		{
			if(_FromLeaveMode != value)
			{
				OnFromLeaveModeChanging(value);
				_FromLeaveMode = value;
				OnFromLeaveModeChanged();
			}
		}
	}
	private string _FromLeaveMode;

	partial void OnFromLeaveModeChanging(string newValue);
	partial void OnFromLeaveModeChanged();

    public string ToLeaveMode 
	{ 
		get
		{
			return _ToLeaveMode;
		}
		set
		{
			if(_ToLeaveMode != value)
			{
				OnToLeaveModeChanging(value);
				_ToLeaveMode = value;
				OnToLeaveModeChanged();
			}
		}
	}
	private string _ToLeaveMode;

	partial void OnToLeaveModeChanging(string newValue);
	partial void OnToLeaveModeChanged();

    public string Reason 
	{ 
		get
		{
			return _Reason;
		}
		set
		{
			if(_Reason != value)
			{
				OnReasonChanging(value);
				_Reason = value;
				OnReasonChanged();
			}
		}
	}
	private string _Reason;

	partial void OnReasonChanging(string newValue);
	partial void OnReasonChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> NextManagerID 
	{ 
		get
		{
			return _NextManagerID;
		}
		set
		{
			if(_NextManagerID != value)
			{
				OnNextManagerIDChanging(value);
				_NextManagerID = value;
				OnNextManagerIDChanged();
			}
		}
	}
	private Nullable<int> _NextManagerID;

	partial void OnNextManagerIDChanging(Nullable<int> newValue);
	partial void OnNextManagerIDChanged();

    public virtual ICollection<OLVAP> OLVAPs { get; set; }
}

[Serializable]
public partial class OLVTY : ObjectWithState
{
    public OLVTY() 
    { 
        this.OLVBLs = new HashSet<OLVBL>();
    }


    public int LeaveTypeID 
	{ 
		get
		{
			return _LeaveTypeID;
		}
		set
		{
			if(_LeaveTypeID != value)
			{
				OnLeaveTypeIDChanging(value);
				_LeaveTypeID = value;
				OnLeaveTypeIDChanged();
			}
		}
	}
	private int _LeaveTypeID;

	partial void OnLeaveTypeIDChanging(int newValue);
	partial void OnLeaveTypeIDChanged();

    public string LeaveCode 
	{ 
		get
		{
			return _LeaveCode;
		}
		set
		{
			if(_LeaveCode != value)
			{
				OnLeaveCodeChanging(value);
				_LeaveCode = value;
				OnLeaveCodeChanged();
			}
		}
	}
	private string _LeaveCode;

	partial void OnLeaveCodeChanging(string newValue);
	partial void OnLeaveCodeChanged();

    public string LeaveName 
	{ 
		get
		{
			return _LeaveName;
		}
		set
		{
			if(_LeaveName != value)
			{
				OnLeaveNameChanging(value);
				_LeaveName = value;
				OnLeaveNameChanged();
			}
		}
	}
	private string _LeaveName;

	partial void OnLeaveNameChanging(string newValue);
	partial void OnLeaveNameChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual ICollection<OLVBL> OLVBLs { get; set; }
}

[Serializable]
public partial class OMCLM : ObjectWithState
{
    public OMCLM() 
    { 
        this.MCLM1 = new HashSet<MCLM1>();
    }


    public int MClaimID 
	{ 
		get
		{
			return _MClaimID;
		}
		set
		{
			if(_MClaimID != value)
			{
				OnMClaimIDChanging(value);
				_MClaimID = value;
				OnMClaimIDChanged();
			}
		}
	}
	private int _MClaimID;

	partial void OnMClaimIDChanging(int newValue);
	partial void OnMClaimIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public System.DateTime Date 
	{ 
		get
		{
			return _Date;
		}
		set
		{
			if(_Date != value)
			{
				OnDateChanging(value);
				_Date = value;
				OnDateChanged();
			}
		}
	}
	private System.DateTime _Date;

	partial void OnDateChanging(System.DateTime newValue);
	partial void OnDateChanged();

    public string VehicleNo 
	{ 
		get
		{
			return _VehicleNo;
		}
		set
		{
			if(_VehicleNo != value)
			{
				OnVehicleNoChanging(value);
				_VehicleNo = value;
				OnVehicleNoChanged();
			}
		}
	}
	private string _VehicleNo;

	partial void OnVehicleNoChanging(string newValue);
	partial void OnVehicleNoChanged();

    public string TransporterName 
	{ 
		get
		{
			return _TransporterName;
		}
		set
		{
			if(_TransporterName != value)
			{
				OnTransporterNameChanging(value);
				_TransporterName = value;
				OnTransporterNameChanged();
			}
		}
	}
	private string _TransporterName;

	partial void OnTransporterNameChanging(string newValue);
	partial void OnTransporterNameChanged();

    public string LRNo 
	{ 
		get
		{
			return _LRNo;
		}
		set
		{
			if(_LRNo != value)
			{
				OnLRNoChanging(value);
				_LRNo = value;
				OnLRNoChanged();
			}
		}
	}
	private string _LRNo;

	partial void OnLRNoChanging(string newValue);
	partial void OnLRNoChanged();

    public Nullable<System.DateTime> LRDate 
	{ 
		get
		{
			return _LRDate;
		}
		set
		{
			if(_LRDate != value)
			{
				OnLRDateChanging(value);
				_LRDate = value;
				OnLRDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _LRDate;

	partial void OnLRDateChanging(Nullable<System.DateTime> newValue);
	partial void OnLRDateChanged();

    public string ChallanNo 
	{ 
		get
		{
			return _ChallanNo;
		}
		set
		{
			if(_ChallanNo != value)
			{
				OnChallanNoChanging(value);
				_ChallanNo = value;
				OnChallanNoChanged();
			}
		}
	}
	private string _ChallanNo;

	partial void OnChallanNoChanging(string newValue);
	partial void OnChallanNoChanged();

    public Nullable<System.DateTime> ChallanDate 
	{ 
		get
		{
			return _ChallanDate;
		}
		set
		{
			if(_ChallanDate != value)
			{
				OnChallanDateChanging(value);
				_ChallanDate = value;
				OnChallanDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ChallanDate;

	partial void OnChallanDateChanging(Nullable<System.DateTime> newValue);
	partial void OnChallanDateChanged();

    public decimal Amount 
	{ 
		get
		{
			return _Amount;
		}
		set
		{
			if(_Amount != value)
			{
				OnAmountChanging(value);
				_Amount = value;
				OnAmountChanged();
			}
		}
	}
	private decimal _Amount;

	partial void OnAmountChanging(decimal newValue);
	partial void OnAmountChanged();

    public string SAPDocNo 
	{ 
		get
		{
			return _SAPDocNo;
		}
		set
		{
			if(_SAPDocNo != value)
			{
				OnSAPDocNoChanging(value);
				_SAPDocNo = value;
				OnSAPDocNoChanged();
			}
		}
	}
	private string _SAPDocNo;

	partial void OnSAPDocNoChanging(string newValue);
	partial void OnSAPDocNoChanged();

    public string SAPErrMsg 
	{ 
		get
		{
			return _SAPErrMsg;
		}
		set
		{
			if(_SAPErrMsg != value)
			{
				OnSAPErrMsgChanging(value);
				_SAPErrMsg = value;
				OnSAPErrMsgChanged();
			}
		}
	}
	private string _SAPErrMsg;

	partial void OnSAPErrMsgChanging(string newValue);
	partial void OnSAPErrMsgChanged();

    public string Flag 
	{ 
		get
		{
			return _Flag;
		}
		set
		{
			if(_Flag != value)
			{
				OnFlagChanging(value);
				_Flag = value;
				OnFlagChanged();
			}
		}
	}
	private string _Flag;

	partial void OnFlagChanging(string newValue);
	partial void OnFlagChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public virtual ICollection<MCLM1> MCLM1 { get; set; }
}

[Serializable]
public partial class OMDAP : ObjectWithState
{

    public int OMDAPID 
	{ 
		get
		{
			return _OMDAPID;
		}
		set
		{
			if(_OMDAPID != value)
			{
				OnOMDAPIDChanging(value);
				_OMDAPID = value;
				OnOMDAPIDChanged();
			}
		}
	}
	private int _OMDAPID;

	partial void OnOMDAPIDChanging(int newValue);
	partial void OnOMDAPIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int OMDRQID 
	{ 
		get
		{
			return _OMDRQID;
		}
		set
		{
			if(_OMDRQID != value)
			{
				OnOMDRQIDChanging(value);
				_OMDRQID = value;
				OnOMDRQIDChanged();
			}
		}
	}
	private int _OMDRQID;

	partial void OnOMDRQIDChanging(int newValue);
	partial void OnOMDRQIDChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> NextManagerID 
	{ 
		get
		{
			return _NextManagerID;
		}
		set
		{
			if(_NextManagerID != value)
			{
				OnNextManagerIDChanging(value);
				_NextManagerID = value;
				OnNextManagerIDChanged();
			}
		}
	}
	private Nullable<int> _NextManagerID;

	partial void OnNextManagerIDChanging(Nullable<int> newValue);
	partial void OnNextManagerIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public decimal CompanyDisc 
	{ 
		get
		{
			return _CompanyDisc;
		}
		set
		{
			if(_CompanyDisc != value)
			{
				OnCompanyDiscChanging(value);
				_CompanyDisc = value;
				OnCompanyDiscChanged();
			}
		}
	}
	private decimal _CompanyDisc;

	partial void OnCompanyDiscChanging(decimal newValue);
	partial void OnCompanyDiscChanged();

    public decimal DistributorDisc 
	{ 
		get
		{
			return _DistributorDisc;
		}
		set
		{
			if(_DistributorDisc != value)
			{
				OnDistributorDiscChanging(value);
				_DistributorDisc = value;
				OnDistributorDiscChanged();
			}
		}
	}
	private decimal _DistributorDisc;

	partial void OnDistributorDiscChanging(decimal newValue);
	partial void OnDistributorDiscChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public virtual OEMP OEMP { get; set; }
    public virtual OMDRQ OMDRQ { get; set; }
}

[Serializable]
public partial class OMDRQ : ObjectWithState
{
    public OMDRQ() 
    { 
        this.OMDAPs = new HashSet<OMDAP>();
    }


    public int OMDRQID 
	{ 
		get
		{
			return _OMDRQID;
		}
		set
		{
			if(_OMDRQID != value)
			{
				OnOMDRQIDChanging(value);
				_OMDRQID = value;
				OnOMDRQIDChanged();
			}
		}
	}
	private int _OMDRQID;

	partial void OnOMDRQIDChanging(int newValue);
	partial void OnOMDRQIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public string RequestType 
	{ 
		get
		{
			return _RequestType;
		}
		set
		{
			if(_RequestType != value)
			{
				OnRequestTypeChanging(value);
				_RequestType = value;
				OnRequestTypeChanged();
			}
		}
	}
	private string _RequestType;

	partial void OnRequestTypeChanging(string newValue);
	partial void OnRequestTypeChanged();

    public int DivisionID 
	{ 
		get
		{
			return _DivisionID;
		}
		set
		{
			if(_DivisionID != value)
			{
				OnDivisionIDChanging(value);
				_DivisionID = value;
				OnDivisionIDChanged();
			}
		}
	}
	private int _DivisionID;

	partial void OnDivisionIDChanging(int newValue);
	partial void OnDivisionIDChanged();

    public System.DateTime FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private System.DateTime _FromDate;

	partial void OnFromDateChanging(System.DateTime newValue);
	partial void OnFromDateChanged();

    public System.DateTime ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private System.DateTime _ToDate;

	partial void OnToDateChanging(System.DateTime newValue);
	partial void OnToDateChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> NextManagerID 
	{ 
		get
		{
			return _NextManagerID;
		}
		set
		{
			if(_NextManagerID != value)
			{
				OnNextManagerIDChanging(value);
				_NextManagerID = value;
				OnNextManagerIDChanged();
			}
		}
	}
	private Nullable<int> _NextManagerID;

	partial void OnNextManagerIDChanging(Nullable<int> newValue);
	partial void OnNextManagerIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public decimal CompanyDisc 
	{ 
		get
		{
			return _CompanyDisc;
		}
		set
		{
			if(_CompanyDisc != value)
			{
				OnCompanyDiscChanging(value);
				_CompanyDisc = value;
				OnCompanyDiscChanged();
			}
		}
	}
	private decimal _CompanyDisc;

	partial void OnCompanyDiscChanging(decimal newValue);
	partial void OnCompanyDiscChanged();

    public decimal DistributorDisc 
	{ 
		get
		{
			return _DistributorDisc;
		}
		set
		{
			if(_DistributorDisc != value)
			{
				OnDistributorDiscChanging(value);
				_DistributorDisc = value;
				OnDistributorDiscChanged();
			}
		}
	}
	private decimal _DistributorDisc;

	partial void OnDistributorDiscChanging(decimal newValue);
	partial void OnDistributorDiscChanged();

    public decimal ExistingCompanyDisc 
	{ 
		get
		{
			return _ExistingCompanyDisc;
		}
		set
		{
			if(_ExistingCompanyDisc != value)
			{
				OnExistingCompanyDiscChanging(value);
				_ExistingCompanyDisc = value;
				OnExistingCompanyDiscChanged();
			}
		}
	}
	private decimal _ExistingCompanyDisc;

	partial void OnExistingCompanyDiscChanging(decimal newValue);
	partial void OnExistingCompanyDiscChanged();

    public decimal ExistingDistributorDisc 
	{ 
		get
		{
			return _ExistingDistributorDisc;
		}
		set
		{
			if(_ExistingDistributorDisc != value)
			{
				OnExistingDistributorDiscChanging(value);
				_ExistingDistributorDisc = value;
				OnExistingDistributorDiscChanged();
			}
		}
	}
	private decimal _ExistingDistributorDisc;

	partial void OnExistingDistributorDiscChanging(decimal newValue);
	partial void OnExistingDistributorDiscChanged();

    public decimal ExpectedSale 
	{ 
		get
		{
			return _ExpectedSale;
		}
		set
		{
			if(_ExpectedSale != value)
			{
				OnExpectedSaleChanging(value);
				_ExpectedSale = value;
				OnExpectedSaleChanged();
			}
		}
	}
	private decimal _ExpectedSale;

	partial void OnExpectedSaleChanging(decimal newValue);
	partial void OnExpectedSaleChanged();

    public decimal NetValueCY 
	{ 
		get
		{
			return _NetValueCY;
		}
		set
		{
			if(_NetValueCY != value)
			{
				OnNetValueCYChanging(value);
				_NetValueCY = value;
				OnNetValueCYChanged();
			}
		}
	}
	private decimal _NetValueCY;

	partial void OnNetValueCYChanging(decimal newValue);
	partial void OnNetValueCYChanged();

    public decimal NetLtrCY 
	{ 
		get
		{
			return _NetLtrCY;
		}
		set
		{
			if(_NetLtrCY != value)
			{
				OnNetLtrCYChanging(value);
				_NetLtrCY = value;
				OnNetLtrCYChanged();
			}
		}
	}
	private decimal _NetLtrCY;

	partial void OnNetLtrCYChanging(decimal newValue);
	partial void OnNetLtrCYChanged();

    public decimal NetValueLY 
	{ 
		get
		{
			return _NetValueLY;
		}
		set
		{
			if(_NetValueLY != value)
			{
				OnNetValueLYChanging(value);
				_NetValueLY = value;
				OnNetValueLYChanged();
			}
		}
	}
	private decimal _NetValueLY;

	partial void OnNetValueLYChanging(decimal newValue);
	partial void OnNetValueLYChanged();

    public decimal NetLtrLY 
	{ 
		get
		{
			return _NetLtrLY;
		}
		set
		{
			if(_NetLtrLY != value)
			{
				OnNetLtrLYChanging(value);
				_NetLtrLY = value;
				OnNetLtrLYChanged();
			}
		}
	}
	private decimal _NetLtrLY;

	partial void OnNetLtrLYChanging(decimal newValue);
	partial void OnNetLtrLYChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public virtual OEMP OEMP { get; set; }
    public virtual ICollection<OMDAP> OMDAPs { get; set; }
}

[Serializable]
public partial class OMID : ObjectWithState
{
    public OMID() 
    { 
        this.MID1 = new HashSet<MID1>();
        this.MID2 = new HashSet<MID2>();
    }


    public int InwardID 
	{ 
		get
		{
			return _InwardID;
		}
		set
		{
			if(_InwardID != value)
			{
				OnInwardIDChanging(value);
				_InwardID = value;
				OnInwardIDChanged();
			}
		}
	}
	private int _InwardID;

	partial void OnInwardIDChanging(int newValue);
	partial void OnInwardIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public Nullable<int> VendorID 
	{ 
		get
		{
			return _VendorID;
		}
		set
		{
			if(_VendorID != value)
			{
				OnVendorIDChanging(value);
				_VendorID = value;
				OnVendorIDChanged();
			}
		}
	}
	private Nullable<int> _VendorID;

	partial void OnVendorIDChanging(Nullable<int> newValue);
	partial void OnVendorIDChanged();

    public decimal VendorParentID 
	{ 
		get
		{
			return _VendorParentID;
		}
		set
		{
			if(_VendorParentID != value)
			{
				OnVendorParentIDChanging(value);
				_VendorParentID = value;
				OnVendorParentIDChanged();
			}
		}
	}
	private decimal _VendorParentID;

	partial void OnVendorParentIDChanging(decimal newValue);
	partial void OnVendorParentIDChanged();

    public int InwardType 
	{ 
		get
		{
			return _InwardType;
		}
		set
		{
			if(_InwardType != value)
			{
				OnInwardTypeChanging(value);
				_InwardType = value;
				OnInwardTypeChanged();
			}
		}
	}
	private int _InwardType;

	partial void OnInwardTypeChanging(int newValue);
	partial void OnInwardTypeChanged();

    public Nullable<int> FromWhsID 
	{ 
		get
		{
			return _FromWhsID;
		}
		set
		{
			if(_FromWhsID != value)
			{
				OnFromWhsIDChanging(value);
				_FromWhsID = value;
				OnFromWhsIDChanged();
			}
		}
	}
	private Nullable<int> _FromWhsID;

	partial void OnFromWhsIDChanging(Nullable<int> newValue);
	partial void OnFromWhsIDChanged();

    public Nullable<int> ToWhsID 
	{ 
		get
		{
			return _ToWhsID;
		}
		set
		{
			if(_ToWhsID != value)
			{
				OnToWhsIDChanging(value);
				_ToWhsID = value;
				OnToWhsIDChanged();
			}
		}
	}
	private Nullable<int> _ToWhsID;

	partial void OnToWhsIDChanging(Nullable<int> newValue);
	partial void OnToWhsIDChanged();

    public System.DateTime Date 
	{ 
		get
		{
			return _Date;
		}
		set
		{
			if(_Date != value)
			{
				OnDateChanging(value);
				_Date = value;
				OnDateChanged();
			}
		}
	}
	private System.DateTime _Date;

	partial void OnDateChanging(System.DateTime newValue);
	partial void OnDateChanged();

    public string Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private string _Status;

	partial void OnStatusChanging(string newValue);
	partial void OnStatusChanged();

    public string BillNumber 
	{ 
		get
		{
			return _BillNumber;
		}
		set
		{
			if(_BillNumber != value)
			{
				OnBillNumberChanging(value);
				_BillNumber = value;
				OnBillNumberChanged();
			}
		}
	}
	private string _BillNumber;

	partial void OnBillNumberChanging(string newValue);
	partial void OnBillNumberChanged();

    public Nullable<System.DateTime> BillDate 
	{ 
		get
		{
			return _BillDate;
		}
		set
		{
			if(_BillDate != value)
			{
				OnBillDateChanging(value);
				_BillDate = value;
				OnBillDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _BillDate;

	partial void OnBillDateChanging(Nullable<System.DateTime> newValue);
	partial void OnBillDateChanged();

    public Nullable<decimal> SubTotal 
	{ 
		get
		{
			return _SubTotal;
		}
		set
		{
			if(_SubTotal != value)
			{
				OnSubTotalChanging(value);
				_SubTotal = value;
				OnSubTotalChanged();
			}
		}
	}
	private Nullable<decimal> _SubTotal;

	partial void OnSubTotalChanging(Nullable<decimal> newValue);
	partial void OnSubTotalChanged();

    public Nullable<decimal> Discount 
	{ 
		get
		{
			return _Discount;
		}
		set
		{
			if(_Discount != value)
			{
				OnDiscountChanging(value);
				_Discount = value;
				OnDiscountChanged();
			}
		}
	}
	private Nullable<decimal> _Discount;

	partial void OnDiscountChanging(Nullable<decimal> newValue);
	partial void OnDiscountChanged();

    public Nullable<decimal> Rounding 
	{ 
		get
		{
			return _Rounding;
		}
		set
		{
			if(_Rounding != value)
			{
				OnRoundingChanging(value);
				_Rounding = value;
				OnRoundingChanged();
			}
		}
	}
	private Nullable<decimal> _Rounding;

	partial void OnRoundingChanging(Nullable<decimal> newValue);
	partial void OnRoundingChanged();

    public Nullable<decimal> Tax 
	{ 
		get
		{
			return _Tax;
		}
		set
		{
			if(_Tax != value)
			{
				OnTaxChanging(value);
				_Tax = value;
				OnTaxChanged();
			}
		}
	}
	private Nullable<decimal> _Tax;

	partial void OnTaxChanging(Nullable<decimal> newValue);
	partial void OnTaxChanged();

    public Nullable<decimal> Total 
	{ 
		get
		{
			return _Total;
		}
		set
		{
			if(_Total != value)
			{
				OnTotalChanging(value);
				_Total = value;
				OnTotalChanged();
			}
		}
	}
	private Nullable<decimal> _Total;

	partial void OnTotalChanging(Nullable<decimal> newValue);
	partial void OnTotalChanged();

    public Nullable<decimal> Paid 
	{ 
		get
		{
			return _Paid;
		}
		set
		{
			if(_Paid != value)
			{
				OnPaidChanging(value);
				_Paid = value;
				OnPaidChanged();
			}
		}
	}
	private Nullable<decimal> _Paid;

	partial void OnPaidChanging(Nullable<decimal> newValue);
	partial void OnPaidChanged();

    public Nullable<decimal> Pending 
	{ 
		get
		{
			return _Pending;
		}
		set
		{
			if(_Pending != value)
			{
				OnPendingChanging(value);
				_Pending = value;
				OnPendingChanged();
			}
		}
	}
	private Nullable<decimal> _Pending;

	partial void OnPendingChanging(Nullable<decimal> newValue);
	partial void OnPendingChanged();

    public string PaidTo 
	{ 
		get
		{
			return _PaidTo;
		}
		set
		{
			if(_PaidTo != value)
			{
				OnPaidToChanging(value);
				_PaidTo = value;
				OnPaidToChanged();
			}
		}
	}
	private string _PaidTo;

	partial void OnPaidToChanging(string newValue);
	partial void OnPaidToChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public bool IsAuto 
	{ 
		get
		{
			return _IsAuto;
		}
		set
		{
			if(_IsAuto != value)
			{
				OnIsAutoChanging(value);
				_IsAuto = value;
				OnIsAutoChanged();
			}
		}
	}
	private bool _IsAuto;

	partial void OnIsAutoChanging(bool newValue);
	partial void OnIsAutoChanged();

    public string Ref1 
	{ 
		get
		{
			return _Ref1;
		}
		set
		{
			if(_Ref1 != value)
			{
				OnRef1Changing(value);
				_Ref1 = value;
				OnRef1Changed();
			}
		}
	}
	private string _Ref1;

	partial void OnRef1Changing(string newValue);
	partial void OnRef1Changed();

    public string Ref2 
	{ 
		get
		{
			return _Ref2;
		}
		set
		{
			if(_Ref2 != value)
			{
				OnRef2Changing(value);
				_Ref2 = value;
				OnRef2Changed();
			}
		}
	}
	private string _Ref2;

	partial void OnRef2Changing(string newValue);
	partial void OnRef2Changed();

    public string Ref3 
	{ 
		get
		{
			return _Ref3;
		}
		set
		{
			if(_Ref3 != value)
			{
				OnRef3Changing(value);
				_Ref3 = value;
				OnRef3Changed();
			}
		}
	}
	private string _Ref3;

	partial void OnRef3Changing(string newValue);
	partial void OnRef3Changed();

    public string Ref4 
	{ 
		get
		{
			return _Ref4;
		}
		set
		{
			if(_Ref4 != value)
			{
				OnRef4Changing(value);
				_Ref4 = value;
				OnRef4Changed();
			}
		}
	}
	private string _Ref4;

	partial void OnRef4Changing(string newValue);
	partial void OnRef4Changed();

    public string Ref5 
	{ 
		get
		{
			return _Ref5;
		}
		set
		{
			if(_Ref5 != value)
			{
				OnRef5Changing(value);
				_Ref5 = value;
				OnRef5Changed();
			}
		}
	}
	private string _Ref5;

	partial void OnRef5Changing(string newValue);
	partial void OnRef5Changed();

    public string ErrMsg 
	{ 
		get
		{
			return _ErrMsg;
		}
		set
		{
			if(_ErrMsg != value)
			{
				OnErrMsgChanging(value);
				_ErrMsg = value;
				OnErrMsgChanged();
			}
		}
	}
	private string _ErrMsg;

	partial void OnErrMsgChanging(string newValue);
	partial void OnErrMsgChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsDealer 
	{ 
		get
		{
			return _IsDealer;
		}
		set
		{
			if(_IsDealer != value)
			{
				OnIsDealerChanging(value);
				_IsDealer = value;
				OnIsDealerChanged();
			}
		}
	}
	private bool _IsDealer;

	partial void OnIsDealerChanging(bool newValue);
	partial void OnIsDealerChanged();

    public Nullable<System.DateTime> ReceiveDate 
	{ 
		get
		{
			return _ReceiveDate;
		}
		set
		{
			if(_ReceiveDate != value)
			{
				OnReceiveDateChanging(value);
				_ReceiveDate = value;
				OnReceiveDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ReceiveDate;

	partial void OnReceiveDateChanging(Nullable<System.DateTime> newValue);
	partial void OnReceiveDateChanged();

    public bool IsMobile 
	{ 
		get
		{
			return _IsMobile;
		}
		set
		{
			if(_IsMobile != value)
			{
				OnIsMobileChanging(value);
				_IsMobile = value;
				OnIsMobileChanged();
			}
		}
	}
	private bool _IsMobile;

	partial void OnIsMobileChanging(bool newValue);
	partial void OnIsMobileChanged();

    public Nullable<System.DateTime> InvoiceDate 
	{ 
		get
		{
			return _InvoiceDate;
		}
		set
		{
			if(_InvoiceDate != value)
			{
				OnInvoiceDateChanging(value);
				_InvoiceDate = value;
				OnInvoiceDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _InvoiceDate;

	partial void OnInvoiceDateChanging(Nullable<System.DateTime> newValue);
	partial void OnInvoiceDateChanged();

    public Nullable<int> VehicleID 
	{ 
		get
		{
			return _VehicleID;
		}
		set
		{
			if(_VehicleID != value)
			{
				OnVehicleIDChanging(value);
				_VehicleID = value;
				OnVehicleIDChanged();
			}
		}
	}
	private Nullable<int> _VehicleID;

	partial void OnVehicleIDChanging(Nullable<int> newValue);
	partial void OnVehicleIDChanged();

    public string InvoiceNumber 
	{ 
		get
		{
			return _InvoiceNumber;
		}
		set
		{
			if(_InvoiceNumber != value)
			{
				OnInvoiceNumberChanging(value);
				_InvoiceNumber = value;
				OnInvoiceNumberChanged();
			}
		}
	}
	private string _InvoiceNumber;

	partial void OnInvoiceNumberChanging(string newValue);
	partial void OnInvoiceNumberChanged();

    public string GSTInvNo 
	{ 
		get
		{
			return _GSTInvNo;
		}
		set
		{
			if(_GSTInvNo != value)
			{
				OnGSTInvNoChanging(value);
				_GSTInvNo = value;
				OnGSTInvNoChanged();
			}
		}
	}
	private string _GSTInvNo;

	partial void OnGSTInvNoChanging(string newValue);
	partial void OnGSTInvNoChanged();

    public Nullable<int> PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private Nullable<int> _PlantID;

	partial void OnPlantIDChanging(Nullable<int> newValue);
	partial void OnPlantIDChanged();

    public Nullable<int> OrderRefID 
	{ 
		get
		{
			return _OrderRefID;
		}
		set
		{
			if(_OrderRefID != value)
			{
				OnOrderRefIDChanging(value);
				_OrderRefID = value;
				OnOrderRefIDChanged();
			}
		}
	}
	private Nullable<int> _OrderRefID;

	partial void OnOrderRefIDChanging(Nullable<int> newValue);
	partial void OnOrderRefIDChanged();

    public Nullable<int> DivisionID 
	{ 
		get
		{
			return _DivisionID;
		}
		set
		{
			if(_DivisionID != value)
			{
				OnDivisionIDChanging(value);
				_DivisionID = value;
				OnDivisionIDChanged();
			}
		}
	}
	private Nullable<int> _DivisionID;

	partial void OnDivisionIDChanging(Nullable<int> newValue);
	partial void OnDivisionIDChanged();

    public Nullable<int> HDocID 
	{ 
		get
		{
			return _HDocID;
		}
		set
		{
			if(_HDocID != value)
			{
				OnHDocIDChanging(value);
				_HDocID = value;
				OnHDocIDChanged();
			}
		}
	}
	private Nullable<int> _HDocID;

	partial void OnHDocIDChanging(Nullable<int> newValue);
	partial void OnHDocIDChanged();

    public Nullable<bool> InProcess 
	{ 
		get
		{
			return _InProcess;
		}
		set
		{
			if(_InProcess != value)
			{
				OnInProcessChanging(value);
				_InProcess = value;
				OnInProcessChanged();
			}
		}
	}
	private Nullable<bool> _InProcess;

	partial void OnInProcessChanging(Nullable<bool> newValue);
	partial void OnInProcessChanged();

    public virtual ICollection<MID1> MID1 { get; set; }
    public virtual OWH OWH { get; set; }
    public virtual OWH OWH1 { get; set; }
    public virtual OVCL OVCL { get; set; }
    public virtual ICollection<MID2> MID2 { get; set; }
    public virtual OCRD OCRD { get; set; }
}

[Serializable]
public partial class OMIT : ObjectWithState
{
    public OMIT() 
    { 
        this.MIT1 = new HashSet<MIT1>();
    }


    public int OMITID 
	{ 
		get
		{
			return _OMITID;
		}
		set
		{
			if(_OMITID != value)
			{
				OnOMITIDChanging(value);
				_OMITID = value;
				OnOMITIDChanged();
			}
		}
	}
	private int _OMITID;

	partial void OnOMITIDChanging(int newValue);
	partial void OnOMITIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int WhsID 
	{ 
		get
		{
			return _WhsID;
		}
		set
		{
			if(_WhsID != value)
			{
				OnWhsIDChanging(value);
				_WhsID = value;
				OnWhsIDChanged();
			}
		}
	}
	private int _WhsID;

	partial void OnWhsIDChanging(int newValue);
	partial void OnWhsIDChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public System.DateTime Date 
	{ 
		get
		{
			return _Date;
		}
		set
		{
			if(_Date != value)
			{
				OnDateChanging(value);
				_Date = value;
				OnDateChanged();
			}
		}
	}
	private System.DateTime _Date;

	partial void OnDateChanging(System.DateTime newValue);
	partial void OnDateChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public decimal Amount 
	{ 
		get
		{
			return _Amount;
		}
		set
		{
			if(_Amount != value)
			{
				OnAmountChanging(value);
				_Amount = value;
				OnAmountChanged();
			}
		}
	}
	private decimal _Amount;

	partial void OnAmountChanging(decimal newValue);
	partial void OnAmountChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string Ref1 
	{ 
		get
		{
			return _Ref1;
		}
		set
		{
			if(_Ref1 != value)
			{
				OnRef1Changing(value);
				_Ref1 = value;
				OnRef1Changed();
			}
		}
	}
	private string _Ref1;

	partial void OnRef1Changing(string newValue);
	partial void OnRef1Changed();

    public string ErrMsg 
	{ 
		get
		{
			return _ErrMsg;
		}
		set
		{
			if(_ErrMsg != value)
			{
				OnErrMsgChanging(value);
				_ErrMsg = value;
				OnErrMsgChanged();
			}
		}
	}
	private string _ErrMsg;

	partial void OnErrMsgChanging(string newValue);
	partial void OnErrMsgChanged();

    public Nullable<int> VendorID 
	{ 
		get
		{
			return _VendorID;
		}
		set
		{
			if(_VendorID != value)
			{
				OnVendorIDChanging(value);
				_VendorID = value;
				OnVendorIDChanged();
			}
		}
	}
	private Nullable<int> _VendorID;

	partial void OnVendorIDChanging(Nullable<int> newValue);
	partial void OnVendorIDChanged();

    public Nullable<decimal> VendorParentID 
	{ 
		get
		{
			return _VendorParentID;
		}
		set
		{
			if(_VendorParentID != value)
			{
				OnVendorParentIDChanging(value);
				_VendorParentID = value;
				OnVendorParentIDChanged();
			}
		}
	}
	private Nullable<decimal> _VendorParentID;

	partial void OnVendorParentIDChanging(Nullable<decimal> newValue);
	partial void OnVendorParentIDChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public string InvoiceNumber 
	{ 
		get
		{
			return _InvoiceNumber;
		}
		set
		{
			if(_InvoiceNumber != value)
			{
				OnInvoiceNumberChanging(value);
				_InvoiceNumber = value;
				OnInvoiceNumberChanged();
			}
		}
	}
	private string _InvoiceNumber;

	partial void OnInvoiceNumberChanging(string newValue);
	partial void OnInvoiceNumberChanged();

    public virtual ICollection<MIT1> MIT1 { get; set; }
    public virtual OWH OWH { get; set; }
}

[Serializable]
public partial class OMNU : ObjectWithState
{
    public OMNU() 
    { 
        this.HELPs = new HashSet<HELP>();
        this.OMNURs = new HashSet<OMNUR>();
        this.GRP1 = new HashSet<GRP1>();
        this.ENT1 = new HashSet<ENT1>();
    }


    public int MenuID 
	{ 
		get
		{
			return _MenuID;
		}
		set
		{
			if(_MenuID != value)
			{
				OnMenuIDChanging(value);
				_MenuID = value;
				OnMenuIDChanged();
			}
		}
	}
	private int _MenuID;

	partial void OnMenuIDChanging(int newValue);
	partial void OnMenuIDChanged();

    public string MenuName 
	{ 
		get
		{
			return _MenuName;
		}
		set
		{
			if(_MenuName != value)
			{
				OnMenuNameChanging(value);
				_MenuName = value;
				OnMenuNameChanged();
			}
		}
	}
	private string _MenuName;

	partial void OnMenuNameChanging(string newValue);
	partial void OnMenuNameChanged();

    public string PageName 
	{ 
		get
		{
			return _PageName;
		}
		set
		{
			if(_PageName != value)
			{
				OnPageNameChanging(value);
				_PageName = value;
				OnPageNameChanged();
			}
		}
	}
	private string _PageName;

	partial void OnPageNameChanging(string newValue);
	partial void OnPageNameChanged();

    public string MenuPath 
	{ 
		get
		{
			return _MenuPath;
		}
		set
		{
			if(_MenuPath != value)
			{
				OnMenuPathChanging(value);
				_MenuPath = value;
				OnMenuPathChanged();
			}
		}
	}
	private string _MenuPath;

	partial void OnMenuPathChanging(string newValue);
	partial void OnMenuPathChanged();

    public Nullable<int> ParentMenuID 
	{ 
		get
		{
			return _ParentMenuID;
		}
		set
		{
			if(_ParentMenuID != value)
			{
				OnParentMenuIDChanging(value);
				_ParentMenuID = value;
				OnParentMenuIDChanged();
			}
		}
	}
	private Nullable<int> _ParentMenuID;

	partial void OnParentMenuIDChanging(Nullable<int> newValue);
	partial void OnParentMenuIDChanged();

    public int SortOrder 
	{ 
		get
		{
			return _SortOrder;
		}
		set
		{
			if(_SortOrder != value)
			{
				OnSortOrderChanging(value);
				_SortOrder = value;
				OnSortOrderChanged();
			}
		}
	}
	private int _SortOrder;

	partial void OnSortOrderChanging(int newValue);
	partial void OnSortOrderChanged();

    public string ColorCode 
	{ 
		get
		{
			return _ColorCode;
		}
		set
		{
			if(_ColorCode != value)
			{
				OnColorCodeChanging(value);
				_ColorCode = value;
				OnColorCodeChanged();
			}
		}
	}
	private string _ColorCode;

	partial void OnColorCodeChanging(string newValue);
	partial void OnColorCodeChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool Company 
	{ 
		get
		{
			return _Company;
		}
		set
		{
			if(_Company != value)
			{
				OnCompanyChanging(value);
				_Company = value;
				OnCompanyChanged();
			}
		}
	}
	private bool _Company;

	partial void OnCompanyChanging(bool newValue);
	partial void OnCompanyChanged();

    public bool CMS 
	{ 
		get
		{
			return _CMS;
		}
		set
		{
			if(_CMS != value)
			{
				OnCMSChanging(value);
				_CMS = value;
				OnCMSChanged();
			}
		}
	}
	private bool _CMS;

	partial void OnCMSChanging(bool newValue);
	partial void OnCMSChanged();

    public bool DMS 
	{ 
		get
		{
			return _DMS;
		}
		set
		{
			if(_DMS != value)
			{
				OnDMSChanging(value);
				_DMS = value;
				OnDMSChanged();
			}
		}
	}
	private bool _DMS;

	partial void OnDMSChanging(bool newValue);
	partial void OnDMSChanged();

    public bool RMS 
	{ 
		get
		{
			return _RMS;
		}
		set
		{
			if(_RMS != value)
			{
				OnRMSChanging(value);
				_RMS = value;
				OnRMSChanged();
			}
		}
	}
	private bool _RMS;

	partial void OnRMSChanging(bool newValue);
	partial void OnRMSChanged();

    public bool SS 
	{ 
		get
		{
			return _SS;
		}
		set
		{
			if(_SS != value)
			{
				OnSSChanging(value);
				_SS = value;
				OnSSChanged();
			}
		}
	}
	private bool _SS;

	partial void OnSSChanging(bool newValue);
	partial void OnSSChanged();

    public string MenuType 
	{ 
		get
		{
			return _MenuType;
		}
		set
		{
			if(_MenuType != value)
			{
				OnMenuTypeChanging(value);
				_MenuType = value;
				OnMenuTypeChanged();
			}
		}
	}
	private string _MenuType;

	partial void OnMenuTypeChanging(string newValue);
	partial void OnMenuTypeChanged();

    public Nullable<bool> DealerApp 
	{ 
		get
		{
			return _DealerApp;
		}
		set
		{
			if(_DealerApp != value)
			{
				OnDealerAppChanging(value);
				_DealerApp = value;
				OnDealerAppChanged();
			}
		}
	}
	private Nullable<bool> _DealerApp;

	partial void OnDealerAppChanging(Nullable<bool> newValue);
	partial void OnDealerAppChanged();

    public virtual ICollection<HELP> HELPs { get; set; }
    public virtual ICollection<OMNUR> OMNURs { get; set; }
    public virtual ICollection<GRP1> GRP1 { get; set; }
    public virtual ICollection<ENT1> ENT1 { get; set; }
}

[Serializable]
public partial class OMNUR : ObjectWithState
{

    public int RMenuID 
	{ 
		get
		{
			return _RMenuID;
		}
		set
		{
			if(_RMenuID != value)
			{
				OnRMenuIDChanging(value);
				_RMenuID = value;
				OnRMenuIDChanged();
			}
		}
	}
	private int _RMenuID;

	partial void OnRMenuIDChanging(int newValue);
	partial void OnRMenuIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int MenuID 
	{ 
		get
		{
			return _MenuID;
		}
		set
		{
			if(_MenuID != value)
			{
				OnMenuIDChanging(value);
				_MenuID = value;
				OnMenuIDChanged();
			}
		}
	}
	private int _MenuID;

	partial void OnMenuIDChanging(int newValue);
	partial void OnMenuIDChanged();

    public int CallType 
	{ 
		get
		{
			return _CallType;
		}
		set
		{
			if(_CallType != value)
			{
				OnCallTypeChanging(value);
				_CallType = value;
				OnCallTypeChanged();
			}
		}
	}
	private int _CallType;

	partial void OnCallTypeChanging(int newValue);
	partial void OnCallTypeChanged();

    public int MenuType 
	{ 
		get
		{
			return _MenuType;
		}
		set
		{
			if(_MenuType != value)
			{
				OnMenuTypeChanging(value);
				_MenuType = value;
				OnMenuTypeChanged();
			}
		}
	}
	private int _MenuType;

	partial void OnMenuTypeChanging(int newValue);
	partial void OnMenuTypeChanged();

    public int EmpGroupID 
	{ 
		get
		{
			return _EmpGroupID;
		}
		set
		{
			if(_EmpGroupID != value)
			{
				OnEmpGroupIDChanging(value);
				_EmpGroupID = value;
				OnEmpGroupIDChanged();
			}
		}
	}
	private int _EmpGroupID;

	partial void OnEmpGroupIDChanging(int newValue);
	partial void OnEmpGroupIDChanged();

    public string AuthorizationType 
	{ 
		get
		{
			return _AuthorizationType;
		}
		set
		{
			if(_AuthorizationType != value)
			{
				OnAuthorizationTypeChanging(value);
				_AuthorizationType = value;
				OnAuthorizationTypeChanged();
			}
		}
	}
	private string _AuthorizationType;

	partial void OnAuthorizationTypeChanging(string newValue);
	partial void OnAuthorizationTypeChanged();

    public bool Notification 
	{ 
		get
		{
			return _Notification;
		}
		set
		{
			if(_Notification != value)
			{
				OnNotificationChanging(value);
				_Notification = value;
				OnNotificationChanged();
			}
		}
	}
	private bool _Notification;

	partial void OnNotificationChanging(bool newValue);
	partial void OnNotificationChanged();

    public bool Mandatory 
	{ 
		get
		{
			return _Mandatory;
		}
		set
		{
			if(_Mandatory != value)
			{
				OnMandatoryChanging(value);
				_Mandatory = value;
				OnMandatoryChanged();
			}
		}
	}
	private bool _Mandatory;

	partial void OnMandatoryChanging(bool newValue);
	partial void OnMandatoryChanged();

    public int Priority 
	{ 
		get
		{
			return _Priority;
		}
		set
		{
			if(_Priority != value)
			{
				OnPriorityChanging(value);
				_Priority = value;
				OnPriorityChanged();
			}
		}
	}
	private int _Priority;

	partial void OnPriorityChanging(int newValue);
	partial void OnPriorityChanged();

    public string Ref1 
	{ 
		get
		{
			return _Ref1;
		}
		set
		{
			if(_Ref1 != value)
			{
				OnRef1Changing(value);
				_Ref1 = value;
				OnRef1Changed();
			}
		}
	}
	private string _Ref1;

	partial void OnRef1Changing(string newValue);
	partial void OnRef1Changed();

    public string Ref2 
	{ 
		get
		{
			return _Ref2;
		}
		set
		{
			if(_Ref2 != value)
			{
				OnRef2Changing(value);
				_Ref2 = value;
				OnRef2Changed();
			}
		}
	}
	private string _Ref2;

	partial void OnRef2Changing(string newValue);
	partial void OnRef2Changed();

    public string Ref3 
	{ 
		get
		{
			return _Ref3;
		}
		set
		{
			if(_Ref3 != value)
			{
				OnRef3Changing(value);
				_Ref3 = value;
				OnRef3Changed();
			}
		}
	}
	private string _Ref3;

	partial void OnRef3Changing(string newValue);
	partial void OnRef3Changed();

    public string Ref4 
	{ 
		get
		{
			return _Ref4;
		}
		set
		{
			if(_Ref4 != value)
			{
				OnRef4Changing(value);
				_Ref4 = value;
				OnRef4Changed();
			}
		}
	}
	private string _Ref4;

	partial void OnRef4Changing(string newValue);
	partial void OnRef4Changed();

    public string Ref5 
	{ 
		get
		{
			return _Ref5;
		}
		set
		{
			if(_Ref5 != value)
			{
				OnRef5Changing(value);
				_Ref5 = value;
				OnRef5Changed();
			}
		}
	}
	private string _Ref5;

	partial void OnRef5Changing(string newValue);
	partial void OnRef5Changed();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual OMNU OMNU { get; set; }
}

[Serializable]
public partial class OMOAE : ObjectWithState
{
    public OMOAE() 
    { 
        this.MOAE1 = new HashSet<MOAE1>();
        this.MOAE2 = new HashSet<MOAE2>();
        this.MOAE3 = new HashSet<MOAE3>();
    }


    public int MiniOrderEnteryID 
	{ 
		get
		{
			return _MiniOrderEnteryID;
		}
		set
		{
			if(_MiniOrderEnteryID != value)
			{
				OnMiniOrderEnteryIDChanging(value);
				_MiniOrderEnteryID = value;
				OnMiniOrderEnteryIDChanged();
			}
		}
	}
	private int _MiniOrderEnteryID;

	partial void OnMiniOrderEnteryIDChanging(int newValue);
	partial void OnMiniOrderEnteryIDChanged();

    public string MinimumOrderCode 
	{ 
		get
		{
			return _MinimumOrderCode;
		}
		set
		{
			if(_MinimumOrderCode != value)
			{
				OnMinimumOrderCodeChanging(value);
				_MinimumOrderCode = value;
				OnMinimumOrderCodeChanged();
			}
		}
	}
	private string _MinimumOrderCode;

	partial void OnMinimumOrderCodeChanging(string newValue);
	partial void OnMinimumOrderCodeChanged();

    public string MinimumOrderName 
	{ 
		get
		{
			return _MinimumOrderName;
		}
		set
		{
			if(_MinimumOrderName != value)
			{
				OnMinimumOrderNameChanging(value);
				_MinimumOrderName = value;
				OnMinimumOrderNameChanged();
			}
		}
	}
	private string _MinimumOrderName;

	partial void OnMinimumOrderNameChanging(string newValue);
	partial void OnMinimumOrderNameChanged();

    public string ApplicableMode 
	{ 
		get
		{
			return _ApplicableMode;
		}
		set
		{
			if(_ApplicableMode != value)
			{
				OnApplicableModeChanging(value);
				_ApplicableMode = value;
				OnApplicableModeChanged();
			}
		}
	}
	private string _ApplicableMode;

	partial void OnApplicableModeChanging(string newValue);
	partial void OnApplicableModeChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public Nullable<System.TimeSpan> StartTime 
	{ 
		get
		{
			return _StartTime;
		}
		set
		{
			if(_StartTime != value)
			{
				OnStartTimeChanging(value);
				_StartTime = value;
				OnStartTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _StartTime;

	partial void OnStartTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnStartTimeChanged();

    public Nullable<System.TimeSpan> EndTime 
	{ 
		get
		{
			return _EndTime;
		}
		set
		{
			if(_EndTime != value)
			{
				OnEndTimeChanging(value);
				_EndTime = value;
				OnEndTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _EndTime;

	partial void OnEndTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnEndTimeChanged();

    public Nullable<decimal> Price 
	{ 
		get
		{
			return _Price;
		}
		set
		{
			if(_Price != value)
			{
				OnPriceChanging(value);
				_Price = value;
				OnPriceChanged();
			}
		}
	}
	private Nullable<decimal> _Price;

	partial void OnPriceChanging(Nullable<decimal> newValue);
	partial void OnPriceChanged();

    public virtual ICollection<MOAE1> MOAE1 { get; set; }
    public virtual ICollection<MOAE2> MOAE2 { get; set; }
    public virtual ICollection<MOAE3> MOAE3 { get; set; }
}

[Serializable]
public partial class OMSG : ObjectWithState
{
    public OMSG() 
    { 
        this.MSG1 = new HashSet<MSG1>();
    }


    public int MessageID 
	{ 
		get
		{
			return _MessageID;
		}
		set
		{
			if(_MessageID != value)
			{
				OnMessageIDChanging(value);
				_MessageID = value;
				OnMessageIDChanged();
			}
		}
	}
	private int _MessageID;

	partial void OnMessageIDChanging(int newValue);
	partial void OnMessageIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string Subject 
	{ 
		get
		{
			return _Subject;
		}
		set
		{
			if(_Subject != value)
			{
				OnSubjectChanging(value);
				_Subject = value;
				OnSubjectChanged();
			}
		}
	}
	private string _Subject;

	partial void OnSubjectChanging(string newValue);
	partial void OnSubjectChanged();

    public Nullable<System.DateTime> MessageDate 
	{ 
		get
		{
			return _MessageDate;
		}
		set
		{
			if(_MessageDate != value)
			{
				OnMessageDateChanging(value);
				_MessageDate = value;
				OnMessageDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _MessageDate;

	partial void OnMessageDateChanging(Nullable<System.DateTime> newValue);
	partial void OnMessageDateChanged();

    public Nullable<System.TimeSpan> MessageTime 
	{ 
		get
		{
			return _MessageTime;
		}
		set
		{
			if(_MessageTime != value)
			{
				OnMessageTimeChanging(value);
				_MessageTime = value;
				OnMessageTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _MessageTime;

	partial void OnMessageTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnMessageTimeChanged();

    public string ApplicableFor 
	{ 
		get
		{
			return _ApplicableFor;
		}
		set
		{
			if(_ApplicableFor != value)
			{
				OnApplicableForChanging(value);
				_ApplicableFor = value;
				OnApplicableForChanged();
			}
		}
	}
	private string _ApplicableFor;

	partial void OnApplicableForChanging(string newValue);
	partial void OnApplicableForChanged();

    public string MessageBody 
	{ 
		get
		{
			return _MessageBody;
		}
		set
		{
			if(_MessageBody != value)
			{
				OnMessageBodyChanging(value);
				_MessageBody = value;
				OnMessageBodyChanged();
			}
		}
	}
	private string _MessageBody;

	partial void OnMessageBodyChanging(string newValue);
	partial void OnMessageBodyChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<System.DateTime> ApplicableFromDate 
	{ 
		get
		{
			return _ApplicableFromDate;
		}
		set
		{
			if(_ApplicableFromDate != value)
			{
				OnApplicableFromDateChanging(value);
				_ApplicableFromDate = value;
				OnApplicableFromDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ApplicableFromDate;

	partial void OnApplicableFromDateChanging(Nullable<System.DateTime> newValue);
	partial void OnApplicableFromDateChanged();

    public Nullable<System.DateTime> ApplicableToDate 
	{ 
		get
		{
			return _ApplicableToDate;
		}
		set
		{
			if(_ApplicableToDate != value)
			{
				OnApplicableToDateChanging(value);
				_ApplicableToDate = value;
				OnApplicableToDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ApplicableToDate;

	partial void OnApplicableToDateChanging(Nullable<System.DateTime> newValue);
	partial void OnApplicableToDateChanged();

    public string ImageUpload 
	{ 
		get
		{
			return _ImageUpload;
		}
		set
		{
			if(_ImageUpload != value)
			{
				OnImageUploadChanging(value);
				_ImageUpload = value;
				OnImageUploadChanged();
			}
		}
	}
	private string _ImageUpload;

	partial void OnImageUploadChanging(string newValue);
	partial void OnImageUploadChanged();

    public virtual ICollection<MSG1> MSG1 { get; set; }
}

[Serializable]
public partial class ONTF : ObjectWithState
{

    public long NotifyID 
	{ 
		get
		{
			return _NotifyID;
		}
		set
		{
			if(_NotifyID != value)
			{
				OnNotifyIDChanging(value);
				_NotifyID = value;
				OnNotifyIDChanged();
			}
		}
	}
	private long _NotifyID;

	partial void OnNotifyIDChanging(long newValue);
	partial void OnNotifyIDChanged();

    public string Subject 
	{ 
		get
		{
			return _Subject;
		}
		set
		{
			if(_Subject != value)
			{
				OnSubjectChanging(value);
				_Subject = value;
				OnSubjectChanged();
			}
		}
	}
	private string _Subject;

	partial void OnSubjectChanging(string newValue);
	partial void OnSubjectChanged();

    public string Message 
	{ 
		get
		{
			return _Message;
		}
		set
		{
			if(_Message != value)
			{
				OnMessageChanging(value);
				_Message = value;
				OnMessageChanged();
			}
		}
	}
	private string _Message;

	partial void OnMessageChanging(string newValue);
	partial void OnMessageChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> CustGroupID 
	{ 
		get
		{
			return _CustGroupID;
		}
		set
		{
			if(_CustGroupID != value)
			{
				OnCustGroupIDChanging(value);
				_CustGroupID = value;
				OnCustGroupIDChanged();
			}
		}
	}
	private Nullable<int> _CustGroupID;

	partial void OnCustGroupIDChanging(Nullable<int> newValue);
	partial void OnCustGroupIDChanged();

    public Nullable<int> CityID 
	{ 
		get
		{
			return _CityID;
		}
		set
		{
			if(_CityID != value)
			{
				OnCityIDChanging(value);
				_CityID = value;
				OnCityIDChanged();
			}
		}
	}
	private Nullable<int> _CityID;

	partial void OnCityIDChanging(Nullable<int> newValue);
	partial void OnCityIDChanged();

    public Nullable<int> PinCodeID 
	{ 
		get
		{
			return _PinCodeID;
		}
		set
		{
			if(_PinCodeID != value)
			{
				OnPinCodeIDChanging(value);
				_PinCodeID = value;
				OnPinCodeIDChanged();
			}
		}
	}
	private Nullable<int> _PinCodeID;

	partial void OnPinCodeIDChanging(Nullable<int> newValue);
	partial void OnPinCodeIDChanged();

    public virtual CGRP CGRP { get; set; }
    public virtual OCTY OCTY { get; set; }
    public virtual OPIN OPIN { get; set; }
}

[Serializable]
public partial class OPCAT : ObjectWithState
{
    public OPCAT() 
    { 
        this.PCAT1 = new HashSet<PCAT1>();
        this.PCAT2 = new HashSet<PCAT2>();
    }


    public int CataLogID 
	{ 
		get
		{
			return _CataLogID;
		}
		set
		{
			if(_CataLogID != value)
			{
				OnCataLogIDChanging(value);
				_CataLogID = value;
				OnCataLogIDChanged();
			}
		}
	}
	private int _CataLogID;

	partial void OnCataLogIDChanging(int newValue);
	partial void OnCataLogIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public Nullable<System.DateTime> Fromdate 
	{ 
		get
		{
			return _Fromdate;
		}
		set
		{
			if(_Fromdate != value)
			{
				OnFromdateChanging(value);
				_Fromdate = value;
				OnFromdateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _Fromdate;

	partial void OnFromdateChanging(Nullable<System.DateTime> newValue);
	partial void OnFromdateChanged();

    public Nullable<System.DateTime> Todate 
	{ 
		get
		{
			return _Todate;
		}
		set
		{
			if(_Todate != value)
			{
				OnTodateChanging(value);
				_Todate = value;
				OnTodateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _Todate;

	partial void OnTodateChanging(Nullable<System.DateTime> newValue);
	partial void OnTodateChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreateDate 
	{ 
		get
		{
			return _CreateDate;
		}
		set
		{
			if(_CreateDate != value)
			{
				OnCreateDateChanging(value);
				_CreateDate = value;
				OnCreateDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreateDate;

	partial void OnCreateDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreateDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public string ItemGroupName 
	{ 
		get
		{
			return _ItemGroupName;
		}
		set
		{
			if(_ItemGroupName != value)
			{
				OnItemGroupNameChanging(value);
				_ItemGroupName = value;
				OnItemGroupNameChanged();
			}
		}
	}
	private string _ItemGroupName;

	partial void OnItemGroupNameChanging(string newValue);
	partial void OnItemGroupNameChanged();

    public string SubGroupName 
	{ 
		get
		{
			return _SubGroupName;
		}
		set
		{
			if(_SubGroupName != value)
			{
				OnSubGroupNameChanging(value);
				_SubGroupName = value;
				OnSubGroupNameChanged();
			}
		}
	}
	private string _SubGroupName;

	partial void OnSubGroupNameChanging(string newValue);
	partial void OnSubGroupNameChanged();

    public string ItemName 
	{ 
		get
		{
			return _ItemName;
		}
		set
		{
			if(_ItemName != value)
			{
				OnItemNameChanging(value);
				_ItemName = value;
				OnItemNameChanged();
			}
		}
	}
	private string _ItemName;

	partial void OnItemNameChanging(string newValue);
	partial void OnItemNameChanged();

    public Nullable<int> ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private Nullable<int> _ItemID;

	partial void OnItemIDChanging(Nullable<int> newValue);
	partial void OnItemIDChanged();

    public string PCS 
	{ 
		get
		{
			return _PCS;
		}
		set
		{
			if(_PCS != value)
			{
				OnPCSChanging(value);
				_PCS = value;
				OnPCSChanged();
			}
		}
	}
	private string _PCS;

	partial void OnPCSChanging(string newValue);
	partial void OnPCSChanged();

    public string Ltr 
	{ 
		get
		{
			return _Ltr;
		}
		set
		{
			if(_Ltr != value)
			{
				OnLtrChanging(value);
				_Ltr = value;
				OnLtrChanged();
			}
		}
	}
	private string _Ltr;

	partial void OnLtrChanging(string newValue);
	partial void OnLtrChanged();

    public virtual OITM OITM { get; set; }
    public virtual ICollection<PCAT1> PCAT1 { get; set; }
    public virtual ICollection<PCAT2> PCAT2 { get; set; }
}

[Serializable]
public partial class OPIN : ObjectWithState
{
    public OPIN() 
    { 
        this.CPN1 = new HashSet<CPN1>();
        this.ONTFs = new HashSet<ONTF>();
    }


    public int PinCodeID 
	{ 
		get
		{
			return _PinCodeID;
		}
		set
		{
			if(_PinCodeID != value)
			{
				OnPinCodeIDChanging(value);
				_PinCodeID = value;
				OnPinCodeIDChanged();
			}
		}
	}
	private int _PinCodeID;

	partial void OnPinCodeIDChanging(int newValue);
	partial void OnPinCodeIDChanged();

    public int CityID 
	{ 
		get
		{
			return _CityID;
		}
		set
		{
			if(_CityID != value)
			{
				OnCityIDChanging(value);
				_CityID = value;
				OnCityIDChanged();
			}
		}
	}
	private int _CityID;

	partial void OnCityIDChanging(int newValue);
	partial void OnCityIDChanged();

    public Nullable<int> StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private Nullable<int> _StateID;

	partial void OnStateIDChanging(Nullable<int> newValue);
	partial void OnStateIDChanged();

    public string Area 
	{ 
		get
		{
			return _Area;
		}
		set
		{
			if(_Area != value)
			{
				OnAreaChanging(value);
				_Area = value;
				OnAreaChanged();
			}
		}
	}
	private string _Area;

	partial void OnAreaChanging(string newValue);
	partial void OnAreaChanged();

    public string Description 
	{ 
		get
		{
			return _Description;
		}
		set
		{
			if(_Description != value)
			{
				OnDescriptionChanging(value);
				_Description = value;
				OnDescriptionChanged();
			}
		}
	}
	private string _Description;

	partial void OnDescriptionChanging(string newValue);
	partial void OnDescriptionChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<CPN1> CPN1 { get; set; }
    public virtual ICollection<ONTF> ONTFs { get; set; }
}

[Serializable]
public partial class OPLCK : ObjectWithState
{
    public OPLCK() 
    { 
        this.TASK3 = new HashSet<TASK3>();
    }


    public int ProblemCheckID 
	{ 
		get
		{
			return _ProblemCheckID;
		}
		set
		{
			if(_ProblemCheckID != value)
			{
				OnProblemCheckIDChanging(value);
				_ProblemCheckID = value;
				OnProblemCheckIDChanged();
			}
		}
	}
	private int _ProblemCheckID;

	partial void OnProblemCheckIDChanging(int newValue);
	partial void OnProblemCheckIDChanged();

    public string CheckPointCode 
	{ 
		get
		{
			return _CheckPointCode;
		}
		set
		{
			if(_CheckPointCode != value)
			{
				OnCheckPointCodeChanging(value);
				_CheckPointCode = value;
				OnCheckPointCodeChanged();
			}
		}
	}
	private string _CheckPointCode;

	partial void OnCheckPointCodeChanging(string newValue);
	partial void OnCheckPointCodeChanged();

    public string CheckPointTask 
	{ 
		get
		{
			return _CheckPointTask;
		}
		set
		{
			if(_CheckPointTask != value)
			{
				OnCheckPointTaskChanging(value);
				_CheckPointTask = value;
				OnCheckPointTaskChanged();
			}
		}
	}
	private string _CheckPointTask;

	partial void OnCheckPointTaskChanging(string newValue);
	partial void OnCheckPointTaskChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual ICollection<TASK3> TASK3 { get; set; }
}

[Serializable]
public partial class OPLM : ObjectWithState
{
    public OPLM() 
    { 
        this.OTASKs = new HashSet<OTASK>();
        this.OTEMs = new HashSet<OTEM>();
    }


    public int ProblemID 
	{ 
		get
		{
			return _ProblemID;
		}
		set
		{
			if(_ProblemID != value)
			{
				OnProblemIDChanging(value);
				_ProblemID = value;
				OnProblemIDChanged();
			}
		}
	}
	private int _ProblemID;

	partial void OnProblemIDChanging(int newValue);
	partial void OnProblemIDChanged();

    public Nullable<int> TaskTypeID 
	{ 
		get
		{
			return _TaskTypeID;
		}
		set
		{
			if(_TaskTypeID != value)
			{
				OnTaskTypeIDChanging(value);
				_TaskTypeID = value;
				OnTaskTypeIDChanged();
			}
		}
	}
	private Nullable<int> _TaskTypeID;

	partial void OnTaskTypeIDChanging(Nullable<int> newValue);
	partial void OnTaskTypeIDChanged();

    public string ProblemCode 
	{ 
		get
		{
			return _ProblemCode;
		}
		set
		{
			if(_ProblemCode != value)
			{
				OnProblemCodeChanging(value);
				_ProblemCode = value;
				OnProblemCodeChanged();
			}
		}
	}
	private string _ProblemCode;

	partial void OnProblemCodeChanging(string newValue);
	partial void OnProblemCodeChanged();

    public string ProbemName 
	{ 
		get
		{
			return _ProbemName;
		}
		set
		{
			if(_ProbemName != value)
			{
				OnProbemNameChanging(value);
				_ProbemName = value;
				OnProbemNameChanged();
			}
		}
	}
	private string _ProbemName;

	partial void OnProbemNameChanging(string newValue);
	partial void OnProbemNameChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public Nullable<long> InCityMins 
	{ 
		get
		{
			return _InCityMins;
		}
		set
		{
			if(_InCityMins != value)
			{
				OnInCityMinsChanging(value);
				_InCityMins = value;
				OnInCityMinsChanged();
			}
		}
	}
	private Nullable<long> _InCityMins;

	partial void OnInCityMinsChanging(Nullable<long> newValue);
	partial void OnInCityMinsChanged();

    public Nullable<long> OutCityMins 
	{ 
		get
		{
			return _OutCityMins;
		}
		set
		{
			if(_OutCityMins != value)
			{
				OnOutCityMinsChanging(value);
				_OutCityMins = value;
				OnOutCityMinsChanged();
			}
		}
	}
	private Nullable<long> _OutCityMins;

	partial void OnOutCityMinsChanging(Nullable<long> newValue);
	partial void OnOutCityMinsChanged();

    public Nullable<bool> DealerApp 
	{ 
		get
		{
			return _DealerApp;
		}
		set
		{
			if(_DealerApp != value)
			{
				OnDealerAppChanging(value);
				_DealerApp = value;
				OnDealerAppChanged();
			}
		}
	}
	private Nullable<bool> _DealerApp;

	partial void OnDealerAppChanging(Nullable<bool> newValue);
	partial void OnDealerAppChanged();

    public virtual OTTY OTTY { get; set; }
    public virtual ICollection<OTASK> OTASKs { get; set; }
    public virtual ICollection<OTEM> OTEMs { get; set; }
}

[Serializable]
public partial class OPLT : ObjectWithState
{
    public OPLT() 
    { 
        this.OGCRDs = new HashSet<OGCRD>();
        this.OGITMs = new HashSet<OGITM>();
        this.OSTRLs = new HashSet<OSTRL>();
        this.ITM4 = new HashSet<ITM4>();
    }


    public int PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private int _PlantID;

	partial void OnPlantIDChanging(int newValue);
	partial void OnPlantIDChanged();

    public string PlantCode 
	{ 
		get
		{
			return _PlantCode;
		}
		set
		{
			if(_PlantCode != value)
			{
				OnPlantCodeChanging(value);
				_PlantCode = value;
				OnPlantCodeChanged();
			}
		}
	}
	private string _PlantCode;

	partial void OnPlantCodeChanging(string newValue);
	partial void OnPlantCodeChanged();

    public string PlantName 
	{ 
		get
		{
			return _PlantName;
		}
		set
		{
			if(_PlantName != value)
			{
				OnPlantNameChanging(value);
				_PlantName = value;
				OnPlantNameChanged();
			}
		}
	}
	private string _PlantName;

	partial void OnPlantNameChanging(string newValue);
	partial void OnPlantNameChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public string BusinessPlace 
	{ 
		get
		{
			return _BusinessPlace;
		}
		set
		{
			if(_BusinessPlace != value)
			{
				OnBusinessPlaceChanging(value);
				_BusinessPlace = value;
				OnBusinessPlaceChanged();
			}
		}
	}
	private string _BusinessPlace;

	partial void OnBusinessPlaceChanging(string newValue);
	partial void OnBusinessPlaceChanged();

    public string GSTIN 
	{ 
		get
		{
			return _GSTIN;
		}
		set
		{
			if(_GSTIN != value)
			{
				OnGSTINChanging(value);
				_GSTIN = value;
				OnGSTINChanged();
			}
		}
	}
	private string _GSTIN;

	partial void OnGSTINChanging(string newValue);
	partial void OnGSTINChanged();

    public string BusinessArea 
	{ 
		get
		{
			return _BusinessArea;
		}
		set
		{
			if(_BusinessArea != value)
			{
				OnBusinessAreaChanging(value);
				_BusinessArea = value;
				OnBusinessAreaChanged();
			}
		}
	}
	private string _BusinessArea;

	partial void OnBusinessAreaChanging(string newValue);
	partial void OnBusinessAreaChanged();

    public string ControllingArea 
	{ 
		get
		{
			return _ControllingArea;
		}
		set
		{
			if(_ControllingArea != value)
			{
				OnControllingAreaChanging(value);
				_ControllingArea = value;
				OnControllingAreaChanged();
			}
		}
	}
	private string _ControllingArea;

	partial void OnControllingAreaChanging(string newValue);
	partial void OnControllingAreaChanged();

    public string CostCenter 
	{ 
		get
		{
			return _CostCenter;
		}
		set
		{
			if(_CostCenter != value)
			{
				OnCostCenterChanging(value);
				_CostCenter = value;
				OnCostCenterChanged();
			}
		}
	}
	private string _CostCenter;

	partial void OnCostCenterChanging(string newValue);
	partial void OnCostCenterChanged();

    public Nullable<int> Division 
	{ 
		get
		{
			return _Division;
		}
		set
		{
			if(_Division != value)
			{
				OnDivisionChanging(value);
				_Division = value;
				OnDivisionChanged();
			}
		}
	}
	private Nullable<int> _Division;

	partial void OnDivisionChanging(Nullable<int> newValue);
	partial void OnDivisionChanged();

    public string ProfitCenter 
	{ 
		get
		{
			return _ProfitCenter;
		}
		set
		{
			if(_ProfitCenter != value)
			{
				OnProfitCenterChanging(value);
				_ProfitCenter = value;
				OnProfitCenterChanged();
			}
		}
	}
	private string _ProfitCenter;

	partial void OnProfitCenterChanging(string newValue);
	partial void OnProfitCenterChanged();

    public Nullable<int> StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private Nullable<int> _StateID;

	partial void OnStateIDChanging(Nullable<int> newValue);
	partial void OnStateIDChanged();

    public string EmailSMS 
	{ 
		get
		{
			return _EmailSMS;
		}
		set
		{
			if(_EmailSMS != value)
			{
				OnEmailSMSChanging(value);
				_EmailSMS = value;
				OnEmailSMSChanged();
			}
		}
	}
	private string _EmailSMS;

	partial void OnEmailSMSChanging(string newValue);
	partial void OnEmailSMSChanged();

    public string PlantName2 
	{ 
		get
		{
			return _PlantName2;
		}
		set
		{
			if(_PlantName2 != value)
			{
				OnPlantName2Changing(value);
				_PlantName2 = value;
				OnPlantName2Changed();
			}
		}
	}
	private string _PlantName2;

	partial void OnPlantName2Changing(string newValue);
	partial void OnPlantName2Changed();

    public string Street 
	{ 
		get
		{
			return _Street;
		}
		set
		{
			if(_Street != value)
			{
				OnStreetChanging(value);
				_Street = value;
				OnStreetChanged();
			}
		}
	}
	private string _Street;

	partial void OnStreetChanging(string newValue);
	partial void OnStreetChanged();

    public string Street1 
	{ 
		get
		{
			return _Street1;
		}
		set
		{
			if(_Street1 != value)
			{
				OnStreet1Changing(value);
				_Street1 = value;
				OnStreet1Changed();
			}
		}
	}
	private string _Street1;

	partial void OnStreet1Changing(string newValue);
	partial void OnStreet1Changed();

    public string Street2 
	{ 
		get
		{
			return _Street2;
		}
		set
		{
			if(_Street2 != value)
			{
				OnStreet2Changing(value);
				_Street2 = value;
				OnStreet2Changed();
			}
		}
	}
	private string _Street2;

	partial void OnStreet2Changing(string newValue);
	partial void OnStreet2Changed();

    public string Street3 
	{ 
		get
		{
			return _Street3;
		}
		set
		{
			if(_Street3 != value)
			{
				OnStreet3Changing(value);
				_Street3 = value;
				OnStreet3Changed();
			}
		}
	}
	private string _Street3;

	partial void OnStreet3Changing(string newValue);
	partial void OnStreet3Changed();

    public string PostalCode 
	{ 
		get
		{
			return _PostalCode;
		}
		set
		{
			if(_PostalCode != value)
			{
				OnPostalCodeChanging(value);
				_PostalCode = value;
				OnPostalCodeChanged();
			}
		}
	}
	private string _PostalCode;

	partial void OnPostalCodeChanging(string newValue);
	partial void OnPostalCodeChanged();

    public Nullable<int> CityID 
	{ 
		get
		{
			return _CityID;
		}
		set
		{
			if(_CityID != value)
			{
				OnCityIDChanging(value);
				_CityID = value;
				OnCityIDChanged();
			}
		}
	}
	private Nullable<int> _CityID;

	partial void OnCityIDChanging(Nullable<int> newValue);
	partial void OnCityIDChanged();

    public string District 
	{ 
		get
		{
			return _District;
		}
		set
		{
			if(_District != value)
			{
				OnDistrictChanging(value);
				_District = value;
				OnDistrictChanged();
			}
		}
	}
	private string _District;

	partial void OnDistrictChanging(string newValue);
	partial void OnDistrictChanged();

    public string Latitude 
	{ 
		get
		{
			return _Latitude;
		}
		set
		{
			if(_Latitude != value)
			{
				OnLatitudeChanging(value);
				_Latitude = value;
				OnLatitudeChanged();
			}
		}
	}
	private string _Latitude;

	partial void OnLatitudeChanging(string newValue);
	partial void OnLatitudeChanged();

    public string Longitude 
	{ 
		get
		{
			return _Longitude;
		}
		set
		{
			if(_Longitude != value)
			{
				OnLongitudeChanging(value);
				_Longitude = value;
				OnLongitudeChanged();
			}
		}
	}
	private string _Longitude;

	partial void OnLongitudeChanging(string newValue);
	partial void OnLongitudeChanged();

    public virtual ICollection<OGCRD> OGCRDs { get; set; }
    public virtual ICollection<OGITM> OGITMs { get; set; }
    public virtual ICollection<OSTRL> OSTRLs { get; set; }
    public virtual ICollection<ITM4> ITM4 { get; set; }
}

[Serializable]
public partial class OPOS : ObjectWithState
{
    public OPOS() 
    { 
        this.POS2 = new HashSet<POS2>();
        this.POS3 = new HashSet<POS3>();
        this.POS1 = new HashSet<POS1>();
        this.OIDMs = new HashSet<OIDM>();
    }


    public int SaleID 
	{ 
		get
		{
			return _SaleID;
		}
		set
		{
			if(_SaleID != value)
			{
				OnSaleIDChanging(value);
				_SaleID = value;
				OnSaleIDChanged();
			}
		}
	}
	private int _SaleID;

	partial void OnSaleIDChanging(int newValue);
	partial void OnSaleIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public System.DateTime Date 
	{ 
		get
		{
			return _Date;
		}
		set
		{
			if(_Date != value)
			{
				OnDateChanging(value);
				_Date = value;
				OnDateChanged();
			}
		}
	}
	private System.DateTime _Date;

	partial void OnDateChanging(System.DateTime newValue);
	partial void OnDateChanged();

    public int OrderType 
	{ 
		get
		{
			return _OrderType;
		}
		set
		{
			if(_OrderType != value)
			{
				OnOrderTypeChanging(value);
				_OrderType = value;
				OnOrderTypeChanged();
			}
		}
	}
	private int _OrderType;

	partial void OnOrderTypeChanging(int newValue);
	partial void OnOrderTypeChanged();

    public Nullable<int> SalesPerSonID 
	{ 
		get
		{
			return _SalesPerSonID;
		}
		set
		{
			if(_SalesPerSonID != value)
			{
				OnSalesPerSonIDChanging(value);
				_SalesPerSonID = value;
				OnSalesPerSonIDChanged();
			}
		}
	}
	private Nullable<int> _SalesPerSonID;

	partial void OnSalesPerSonIDChanging(Nullable<int> newValue);
	partial void OnSalesPerSonIDChanged();

    public bool IsWholeSale 
	{ 
		get
		{
			return _IsWholeSale;
		}
		set
		{
			if(_IsWholeSale != value)
			{
				OnIsWholeSaleChanging(value);
				_IsWholeSale = value;
				OnIsWholeSaleChanged();
			}
		}
	}
	private bool _IsWholeSale;

	partial void OnIsWholeSaleChanging(bool newValue);
	partial void OnIsWholeSaleChanged();

    public decimal Total 
	{ 
		get
		{
			return _Total;
		}
		set
		{
			if(_Total != value)
			{
				OnTotalChanging(value);
				_Total = value;
				OnTotalChanged();
			}
		}
	}
	private decimal _Total;

	partial void OnTotalChanging(decimal newValue);
	partial void OnTotalChanged();

    public decimal Discount 
	{ 
		get
		{
			return _Discount;
		}
		set
		{
			if(_Discount != value)
			{
				OnDiscountChanging(value);
				_Discount = value;
				OnDiscountChanged();
			}
		}
	}
	private decimal _Discount;

	partial void OnDiscountChanging(decimal newValue);
	partial void OnDiscountChanged();

    public decimal Rounding 
	{ 
		get
		{
			return _Rounding;
		}
		set
		{
			if(_Rounding != value)
			{
				OnRoundingChanging(value);
				_Rounding = value;
				OnRoundingChanged();
			}
		}
	}
	private decimal _Rounding;

	partial void OnRoundingChanging(decimal newValue);
	partial void OnRoundingChanged();

    public decimal Delivery 
	{ 
		get
		{
			return _Delivery;
		}
		set
		{
			if(_Delivery != value)
			{
				OnDeliveryChanging(value);
				_Delivery = value;
				OnDeliveryChanged();
			}
		}
	}
	private decimal _Delivery;

	partial void OnDeliveryChanging(decimal newValue);
	partial void OnDeliveryChanged();

    public decimal Tax 
	{ 
		get
		{
			return _Tax;
		}
		set
		{
			if(_Tax != value)
			{
				OnTaxChanging(value);
				_Tax = value;
				OnTaxChanged();
			}
		}
	}
	private decimal _Tax;

	partial void OnTaxChanging(decimal newValue);
	partial void OnTaxChanged();

    public decimal ServiceTax 
	{ 
		get
		{
			return _ServiceTax;
		}
		set
		{
			if(_ServiceTax != value)
			{
				OnServiceTaxChanging(value);
				_ServiceTax = value;
				OnServiceTaxChanged();
			}
		}
	}
	private decimal _ServiceTax;

	partial void OnServiceTaxChanging(decimal newValue);
	partial void OnServiceTaxChanged();

    public decimal Advance 
	{ 
		get
		{
			return _Advance;
		}
		set
		{
			if(_Advance != value)
			{
				OnAdvanceChanging(value);
				_Advance = value;
				OnAdvanceChanged();
			}
		}
	}
	private decimal _Advance;

	partial void OnAdvanceChanging(decimal newValue);
	partial void OnAdvanceChanged();

    public decimal SubTotal 
	{ 
		get
		{
			return _SubTotal;
		}
		set
		{
			if(_SubTotal != value)
			{
				OnSubTotalChanging(value);
				_SubTotal = value;
				OnSubTotalChanged();
			}
		}
	}
	private decimal _SubTotal;

	partial void OnSubTotalChanging(decimal newValue);
	partial void OnSubTotalChanged();

    public decimal Paid 
	{ 
		get
		{
			return _Paid;
		}
		set
		{
			if(_Paid != value)
			{
				OnPaidChanging(value);
				_Paid = value;
				OnPaidChanged();
			}
		}
	}
	private decimal _Paid;

	partial void OnPaidChanging(decimal newValue);
	partial void OnPaidChanged();

    public decimal Scheme 
	{ 
		get
		{
			return _Scheme;
		}
		set
		{
			if(_Scheme != value)
			{
				OnSchemeChanging(value);
				_Scheme = value;
				OnSchemeChanged();
			}
		}
	}
	private decimal _Scheme;

	partial void OnSchemeChanging(decimal newValue);
	partial void OnSchemeChanged();

    public decimal Pending 
	{ 
		get
		{
			return _Pending;
		}
		set
		{
			if(_Pending != value)
			{
				OnPendingChanging(value);
				_Pending = value;
				OnPendingChanged();
			}
		}
	}
	private decimal _Pending;

	partial void OnPendingChanging(decimal newValue);
	partial void OnPendingChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public Nullable<decimal> CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerID;

	partial void OnCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnCustomerIDChanged();

    public Nullable<System.DateTime> RequiredDate 
	{ 
		get
		{
			return _RequiredDate;
		}
		set
		{
			if(_RequiredDate != value)
			{
				OnRequiredDateChanging(value);
				_RequiredDate = value;
				OnRequiredDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _RequiredDate;

	partial void OnRequiredDateChanging(Nullable<System.DateTime> newValue);
	partial void OnRequiredDateChanged();

    public Nullable<System.TimeSpan> RequiredTime 
	{ 
		get
		{
			return _RequiredTime;
		}
		set
		{
			if(_RequiredTime != value)
			{
				OnRequiredTimeChanging(value);
				_RequiredTime = value;
				OnRequiredTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _RequiredTime;

	partial void OnRequiredTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnRequiredTimeChanged();

    public string ChargedBy 
	{ 
		get
		{
			return _ChargedBy;
		}
		set
		{
			if(_ChargedBy != value)
			{
				OnChargedByChanging(value);
				_ChargedBy = value;
				OnChargedByChanged();
			}
		}
	}
	private string _ChargedBy;

	partial void OnChargedByChanging(string newValue);
	partial void OnChargedByChanged();

    public Nullable<System.DateTime> DeliveredDate 
	{ 
		get
		{
			return _DeliveredDate;
		}
		set
		{
			if(_DeliveredDate != value)
			{
				OnDeliveredDateChanging(value);
				_DeliveredDate = value;
				OnDeliveredDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _DeliveredDate;

	partial void OnDeliveredDateChanging(Nullable<System.DateTime> newValue);
	partial void OnDeliveredDateChanged();

    public Nullable<System.TimeSpan> DeliveredTime 
	{ 
		get
		{
			return _DeliveredTime;
		}
		set
		{
			if(_DeliveredTime != value)
			{
				OnDeliveredTimeChanging(value);
				_DeliveredTime = value;
				OnDeliveredTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _DeliveredTime;

	partial void OnDeliveredTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnDeliveredTimeChanged();

    public string DeliveryBoy 
	{ 
		get
		{
			return _DeliveryBoy;
		}
		set
		{
			if(_DeliveryBoy != value)
			{
				OnDeliveryBoyChanging(value);
				_DeliveryBoy = value;
				OnDeliveryBoyChanged();
			}
		}
	}
	private string _DeliveryBoy;

	partial void OnDeliveryBoyChanging(string newValue);
	partial void OnDeliveryBoyChanged();

    public string MobilieNumber 
	{ 
		get
		{
			return _MobilieNumber;
		}
		set
		{
			if(_MobilieNumber != value)
			{
				OnMobilieNumberChanging(value);
				_MobilieNumber = value;
				OnMobilieNumberChanged();
			}
		}
	}
	private string _MobilieNumber;

	partial void OnMobilieNumberChanging(string newValue);
	partial void OnMobilieNumberChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsDelivered 
	{ 
		get
		{
			return _IsDelivered;
		}
		set
		{
			if(_IsDelivered != value)
			{
				OnIsDeliveredChanging(value);
				_IsDelivered = value;
				OnIsDeliveredChanged();
			}
		}
	}
	private bool _IsDelivered;

	partial void OnIsDeliveredChanging(bool newValue);
	partial void OnIsDeliveredChanged();

    public string BillRefNo 
	{ 
		get
		{
			return _BillRefNo;
		}
		set
		{
			if(_BillRefNo != value)
			{
				OnBillRefNoChanging(value);
				_BillRefNo = value;
				OnBillRefNoChanged();
			}
		}
	}
	private string _BillRefNo;

	partial void OnBillRefNoChanging(string newValue);
	partial void OnBillRefNoChanged();

    public string Ref1 
	{ 
		get
		{
			return _Ref1;
		}
		set
		{
			if(_Ref1 != value)
			{
				OnRef1Changing(value);
				_Ref1 = value;
				OnRef1Changed();
			}
		}
	}
	private string _Ref1;

	partial void OnRef1Changing(string newValue);
	partial void OnRef1Changed();

    public string ErrMsg 
	{ 
		get
		{
			return _ErrMsg;
		}
		set
		{
			if(_ErrMsg != value)
			{
				OnErrMsgChanging(value);
				_ErrMsg = value;
				OnErrMsgChanged();
			}
		}
	}
	private string _ErrMsg;

	partial void OnErrMsgChanging(string newValue);
	partial void OnErrMsgChanged();

    public Nullable<int> WaitingID 
	{ 
		get
		{
			return _WaitingID;
		}
		set
		{
			if(_WaitingID != value)
			{
				OnWaitingIDChanging(value);
				_WaitingID = value;
				OnWaitingIDChanged();
			}
		}
	}
	private Nullable<int> _WaitingID;

	partial void OnWaitingIDChanging(Nullable<int> newValue);
	partial void OnWaitingIDChanged();

    public string SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private string _SchemeID;

	partial void OnSchemeIDChanging(string newValue);
	partial void OnSchemeIDChanged();

    public Nullable<int> ProcessID 
	{ 
		get
		{
			return _ProcessID;
		}
		set
		{
			if(_ProcessID != value)
			{
				OnProcessIDChanging(value);
				_ProcessID = value;
				OnProcessIDChanged();
			}
		}
	}
	private Nullable<int> _ProcessID;

	partial void OnProcessIDChanging(Nullable<int> newValue);
	partial void OnProcessIDChanged();

    public bool IsMobile 
	{ 
		get
		{
			return _IsMobile;
		}
		set
		{
			if(_IsMobile != value)
			{
				OnIsMobileChanging(value);
				_IsMobile = value;
				OnIsMobileChanged();
			}
		}
	}
	private bool _IsMobile;

	partial void OnIsMobileChanging(bool newValue);
	partial void OnIsMobileChanged();

    public Nullable<int> BranchID 
	{ 
		get
		{
			return _BranchID;
		}
		set
		{
			if(_BranchID != value)
			{
				OnBranchIDChanging(value);
				_BranchID = value;
				OnBranchIDChanged();
			}
		}
	}
	private Nullable<int> _BranchID;

	partial void OnBranchIDChanging(Nullable<int> newValue);
	partial void OnBranchIDChanged();

    public Nullable<int> OutletID 
	{ 
		get
		{
			return _OutletID;
		}
		set
		{
			if(_OutletID != value)
			{
				OnOutletIDChanging(value);
				_OutletID = value;
				OnOutletIDChanged();
			}
		}
	}
	private Nullable<int> _OutletID;

	partial void OnOutletIDChanging(Nullable<int> newValue);
	partial void OnOutletIDChanged();

    public Nullable<System.DateTime> InvoiceDate 
	{ 
		get
		{
			return _InvoiceDate;
		}
		set
		{
			if(_InvoiceDate != value)
			{
				OnInvoiceDateChanging(value);
				_InvoiceDate = value;
				OnInvoiceDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _InvoiceDate;

	partial void OnInvoiceDateChanging(Nullable<System.DateTime> newValue);
	partial void OnInvoiceDateChanged();

    public Nullable<int> VehicleID 
	{ 
		get
		{
			return _VehicleID;
		}
		set
		{
			if(_VehicleID != value)
			{
				OnVehicleIDChanging(value);
				_VehicleID = value;
				OnVehicleIDChanged();
			}
		}
	}
	private Nullable<int> _VehicleID;

	partial void OnVehicleIDChanging(Nullable<int> newValue);
	partial void OnVehicleIDChanged();

    public string ContraTax 
	{ 
		get
		{
			return _ContraTax;
		}
		set
		{
			if(_ContraTax != value)
			{
				OnContraTaxChanging(value);
				_ContraTax = value;
				OnContraTaxChanged();
			}
		}
	}
	private string _ContraTax;

	partial void OnContraTaxChanging(string newValue);
	partial void OnContraTaxChanged();

    public Nullable<int> OrderTypeReasonID 
	{ 
		get
		{
			return _OrderTypeReasonID;
		}
		set
		{
			if(_OrderTypeReasonID != value)
			{
				OnOrderTypeReasonIDChanging(value);
				_OrderTypeReasonID = value;
				OnOrderTypeReasonIDChanged();
			}
		}
	}
	private Nullable<int> _OrderTypeReasonID;

	partial void OnOrderTypeReasonIDChanging(Nullable<int> newValue);
	partial void OnOrderTypeReasonIDChanged();

    public string Attachment 
	{ 
		get
		{
			return _Attachment;
		}
		set
		{
			if(_Attachment != value)
			{
				OnAttachmentChanging(value);
				_Attachment = value;
				OnAttachmentChanged();
			}
		}
	}
	private string _Attachment;

	partial void OnAttachmentChanging(string newValue);
	partial void OnAttachmentChanged();

    public string InvoiceNumber 
	{ 
		get
		{
			return _InvoiceNumber;
		}
		set
		{
			if(_InvoiceNumber != value)
			{
				OnInvoiceNumberChanging(value);
				_InvoiceNumber = value;
				OnInvoiceNumberChanged();
			}
		}
	}
	private string _InvoiceNumber;

	partial void OnInvoiceNumberChanging(string newValue);
	partial void OnInvoiceNumberChanged();

    public string Ref2 
	{ 
		get
		{
			return _Ref2;
		}
		set
		{
			if(_Ref2 != value)
			{
				OnRef2Changing(value);
				_Ref2 = value;
				OnRef2Changed();
			}
		}
	}
	private string _Ref2;

	partial void OnRef2Changing(string newValue);
	partial void OnRef2Changed();

    public string DocType 
	{ 
		get
		{
			return _DocType;
		}
		set
		{
			if(_DocType != value)
			{
				OnDocTypeChanging(value);
				_DocType = value;
				OnDocTypeChanged();
			}
		}
	}
	private string _DocType;

	partial void OnDocTypeChanging(string newValue);
	partial void OnDocTypeChanged();

    public Nullable<int> OrderRefID 
	{ 
		get
		{
			return _OrderRefID;
		}
		set
		{
			if(_OrderRefID != value)
			{
				OnOrderRefIDChanging(value);
				_OrderRefID = value;
				OnOrderRefIDChanged();
			}
		}
	}
	private Nullable<int> _OrderRefID;

	partial void OnOrderRefIDChanging(Nullable<int> newValue);
	partial void OnOrderRefIDChanged();

    public Nullable<int> PORefID 
	{ 
		get
		{
			return _PORefID;
		}
		set
		{
			if(_PORefID != value)
			{
				OnPORefIDChanging(value);
				_PORefID = value;
				OnPORefIDChanged();
			}
		}
	}
	private Nullable<int> _PORefID;

	partial void OnPORefIDChanging(Nullable<int> newValue);
	partial void OnPORefIDChanged();

    public string Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private string _Status;

	partial void OnStatusChanging(string newValue);
	partial void OnStatusChanged();

    public Nullable<int> HDocID 
	{ 
		get
		{
			return _HDocID;
		}
		set
		{
			if(_HDocID != value)
			{
				OnHDocIDChanging(value);
				_HDocID = value;
				OnHDocIDChanged();
			}
		}
	}
	private Nullable<int> _HDocID;

	partial void OnHDocIDChanging(Nullable<int> newValue);
	partial void OnHDocIDChanged();

    public Nullable<int> ShippingID 
	{ 
		get
		{
			return _ShippingID;
		}
		set
		{
			if(_ShippingID != value)
			{
				OnShippingIDChanging(value);
				_ShippingID = value;
				OnShippingIDChanged();
			}
		}
	}
	private Nullable<int> _ShippingID;

	partial void OnShippingIDChanging(Nullable<int> newValue);
	partial void OnShippingIDChanged();

    public string GSTIN 
	{ 
		get
		{
			return _GSTIN;
		}
		set
		{
			if(_GSTIN != value)
			{
				OnGSTINChanging(value);
				_GSTIN = value;
				OnGSTINChanged();
			}
		}
	}
	private string _GSTIN;

	partial void OnGSTINChanging(string newValue);
	partial void OnGSTINChanged();

    public Nullable<decimal> BillToCustomerID 
	{ 
		get
		{
			return _BillToCustomerID;
		}
		set
		{
			if(_BillToCustomerID != value)
			{
				OnBillToCustomerIDChanging(value);
				_BillToCustomerID = value;
				OnBillToCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _BillToCustomerID;

	partial void OnBillToCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnBillToCustomerIDChanged();

    public Nullable<int> RateClaimID 
	{ 
		get
		{
			return _RateClaimID;
		}
		set
		{
			if(_RateClaimID != value)
			{
				OnRateClaimIDChanging(value);
				_RateClaimID = value;
				OnRateClaimIDChanged();
			}
		}
	}
	private Nullable<int> _RateClaimID;

	partial void OnRateClaimIDChanging(Nullable<int> newValue);
	partial void OnRateClaimIDChanged();

    public string IcePriceListName 
	{ 
		get
		{
			return _IcePriceListName;
		}
		set
		{
			if(_IcePriceListName != value)
			{
				OnIcePriceListNameChanging(value);
				_IcePriceListName = value;
				OnIcePriceListNameChanged();
			}
		}
	}
	private string _IcePriceListName;

	partial void OnIcePriceListNameChanging(string newValue);
	partial void OnIcePriceListNameChanged();

    public string DairyPriceListName 
	{ 
		get
		{
			return _DairyPriceListName;
		}
		set
		{
			if(_DairyPriceListName != value)
			{
				OnDairyPriceListNameChanging(value);
				_DairyPriceListName = value;
				OnDairyPriceListNameChanged();
			}
		}
	}
	private string _DairyPriceListName;

	partial void OnDairyPriceListNameChanging(string newValue);
	partial void OnDairyPriceListNameChanged();

    public Nullable<int> EInvoiceStatus 
	{ 
		get
		{
			return _EInvoiceStatus;
		}
		set
		{
			if(_EInvoiceStatus != value)
			{
				OnEInvoiceStatusChanging(value);
				_EInvoiceStatus = value;
				OnEInvoiceStatusChanged();
			}
		}
	}
	private Nullable<int> _EInvoiceStatus;

	partial void OnEInvoiceStatusChanging(Nullable<int> newValue);
	partial void OnEInvoiceStatusChanged();

    public string PONo 
	{ 
		get
		{
			return _PONo;
		}
		set
		{
			if(_PONo != value)
			{
				OnPONoChanging(value);
				_PONo = value;
				OnPONoChanged();
			}
		}
	}
	private string _PONo;

	partial void OnPONoChanging(string newValue);
	partial void OnPONoChanged();

    public Nullable<System.DateTime> PODate 
	{ 
		get
		{
			return _PODate;
		}
		set
		{
			if(_PODate != value)
			{
				OnPODateChanging(value);
				_PODate = value;
				OnPODateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _PODate;

	partial void OnPODateChanging(Nullable<System.DateTime> newValue);
	partial void OnPODateChanged();

    public Nullable<decimal> POAmount 
	{ 
		get
		{
			return _POAmount;
		}
		set
		{
			if(_POAmount != value)
			{
				OnPOAmountChanging(value);
				_POAmount = value;
				OnPOAmountChanged();
			}
		}
	}
	private Nullable<decimal> _POAmount;

	partial void OnPOAmountChanging(Nullable<decimal> newValue);
	partial void OnPOAmountChanged();

    public virtual ICollection<POS2> POS2 { get; set; }
    public virtual OEMP OEMP { get; set; }
    public virtual ICollection<POS3> POS3 { get; set; }
    public virtual OCRD OCRD { get; set; }
    public virtual ICollection<POS1> POS1 { get; set; }
    public virtual ICollection<OIDM> OIDMs { get; set; }
}

[Serializable]
public partial class OPSP : ObjectWithState
{
    public OPSP() 
    { 
        this.PSP1 = new HashSet<PSP1>();
        this.PSP2 = new HashSet<PSP2>();
        this.PSP3 = new HashSet<PSP3>();
    }


    public int OPSPID 
	{ 
		get
		{
			return _OPSPID;
		}
		set
		{
			if(_OPSPID != value)
			{
				OnOPSPIDChanging(value);
				_OPSPID = value;
				OnOPSPIDChanged();
			}
		}
	}
	private int _OPSPID;

	partial void OnOPSPIDChanging(int newValue);
	partial void OnOPSPIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public virtual ICollection<PSP1> PSP1 { get; set; }
    public virtual ICollection<PSP2> PSP2 { get; set; }
    public virtual ICollection<PSP3> PSP3 { get; set; }
}

[Serializable]
public partial class OPYM : ObjectWithState
{
    public OPYM() 
    { 
        this.MID2 = new HashSet<MID2>();
        this.POS2 = new HashSet<POS2>();
    }


    public int PaymentID 
	{ 
		get
		{
			return _PaymentID;
		}
		set
		{
			if(_PaymentID != value)
			{
				OnPaymentIDChanging(value);
				_PaymentID = value;
				OnPaymentIDChanged();
			}
		}
	}
	private int _PaymentID;

	partial void OnPaymentIDChanging(int newValue);
	partial void OnPaymentIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public Nullable<int> PaymentMode 
	{ 
		get
		{
			return _PaymentMode;
		}
		set
		{
			if(_PaymentMode != value)
			{
				OnPaymentModeChanging(value);
				_PaymentMode = value;
				OnPaymentModeChanged();
			}
		}
	}
	private Nullable<int> _PaymentMode;

	partial void OnPaymentModeChanging(Nullable<int> newValue);
	partial void OnPaymentModeChanged();

    public string DocumentNo 
	{ 
		get
		{
			return _DocumentNo;
		}
		set
		{
			if(_DocumentNo != value)
			{
				OnDocumentNoChanging(value);
				_DocumentNo = value;
				OnDocumentNoChanged();
			}
		}
	}
	private string _DocumentNo;

	partial void OnDocumentNoChanging(string newValue);
	partial void OnDocumentNoChanged();

    public string DocumentName 
	{ 
		get
		{
			return _DocumentName;
		}
		set
		{
			if(_DocumentName != value)
			{
				OnDocumentNameChanging(value);
				_DocumentName = value;
				OnDocumentNameChanged();
			}
		}
	}
	private string _DocumentName;

	partial void OnDocumentNameChanging(string newValue);
	partial void OnDocumentNameChanged();

    public Nullable<decimal> Amount 
	{ 
		get
		{
			return _Amount;
		}
		set
		{
			if(_Amount != value)
			{
				OnAmountChanging(value);
				_Amount = value;
				OnAmountChanged();
			}
		}
	}
	private Nullable<decimal> _Amount;

	partial void OnAmountChanging(Nullable<decimal> newValue);
	partial void OnAmountChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<MID2> MID2 { get; set; }
    public virtual ICollection<POS2> POS2 { get; set; }
}

[Serializable]
public partial class OPYT : ObjectWithState
{
    public OPYT() 
    { 
        this.OCNTs = new HashSet<OCNT>();
    }


    public int PymtTermsID 
	{ 
		get
		{
			return _PymtTermsID;
		}
		set
		{
			if(_PymtTermsID != value)
			{
				OnPymtTermsIDChanging(value);
				_PymtTermsID = value;
				OnPymtTermsIDChanged();
			}
		}
	}
	private int _PymtTermsID;

	partial void OnPymtTermsIDChanging(int newValue);
	partial void OnPymtTermsIDChanged();

    public string PymtTermsName 
	{ 
		get
		{
			return _PymtTermsName;
		}
		set
		{
			if(_PymtTermsName != value)
			{
				OnPymtTermsNameChanging(value);
				_PymtTermsName = value;
				OnPymtTermsNameChanged();
			}
		}
	}
	private string _PymtTermsName;

	partial void OnPymtTermsNameChanging(string newValue);
	partial void OnPymtTermsNameChanged();

    public string PymtTermsDesc 
	{ 
		get
		{
			return _PymtTermsDesc;
		}
		set
		{
			if(_PymtTermsDesc != value)
			{
				OnPymtTermsDescChanging(value);
				_PymtTermsDesc = value;
				OnPymtTermsDescChanged();
			}
		}
	}
	private string _PymtTermsDesc;

	partial void OnPymtTermsDescChanging(string newValue);
	partial void OnPymtTermsDescChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<OCNT> OCNTs { get; set; }
}

[Serializable]
public partial class OQU : ObjectWithState
{
    public OQU() 
    { 
        this.OEMPs = new HashSet<OEMP>();
        this.CFB1 = new HashSet<CFB1>();
        this.CMP1 = new HashSet<CMP1>();
    }


    public int QuesID 
	{ 
		get
		{
			return _QuesID;
		}
		set
		{
			if(_QuesID != value)
			{
				OnQuesIDChanging(value);
				_QuesID = value;
				OnQuesIDChanged();
			}
		}
	}
	private int _QuesID;

	partial void OnQuesIDChanging(int newValue);
	partial void OnQuesIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string QuesName 
	{ 
		get
		{
			return _QuesName;
		}
		set
		{
			if(_QuesName != value)
			{
				OnQuesNameChanging(value);
				_QuesName = value;
				OnQuesNameChanged();
			}
		}
	}
	private string _QuesName;

	partial void OnQuesNameChanging(string newValue);
	partial void OnQuesNameChanged();

    public string QuesDesc 
	{ 
		get
		{
			return _QuesDesc;
		}
		set
		{
			if(_QuesDesc != value)
			{
				OnQuesDescChanging(value);
				_QuesDesc = value;
				OnQuesDescChanged();
			}
		}
	}
	private string _QuesDesc;

	partial void OnQuesDescChanging(string newValue);
	partial void OnQuesDescChanged();

    public string DocType 
	{ 
		get
		{
			return _DocType;
		}
		set
		{
			if(_DocType != value)
			{
				OnDocTypeChanging(value);
				_DocType = value;
				OnDocTypeChanged();
			}
		}
	}
	private string _DocType;

	partial void OnDocTypeChanging(string newValue);
	partial void OnDocTypeChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public Nullable<int> CampaignID 
	{ 
		get
		{
			return _CampaignID;
		}
		set
		{
			if(_CampaignID != value)
			{
				OnCampaignIDChanging(value);
				_CampaignID = value;
				OnCampaignIDChanged();
			}
		}
	}
	private Nullable<int> _CampaignID;

	partial void OnCampaignIDChanging(Nullable<int> newValue);
	partial void OnCampaignIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<OEMP> OEMPs { get; set; }
    public virtual ICollection<CFB1> CFB1 { get; set; }
    public virtual ICollection<CMP1> CMP1 { get; set; }
}

[Serializable]
public partial class OQUE : ObjectWithState
{
    public OQUE() 
    { 
        this.QUES1 = new HashSet<QUES1>();
    }


    public int QuesID 
	{ 
		get
		{
			return _QuesID;
		}
		set
		{
			if(_QuesID != value)
			{
				OnQuesIDChanging(value);
				_QuesID = value;
				OnQuesIDChanged();
			}
		}
	}
	private int _QuesID;

	partial void OnQuesIDChanging(int newValue);
	partial void OnQuesIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public Nullable<int> EmpGroupID 
	{ 
		get
		{
			return _EmpGroupID;
		}
		set
		{
			if(_EmpGroupID != value)
			{
				OnEmpGroupIDChanging(value);
				_EmpGroupID = value;
				OnEmpGroupIDChanged();
			}
		}
	}
	private Nullable<int> _EmpGroupID;

	partial void OnEmpGroupIDChanging(Nullable<int> newValue);
	partial void OnEmpGroupIDChanged();

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public Nullable<int> BranDID 
	{ 
		get
		{
			return _BranDID;
		}
		set
		{
			if(_BranDID != value)
			{
				OnBranDIDChanging(value);
				_BranDID = value;
				OnBranDIDChanged();
			}
		}
	}
	private Nullable<int> _BranDID;

	partial void OnBranDIDChanging(Nullable<int> newValue);
	partial void OnBranDIDChanged();

    public string Question 
	{ 
		get
		{
			return _Question;
		}
		set
		{
			if(_Question != value)
			{
				OnQuestionChanging(value);
				_Question = value;
				OnQuestionChanged();
			}
		}
	}
	private string _Question;

	partial void OnQuestionChanging(string newValue);
	partial void OnQuestionChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public string Category 
	{ 
		get
		{
			return _Category;
		}
		set
		{
			if(_Category != value)
			{
				OnCategoryChanging(value);
				_Category = value;
				OnCategoryChanged();
			}
		}
	}
	private string _Category;

	partial void OnCategoryChanging(string newValue);
	partial void OnCategoryChanged();

    public string SubCategory 
	{ 
		get
		{
			return _SubCategory;
		}
		set
		{
			if(_SubCategory != value)
			{
				OnSubCategoryChanging(value);
				_SubCategory = value;
				OnSubCategoryChanged();
			}
		}
	}
	private string _SubCategory;

	partial void OnSubCategoryChanging(string newValue);
	partial void OnSubCategoryChanged();

    public string Posibility 
	{ 
		get
		{
			return _Posibility;
		}
		set
		{
			if(_Posibility != value)
			{
				OnPosibilityChanging(value);
				_Posibility = value;
				OnPosibilityChanged();
			}
		}
	}
	private string _Posibility;

	partial void OnPosibilityChanging(string newValue);
	partial void OnPosibilityChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool Mandatory 
	{ 
		get
		{
			return _Mandatory;
		}
		set
		{
			if(_Mandatory != value)
			{
				OnMandatoryChanging(value);
				_Mandatory = value;
				OnMandatoryChanged();
			}
		}
	}
	private bool _Mandatory;

	partial void OnMandatoryChanging(bool newValue);
	partial void OnMandatoryChanged();

    public int SortOrder 
	{ 
		get
		{
			return _SortOrder;
		}
		set
		{
			if(_SortOrder != value)
			{
				OnSortOrderChanging(value);
				_SortOrder = value;
				OnSortOrderChanged();
			}
		}
	}
	private int _SortOrder;

	partial void OnSortOrderChanging(int newValue);
	partial void OnSortOrderChanged();

    public virtual ICollection<QUES1> QUES1 { get; set; }
}

[Serializable]
public partial class ORCLM : ObjectWithState
{

    public int RateClaimID 
	{ 
		get
		{
			return _RateClaimID;
		}
		set
		{
			if(_RateClaimID != value)
			{
				OnRateClaimIDChanging(value);
				_RateClaimID = value;
				OnRateClaimIDChanged();
			}
		}
	}
	private int _RateClaimID;

	partial void OnRateClaimIDChanging(int newValue);
	partial void OnRateClaimIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public System.DateTime FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private System.DateTime _FromDate;

	partial void OnFromDateChanging(System.DateTime newValue);
	partial void OnFromDateChanged();

    public System.DateTime ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private System.DateTime _ToDate;

	partial void OnToDateChanging(System.DateTime newValue);
	partial void OnToDateChanged();

    public decimal CompCont 
	{ 
		get
		{
			return _CompCont;
		}
		set
		{
			if(_CompCont != value)
			{
				OnCompContChanging(value);
				_CompCont = value;
				OnCompContChanged();
			}
		}
	}
	private decimal _CompCont;

	partial void OnCompContChanging(decimal newValue);
	partial void OnCompContChanged();

    public decimal DistCont 
	{ 
		get
		{
			return _DistCont;
		}
		set
		{
			if(_DistCont != value)
			{
				OnDistContChanging(value);
				_DistCont = value;
				OnDistContChanged();
			}
		}
	}
	private decimal _DistCont;

	partial void OnDistContChanging(decimal newValue);
	partial void OnDistContChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public string IPAddress 
	{ 
		get
		{
			return _IPAddress;
		}
		set
		{
			if(_IPAddress != value)
			{
				OnIPAddressChanging(value);
				_IPAddress = value;
				OnIPAddressChanged();
			}
		}
	}
	private string _IPAddress;

	partial void OnIPAddressChanging(string newValue);
	partial void OnIPAddressChanged();

    public Nullable<int> DivisionID 
	{ 
		get
		{
			return _DivisionID;
		}
		set
		{
			if(_DivisionID != value)
			{
				OnDivisionIDChanging(value);
				_DivisionID = value;
				OnDivisionIDChanged();
			}
		}
	}
	private Nullable<int> _DivisionID;

	partial void OnDivisionIDChanging(Nullable<int> newValue);
	partial void OnDivisionIDChanged();

    public Nullable<int> PriceListID 
	{ 
		get
		{
			return _PriceListID;
		}
		set
		{
			if(_PriceListID != value)
			{
				OnPriceListIDChanging(value);
				_PriceListID = value;
				OnPriceListIDChanged();
			}
		}
	}
	private Nullable<int> _PriceListID;

	partial void OnPriceListIDChanging(Nullable<int> newValue);
	partial void OnPriceListIDChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();
}

[Serializable]
public partial class ORDR : ObjectWithState
{
    public ORDR() 
    { 
        this.RDR1 = new HashSet<RDR1>();
    }


    public int OrderID 
	{ 
		get
		{
			return _OrderID;
		}
		set
		{
			if(_OrderID != value)
			{
				OnOrderIDChanging(value);
				_OrderID = value;
				OnOrderIDChanged();
			}
		}
	}
	private int _OrderID;

	partial void OnOrderIDChanging(int newValue);
	partial void OnOrderIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public System.DateTime Date 
	{ 
		get
		{
			return _Date;
		}
		set
		{
			if(_Date != value)
			{
				OnDateChanging(value);
				_Date = value;
				OnDateChanged();
			}
		}
	}
	private System.DateTime _Date;

	partial void OnDateChanging(System.DateTime newValue);
	partial void OnDateChanged();

    public int OrderType 
	{ 
		get
		{
			return _OrderType;
		}
		set
		{
			if(_OrderType != value)
			{
				OnOrderTypeChanging(value);
				_OrderType = value;
				OnOrderTypeChanged();
			}
		}
	}
	private int _OrderType;

	partial void OnOrderTypeChanging(int newValue);
	partial void OnOrderTypeChanged();

    public Nullable<int> SalesPerSonID 
	{ 
		get
		{
			return _SalesPerSonID;
		}
		set
		{
			if(_SalesPerSonID != value)
			{
				OnSalesPerSonIDChanging(value);
				_SalesPerSonID = value;
				OnSalesPerSonIDChanged();
			}
		}
	}
	private Nullable<int> _SalesPerSonID;

	partial void OnSalesPerSonIDChanging(Nullable<int> newValue);
	partial void OnSalesPerSonIDChanged();

    public bool IsWholeSale 
	{ 
		get
		{
			return _IsWholeSale;
		}
		set
		{
			if(_IsWholeSale != value)
			{
				OnIsWholeSaleChanging(value);
				_IsWholeSale = value;
				OnIsWholeSaleChanged();
			}
		}
	}
	private bool _IsWholeSale;

	partial void OnIsWholeSaleChanging(bool newValue);
	partial void OnIsWholeSaleChanged();

    public decimal Total 
	{ 
		get
		{
			return _Total;
		}
		set
		{
			if(_Total != value)
			{
				OnTotalChanging(value);
				_Total = value;
				OnTotalChanged();
			}
		}
	}
	private decimal _Total;

	partial void OnTotalChanging(decimal newValue);
	partial void OnTotalChanged();

    public decimal Discount 
	{ 
		get
		{
			return _Discount;
		}
		set
		{
			if(_Discount != value)
			{
				OnDiscountChanging(value);
				_Discount = value;
				OnDiscountChanged();
			}
		}
	}
	private decimal _Discount;

	partial void OnDiscountChanging(decimal newValue);
	partial void OnDiscountChanged();

    public decimal Rounding 
	{ 
		get
		{
			return _Rounding;
		}
		set
		{
			if(_Rounding != value)
			{
				OnRoundingChanging(value);
				_Rounding = value;
				OnRoundingChanged();
			}
		}
	}
	private decimal _Rounding;

	partial void OnRoundingChanging(decimal newValue);
	partial void OnRoundingChanged();

    public decimal Delivery 
	{ 
		get
		{
			return _Delivery;
		}
		set
		{
			if(_Delivery != value)
			{
				OnDeliveryChanging(value);
				_Delivery = value;
				OnDeliveryChanged();
			}
		}
	}
	private decimal _Delivery;

	partial void OnDeliveryChanging(decimal newValue);
	partial void OnDeliveryChanged();

    public decimal Tax 
	{ 
		get
		{
			return _Tax;
		}
		set
		{
			if(_Tax != value)
			{
				OnTaxChanging(value);
				_Tax = value;
				OnTaxChanged();
			}
		}
	}
	private decimal _Tax;

	partial void OnTaxChanging(decimal newValue);
	partial void OnTaxChanged();

    public decimal ServiceTax 
	{ 
		get
		{
			return _ServiceTax;
		}
		set
		{
			if(_ServiceTax != value)
			{
				OnServiceTaxChanging(value);
				_ServiceTax = value;
				OnServiceTaxChanged();
			}
		}
	}
	private decimal _ServiceTax;

	partial void OnServiceTaxChanging(decimal newValue);
	partial void OnServiceTaxChanged();

    public decimal Advance 
	{ 
		get
		{
			return _Advance;
		}
		set
		{
			if(_Advance != value)
			{
				OnAdvanceChanging(value);
				_Advance = value;
				OnAdvanceChanged();
			}
		}
	}
	private decimal _Advance;

	partial void OnAdvanceChanging(decimal newValue);
	partial void OnAdvanceChanged();

    public decimal SubTotal 
	{ 
		get
		{
			return _SubTotal;
		}
		set
		{
			if(_SubTotal != value)
			{
				OnSubTotalChanging(value);
				_SubTotal = value;
				OnSubTotalChanged();
			}
		}
	}
	private decimal _SubTotal;

	partial void OnSubTotalChanging(decimal newValue);
	partial void OnSubTotalChanged();

    public decimal Paid 
	{ 
		get
		{
			return _Paid;
		}
		set
		{
			if(_Paid != value)
			{
				OnPaidChanging(value);
				_Paid = value;
				OnPaidChanged();
			}
		}
	}
	private decimal _Paid;

	partial void OnPaidChanging(decimal newValue);
	partial void OnPaidChanged();

    public decimal Scheme 
	{ 
		get
		{
			return _Scheme;
		}
		set
		{
			if(_Scheme != value)
			{
				OnSchemeChanging(value);
				_Scheme = value;
				OnSchemeChanged();
			}
		}
	}
	private decimal _Scheme;

	partial void OnSchemeChanging(decimal newValue);
	partial void OnSchemeChanged();

    public decimal Pending 
	{ 
		get
		{
			return _Pending;
		}
		set
		{
			if(_Pending != value)
			{
				OnPendingChanging(value);
				_Pending = value;
				OnPendingChanged();
			}
		}
	}
	private decimal _Pending;

	partial void OnPendingChanging(decimal newValue);
	partial void OnPendingChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public Nullable<decimal> CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerID;

	partial void OnCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnCustomerIDChanged();

    public Nullable<System.DateTime> RequiredDate 
	{ 
		get
		{
			return _RequiredDate;
		}
		set
		{
			if(_RequiredDate != value)
			{
				OnRequiredDateChanging(value);
				_RequiredDate = value;
				OnRequiredDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _RequiredDate;

	partial void OnRequiredDateChanging(Nullable<System.DateTime> newValue);
	partial void OnRequiredDateChanged();

    public Nullable<System.TimeSpan> RequiredTime 
	{ 
		get
		{
			return _RequiredTime;
		}
		set
		{
			if(_RequiredTime != value)
			{
				OnRequiredTimeChanging(value);
				_RequiredTime = value;
				OnRequiredTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _RequiredTime;

	partial void OnRequiredTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnRequiredTimeChanged();

    public string ChargedBy 
	{ 
		get
		{
			return _ChargedBy;
		}
		set
		{
			if(_ChargedBy != value)
			{
				OnChargedByChanging(value);
				_ChargedBy = value;
				OnChargedByChanged();
			}
		}
	}
	private string _ChargedBy;

	partial void OnChargedByChanging(string newValue);
	partial void OnChargedByChanged();

    public Nullable<System.DateTime> DeliveredDate 
	{ 
		get
		{
			return _DeliveredDate;
		}
		set
		{
			if(_DeliveredDate != value)
			{
				OnDeliveredDateChanging(value);
				_DeliveredDate = value;
				OnDeliveredDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _DeliveredDate;

	partial void OnDeliveredDateChanging(Nullable<System.DateTime> newValue);
	partial void OnDeliveredDateChanged();

    public Nullable<System.TimeSpan> DeliveredTime 
	{ 
		get
		{
			return _DeliveredTime;
		}
		set
		{
			if(_DeliveredTime != value)
			{
				OnDeliveredTimeChanging(value);
				_DeliveredTime = value;
				OnDeliveredTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _DeliveredTime;

	partial void OnDeliveredTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnDeliveredTimeChanged();

    public string DeliveryBoy 
	{ 
		get
		{
			return _DeliveryBoy;
		}
		set
		{
			if(_DeliveryBoy != value)
			{
				OnDeliveryBoyChanging(value);
				_DeliveryBoy = value;
				OnDeliveryBoyChanged();
			}
		}
	}
	private string _DeliveryBoy;

	partial void OnDeliveryBoyChanging(string newValue);
	partial void OnDeliveryBoyChanged();

    public string MobilieNumber 
	{ 
		get
		{
			return _MobilieNumber;
		}
		set
		{
			if(_MobilieNumber != value)
			{
				OnMobilieNumberChanging(value);
				_MobilieNumber = value;
				OnMobilieNumberChanged();
			}
		}
	}
	private string _MobilieNumber;

	partial void OnMobilieNumberChanging(string newValue);
	partial void OnMobilieNumberChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsDelivered 
	{ 
		get
		{
			return _IsDelivered;
		}
		set
		{
			if(_IsDelivered != value)
			{
				OnIsDeliveredChanging(value);
				_IsDelivered = value;
				OnIsDeliveredChanged();
			}
		}
	}
	private bool _IsDelivered;

	partial void OnIsDeliveredChanging(bool newValue);
	partial void OnIsDeliveredChanged();

    public string BillRefNo 
	{ 
		get
		{
			return _BillRefNo;
		}
		set
		{
			if(_BillRefNo != value)
			{
				OnBillRefNoChanging(value);
				_BillRefNo = value;
				OnBillRefNoChanged();
			}
		}
	}
	private string _BillRefNo;

	partial void OnBillRefNoChanging(string newValue);
	partial void OnBillRefNoChanged();

    public string Ref1 
	{ 
		get
		{
			return _Ref1;
		}
		set
		{
			if(_Ref1 != value)
			{
				OnRef1Changing(value);
				_Ref1 = value;
				OnRef1Changed();
			}
		}
	}
	private string _Ref1;

	partial void OnRef1Changing(string newValue);
	partial void OnRef1Changed();

    public string ErrMsg 
	{ 
		get
		{
			return _ErrMsg;
		}
		set
		{
			if(_ErrMsg != value)
			{
				OnErrMsgChanging(value);
				_ErrMsg = value;
				OnErrMsgChanged();
			}
		}
	}
	private string _ErrMsg;

	partial void OnErrMsgChanging(string newValue);
	partial void OnErrMsgChanged();

    public Nullable<int> WaitingID 
	{ 
		get
		{
			return _WaitingID;
		}
		set
		{
			if(_WaitingID != value)
			{
				OnWaitingIDChanging(value);
				_WaitingID = value;
				OnWaitingIDChanged();
			}
		}
	}
	private Nullable<int> _WaitingID;

	partial void OnWaitingIDChanging(Nullable<int> newValue);
	partial void OnWaitingIDChanged();

    public string SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private string _SchemeID;

	partial void OnSchemeIDChanging(string newValue);
	partial void OnSchemeIDChanged();

    public Nullable<int> ProcessID 
	{ 
		get
		{
			return _ProcessID;
		}
		set
		{
			if(_ProcessID != value)
			{
				OnProcessIDChanging(value);
				_ProcessID = value;
				OnProcessIDChanged();
			}
		}
	}
	private Nullable<int> _ProcessID;

	partial void OnProcessIDChanging(Nullable<int> newValue);
	partial void OnProcessIDChanged();

    public bool IsMobile 
	{ 
		get
		{
			return _IsMobile;
		}
		set
		{
			if(_IsMobile != value)
			{
				OnIsMobileChanging(value);
				_IsMobile = value;
				OnIsMobileChanged();
			}
		}
	}
	private bool _IsMobile;

	partial void OnIsMobileChanging(bool newValue);
	partial void OnIsMobileChanged();

    public Nullable<int> BranchID 
	{ 
		get
		{
			return _BranchID;
		}
		set
		{
			if(_BranchID != value)
			{
				OnBranchIDChanging(value);
				_BranchID = value;
				OnBranchIDChanged();
			}
		}
	}
	private Nullable<int> _BranchID;

	partial void OnBranchIDChanging(Nullable<int> newValue);
	partial void OnBranchIDChanged();

    public Nullable<int> OutletID 
	{ 
		get
		{
			return _OutletID;
		}
		set
		{
			if(_OutletID != value)
			{
				OnOutletIDChanging(value);
				_OutletID = value;
				OnOutletIDChanged();
			}
		}
	}
	private Nullable<int> _OutletID;

	partial void OnOutletIDChanging(Nullable<int> newValue);
	partial void OnOutletIDChanged();

    public Nullable<System.DateTime> InvoiceDate 
	{ 
		get
		{
			return _InvoiceDate;
		}
		set
		{
			if(_InvoiceDate != value)
			{
				OnInvoiceDateChanging(value);
				_InvoiceDate = value;
				OnInvoiceDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _InvoiceDate;

	partial void OnInvoiceDateChanging(Nullable<System.DateTime> newValue);
	partial void OnInvoiceDateChanged();

    public Nullable<int> VehicleID 
	{ 
		get
		{
			return _VehicleID;
		}
		set
		{
			if(_VehicleID != value)
			{
				OnVehicleIDChanging(value);
				_VehicleID = value;
				OnVehicleIDChanged();
			}
		}
	}
	private Nullable<int> _VehicleID;

	partial void OnVehicleIDChanging(Nullable<int> newValue);
	partial void OnVehicleIDChanged();

    public string ContraTax 
	{ 
		get
		{
			return _ContraTax;
		}
		set
		{
			if(_ContraTax != value)
			{
				OnContraTaxChanging(value);
				_ContraTax = value;
				OnContraTaxChanged();
			}
		}
	}
	private string _ContraTax;

	partial void OnContraTaxChanging(string newValue);
	partial void OnContraTaxChanged();

    public Nullable<int> OrderTypeReasonID 
	{ 
		get
		{
			return _OrderTypeReasonID;
		}
		set
		{
			if(_OrderTypeReasonID != value)
			{
				OnOrderTypeReasonIDChanging(value);
				_OrderTypeReasonID = value;
				OnOrderTypeReasonIDChanged();
			}
		}
	}
	private Nullable<int> _OrderTypeReasonID;

	partial void OnOrderTypeReasonIDChanging(Nullable<int> newValue);
	partial void OnOrderTypeReasonIDChanged();

    public string Attachment 
	{ 
		get
		{
			return _Attachment;
		}
		set
		{
			if(_Attachment != value)
			{
				OnAttachmentChanging(value);
				_Attachment = value;
				OnAttachmentChanged();
			}
		}
	}
	private string _Attachment;

	partial void OnAttachmentChanging(string newValue);
	partial void OnAttachmentChanged();

    public string InvoiceNumber 
	{ 
		get
		{
			return _InvoiceNumber;
		}
		set
		{
			if(_InvoiceNumber != value)
			{
				OnInvoiceNumberChanging(value);
				_InvoiceNumber = value;
				OnInvoiceNumberChanged();
			}
		}
	}
	private string _InvoiceNumber;

	partial void OnInvoiceNumberChanging(string newValue);
	partial void OnInvoiceNumberChanged();

    public string Ref2 
	{ 
		get
		{
			return _Ref2;
		}
		set
		{
			if(_Ref2 != value)
			{
				OnRef2Changing(value);
				_Ref2 = value;
				OnRef2Changed();
			}
		}
	}
	private string _Ref2;

	partial void OnRef2Changing(string newValue);
	partial void OnRef2Changed();

    public string DocType 
	{ 
		get
		{
			return _DocType;
		}
		set
		{
			if(_DocType != value)
			{
				OnDocTypeChanging(value);
				_DocType = value;
				OnDocTypeChanged();
			}
		}
	}
	private string _DocType;

	partial void OnDocTypeChanging(string newValue);
	partial void OnDocTypeChanged();

    public Nullable<int> HDocID 
	{ 
		get
		{
			return _HDocID;
		}
		set
		{
			if(_HDocID != value)
			{
				OnHDocIDChanging(value);
				_HDocID = value;
				OnHDocIDChanged();
			}
		}
	}
	private Nullable<int> _HDocID;

	partial void OnHDocIDChanging(Nullable<int> newValue);
	partial void OnHDocIDChanged();

    public string CancelFlag 
	{ 
		get
		{
			return _CancelFlag;
		}
		set
		{
			if(_CancelFlag != value)
			{
				OnCancelFlagChanging(value);
				_CancelFlag = value;
				OnCancelFlagChanged();
			}
		}
	}
	private string _CancelFlag;

	partial void OnCancelFlagChanging(string newValue);
	partial void OnCancelFlagChanged();

    public Nullable<int> CancelBy 
	{ 
		get
		{
			return _CancelBy;
		}
		set
		{
			if(_CancelBy != value)
			{
				OnCancelByChanging(value);
				_CancelBy = value;
				OnCancelByChanged();
			}
		}
	}
	private Nullable<int> _CancelBy;

	partial void OnCancelByChanging(Nullable<int> newValue);
	partial void OnCancelByChanged();

    public Nullable<System.DateTime> CancelDate 
	{ 
		get
		{
			return _CancelDate;
		}
		set
		{
			if(_CancelDate != value)
			{
				OnCancelDateChanging(value);
				_CancelDate = value;
				OnCancelDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CancelDate;

	partial void OnCancelDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCancelDateChanged();

    public virtual OCRD OCRD { get; set; }
    public virtual OEMP OEMP { get; set; }
    public virtual OVCL OVCL { get; set; }
    public virtual ICollection<RDR1> RDR1 { get; set; }
}

[Serializable]
public partial class ORET : ObjectWithState
{
    public ORET() 
    { 
        this.RET1 = new HashSet<RET1>();
        this.OIDMs = new HashSet<OIDM>();
        this.OIDMRETs = new HashSet<OIDMRET>();
    }


    public int ORETID 
	{ 
		get
		{
			return _ORETID;
		}
		set
		{
			if(_ORETID != value)
			{
				OnORETIDChanging(value);
				_ORETID = value;
				OnORETIDChanged();
			}
		}
	}
	private int _ORETID;

	partial void OnORETIDChanging(int newValue);
	partial void OnORETIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int WhsID 
	{ 
		get
		{
			return _WhsID;
		}
		set
		{
			if(_WhsID != value)
			{
				OnWhsIDChanging(value);
				_WhsID = value;
				OnWhsIDChanged();
			}
		}
	}
	private int _WhsID;

	partial void OnWhsIDChanging(int newValue);
	partial void OnWhsIDChanged();

    public Nullable<int> VendorID 
	{ 
		get
		{
			return _VendorID;
		}
		set
		{
			if(_VendorID != value)
			{
				OnVendorIDChanging(value);
				_VendorID = value;
				OnVendorIDChanged();
			}
		}
	}
	private Nullable<int> _VendorID;

	partial void OnVendorIDChanging(Nullable<int> newValue);
	partial void OnVendorIDChanged();

    public Nullable<decimal> VendorParentID 
	{ 
		get
		{
			return _VendorParentID;
		}
		set
		{
			if(_VendorParentID != value)
			{
				OnVendorParentIDChanging(value);
				_VendorParentID = value;
				OnVendorParentIDChanged();
			}
		}
	}
	private Nullable<decimal> _VendorParentID;

	partial void OnVendorParentIDChanging(Nullable<decimal> newValue);
	partial void OnVendorParentIDChanged();

    public Nullable<decimal> CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerID;

	partial void OnCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnCustomerIDChanged();

    public Nullable<int> CreditNoteID 
	{ 
		get
		{
			return _CreditNoteID;
		}
		set
		{
			if(_CreditNoteID != value)
			{
				OnCreditNoteIDChanging(value);
				_CreditNoteID = value;
				OnCreditNoteIDChanged();
			}
		}
	}
	private Nullable<int> _CreditNoteID;

	partial void OnCreditNoteIDChanging(Nullable<int> newValue);
	partial void OnCreditNoteIDChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public System.DateTime Date 
	{ 
		get
		{
			return _Date;
		}
		set
		{
			if(_Date != value)
			{
				OnDateChanging(value);
				_Date = value;
				OnDateChanged();
			}
		}
	}
	private System.DateTime _Date;

	partial void OnDateChanging(System.DateTime newValue);
	partial void OnDateChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public decimal Amount 
	{ 
		get
		{
			return _Amount;
		}
		set
		{
			if(_Amount != value)
			{
				OnAmountChanging(value);
				_Amount = value;
				OnAmountChanged();
			}
		}
	}
	private decimal _Amount;

	partial void OnAmountChanging(decimal newValue);
	partial void OnAmountChanged();

    public string BillRefNo 
	{ 
		get
		{
			return _BillRefNo;
		}
		set
		{
			if(_BillRefNo != value)
			{
				OnBillRefNoChanging(value);
				_BillRefNo = value;
				OnBillRefNoChanged();
			}
		}
	}
	private string _BillRefNo;

	partial void OnBillRefNoChanging(string newValue);
	partial void OnBillRefNoChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public string Attachment 
	{ 
		get
		{
			return _Attachment;
		}
		set
		{
			if(_Attachment != value)
			{
				OnAttachmentChanging(value);
				_Attachment = value;
				OnAttachmentChanged();
			}
		}
	}
	private string _Attachment;

	partial void OnAttachmentChanging(string newValue);
	partial void OnAttachmentChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string Ref1 
	{ 
		get
		{
			return _Ref1;
		}
		set
		{
			if(_Ref1 != value)
			{
				OnRef1Changing(value);
				_Ref1 = value;
				OnRef1Changed();
			}
		}
	}
	private string _Ref1;

	partial void OnRef1Changing(string newValue);
	partial void OnRef1Changed();

    public string ErrMsg 
	{ 
		get
		{
			return _ErrMsg;
		}
		set
		{
			if(_ErrMsg != value)
			{
				OnErrMsgChanging(value);
				_ErrMsg = value;
				OnErrMsgChanged();
			}
		}
	}
	private string _ErrMsg;

	partial void OnErrMsgChanging(string newValue);
	partial void OnErrMsgChanged();

    public string Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private string _Status;

	partial void OnStatusChanging(string newValue);
	partial void OnStatusChanged();

    public string InvoiceNumber 
	{ 
		get
		{
			return _InvoiceNumber;
		}
		set
		{
			if(_InvoiceNumber != value)
			{
				OnInvoiceNumberChanging(value);
				_InvoiceNumber = value;
				OnInvoiceNumberChanged();
			}
		}
	}
	private string _InvoiceNumber;

	partial void OnInvoiceNumberChanging(string newValue);
	partial void OnInvoiceNumberChanged();

    public Nullable<decimal> SubTotal 
	{ 
		get
		{
			return _SubTotal;
		}
		set
		{
			if(_SubTotal != value)
			{
				OnSubTotalChanging(value);
				_SubTotal = value;
				OnSubTotalChanged();
			}
		}
	}
	private Nullable<decimal> _SubTotal;

	partial void OnSubTotalChanging(Nullable<decimal> newValue);
	partial void OnSubTotalChanged();

    public Nullable<decimal> Tax 
	{ 
		get
		{
			return _Tax;
		}
		set
		{
			if(_Tax != value)
			{
				OnTaxChanging(value);
				_Tax = value;
				OnTaxChanged();
			}
		}
	}
	private Nullable<decimal> _Tax;

	partial void OnTaxChanging(Nullable<decimal> newValue);
	partial void OnTaxChanged();

    public Nullable<decimal> Rounding 
	{ 
		get
		{
			return _Rounding;
		}
		set
		{
			if(_Rounding != value)
			{
				OnRoundingChanging(value);
				_Rounding = value;
				OnRoundingChanged();
			}
		}
	}
	private Nullable<decimal> _Rounding;

	partial void OnRoundingChanging(Nullable<decimal> newValue);
	partial void OnRoundingChanged();

    public Nullable<decimal> SchemeAmount 
	{ 
		get
		{
			return _SchemeAmount;
		}
		set
		{
			if(_SchemeAmount != value)
			{
				OnSchemeAmountChanging(value);
				_SchemeAmount = value;
				OnSchemeAmountChanged();
			}
		}
	}
	private Nullable<decimal> _SchemeAmount;

	partial void OnSchemeAmountChanging(Nullable<decimal> newValue);
	partial void OnSchemeAmountChanged();

    public Nullable<int> HDocID 
	{ 
		get
		{
			return _HDocID;
		}
		set
		{
			if(_HDocID != value)
			{
				OnHDocIDChanging(value);
				_HDocID = value;
				OnHDocIDChanged();
			}
		}
	}
	private Nullable<int> _HDocID;

	partial void OnHDocIDChanging(Nullable<int> newValue);
	partial void OnHDocIDChanged();

    public Nullable<decimal> BillToCustomerID 
	{ 
		get
		{
			return _BillToCustomerID;
		}
		set
		{
			if(_BillToCustomerID != value)
			{
				OnBillToCustomerIDChanging(value);
				_BillToCustomerID = value;
				OnBillToCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _BillToCustomerID;

	partial void OnBillToCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnBillToCustomerIDChanged();

    public virtual OWH OWH { get; set; }
    public virtual ICollection<RET1> RET1 { get; set; }
    public virtual ICollection<OIDM> OIDMs { get; set; }
    public virtual ICollection<OIDMRET> OIDMRETs { get; set; }
}

[Serializable]
public partial class ORLN : ObjectWithState
{
    public ORLN() 
    { 
        this.CRD2 = new HashSet<CRD2>();
    }


    public int RelationID 
	{ 
		get
		{
			return _RelationID;
		}
		set
		{
			if(_RelationID != value)
			{
				OnRelationIDChanging(value);
				_RelationID = value;
				OnRelationIDChanged();
			}
		}
	}
	private int _RelationID;

	partial void OnRelationIDChanging(int newValue);
	partial void OnRelationIDChanged();

    public string RelationName 
	{ 
		get
		{
			return _RelationName;
		}
		set
		{
			if(_RelationName != value)
			{
				OnRelationNameChanging(value);
				_RelationName = value;
				OnRelationNameChanged();
			}
		}
	}
	private string _RelationName;

	partial void OnRelationNameChanging(string newValue);
	partial void OnRelationNameChanged();

    public string RelationDesc 
	{ 
		get
		{
			return _RelationDesc;
		}
		set
		{
			if(_RelationDesc != value)
			{
				OnRelationDescChanging(value);
				_RelationDesc = value;
				OnRelationDescChanged();
			}
		}
	}
	private string _RelationDesc;

	partial void OnRelationDescChanging(string newValue);
	partial void OnRelationDescChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual ICollection<CRD2> CRD2 { get; set; }
}

[Serializable]
public partial class ORSN : ObjectWithState
{
    public ORSN() 
    { 
        this.MID1 = new HashSet<MID1>();
        this.NRT1 = new HashSet<NRT1>();
        this.NTF1 = new HashSet<NTF1>();
        this.RET1 = new HashSet<RET1>();
    }


    public int ReasonID 
	{ 
		get
		{
			return _ReasonID;
		}
		set
		{
			if(_ReasonID != value)
			{
				OnReasonIDChanging(value);
				_ReasonID = value;
				OnReasonIDChanged();
			}
		}
	}
	private int _ReasonID;

	partial void OnReasonIDChanging(int newValue);
	partial void OnReasonIDChanged();

    public string ReasonName 
	{ 
		get
		{
			return _ReasonName;
		}
		set
		{
			if(_ReasonName != value)
			{
				OnReasonNameChanging(value);
				_ReasonName = value;
				OnReasonNameChanged();
			}
		}
	}
	private string _ReasonName;

	partial void OnReasonNameChanging(string newValue);
	partial void OnReasonNameChanged();

    public string ReasonDesc 
	{ 
		get
		{
			return _ReasonDesc;
		}
		set
		{
			if(_ReasonDesc != value)
			{
				OnReasonDescChanging(value);
				_ReasonDesc = value;
				OnReasonDescChanged();
			}
		}
	}
	private string _ReasonDesc;

	partial void OnReasonDescChanging(string newValue);
	partial void OnReasonDescChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string SAPReasonItemCode 
	{ 
		get
		{
			return _SAPReasonItemCode;
		}
		set
		{
			if(_SAPReasonItemCode != value)
			{
				OnSAPReasonItemCodeChanging(value);
				_SAPReasonItemCode = value;
				OnSAPReasonItemCodeChanged();
			}
		}
	}
	private string _SAPReasonItemCode;

	partial void OnSAPReasonItemCodeChanging(string newValue);
	partial void OnSAPReasonItemCodeChanged();

    public Nullable<bool> IsAuto 
	{ 
		get
		{
			return _IsAuto;
		}
		set
		{
			if(_IsAuto != value)
			{
				OnIsAutoChanging(value);
				_IsAuto = value;
				OnIsAutoChanged();
			}
		}
	}
	private Nullable<bool> _IsAuto;

	partial void OnIsAutoChanging(Nullable<bool> newValue);
	partial void OnIsAutoChanged();

    public virtual ICollection<MID1> MID1 { get; set; }
    public virtual ICollection<NRT1> NRT1 { get; set; }
    public virtual ICollection<NTF1> NTF1 { get; set; }
    public virtual ICollection<RET1> RET1 { get; set; }
}

[Serializable]
public partial class ORUT : ObjectWithState
{
    public ORUT() 
    { 
        this.RUT1 = new HashSet<RUT1>();
        this.RUT2 = new HashSet<RUT2>();
    }


    public int RouteID 
	{ 
		get
		{
			return _RouteID;
		}
		set
		{
			if(_RouteID != value)
			{
				OnRouteIDChanging(value);
				_RouteID = value;
				OnRouteIDChanged();
			}
		}
	}
	private int _RouteID;

	partial void OnRouteIDChanging(int newValue);
	partial void OnRouteIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string RouteCode 
	{ 
		get
		{
			return _RouteCode;
		}
		set
		{
			if(_RouteCode != value)
			{
				OnRouteCodeChanging(value);
				_RouteCode = value;
				OnRouteCodeChanged();
			}
		}
	}
	private string _RouteCode;

	partial void OnRouteCodeChanging(string newValue);
	partial void OnRouteCodeChanged();

    public string RouteName 
	{ 
		get
		{
			return _RouteName;
		}
		set
		{
			if(_RouteName != value)
			{
				OnRouteNameChanging(value);
				_RouteName = value;
				OnRouteNameChanged();
			}
		}
	}
	private string _RouteName;

	partial void OnRouteNameChanging(string newValue);
	partial void OnRouteNameChanged();

    public string Description 
	{ 
		get
		{
			return _Description;
		}
		set
		{
			if(_Description != value)
			{
				OnDescriptionChanging(value);
				_Description = value;
				OnDescriptionChanged();
			}
		}
	}
	private string _Description;

	partial void OnDescriptionChanging(string newValue);
	partial void OnDescriptionChanged();

    public bool Monday 
	{ 
		get
		{
			return _Monday;
		}
		set
		{
			if(_Monday != value)
			{
				OnMondayChanging(value);
				_Monday = value;
				OnMondayChanged();
			}
		}
	}
	private bool _Monday;

	partial void OnMondayChanging(bool newValue);
	partial void OnMondayChanged();

    public bool Tuesday 
	{ 
		get
		{
			return _Tuesday;
		}
		set
		{
			if(_Tuesday != value)
			{
				OnTuesdayChanging(value);
				_Tuesday = value;
				OnTuesdayChanged();
			}
		}
	}
	private bool _Tuesday;

	partial void OnTuesdayChanging(bool newValue);
	partial void OnTuesdayChanged();

    public bool Wednesday 
	{ 
		get
		{
			return _Wednesday;
		}
		set
		{
			if(_Wednesday != value)
			{
				OnWednesdayChanging(value);
				_Wednesday = value;
				OnWednesdayChanged();
			}
		}
	}
	private bool _Wednesday;

	partial void OnWednesdayChanging(bool newValue);
	partial void OnWednesdayChanged();

    public bool Thursday 
	{ 
		get
		{
			return _Thursday;
		}
		set
		{
			if(_Thursday != value)
			{
				OnThursdayChanging(value);
				_Thursday = value;
				OnThursdayChanged();
			}
		}
	}
	private bool _Thursday;

	partial void OnThursdayChanging(bool newValue);
	partial void OnThursdayChanged();

    public bool Friday 
	{ 
		get
		{
			return _Friday;
		}
		set
		{
			if(_Friday != value)
			{
				OnFridayChanging(value);
				_Friday = value;
				OnFridayChanged();
			}
		}
	}
	private bool _Friday;

	partial void OnFridayChanging(bool newValue);
	partial void OnFridayChanged();

    public bool Saturday 
	{ 
		get
		{
			return _Saturday;
		}
		set
		{
			if(_Saturday != value)
			{
				OnSaturdayChanging(value);
				_Saturday = value;
				OnSaturdayChanged();
			}
		}
	}
	private bool _Saturday;

	partial void OnSaturdayChanging(bool newValue);
	partial void OnSaturdayChanged();

    public bool Sunday 
	{ 
		get
		{
			return _Sunday;
		}
		set
		{
			if(_Sunday != value)
			{
				OnSundayChanging(value);
				_Sunday = value;
				OnSundayChanged();
			}
		}
	}
	private bool _Sunday;

	partial void OnSundayChanging(bool newValue);
	partial void OnSundayChanged();

    public Nullable<int> PrefSalesPersonID 
	{ 
		get
		{
			return _PrefSalesPersonID;
		}
		set
		{
			if(_PrefSalesPersonID != value)
			{
				OnPrefSalesPersonIDChanging(value);
				_PrefSalesPersonID = value;
				OnPrefSalesPersonIDChanged();
			}
		}
	}
	private Nullable<int> _PrefSalesPersonID;

	partial void OnPrefSalesPersonIDChanging(Nullable<int> newValue);
	partial void OnPrefSalesPersonIDChanged();

    public Nullable<int> VehicleID 
	{ 
		get
		{
			return _VehicleID;
		}
		set
		{
			if(_VehicleID != value)
			{
				OnVehicleIDChanging(value);
				_VehicleID = value;
				OnVehicleIDChanged();
			}
		}
	}
	private Nullable<int> _VehicleID;

	partial void OnVehicleIDChanging(Nullable<int> newValue);
	partial void OnVehicleIDChanged();

    public Nullable<int> PrefDriverID 
	{ 
		get
		{
			return _PrefDriverID;
		}
		set
		{
			if(_PrefDriverID != value)
			{
				OnPrefDriverIDChanging(value);
				_PrefDriverID = value;
				OnPrefDriverIDChanged();
			}
		}
	}
	private Nullable<int> _PrefDriverID;

	partial void OnPrefDriverIDChanging(Nullable<int> newValue);
	partial void OnPrefDriverIDChanged();

    public Nullable<decimal> DistanceKms 
	{ 
		get
		{
			return _DistanceKms;
		}
		set
		{
			if(_DistanceKms != value)
			{
				OnDistanceKmsChanging(value);
				_DistanceKms = value;
				OnDistanceKmsChanged();
			}
		}
	}
	private Nullable<decimal> _DistanceKms;

	partial void OnDistanceKmsChanging(Nullable<decimal> newValue);
	partial void OnDistanceKmsChanged();

    public Nullable<decimal> ExpectedBusiness 
	{ 
		get
		{
			return _ExpectedBusiness;
		}
		set
		{
			if(_ExpectedBusiness != value)
			{
				OnExpectedBusinessChanging(value);
				_ExpectedBusiness = value;
				OnExpectedBusinessChanged();
			}
		}
	}
	private Nullable<decimal> _ExpectedBusiness;

	partial void OnExpectedBusinessChanging(Nullable<decimal> newValue);
	partial void OnExpectedBusinessChanged();

    public Nullable<decimal> ExpectedExpense 
	{ 
		get
		{
			return _ExpectedExpense;
		}
		set
		{
			if(_ExpectedExpense != value)
			{
				OnExpectedExpenseChanging(value);
				_ExpectedExpense = value;
				OnExpectedExpenseChanged();
			}
		}
	}
	private Nullable<decimal> _ExpectedExpense;

	partial void OnExpectedExpenseChanging(Nullable<decimal> newValue);
	partial void OnExpectedExpenseChanged();

    public Nullable<decimal> Lodging 
	{ 
		get
		{
			return _Lodging;
		}
		set
		{
			if(_Lodging != value)
			{
				OnLodgingChanging(value);
				_Lodging = value;
				OnLodgingChanged();
			}
		}
	}
	private Nullable<decimal> _Lodging;

	partial void OnLodgingChanging(Nullable<decimal> newValue);
	partial void OnLodgingChanged();

    public Nullable<decimal> Boarding 
	{ 
		get
		{
			return _Boarding;
		}
		set
		{
			if(_Boarding != value)
			{
				OnBoardingChanging(value);
				_Boarding = value;
				OnBoardingChanged();
			}
		}
	}
	private Nullable<decimal> _Boarding;

	partial void OnBoardingChanging(Nullable<decimal> newValue);
	partial void OnBoardingChanged();

    public Nullable<decimal> Traveling 
	{ 
		get
		{
			return _Traveling;
		}
		set
		{
			if(_Traveling != value)
			{
				OnTravelingChanging(value);
				_Traveling = value;
				OnTravelingChanged();
			}
		}
	}
	private Nullable<decimal> _Traveling;

	partial void OnTravelingChanging(Nullable<decimal> newValue);
	partial void OnTravelingChanged();

    public Nullable<decimal> TollCharges 
	{ 
		get
		{
			return _TollCharges;
		}
		set
		{
			if(_TollCharges != value)
			{
				OnTollChargesChanging(value);
				_TollCharges = value;
				OnTollChargesChanged();
			}
		}
	}
	private Nullable<decimal> _TollCharges;

	partial void OnTollChargesChanging(Nullable<decimal> newValue);
	partial void OnTollChargesChanged();

    public Nullable<decimal> Telephone 
	{ 
		get
		{
			return _Telephone;
		}
		set
		{
			if(_Telephone != value)
			{
				OnTelephoneChanging(value);
				_Telephone = value;
				OnTelephoneChanged();
			}
		}
	}
	private Nullable<decimal> _Telephone;

	partial void OnTelephoneChanging(Nullable<decimal> newValue);
	partial void OnTelephoneChanged();

    public Nullable<decimal> Miscellaneous 
	{ 
		get
		{
			return _Miscellaneous;
		}
		set
		{
			if(_Miscellaneous != value)
			{
				OnMiscellaneousChanging(value);
				_Miscellaneous = value;
				OnMiscellaneousChanged();
			}
		}
	}
	private Nullable<decimal> _Miscellaneous;

	partial void OnMiscellaneousChanging(Nullable<decimal> newValue);
	partial void OnMiscellaneousChanged();

    public Nullable<decimal> Total 
	{ 
		get
		{
			return _Total;
		}
		set
		{
			if(_Total != value)
			{
				OnTotalChanging(value);
				_Total = value;
				OnTotalChanged();
			}
		}
	}
	private Nullable<decimal> _Total;

	partial void OnTotalChanging(Nullable<decimal> newValue);
	partial void OnTotalChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public string Currency 
	{ 
		get
		{
			return _Currency;
		}
		set
		{
			if(_Currency != value)
			{
				OnCurrencyChanging(value);
				_Currency = value;
				OnCurrencyChanged();
			}
		}
	}
	private string _Currency;

	partial void OnCurrencyChanging(string newValue);
	partial void OnCurrencyChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<int> OwnCustomer 
	{ 
		get
		{
			return _OwnCustomer;
		}
		set
		{
			if(_OwnCustomer != value)
			{
				OnOwnCustomerChanging(value);
				_OwnCustomer = value;
				OnOwnCustomerChanged();
			}
		}
	}
	private Nullable<int> _OwnCustomer;

	partial void OnOwnCustomerChanging(Nullable<int> newValue);
	partial void OnOwnCustomerChanged();

    public Nullable<int> CompCustomer 
	{ 
		get
		{
			return _CompCustomer;
		}
		set
		{
			if(_CompCustomer != value)
			{
				OnCompCustomerChanging(value);
				_CompCustomer = value;
				OnCompCustomerChanged();
			}
		}
	}
	private Nullable<int> _CompCustomer;

	partial void OnCompCustomerChanging(Nullable<int> newValue);
	partial void OnCompCustomerChanged();

    public int RouteType 
	{ 
		get
		{
			return _RouteType;
		}
		set
		{
			if(_RouteType != value)
			{
				OnRouteTypeChanging(value);
				_RouteType = value;
				OnRouteTypeChanged();
			}
		}
	}
	private int _RouteType;

	partial void OnRouteTypeChanging(int newValue);
	partial void OnRouteTypeChanged();

    public string CreatedIpAddress 
	{ 
		get
		{
			return _CreatedIpAddress;
		}
		set
		{
			if(_CreatedIpAddress != value)
			{
				OnCreatedIpAddressChanging(value);
				_CreatedIpAddress = value;
				OnCreatedIpAddressChanged();
			}
		}
	}
	private string _CreatedIpAddress;

	partial void OnCreatedIpAddressChanging(string newValue);
	partial void OnCreatedIpAddressChanged();

    public string UpdatedIpAddress 
	{ 
		get
		{
			return _UpdatedIpAddress;
		}
		set
		{
			if(_UpdatedIpAddress != value)
			{
				OnUpdatedIpAddressChanging(value);
				_UpdatedIpAddress = value;
				OnUpdatedIpAddressChanged();
			}
		}
	}
	private string _UpdatedIpAddress;

	partial void OnUpdatedIpAddressChanging(string newValue);
	partial void OnUpdatedIpAddressChanged();

    public virtual OEMP OEMP { get; set; }
    public virtual OEMP OEMP1 { get; set; }
    public virtual OVCL OVCL { get; set; }
    public virtual ICollection<RUT1> RUT1 { get; set; }
    public virtual ICollection<RUT2> RUT2 { get; set; }
}

[Serializable]
public partial class OSCHDL : ObjectWithState
{
    public OSCHDL() 
    { 
        this.SCHDL1 = new HashSet<SCHDL1>();
    }


    public int ScheduleID 
	{ 
		get
		{
			return _ScheduleID;
		}
		set
		{
			if(_ScheduleID != value)
			{
				OnScheduleIDChanging(value);
				_ScheduleID = value;
				OnScheduleIDChanged();
			}
		}
	}
	private int _ScheduleID;

	partial void OnScheduleIDChanging(int newValue);
	partial void OnScheduleIDChanged();

    public string MessageTo 
	{ 
		get
		{
			return _MessageTo;
		}
		set
		{
			if(_MessageTo != value)
			{
				OnMessageToChanging(value);
				_MessageTo = value;
				OnMessageToChanged();
			}
		}
	}
	private string _MessageTo;

	partial void OnMessageToChanging(string newValue);
	partial void OnMessageToChanged();

    public System.DateTime StartDate 
	{ 
		get
		{
			return _StartDate;
		}
		set
		{
			if(_StartDate != value)
			{
				OnStartDateChanging(value);
				_StartDate = value;
				OnStartDateChanged();
			}
		}
	}
	private System.DateTime _StartDate;

	partial void OnStartDateChanging(System.DateTime newValue);
	partial void OnStartDateChanged();

    public Nullable<System.DateTime> NextDate 
	{ 
		get
		{
			return _NextDate;
		}
		set
		{
			if(_NextDate != value)
			{
				OnNextDateChanging(value);
				_NextDate = value;
				OnNextDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _NextDate;

	partial void OnNextDateChanging(Nullable<System.DateTime> newValue);
	partial void OnNextDateChanged();

    public string SchedulePeriod 
	{ 
		get
		{
			return _SchedulePeriod;
		}
		set
		{
			if(_SchedulePeriod != value)
			{
				OnSchedulePeriodChanging(value);
				_SchedulePeriod = value;
				OnSchedulePeriodChanged();
			}
		}
	}
	private string _SchedulePeriod;

	partial void OnSchedulePeriodChanging(string newValue);
	partial void OnSchedulePeriodChanged();

    public Nullable<short> PeriodNo 
	{ 
		get
		{
			return _PeriodNo;
		}
		set
		{
			if(_PeriodNo != value)
			{
				OnPeriodNoChanging(value);
				_PeriodNo = value;
				OnPeriodNoChanged();
			}
		}
	}
	private Nullable<short> _PeriodNo;

	partial void OnPeriodNoChanging(Nullable<short> newValue);
	partial void OnPeriodNoChanged();

    public string PeriodSlab 
	{ 
		get
		{
			return _PeriodSlab;
		}
		set
		{
			if(_PeriodSlab != value)
			{
				OnPeriodSlabChanging(value);
				_PeriodSlab = value;
				OnPeriodSlabChanged();
			}
		}
	}
	private string _PeriodSlab;

	partial void OnPeriodSlabChanging(string newValue);
	partial void OnPeriodSlabChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public Nullable<System.DateTime> LastRunDate 
	{ 
		get
		{
			return _LastRunDate;
		}
		set
		{
			if(_LastRunDate != value)
			{
				OnLastRunDateChanging(value);
				_LastRunDate = value;
				OnLastRunDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _LastRunDate;

	partial void OnLastRunDateChanging(Nullable<System.DateTime> newValue);
	partial void OnLastRunDateChanged();

    public int LastInvDay 
	{ 
		get
		{
			return _LastInvDay;
		}
		set
		{
			if(_LastInvDay != value)
			{
				OnLastInvDayChanging(value);
				_LastInvDay = value;
				OnLastInvDayChanged();
			}
		}
	}
	private int _LastInvDay;

	partial void OnLastInvDayChanging(int newValue);
	partial void OnLastInvDayChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public virtual ICollection<SCHDL1> SCHDL1 { get; set; }
}

[Serializable]
public partial class OSCM : ObjectWithState
{
    public OSCM() 
    { 
        this.SCM2 = new HashSet<SCM2>();
        this.SCM3 = new HashSet<SCM3>();
        this.SCM4 = new HashSet<SCM4>();
        this.SCM1 = new HashSet<SCM1>();
        this.POS3 = new HashSet<POS3>();
        this.RDR1 = new HashSet<RDR1>();
        this.POS1 = new HashSet<POS1>();
    }


    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();

    public string SchemeCode 
	{ 
		get
		{
			return _SchemeCode;
		}
		set
		{
			if(_SchemeCode != value)
			{
				OnSchemeCodeChanging(value);
				_SchemeCode = value;
				OnSchemeCodeChanged();
			}
		}
	}
	private string _SchemeCode;

	partial void OnSchemeCodeChanging(string newValue);
	partial void OnSchemeCodeChanged();

    public string SchemeName 
	{ 
		get
		{
			return _SchemeName;
		}
		set
		{
			if(_SchemeName != value)
			{
				OnSchemeNameChanging(value);
				_SchemeName = value;
				OnSchemeNameChanged();
			}
		}
	}
	private string _SchemeName;

	partial void OnSchemeNameChanging(string newValue);
	partial void OnSchemeNameChanged();

    public string ApplicableMode 
	{ 
		get
		{
			return _ApplicableMode;
		}
		set
		{
			if(_ApplicableMode != value)
			{
				OnApplicableModeChanging(value);
				_ApplicableMode = value;
				OnApplicableModeChanged();
			}
		}
	}
	private string _ApplicableMode;

	partial void OnApplicableModeChanging(string newValue);
	partial void OnApplicableModeChanged();

    public Nullable<System.DateTime> StartDate 
	{ 
		get
		{
			return _StartDate;
		}
		set
		{
			if(_StartDate != value)
			{
				OnStartDateChanging(value);
				_StartDate = value;
				OnStartDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _StartDate;

	partial void OnStartDateChanging(Nullable<System.DateTime> newValue);
	partial void OnStartDateChanged();

    public Nullable<System.DateTime> EndDate 
	{ 
		get
		{
			return _EndDate;
		}
		set
		{
			if(_EndDate != value)
			{
				OnEndDateChanging(value);
				_EndDate = value;
				OnEndDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _EndDate;

	partial void OnEndDateChanging(Nullable<System.DateTime> newValue);
	partial void OnEndDateChanged();

    public Nullable<System.TimeSpan> StartTime 
	{ 
		get
		{
			return _StartTime;
		}
		set
		{
			if(_StartTime != value)
			{
				OnStartTimeChanging(value);
				_StartTime = value;
				OnStartTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _StartTime;

	partial void OnStartTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnStartTimeChanged();

    public Nullable<System.TimeSpan> EndTime 
	{ 
		get
		{
			return _EndTime;
		}
		set
		{
			if(_EndTime != value)
			{
				OnEndTimeChanging(value);
				_EndTime = value;
				OnEndTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _EndTime;

	partial void OnEndTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnEndTimeChanged();

    public bool BirthDay 
	{ 
		get
		{
			return _BirthDay;
		}
		set
		{
			if(_BirthDay != value)
			{
				OnBirthDayChanging(value);
				_BirthDay = value;
				OnBirthDayChanged();
			}
		}
	}
	private bool _BirthDay;

	partial void OnBirthDayChanging(bool newValue);
	partial void OnBirthDayChanged();

    public bool Anniversary 
	{ 
		get
		{
			return _Anniversary;
		}
		set
		{
			if(_Anniversary != value)
			{
				OnAnniversaryChanging(value);
				_Anniversary = value;
				OnAnniversaryChanged();
			}
		}
	}
	private bool _Anniversary;

	partial void OnAnniversaryChanging(bool newValue);
	partial void OnAnniversaryChanged();

    public bool SpecialDay 
	{ 
		get
		{
			return _SpecialDay;
		}
		set
		{
			if(_SpecialDay != value)
			{
				OnSpecialDayChanging(value);
				_SpecialDay = value;
				OnSpecialDayChanged();
			}
		}
	}
	private bool _SpecialDay;

	partial void OnSpecialDayChanging(bool newValue);
	partial void OnSpecialDayChanged();

    public bool Monday 
	{ 
		get
		{
			return _Monday;
		}
		set
		{
			if(_Monday != value)
			{
				OnMondayChanging(value);
				_Monday = value;
				OnMondayChanged();
			}
		}
	}
	private bool _Monday;

	partial void OnMondayChanging(bool newValue);
	partial void OnMondayChanged();

    public bool Tuesday 
	{ 
		get
		{
			return _Tuesday;
		}
		set
		{
			if(_Tuesday != value)
			{
				OnTuesdayChanging(value);
				_Tuesday = value;
				OnTuesdayChanged();
			}
		}
	}
	private bool _Tuesday;

	partial void OnTuesdayChanging(bool newValue);
	partial void OnTuesdayChanged();

    public bool Wednesday 
	{ 
		get
		{
			return _Wednesday;
		}
		set
		{
			if(_Wednesday != value)
			{
				OnWednesdayChanging(value);
				_Wednesday = value;
				OnWednesdayChanged();
			}
		}
	}
	private bool _Wednesday;

	partial void OnWednesdayChanging(bool newValue);
	partial void OnWednesdayChanged();

    public bool Thursday 
	{ 
		get
		{
			return _Thursday;
		}
		set
		{
			if(_Thursday != value)
			{
				OnThursdayChanging(value);
				_Thursday = value;
				OnThursdayChanged();
			}
		}
	}
	private bool _Thursday;

	partial void OnThursdayChanging(bool newValue);
	partial void OnThursdayChanged();

    public bool Friday 
	{ 
		get
		{
			return _Friday;
		}
		set
		{
			if(_Friday != value)
			{
				OnFridayChanging(value);
				_Friday = value;
				OnFridayChanged();
			}
		}
	}
	private bool _Friday;

	partial void OnFridayChanging(bool newValue);
	partial void OnFridayChanged();

    public bool Saturday 
	{ 
		get
		{
			return _Saturday;
		}
		set
		{
			if(_Saturday != value)
			{
				OnSaturdayChanging(value);
				_Saturday = value;
				OnSaturdayChanged();
			}
		}
	}
	private bool _Saturday;

	partial void OnSaturdayChanging(bool newValue);
	partial void OnSaturdayChanged();

    public bool Sunday 
	{ 
		get
		{
			return _Sunday;
		}
		set
		{
			if(_Sunday != value)
			{
				OnSundayChanging(value);
				_Sunday = value;
				OnSundayChanged();
			}
		}
	}
	private bool _Sunday;

	partial void OnSundayChanging(bool newValue);
	partial void OnSundayChanged();

    public int ApplicableOn 
	{ 
		get
		{
			return _ApplicableOn;
		}
		set
		{
			if(_ApplicableOn != value)
			{
				OnApplicableOnChanging(value);
				_ApplicableOn = value;
				OnApplicableOnChanged();
			}
		}
	}
	private int _ApplicableOn;

	partial void OnApplicableOnChanging(int newValue);
	partial void OnApplicableOnChanged();

    public bool IsTaxApplicable 
	{ 
		get
		{
			return _IsTaxApplicable;
		}
		set
		{
			if(_IsTaxApplicable != value)
			{
				OnIsTaxApplicableChanging(value);
				_IsTaxApplicable = value;
				OnIsTaxApplicableChanged();
			}
		}
	}
	private bool _IsTaxApplicable;

	partial void OnIsTaxApplicableChanging(bool newValue);
	partial void OnIsTaxApplicableChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<int> ReasonID 
	{ 
		get
		{
			return _ReasonID;
		}
		set
		{
			if(_ReasonID != value)
			{
				OnReasonIDChanging(value);
				_ReasonID = value;
				OnReasonIDChanged();
			}
		}
	}
	private Nullable<int> _ReasonID;

	partial void OnReasonIDChanging(Nullable<int> newValue);
	partial void OnReasonIDChanged();

    public bool IsSAP 
	{ 
		get
		{
			return _IsSAP;
		}
		set
		{
			if(_IsSAP != value)
			{
				OnIsSAPChanging(value);
				_IsSAP = value;
				OnIsSAPChanged();
			}
		}
	}
	private bool _IsSAP;

	partial void OnIsSAPChanging(bool newValue);
	partial void OnIsSAPChanged();

    public bool ForTemp 
	{ 
		get
		{
			return _ForTemp;
		}
		set
		{
			if(_ForTemp != value)
			{
				OnForTempChanging(value);
				_ForTemp = value;
				OnForTempChanged();
			}
		}
	}
	private bool _ForTemp;

	partial void OnForTempChanging(bool newValue);
	partial void OnForTempChanged();

    public bool ForFOW 
	{ 
		get
		{
			return _ForFOW;
		}
		set
		{
			if(_ForFOW != value)
			{
				OnForFOWChanging(value);
				_ForFOW = value;
				OnForFOWChanged();
			}
		}
	}
	private bool _ForFOW;

	partial void OnForFOWChanging(bool newValue);
	partial void OnForFOWChanged();

    public int SchemeCondition 
	{ 
		get
		{
			return _SchemeCondition;
		}
		set
		{
			if(_SchemeCondition != value)
			{
				OnSchemeConditionChanging(value);
				_SchemeCondition = value;
				OnSchemeConditionChanged();
			}
		}
	}
	private int _SchemeCondition;

	partial void OnSchemeConditionChanging(int newValue);
	partial void OnSchemeConditionChanged();

    public string CreatedIPAddress 
	{ 
		get
		{
			return _CreatedIPAddress;
		}
		set
		{
			if(_CreatedIPAddress != value)
			{
				OnCreatedIPAddressChanging(value);
				_CreatedIPAddress = value;
				OnCreatedIPAddressChanged();
			}
		}
	}
	private string _CreatedIPAddress;

	partial void OnCreatedIPAddressChanging(string newValue);
	partial void OnCreatedIPAddressChanged();

    public string UpdatedIPAddress 
	{ 
		get
		{
			return _UpdatedIPAddress;
		}
		set
		{
			if(_UpdatedIPAddress != value)
			{
				OnUpdatedIPAddressChanging(value);
				_UpdatedIPAddress = value;
				OnUpdatedIPAddressChanged();
			}
		}
	}
	private string _UpdatedIPAddress;

	partial void OnUpdatedIPAddressChanging(string newValue);
	partial void OnUpdatedIPAddressChanged();

    public Nullable<int> OrderFrom 
	{ 
		get
		{
			return _OrderFrom;
		}
		set
		{
			if(_OrderFrom != value)
			{
				OnOrderFromChanging(value);
				_OrderFrom = value;
				OnOrderFromChanged();
			}
		}
	}
	private Nullable<int> _OrderFrom;

	partial void OnOrderFromChanging(Nullable<int> newValue);
	partial void OnOrderFromChanged();

    public virtual ICollection<SCM2> SCM2 { get; set; }
    public virtual ICollection<SCM3> SCM3 { get; set; }
    public virtual ICollection<SCM4> SCM4 { get; set; }
    public virtual ICollection<SCM1> SCM1 { get; set; }
    public virtual ICollection<POS3> POS3 { get; set; }
    public virtual ICollection<RDR1> RDR1 { get; set; }
    public virtual ICollection<POS1> POS1 { get; set; }
}

[Serializable]
public partial class OSCMELG : ObjectWithState
{

    public int SchemeEligibleID 
	{ 
		get
		{
			return _SchemeEligibleID;
		}
		set
		{
			if(_SchemeEligibleID != value)
			{
				OnSchemeEligibleIDChanging(value);
				_SchemeEligibleID = value;
				OnSchemeEligibleIDChanged();
			}
		}
	}
	private int _SchemeEligibleID;

	partial void OnSchemeEligibleIDChanging(int newValue);
	partial void OnSchemeEligibleIDChanged();

    public Nullable<int> SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private Nullable<int> _SchemeID;

	partial void OnSchemeIDChanging(Nullable<int> newValue);
	partial void OnSchemeIDChanged();

    public Nullable<int> RegionID 
	{ 
		get
		{
			return _RegionID;
		}
		set
		{
			if(_RegionID != value)
			{
				OnRegionIDChanging(value);
				_RegionID = value;
				OnRegionIDChanged();
			}
		}
	}
	private Nullable<int> _RegionID;

	partial void OnRegionIDChanging(Nullable<int> newValue);
	partial void OnRegionIDChanged();

    public Nullable<decimal> DistID 
	{ 
		get
		{
			return _DistID;
		}
		set
		{
			if(_DistID != value)
			{
				OnDistIDChanging(value);
				_DistID = value;
				OnDistIDChanged();
			}
		}
	}
	private Nullable<decimal> _DistID;

	partial void OnDistIDChanging(Nullable<decimal> newValue);
	partial void OnDistIDChanged();

    public Nullable<decimal> DealerID 
	{ 
		get
		{
			return _DealerID;
		}
		set
		{
			if(_DealerID != value)
			{
				OnDealerIDChanging(value);
				_DealerID = value;
				OnDealerIDChanged();
			}
		}
	}
	private Nullable<decimal> _DealerID;

	partial void OnDealerIDChanging(Nullable<decimal> newValue);
	partial void OnDealerIDChanged();

    public bool IsInclude 
	{ 
		get
		{
			return _IsInclude;
		}
		set
		{
			if(_IsInclude != value)
			{
				OnIsIncludeChanging(value);
				_IsInclude = value;
				OnIsIncludeChanged();
			}
		}
	}
	private bool _IsInclude;

	partial void OnIsIncludeChanging(bool newValue);
	partial void OnIsIncludeChanged();

    public int EligibleCnt 
	{ 
		get
		{
			return _EligibleCnt;
		}
		set
		{
			if(_EligibleCnt != value)
			{
				OnEligibleCntChanging(value);
				_EligibleCnt = value;
				OnEligibleCntChanged();
			}
		}
	}
	private int _EligibleCnt;

	partial void OnEligibleCntChanging(int newValue);
	partial void OnEligibleCntChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public Nullable<int> OptionId 
	{ 
		get
		{
			return _OptionId;
		}
		set
		{
			if(_OptionId != value)
			{
				OnOptionIdChanging(value);
				_OptionId = value;
				OnOptionIdChanged();
			}
		}
	}
	private Nullable<int> _OptionId;

	partial void OnOptionIdChanging(Nullable<int> newValue);
	partial void OnOptionIdChanged();

    public Nullable<int> QPSQty 
	{ 
		get
		{
			return _QPSQty;
		}
		set
		{
			if(_QPSQty != value)
			{
				OnQPSQtyChanging(value);
				_QPSQty = value;
				OnQPSQtyChanged();
			}
		}
	}
	private Nullable<int> _QPSQty;

	partial void OnQPSQtyChanging(Nullable<int> newValue);
	partial void OnQPSQtyChanged();
}

[Serializable]
public partial class OSCMELGLOG : ObjectWithState
{

    public int OSCMELGLOGID 
	{ 
		get
		{
			return _OSCMELGLOGID;
		}
		set
		{
			if(_OSCMELGLOGID != value)
			{
				OnOSCMELGLOGIDChanging(value);
				_OSCMELGLOGID = value;
				OnOSCMELGLOGIDChanged();
			}
		}
	}
	private int _OSCMELGLOGID;

	partial void OnOSCMELGLOGIDChanging(int newValue);
	partial void OnOSCMELGLOGIDChanged();

    public int SchemeEligibleID 
	{ 
		get
		{
			return _SchemeEligibleID;
		}
		set
		{
			if(_SchemeEligibleID != value)
			{
				OnSchemeEligibleIDChanging(value);
				_SchemeEligibleID = value;
				OnSchemeEligibleIDChanged();
			}
		}
	}
	private int _SchemeEligibleID;

	partial void OnSchemeEligibleIDChanging(int newValue);
	partial void OnSchemeEligibleIDChanged();

    public Nullable<int> RegionID 
	{ 
		get
		{
			return _RegionID;
		}
		set
		{
			if(_RegionID != value)
			{
				OnRegionIDChanging(value);
				_RegionID = value;
				OnRegionIDChanged();
			}
		}
	}
	private Nullable<int> _RegionID;

	partial void OnRegionIDChanging(Nullable<int> newValue);
	partial void OnRegionIDChanged();

    public Nullable<decimal> DistID 
	{ 
		get
		{
			return _DistID;
		}
		set
		{
			if(_DistID != value)
			{
				OnDistIDChanging(value);
				_DistID = value;
				OnDistIDChanged();
			}
		}
	}
	private Nullable<decimal> _DistID;

	partial void OnDistIDChanging(Nullable<decimal> newValue);
	partial void OnDistIDChanged();

    public Nullable<decimal> DealerID 
	{ 
		get
		{
			return _DealerID;
		}
		set
		{
			if(_DealerID != value)
			{
				OnDealerIDChanging(value);
				_DealerID = value;
				OnDealerIDChanged();
			}
		}
	}
	private Nullable<decimal> _DealerID;

	partial void OnDealerIDChanging(Nullable<decimal> newValue);
	partial void OnDealerIDChanged();

    public bool IsInclude 
	{ 
		get
		{
			return _IsInclude;
		}
		set
		{
			if(_IsInclude != value)
			{
				OnIsIncludeChanging(value);
				_IsInclude = value;
				OnIsIncludeChanged();
			}
		}
	}
	private bool _IsInclude;

	partial void OnIsIncludeChanging(bool newValue);
	partial void OnIsIncludeChanged();

    public int EligibleCnt 
	{ 
		get
		{
			return _EligibleCnt;
		}
		set
		{
			if(_EligibleCnt != value)
			{
				OnEligibleCntChanging(value);
				_EligibleCnt = value;
				OnEligibleCntChanged();
			}
		}
	}
	private int _EligibleCnt;

	partial void OnEligibleCntChanging(int newValue);
	partial void OnEligibleCntChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public string AppID 
	{ 
		get
		{
			return _AppID;
		}
		set
		{
			if(_AppID != value)
			{
				OnAppIDChanging(value);
				_AppID = value;
				OnAppIDChanged();
			}
		}
	}
	private string _AppID;

	partial void OnAppIDChanging(string newValue);
	partial void OnAppIDChanged();

    public System.DateTime Datetime 
	{ 
		get
		{
			return _Datetime;
		}
		set
		{
			if(_Datetime != value)
			{
				OnDatetimeChanging(value);
				_Datetime = value;
				OnDatetimeChanged();
			}
		}
	}
	private System.DateTime _Datetime;

	partial void OnDatetimeChanging(System.DateTime newValue);
	partial void OnDatetimeChanged();

    public Nullable<int> SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private Nullable<int> _SchemeID;

	partial void OnSchemeIDChanging(Nullable<int> newValue);
	partial void OnSchemeIDChanged();

    public Nullable<int> OptionId 
	{ 
		get
		{
			return _OptionId;
		}
		set
		{
			if(_OptionId != value)
			{
				OnOptionIdChanging(value);
				_OptionId = value;
				OnOptionIdChanged();
			}
		}
	}
	private Nullable<int> _OptionId;

	partial void OnOptionIdChanging(Nullable<int> newValue);
	partial void OnOptionIdChanged();

    public Nullable<int> QPSQty 
	{ 
		get
		{
			return _QPSQty;
		}
		set
		{
			if(_QPSQty != value)
			{
				OnQPSQtyChanging(value);
				_QPSQty = value;
				OnQPSQtyChanged();
			}
		}
	}
	private Nullable<int> _QPSQty;

	partial void OnQPSQtyChanging(Nullable<int> newValue);
	partial void OnQPSQtyChanged();
}

[Serializable]
public partial class OSCMLOG : ObjectWithState
{

    public long AutoSchemeID 
	{ 
		get
		{
			return _AutoSchemeID;
		}
		set
		{
			if(_AutoSchemeID != value)
			{
				OnAutoSchemeIDChanging(value);
				_AutoSchemeID = value;
				OnAutoSchemeIDChanged();
			}
		}
	}
	private long _AutoSchemeID;

	partial void OnAutoSchemeIDChanging(long newValue);
	partial void OnAutoSchemeIDChanged();

    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();

    public string SchemeCode 
	{ 
		get
		{
			return _SchemeCode;
		}
		set
		{
			if(_SchemeCode != value)
			{
				OnSchemeCodeChanging(value);
				_SchemeCode = value;
				OnSchemeCodeChanged();
			}
		}
	}
	private string _SchemeCode;

	partial void OnSchemeCodeChanging(string newValue);
	partial void OnSchemeCodeChanged();

    public string SchemeName 
	{ 
		get
		{
			return _SchemeName;
		}
		set
		{
			if(_SchemeName != value)
			{
				OnSchemeNameChanging(value);
				_SchemeName = value;
				OnSchemeNameChanged();
			}
		}
	}
	private string _SchemeName;

	partial void OnSchemeNameChanging(string newValue);
	partial void OnSchemeNameChanged();

    public string ApplicableMode 
	{ 
		get
		{
			return _ApplicableMode;
		}
		set
		{
			if(_ApplicableMode != value)
			{
				OnApplicableModeChanging(value);
				_ApplicableMode = value;
				OnApplicableModeChanged();
			}
		}
	}
	private string _ApplicableMode;

	partial void OnApplicableModeChanging(string newValue);
	partial void OnApplicableModeChanged();

    public Nullable<System.DateTime> StartDate 
	{ 
		get
		{
			return _StartDate;
		}
		set
		{
			if(_StartDate != value)
			{
				OnStartDateChanging(value);
				_StartDate = value;
				OnStartDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _StartDate;

	partial void OnStartDateChanging(Nullable<System.DateTime> newValue);
	partial void OnStartDateChanged();

    public Nullable<System.DateTime> EndDate 
	{ 
		get
		{
			return _EndDate;
		}
		set
		{
			if(_EndDate != value)
			{
				OnEndDateChanging(value);
				_EndDate = value;
				OnEndDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _EndDate;

	partial void OnEndDateChanging(Nullable<System.DateTime> newValue);
	partial void OnEndDateChanged();

    public Nullable<System.TimeSpan> StartTime 
	{ 
		get
		{
			return _StartTime;
		}
		set
		{
			if(_StartTime != value)
			{
				OnStartTimeChanging(value);
				_StartTime = value;
				OnStartTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _StartTime;

	partial void OnStartTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnStartTimeChanged();

    public Nullable<System.TimeSpan> EndTime 
	{ 
		get
		{
			return _EndTime;
		}
		set
		{
			if(_EndTime != value)
			{
				OnEndTimeChanging(value);
				_EndTime = value;
				OnEndTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _EndTime;

	partial void OnEndTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnEndTimeChanged();

    public bool BirthDay 
	{ 
		get
		{
			return _BirthDay;
		}
		set
		{
			if(_BirthDay != value)
			{
				OnBirthDayChanging(value);
				_BirthDay = value;
				OnBirthDayChanged();
			}
		}
	}
	private bool _BirthDay;

	partial void OnBirthDayChanging(bool newValue);
	partial void OnBirthDayChanged();

    public bool Anniversary 
	{ 
		get
		{
			return _Anniversary;
		}
		set
		{
			if(_Anniversary != value)
			{
				OnAnniversaryChanging(value);
				_Anniversary = value;
				OnAnniversaryChanged();
			}
		}
	}
	private bool _Anniversary;

	partial void OnAnniversaryChanging(bool newValue);
	partial void OnAnniversaryChanged();

    public bool SpecialDay 
	{ 
		get
		{
			return _SpecialDay;
		}
		set
		{
			if(_SpecialDay != value)
			{
				OnSpecialDayChanging(value);
				_SpecialDay = value;
				OnSpecialDayChanged();
			}
		}
	}
	private bool _SpecialDay;

	partial void OnSpecialDayChanging(bool newValue);
	partial void OnSpecialDayChanged();

    public bool Monday 
	{ 
		get
		{
			return _Monday;
		}
		set
		{
			if(_Monday != value)
			{
				OnMondayChanging(value);
				_Monday = value;
				OnMondayChanged();
			}
		}
	}
	private bool _Monday;

	partial void OnMondayChanging(bool newValue);
	partial void OnMondayChanged();

    public bool Tuesday 
	{ 
		get
		{
			return _Tuesday;
		}
		set
		{
			if(_Tuesday != value)
			{
				OnTuesdayChanging(value);
				_Tuesday = value;
				OnTuesdayChanged();
			}
		}
	}
	private bool _Tuesday;

	partial void OnTuesdayChanging(bool newValue);
	partial void OnTuesdayChanged();

    public bool Wednesday 
	{ 
		get
		{
			return _Wednesday;
		}
		set
		{
			if(_Wednesday != value)
			{
				OnWednesdayChanging(value);
				_Wednesday = value;
				OnWednesdayChanged();
			}
		}
	}
	private bool _Wednesday;

	partial void OnWednesdayChanging(bool newValue);
	partial void OnWednesdayChanged();

    public bool Thursday 
	{ 
		get
		{
			return _Thursday;
		}
		set
		{
			if(_Thursday != value)
			{
				OnThursdayChanging(value);
				_Thursday = value;
				OnThursdayChanged();
			}
		}
	}
	private bool _Thursday;

	partial void OnThursdayChanging(bool newValue);
	partial void OnThursdayChanged();

    public bool Friday 
	{ 
		get
		{
			return _Friday;
		}
		set
		{
			if(_Friday != value)
			{
				OnFridayChanging(value);
				_Friday = value;
				OnFridayChanged();
			}
		}
	}
	private bool _Friday;

	partial void OnFridayChanging(bool newValue);
	partial void OnFridayChanged();

    public bool Saturday 
	{ 
		get
		{
			return _Saturday;
		}
		set
		{
			if(_Saturday != value)
			{
				OnSaturdayChanging(value);
				_Saturday = value;
				OnSaturdayChanged();
			}
		}
	}
	private bool _Saturday;

	partial void OnSaturdayChanging(bool newValue);
	partial void OnSaturdayChanged();

    public bool Sunday 
	{ 
		get
		{
			return _Sunday;
		}
		set
		{
			if(_Sunday != value)
			{
				OnSundayChanging(value);
				_Sunday = value;
				OnSundayChanged();
			}
		}
	}
	private bool _Sunday;

	partial void OnSundayChanging(bool newValue);
	partial void OnSundayChanged();

    public int ApplicableOn 
	{ 
		get
		{
			return _ApplicableOn;
		}
		set
		{
			if(_ApplicableOn != value)
			{
				OnApplicableOnChanging(value);
				_ApplicableOn = value;
				OnApplicableOnChanged();
			}
		}
	}
	private int _ApplicableOn;

	partial void OnApplicableOnChanging(int newValue);
	partial void OnApplicableOnChanged();

    public bool IsTaxApplicable 
	{ 
		get
		{
			return _IsTaxApplicable;
		}
		set
		{
			if(_IsTaxApplicable != value)
			{
				OnIsTaxApplicableChanging(value);
				_IsTaxApplicable = value;
				OnIsTaxApplicableChanged();
			}
		}
	}
	private bool _IsTaxApplicable;

	partial void OnIsTaxApplicableChanging(bool newValue);
	partial void OnIsTaxApplicableChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<int> ReasonID 
	{ 
		get
		{
			return _ReasonID;
		}
		set
		{
			if(_ReasonID != value)
			{
				OnReasonIDChanging(value);
				_ReasonID = value;
				OnReasonIDChanged();
			}
		}
	}
	private Nullable<int> _ReasonID;

	partial void OnReasonIDChanging(Nullable<int> newValue);
	partial void OnReasonIDChanged();

    public bool IsSAP 
	{ 
		get
		{
			return _IsSAP;
		}
		set
		{
			if(_IsSAP != value)
			{
				OnIsSAPChanging(value);
				_IsSAP = value;
				OnIsSAPChanged();
			}
		}
	}
	private bool _IsSAP;

	partial void OnIsSAPChanging(bool newValue);
	partial void OnIsSAPChanged();

    public string AppID 
	{ 
		get
		{
			return _AppID;
		}
		set
		{
			if(_AppID != value)
			{
				OnAppIDChanging(value);
				_AppID = value;
				OnAppIDChanged();
			}
		}
	}
	private string _AppID;

	partial void OnAppIDChanging(string newValue);
	partial void OnAppIDChanged();

    public int InsertType 
	{ 
		get
		{
			return _InsertType;
		}
		set
		{
			if(_InsertType != value)
			{
				OnInsertTypeChanging(value);
				_InsertType = value;
				OnInsertTypeChanged();
			}
		}
	}
	private int _InsertType;

	partial void OnInsertTypeChanging(int newValue);
	partial void OnInsertTypeChanged();

    public System.DateTime Datetime 
	{ 
		get
		{
			return _Datetime;
		}
		set
		{
			if(_Datetime != value)
			{
				OnDatetimeChanging(value);
				_Datetime = value;
				OnDatetimeChanged();
			}
		}
	}
	private System.DateTime _Datetime;

	partial void OnDatetimeChanging(System.DateTime newValue);
	partial void OnDatetimeChanged();

    public string CreatedIPAddress 
	{ 
		get
		{
			return _CreatedIPAddress;
		}
		set
		{
			if(_CreatedIPAddress != value)
			{
				OnCreatedIPAddressChanging(value);
				_CreatedIPAddress = value;
				OnCreatedIPAddressChanged();
			}
		}
	}
	private string _CreatedIPAddress;

	partial void OnCreatedIPAddressChanging(string newValue);
	partial void OnCreatedIPAddressChanged();

    public string UpdatedIPAddress 
	{ 
		get
		{
			return _UpdatedIPAddress;
		}
		set
		{
			if(_UpdatedIPAddress != value)
			{
				OnUpdatedIPAddressChanging(value);
				_UpdatedIPAddress = value;
				OnUpdatedIPAddressChanged();
			}
		}
	}
	private string _UpdatedIPAddress;

	partial void OnUpdatedIPAddressChanging(string newValue);
	partial void OnUpdatedIPAddressChanged();

    public Nullable<int> OrderFrom 
	{ 
		get
		{
			return _OrderFrom;
		}
		set
		{
			if(_OrderFrom != value)
			{
				OnOrderFromChanging(value);
				_OrderFrom = value;
				OnOrderFromChanged();
			}
		}
	}
	private Nullable<int> _OrderFrom;

	partial void OnOrderFromChanging(Nullable<int> newValue);
	partial void OnOrderFromChanged();
}

[Serializable]
public partial class OSEQ : ObjectWithState
{

    public int SequenceID 
	{ 
		get
		{
			return _SequenceID;
		}
		set
		{
			if(_SequenceID != value)
			{
				OnSequenceIDChanging(value);
				_SequenceID = value;
				OnSequenceIDChanged();
			}
		}
	}
	private int _SequenceID;

	partial void OnSequenceIDChanging(int newValue);
	partial void OnSequenceIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string Prefix 
	{ 
		get
		{
			return _Prefix;
		}
		set
		{
			if(_Prefix != value)
			{
				OnPrefixChanging(value);
				_Prefix = value;
				OnPrefixChanged();
			}
		}
	}
	private string _Prefix;

	partial void OnPrefixChanging(string newValue);
	partial void OnPrefixChanged();

    public int Year 
	{ 
		get
		{
			return _Year;
		}
		set
		{
			if(_Year != value)
			{
				OnYearChanging(value);
				_Year = value;
				OnYearChanged();
			}
		}
	}
	private int _Year;

	partial void OnYearChanging(int newValue);
	partial void OnYearChanged();

    public int RorderNo 
	{ 
		get
		{
			return _RorderNo;
		}
		set
		{
			if(_RorderNo != value)
			{
				OnRorderNoChanging(value);
				_RorderNo = value;
				OnRorderNoChanged();
			}
		}
	}
	private int _RorderNo;

	partial void OnRorderNoChanging(int newValue);
	partial void OnRorderNoChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public Nullable<int> InvoiceCount 
	{ 
		get
		{
			return _InvoiceCount;
		}
		set
		{
			if(_InvoiceCount != value)
			{
				OnInvoiceCountChanging(value);
				_InvoiceCount = value;
				OnInvoiceCountChanged();
			}
		}
	}
	private Nullable<int> _InvoiceCount;

	partial void OnInvoiceCountChanging(Nullable<int> newValue);
	partial void OnInvoiceCountChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public Nullable<System.DateTime> FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _FromDate;

	partial void OnFromDateChanging(Nullable<System.DateTime> newValue);
	partial void OnFromDateChanged();

    public Nullable<System.DateTime> ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ToDate;

	partial void OnToDateChanging(Nullable<System.DateTime> newValue);
	partial void OnToDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<int> CreatedType 
	{ 
		get
		{
			return _CreatedType;
		}
		set
		{
			if(_CreatedType != value)
			{
				OnCreatedTypeChanging(value);
				_CreatedType = value;
				OnCreatedTypeChanged();
			}
		}
	}
	private Nullable<int> _CreatedType;

	partial void OnCreatedTypeChanging(Nullable<int> newValue);
	partial void OnCreatedTypeChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();
}

[Serializable]
public partial class OSET : ObjectWithState
{

    public string KeyName 
	{ 
		get
		{
			return _KeyName;
		}
		set
		{
			if(_KeyName != value)
			{
				OnKeyNameChanging(value);
				_KeyName = value;
				OnKeyNameChanged();
			}
		}
	}
	private string _KeyName;

	partial void OnKeyNameChanging(string newValue);
	partial void OnKeyNameChanged();

    public string Value 
	{ 
		get
		{
			return _Value;
		}
		set
		{
			if(_Value != value)
			{
				OnValueChanging(value);
				_Value = value;
				OnValueChanged();
			}
		}
	}
	private string _Value;

	partial void OnValueChanging(string newValue);
	partial void OnValueChanged();
}

[Serializable]
public partial class OSFB : ObjectWithState
{
    public OSFB() 
    { 
        this.SFB1 = new HashSet<SFB1>();
    }


    public int OSFBID 
	{ 
		get
		{
			return _OSFBID;
		}
		set
		{
			if(_OSFBID != value)
			{
				OnOSFBIDChanging(value);
				_OSFBID = value;
				OnOSFBIDChanged();
			}
		}
	}
	private int _OSFBID;

	partial void OnOSFBIDChanging(int newValue);
	partial void OnOSFBIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public string OSFBCode 
	{ 
		get
		{
			return _OSFBCode;
		}
		set
		{
			if(_OSFBCode != value)
			{
				OnOSFBCodeChanging(value);
				_OSFBCode = value;
				OnOSFBCodeChanged();
			}
		}
	}
	private string _OSFBCode;

	partial void OnOSFBCodeChanging(string newValue);
	partial void OnOSFBCodeChanged();

    public Nullable<System.DateTime> FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _FromDate;

	partial void OnFromDateChanging(Nullable<System.DateTime> newValue);
	partial void OnFromDateChanged();

    public Nullable<System.DateTime> ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ToDate;

	partial void OnToDateChanging(Nullable<System.DateTime> newValue);
	partial void OnToDateChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public Nullable<int> PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private Nullable<int> _PlantID;

	partial void OnPlantIDChanging(Nullable<int> newValue);
	partial void OnPlantIDChanged();

    public virtual ICollection<SFB1> SFB1 { get; set; }
}

[Serializable]
public partial class OSFC : ObjectWithState
{
    public OSFC() 
    { 
        this.SFC1 = new HashSet<SFC1>();
    }


    public int OSFCID 
	{ 
		get
		{
			return _OSFCID;
		}
		set
		{
			if(_OSFCID != value)
			{
				OnOSFCIDChanging(value);
				_OSFCID = value;
				OnOSFCIDChanged();
			}
		}
	}
	private int _OSFCID;

	partial void OnOSFCIDChanging(int newValue);
	partial void OnOSFCIDChanged();

    public int EmpGradeID 
	{ 
		get
		{
			return _EmpGradeID;
		}
		set
		{
			if(_EmpGradeID != value)
			{
				OnEmpGradeIDChanging(value);
				_EmpGradeID = value;
				OnEmpGradeIDChanged();
			}
		}
	}
	private int _EmpGradeID;

	partial void OnEmpGradeIDChanging(int newValue);
	partial void OnEmpGradeIDChanged();

    public int CityGradeID 
	{ 
		get
		{
			return _CityGradeID;
		}
		set
		{
			if(_CityGradeID != value)
			{
				OnCityGradeIDChanging(value);
				_CityGradeID = value;
				OnCityGradeIDChanged();
			}
		}
	}
	private int _CityGradeID;

	partial void OnCityGradeIDChanging(int newValue);
	partial void OnCityGradeIDChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual ICollection<SFC1> SFC1 { get; set; }
    public virtual OECG OECG { get; set; }
    public virtual OEEG OEEG { get; set; }
}

[Serializable]
public partial class OSM : ObjectWithState
{

    public int SMSID 
	{ 
		get
		{
			return _SMSID;
		}
		set
		{
			if(_SMSID != value)
			{
				OnSMSIDChanging(value);
				_SMSID = value;
				OnSMSIDChanged();
			}
		}
	}
	private int _SMSID;

	partial void OnSMSIDChanging(int newValue);
	partial void OnSMSIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int RequestTypeMenuID 
	{ 
		get
		{
			return _RequestTypeMenuID;
		}
		set
		{
			if(_RequestTypeMenuID != value)
			{
				OnRequestTypeMenuIDChanging(value);
				_RequestTypeMenuID = value;
				OnRequestTypeMenuIDChanged();
			}
		}
	}
	private int _RequestTypeMenuID;

	partial void OnRequestTypeMenuIDChanging(int newValue);
	partial void OnRequestTypeMenuIDChanged();

    public bool Notification 
	{ 
		get
		{
			return _Notification;
		}
		set
		{
			if(_Notification != value)
			{
				OnNotificationChanging(value);
				_Notification = value;
				OnNotificationChanged();
			}
		}
	}
	private bool _Notification;

	partial void OnNotificationChanging(bool newValue);
	partial void OnNotificationChanged();

    public bool Email 
	{ 
		get
		{
			return _Email;
		}
		set
		{
			if(_Email != value)
			{
				OnEmailChanging(value);
				_Email = value;
				OnEmailChanged();
			}
		}
	}
	private bool _Email;

	partial void OnEmailChanging(bool newValue);
	partial void OnEmailChanged();

    public bool SMS 
	{ 
		get
		{
			return _SMS;
		}
		set
		{
			if(_SMS != value)
			{
				OnSMSChanging(value);
				_SMS = value;
				OnSMSChanged();
			}
		}
	}
	private bool _SMS;

	partial void OnSMSChanging(bool newValue);
	partial void OnSMSChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> UserID 
	{ 
		get
		{
			return _UserID;
		}
		set
		{
			if(_UserID != value)
			{
				OnUserIDChanging(value);
				_UserID = value;
				OnUserIDChanged();
			}
		}
	}
	private Nullable<int> _UserID;

	partial void OnUserIDChanging(Nullable<int> newValue);
	partial void OnUserIDChanged();

    public bool IsManager 
	{ 
		get
		{
			return _IsManager;
		}
		set
		{
			if(_IsManager != value)
			{
				OnIsManagerChanging(value);
				_IsManager = value;
				OnIsManagerChanged();
			}
		}
	}
	private bool _IsManager;

	partial void OnIsManagerChanging(bool newValue);
	partial void OnIsManagerChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool IsCustomer 
	{ 
		get
		{
			return _IsCustomer;
		}
		set
		{
			if(_IsCustomer != value)
			{
				OnIsCustomerChanging(value);
				_IsCustomer = value;
				OnIsCustomerChanged();
			}
		}
	}
	private bool _IsCustomer;

	partial void OnIsCustomerChanging(bool newValue);
	partial void OnIsCustomerChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public string ExcEmp 
	{ 
		get
		{
			return _ExcEmp;
		}
		set
		{
			if(_ExcEmp != value)
			{
				OnExcEmpChanging(value);
				_ExcEmp = value;
				OnExcEmpChanged();
			}
		}
	}
	private string _ExcEmp;

	partial void OnExcEmpChanging(string newValue);
	partial void OnExcEmpChanged();
}

[Serializable]
public partial class OSPM : ObjectWithState
{

    public int ShippingID 
	{ 
		get
		{
			return _ShippingID;
		}
		set
		{
			if(_ShippingID != value)
			{
				OnShippingIDChanging(value);
				_ShippingID = value;
				OnShippingIDChanged();
			}
		}
	}
	private int _ShippingID;

	partial void OnShippingIDChanging(int newValue);
	partial void OnShippingIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string ShipmentNo 
	{ 
		get
		{
			return _ShipmentNo;
		}
		set
		{
			if(_ShipmentNo != value)
			{
				OnShipmentNoChanging(value);
				_ShipmentNo = value;
				OnShipmentNoChanged();
			}
		}
	}
	private string _ShipmentNo;

	partial void OnShipmentNoChanging(string newValue);
	partial void OnShipmentNoChanged();

    public int VehicleID 
	{ 
		get
		{
			return _VehicleID;
		}
		set
		{
			if(_VehicleID != value)
			{
				OnVehicleIDChanging(value);
				_VehicleID = value;
				OnVehicleIDChanged();
			}
		}
	}
	private int _VehicleID;

	partial void OnVehicleIDChanging(int newValue);
	partial void OnVehicleIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool IsFTPUpload 
	{ 
		get
		{
			return _IsFTPUpload;
		}
		set
		{
			if(_IsFTPUpload != value)
			{
				OnIsFTPUploadChanging(value);
				_IsFTPUpload = value;
				OnIsFTPUploadChanged();
			}
		}
	}
	private bool _IsFTPUpload;

	partial void OnIsFTPUploadChanging(bool newValue);
	partial void OnIsFTPUploadChanged();

    public virtual OSPM OSPM1 { get; set; }
    public virtual OSPM OSPM2 { get; set; }
}

[Serializable]
public partial class OSRG : ObjectWithState
{
    public OSRG() 
    { 
        this.OGCRDs = new HashSet<OGCRD>();
        this.OGITMs = new HashSet<OGITM>();
    }


    public int SaleOrgID 
	{ 
		get
		{
			return _SaleOrgID;
		}
		set
		{
			if(_SaleOrgID != value)
			{
				OnSaleOrgIDChanging(value);
				_SaleOrgID = value;
				OnSaleOrgIDChanged();
			}
		}
	}
	private int _SaleOrgID;

	partial void OnSaleOrgIDChanging(int newValue);
	partial void OnSaleOrgIDChanged();

    public string SaleOrgCode 
	{ 
		get
		{
			return _SaleOrgCode;
		}
		set
		{
			if(_SaleOrgCode != value)
			{
				OnSaleOrgCodeChanging(value);
				_SaleOrgCode = value;
				OnSaleOrgCodeChanged();
			}
		}
	}
	private string _SaleOrgCode;

	partial void OnSaleOrgCodeChanging(string newValue);
	partial void OnSaleOrgCodeChanged();

    public string SaleOrgName 
	{ 
		get
		{
			return _SaleOrgName;
		}
		set
		{
			if(_SaleOrgName != value)
			{
				OnSaleOrgNameChanging(value);
				_SaleOrgName = value;
				OnSaleOrgNameChanged();
			}
		}
	}
	private string _SaleOrgName;

	partial void OnSaleOrgNameChanging(string newValue);
	partial void OnSaleOrgNameChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual ICollection<OGCRD> OGCRDs { get; set; }
    public virtual ICollection<OGITM> OGITMs { get; set; }
}

[Serializable]
public partial class OST : ObjectWithState
{

    public int StatusID 
	{ 
		get
		{
			return _StatusID;
		}
		set
		{
			if(_StatusID != value)
			{
				OnStatusIDChanging(value);
				_StatusID = value;
				OnStatusIDChanged();
			}
		}
	}
	private int _StatusID;

	partial void OnStatusIDChanging(int newValue);
	partial void OnStatusIDChanged();

    public string Code 
	{ 
		get
		{
			return _Code;
		}
		set
		{
			if(_Code != value)
			{
				OnCodeChanging(value);
				_Code = value;
				OnCodeChanged();
			}
		}
	}
	private string _Code;

	partial void OnCodeChanging(string newValue);
	partial void OnCodeChanged();

    public string Description 
	{ 
		get
		{
			return _Description;
		}
		set
		{
			if(_Description != value)
			{
				OnDescriptionChanging(value);
				_Description = value;
				OnDescriptionChanged();
			}
		}
	}
	private string _Description;

	partial void OnDescriptionChanging(string newValue);
	partial void OnDescriptionChanged();
}

[Serializable]
public partial class OSTHM : ObjectWithState
{

    public int OSTHMID 
	{ 
		get
		{
			return _OSTHMID;
		}
		set
		{
			if(_OSTHMID != value)
			{
				OnOSTHMIDChanging(value);
				_OSTHMID = value;
				OnOSTHMIDChanged();
			}
		}
	}
	private int _OSTHMID;

	partial void OnOSTHMIDChanging(int newValue);
	partial void OnOSTHMIDChanged();

    public Nullable<int> EmpGroupId 
	{ 
		get
		{
			return _EmpGroupId;
		}
		set
		{
			if(_EmpGroupId != value)
			{
				OnEmpGroupIdChanging(value);
				_EmpGroupId = value;
				OnEmpGroupIdChanged();
			}
		}
	}
	private Nullable<int> _EmpGroupId;

	partial void OnEmpGroupIdChanging(Nullable<int> newValue);
	partial void OnEmpGroupIdChanged();

    public Nullable<int> EmpId 
	{ 
		get
		{
			return _EmpId;
		}
		set
		{
			if(_EmpId != value)
			{
				OnEmpIdChanging(value);
				_EmpId = value;
				OnEmpIdChanged();
			}
		}
	}
	private Nullable<int> _EmpId;

	partial void OnEmpIdChanging(Nullable<int> newValue);
	partial void OnEmpIdChanged();

    public Nullable<bool> Mobile 
	{ 
		get
		{
			return _Mobile;
		}
		set
		{
			if(_Mobile != value)
			{
				OnMobileChanging(value);
				_Mobile = value;
				OnMobileChanged();
			}
		}
	}
	private Nullable<bool> _Mobile;

	partial void OnMobileChanging(Nullable<bool> newValue);
	partial void OnMobileChanged();

    public Nullable<bool> Email 
	{ 
		get
		{
			return _Email;
		}
		set
		{
			if(_Email != value)
			{
				OnEmailChanging(value);
				_Email = value;
				OnEmailChanged();
			}
		}
	}
	private Nullable<bool> _Email;

	partial void OnEmailChanging(Nullable<bool> newValue);
	partial void OnEmailChanged();

    public Nullable<bool> Both 
	{ 
		get
		{
			return _Both;
		}
		set
		{
			if(_Both != value)
			{
				OnBothChanging(value);
				_Both = value;
				OnBothChanged();
			}
		}
	}
	private Nullable<bool> _Both;

	partial void OnBothChanging(Nullable<bool> newValue);
	partial void OnBothChanged();

    public Nullable<bool> IsActive 
	{ 
		get
		{
			return _IsActive;
		}
		set
		{
			if(_IsActive != value)
			{
				OnIsActiveChanging(value);
				_IsActive = value;
				OnIsActiveChanged();
			}
		}
	}
	private Nullable<bool> _IsActive;

	partial void OnIsActiveChanging(Nullable<bool> newValue);
	partial void OnIsActiveChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<decimal> CustomerId 
	{ 
		get
		{
			return _CustomerId;
		}
		set
		{
			if(_CustomerId != value)
			{
				OnCustomerIdChanging(value);
				_CustomerId = value;
				OnCustomerIdChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerId;

	partial void OnCustomerIdChanging(Nullable<decimal> newValue);
	partial void OnCustomerIdChanged();

    public Nullable<int> RegionId 
	{ 
		get
		{
			return _RegionId;
		}
		set
		{
			if(_RegionId != value)
			{
				OnRegionIdChanging(value);
				_RegionId = value;
				OnRegionIdChanged();
			}
		}
	}
	private Nullable<int> _RegionId;

	partial void OnRegionIdChanging(Nullable<int> newValue);
	partial void OnRegionIdChanged();
}

[Serializable]
public partial class OSTM : ObjectWithState
{

    public int OSTMID 
	{ 
		get
		{
			return _OSTMID;
		}
		set
		{
			if(_OSTMID != value)
			{
				OnOSTMIDChanging(value);
				_OSTMID = value;
				OnOSTMIDChanged();
			}
		}
	}
	private int _OSTMID;

	partial void OnOSTMIDChanging(int newValue);
	partial void OnOSTMIDChanged();

    public Nullable<int> ModuleId 
	{ 
		get
		{
			return _ModuleId;
		}
		set
		{
			if(_ModuleId != value)
			{
				OnModuleIdChanging(value);
				_ModuleId = value;
				OnModuleIdChanged();
			}
		}
	}
	private Nullable<int> _ModuleId;

	partial void OnModuleIdChanging(Nullable<int> newValue);
	partial void OnModuleIdChanged();

    public Nullable<int> ScanningATID 
	{ 
		get
		{
			return _ScanningATID;
		}
		set
		{
			if(_ScanningATID != value)
			{
				OnScanningATIDChanging(value);
				_ScanningATID = value;
				OnScanningATIDChanged();
			}
		}
	}
	private Nullable<int> _ScanningATID;

	partial void OnScanningATIDChanging(Nullable<int> newValue);
	partial void OnScanningATIDChanged();

    public Nullable<int> EmpGroupId 
	{ 
		get
		{
			return _EmpGroupId;
		}
		set
		{
			if(_EmpGroupId != value)
			{
				OnEmpGroupIdChanging(value);
				_EmpGroupId = value;
				OnEmpGroupIdChanged();
			}
		}
	}
	private Nullable<int> _EmpGroupId;

	partial void OnEmpGroupIdChanging(Nullable<int> newValue);
	partial void OnEmpGroupIdChanged();

    public Nullable<int> EmpId 
	{ 
		get
		{
			return _EmpId;
		}
		set
		{
			if(_EmpId != value)
			{
				OnEmpIdChanging(value);
				_EmpId = value;
				OnEmpIdChanged();
			}
		}
	}
	private Nullable<int> _EmpId;

	partial void OnEmpIdChanging(Nullable<int> newValue);
	partial void OnEmpIdChanged();

    public Nullable<bool> ManualKeyPadEntry 
	{ 
		get
		{
			return _ManualKeyPadEntry;
		}
		set
		{
			if(_ManualKeyPadEntry != value)
			{
				OnManualKeyPadEntryChanging(value);
				_ManualKeyPadEntry = value;
				OnManualKeyPadEntryChanged();
			}
		}
	}
	private Nullable<bool> _ManualKeyPadEntry;

	partial void OnManualKeyPadEntryChanging(Nullable<bool> newValue);
	partial void OnManualKeyPadEntryChanged();

    public Nullable<bool> CameraScanning 
	{ 
		get
		{
			return _CameraScanning;
		}
		set
		{
			if(_CameraScanning != value)
			{
				OnCameraScanningChanging(value);
				_CameraScanning = value;
				OnCameraScanningChanged();
			}
		}
	}
	private Nullable<bool> _CameraScanning;

	partial void OnCameraScanningChanging(Nullable<bool> newValue);
	partial void OnCameraScanningChanged();

    public Nullable<bool> Both 
	{ 
		get
		{
			return _Both;
		}
		set
		{
			if(_Both != value)
			{
				OnBothChanging(value);
				_Both = value;
				OnBothChanged();
			}
		}
	}
	private Nullable<bool> _Both;

	partial void OnBothChanging(Nullable<bool> newValue);
	partial void OnBothChanged();

    public Nullable<bool> IsActive 
	{ 
		get
		{
			return _IsActive;
		}
		set
		{
			if(_IsActive != value)
			{
				OnIsActiveChanging(value);
				_IsActive = value;
				OnIsActiveChanged();
			}
		}
	}
	private Nullable<bool> _IsActive;

	partial void OnIsActiveChanging(Nullable<bool> newValue);
	partial void OnIsActiveChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<decimal> CustomerId 
	{ 
		get
		{
			return _CustomerId;
		}
		set
		{
			if(_CustomerId != value)
			{
				OnCustomerIdChanging(value);
				_CustomerId = value;
				OnCustomerIdChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerId;

	partial void OnCustomerIdChanging(Nullable<decimal> newValue);
	partial void OnCustomerIdChanged();
}

[Serializable]
public partial class OSTRL : ObjectWithState
{
    public OSTRL() 
    { 
        this.OELMs = new HashSet<OELM>();
        this.OASTs = new HashSet<OAST>();
        this.ITM4 = new HashSet<ITM4>();
        this.OTEMs = new HashSet<OTEM>();
    }


    public int StorageLocID 
	{ 
		get
		{
			return _StorageLocID;
		}
		set
		{
			if(_StorageLocID != value)
			{
				OnStorageLocIDChanging(value);
				_StorageLocID = value;
				OnStorageLocIDChanged();
			}
		}
	}
	private int _StorageLocID;

	partial void OnStorageLocIDChanging(int newValue);
	partial void OnStorageLocIDChanged();

    public string StorageLocCode 
	{ 
		get
		{
			return _StorageLocCode;
		}
		set
		{
			if(_StorageLocCode != value)
			{
				OnStorageLocCodeChanging(value);
				_StorageLocCode = value;
				OnStorageLocCodeChanged();
			}
		}
	}
	private string _StorageLocCode;

	partial void OnStorageLocCodeChanging(string newValue);
	partial void OnStorageLocCodeChanged();

    public string StorageLocName 
	{ 
		get
		{
			return _StorageLocName;
		}
		set
		{
			if(_StorageLocName != value)
			{
				OnStorageLocNameChanging(value);
				_StorageLocName = value;
				OnStorageLocNameChanged();
			}
		}
	}
	private string _StorageLocName;

	partial void OnStorageLocNameChanging(string newValue);
	partial void OnStorageLocNameChanged();

    public int PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private int _PlantID;

	partial void OnPlantIDChanging(int newValue);
	partial void OnPlantIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public string Latitude 
	{ 
		get
		{
			return _Latitude;
		}
		set
		{
			if(_Latitude != value)
			{
				OnLatitudeChanging(value);
				_Latitude = value;
				OnLatitudeChanged();
			}
		}
	}
	private string _Latitude;

	partial void OnLatitudeChanging(string newValue);
	partial void OnLatitudeChanged();

    public string Longitude 
	{ 
		get
		{
			return _Longitude;
		}
		set
		{
			if(_Longitude != value)
			{
				OnLongitudeChanging(value);
				_Longitude = value;
				OnLongitudeChanged();
			}
		}
	}
	private string _Longitude;

	partial void OnLongitudeChanging(string newValue);
	partial void OnLongitudeChanged();

    public virtual OPLT OPLT { get; set; }
    public virtual ICollection<OELM> OELMs { get; set; }
    public virtual ICollection<OAST> OASTs { get; set; }
    public virtual ICollection<ITM4> ITM4 { get; set; }
    public virtual ICollection<OTEM> OTEMs { get; set; }
}

[Serializable]
public partial class OTAP : ObjectWithState
{

    public int OTAPID 
	{ 
		get
		{
			return _OTAPID;
		}
		set
		{
			if(_OTAPID != value)
			{
				OnOTAPIDChanging(value);
				_OTAPID = value;
				OnOTAPIDChanged();
			}
		}
	}
	private int _OTAPID;

	partial void OnOTAPIDChanging(int newValue);
	partial void OnOTAPIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int OTRQID 
	{ 
		get
		{
			return _OTRQID;
		}
		set
		{
			if(_OTRQID != value)
			{
				OnOTRQIDChanging(value);
				_OTRQID = value;
				OnOTRQIDChanged();
			}
		}
	}
	private int _OTRQID;

	partial void OnOTRQIDChanging(int newValue);
	partial void OnOTRQIDChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> NextManagerID 
	{ 
		get
		{
			return _NextManagerID;
		}
		set
		{
			if(_NextManagerID != value)
			{
				OnNextManagerIDChanging(value);
				_NextManagerID = value;
				OnNextManagerIDChanged();
			}
		}
	}
	private Nullable<int> _NextManagerID;

	partial void OnNextManagerIDChanging(Nullable<int> newValue);
	partial void OnNextManagerIDChanged();

    public decimal AppAmount 
	{ 
		get
		{
			return _AppAmount;
		}
		set
		{
			if(_AppAmount != value)
			{
				OnAppAmountChanging(value);
				_AppAmount = value;
				OnAppAmountChanged();
			}
		}
	}
	private decimal _AppAmount;

	partial void OnAppAmountChanging(decimal newValue);
	partial void OnAppAmountChanged();

    public Nullable<decimal> PrevAmount 
	{ 
		get
		{
			return _PrevAmount;
		}
		set
		{
			if(_PrevAmount != value)
			{
				OnPrevAmountChanging(value);
				_PrevAmount = value;
				OnPrevAmountChanged();
			}
		}
	}
	private Nullable<decimal> _PrevAmount;

	partial void OnPrevAmountChanging(Nullable<decimal> newValue);
	partial void OnPrevAmountChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();
}

[Serializable]
public partial class OTASK : ObjectWithState
{
    public OTASK() 
    { 
        this.OTCSEs = new HashSet<OTCSE>();
        this.TASK1 = new HashSet<TASK1>();
        this.TASK2 = new HashSet<TASK2>();
        this.TASK3 = new HashSet<TASK3>();
        this.TASK4 = new HashSet<TASK4>();
    }


    public int TaskID 
	{ 
		get
		{
			return _TaskID;
		}
		set
		{
			if(_TaskID != value)
			{
				OnTaskIDChanging(value);
				_TaskID = value;
				OnTaskIDChanged();
			}
		}
	}
	private int _TaskID;

	partial void OnTaskIDChanging(int newValue);
	partial void OnTaskIDChanged();

    public int TaskTypeID 
	{ 
		get
		{
			return _TaskTypeID;
		}
		set
		{
			if(_TaskTypeID != value)
			{
				OnTaskTypeIDChanging(value);
				_TaskTypeID = value;
				OnTaskTypeIDChanged();
			}
		}
	}
	private int _TaskTypeID;

	partial void OnTaskTypeIDChanging(int newValue);
	partial void OnTaskTypeIDChanged();

    public int AssignEmpID 
	{ 
		get
		{
			return _AssignEmpID;
		}
		set
		{
			if(_AssignEmpID != value)
			{
				OnAssignEmpIDChanging(value);
				_AssignEmpID = value;
				OnAssignEmpIDChanged();
			}
		}
	}
	private int _AssignEmpID;

	partial void OnAssignEmpIDChanging(int newValue);
	partial void OnAssignEmpIDChanged();

    public int AssetID 
	{ 
		get
		{
			return _AssetID;
		}
		set
		{
			if(_AssetID != value)
			{
				OnAssetIDChanging(value);
				_AssetID = value;
				OnAssetIDChanged();
			}
		}
	}
	private int _AssetID;

	partial void OnAssetIDChanging(int newValue);
	partial void OnAssetIDChanged();

    public int ProblemID 
	{ 
		get
		{
			return _ProblemID;
		}
		set
		{
			if(_ProblemID != value)
			{
				OnProblemIDChanging(value);
				_ProblemID = value;
				OnProblemIDChanged();
			}
		}
	}
	private int _ProblemID;

	partial void OnProblemIDChanging(int newValue);
	partial void OnProblemIDChanged();

    public string TaskCode 
	{ 
		get
		{
			return _TaskCode;
		}
		set
		{
			if(_TaskCode != value)
			{
				OnTaskCodeChanging(value);
				_TaskCode = value;
				OnTaskCodeChanged();
			}
		}
	}
	private string _TaskCode;

	partial void OnTaskCodeChanging(string newValue);
	partial void OnTaskCodeChanged();

    public string TaskName 
	{ 
		get
		{
			return _TaskName;
		}
		set
		{
			if(_TaskName != value)
			{
				OnTaskNameChanging(value);
				_TaskName = value;
				OnTaskNameChanged();
			}
		}
	}
	private string _TaskName;

	partial void OnTaskNameChanging(string newValue);
	partial void OnTaskNameChanged();

    public string TaskRemarks 
	{ 
		get
		{
			return _TaskRemarks;
		}
		set
		{
			if(_TaskRemarks != value)
			{
				OnTaskRemarksChanging(value);
				_TaskRemarks = value;
				OnTaskRemarksChanged();
			}
		}
	}
	private string _TaskRemarks;

	partial void OnTaskRemarksChanging(string newValue);
	partial void OnTaskRemarksChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public bool IsConflict 
	{ 
		get
		{
			return _IsConflict;
		}
		set
		{
			if(_IsConflict != value)
			{
				OnIsConflictChanging(value);
				_IsConflict = value;
				OnIsConflictChanged();
			}
		}
	}
	private bool _IsConflict;

	partial void OnIsConflictChanging(bool newValue);
	partial void OnIsConflictChanged();

    public decimal ConflictCustomerID 
	{ 
		get
		{
			return _ConflictCustomerID;
		}
		set
		{
			if(_ConflictCustomerID != value)
			{
				OnConflictCustomerIDChanging(value);
				_ConflictCustomerID = value;
				OnConflictCustomerIDChanged();
			}
		}
	}
	private decimal _ConflictCustomerID;

	partial void OnConflictCustomerIDChanging(decimal newValue);
	partial void OnConflictCustomerIDChanged();

    public string CustAddress 
	{ 
		get
		{
			return _CustAddress;
		}
		set
		{
			if(_CustAddress != value)
			{
				OnCustAddressChanging(value);
				_CustAddress = value;
				OnCustAddressChanged();
			}
		}
	}
	private string _CustAddress;

	partial void OnCustAddressChanging(string newValue);
	partial void OnCustAddressChanged();

    public string CustLocation 
	{ 
		get
		{
			return _CustLocation;
		}
		set
		{
			if(_CustLocation != value)
			{
				OnCustLocationChanging(value);
				_CustLocation = value;
				OnCustLocationChanged();
			}
		}
	}
	private string _CustLocation;

	partial void OnCustLocationChanging(string newValue);
	partial void OnCustLocationChanged();

    public int CustCityID 
	{ 
		get
		{
			return _CustCityID;
		}
		set
		{
			if(_CustCityID != value)
			{
				OnCustCityIDChanging(value);
				_CustCityID = value;
				OnCustCityIDChanged();
			}
		}
	}
	private int _CustCityID;

	partial void OnCustCityIDChanging(int newValue);
	partial void OnCustCityIDChanged();

    public int CustStateID 
	{ 
		get
		{
			return _CustStateID;
		}
		set
		{
			if(_CustStateID != value)
			{
				OnCustStateIDChanging(value);
				_CustStateID = value;
				OnCustStateIDChanged();
			}
		}
	}
	private int _CustStateID;

	partial void OnCustStateIDChanging(int newValue);
	partial void OnCustStateIDChanged();

    public int CountryID 
	{ 
		get
		{
			return _CountryID;
		}
		set
		{
			if(_CountryID != value)
			{
				OnCountryIDChanging(value);
				_CountryID = value;
				OnCountryIDChanged();
			}
		}
	}
	private int _CountryID;

	partial void OnCountryIDChanging(int newValue);
	partial void OnCountryIDChanged();

    public string CustPhone1 
	{ 
		get
		{
			return _CustPhone1;
		}
		set
		{
			if(_CustPhone1 != value)
			{
				OnCustPhone1Changing(value);
				_CustPhone1 = value;
				OnCustPhone1Changed();
			}
		}
	}
	private string _CustPhone1;

	partial void OnCustPhone1Changing(string newValue);
	partial void OnCustPhone1Changed();

    public string CustPhone2 
	{ 
		get
		{
			return _CustPhone2;
		}
		set
		{
			if(_CustPhone2 != value)
			{
				OnCustPhone2Changing(value);
				_CustPhone2 = value;
				OnCustPhone2Changed();
			}
		}
	}
	private string _CustPhone2;

	partial void OnCustPhone2Changing(string newValue);
	partial void OnCustPhone2Changed();

    public string CustEmail 
	{ 
		get
		{
			return _CustEmail;
		}
		set
		{
			if(_CustEmail != value)
			{
				OnCustEmailChanging(value);
				_CustEmail = value;
				OnCustEmailChanged();
			}
		}
	}
	private string _CustEmail;

	partial void OnCustEmailChanging(string newValue);
	partial void OnCustEmailChanged();

    public int TaskStatusID 
	{ 
		get
		{
			return _TaskStatusID;
		}
		set
		{
			if(_TaskStatusID != value)
			{
				OnTaskStatusIDChanging(value);
				_TaskStatusID = value;
				OnTaskStatusIDChanged();
			}
		}
	}
	private int _TaskStatusID;

	partial void OnTaskStatusIDChanging(int newValue);
	partial void OnTaskStatusIDChanged();

    public bool IsCompleted 
	{ 
		get
		{
			return _IsCompleted;
		}
		set
		{
			if(_IsCompleted != value)
			{
				OnIsCompletedChanging(value);
				_IsCompleted = value;
				OnIsCompletedChanged();
			}
		}
	}
	private bool _IsCompleted;

	partial void OnIsCompletedChanging(bool newValue);
	partial void OnIsCompletedChanged();

    public System.DateTime TaskDate 
	{ 
		get
		{
			return _TaskDate;
		}
		set
		{
			if(_TaskDate != value)
			{
				OnTaskDateChanging(value);
				_TaskDate = value;
				OnTaskDateChanged();
			}
		}
	}
	private System.DateTime _TaskDate;

	partial void OnTaskDateChanging(System.DateTime newValue);
	partial void OnTaskDateChanged();

    public System.TimeSpan TaskTime 
	{ 
		get
		{
			return _TaskTime;
		}
		set
		{
			if(_TaskTime != value)
			{
				OnTaskTimeChanging(value);
				_TaskTime = value;
				OnTaskTimeChanged();
			}
		}
	}
	private System.TimeSpan _TaskTime;

	partial void OnTaskTimeChanging(System.TimeSpan newValue);
	partial void OnTaskTimeChanged();

    public System.DateTime DueDate 
	{ 
		get
		{
			return _DueDate;
		}
		set
		{
			if(_DueDate != value)
			{
				OnDueDateChanging(value);
				_DueDate = value;
				OnDueDateChanged();
			}
		}
	}
	private System.DateTime _DueDate;

	partial void OnDueDateChanging(System.DateTime newValue);
	partial void OnDueDateChanged();

    public System.TimeSpan DueTime 
	{ 
		get
		{
			return _DueTime;
		}
		set
		{
			if(_DueTime != value)
			{
				OnDueTimeChanging(value);
				_DueTime = value;
				OnDueTimeChanged();
			}
		}
	}
	private System.TimeSpan _DueTime;

	partial void OnDueTimeChanging(System.TimeSpan newValue);
	partial void OnDueTimeChanged();

    public Nullable<int> ReasonID 
	{ 
		get
		{
			return _ReasonID;
		}
		set
		{
			if(_ReasonID != value)
			{
				OnReasonIDChanging(value);
				_ReasonID = value;
				OnReasonIDChanged();
			}
		}
	}
	private Nullable<int> _ReasonID;

	partial void OnReasonIDChanging(Nullable<int> newValue);
	partial void OnReasonIDChanged();

    public string ReasonRemarks 
	{ 
		get
		{
			return _ReasonRemarks;
		}
		set
		{
			if(_ReasonRemarks != value)
			{
				OnReasonRemarksChanging(value);
				_ReasonRemarks = value;
				OnReasonRemarksChanged();
			}
		}
	}
	private string _ReasonRemarks;

	partial void OnReasonRemarksChanging(string newValue);
	partial void OnReasonRemarksChanged();

    public string ProblemRemarks 
	{ 
		get
		{
			return _ProblemRemarks;
		}
		set
		{
			if(_ProblemRemarks != value)
			{
				OnProblemRemarksChanging(value);
				_ProblemRemarks = value;
				OnProblemRemarksChanged();
			}
		}
	}
	private string _ProblemRemarks;

	partial void OnProblemRemarksChanging(string newValue);
	partial void OnProblemRemarksChanged();

    public bool UnderWarranty 
	{ 
		get
		{
			return _UnderWarranty;
		}
		set
		{
			if(_UnderWarranty != value)
			{
				OnUnderWarrantyChanging(value);
				_UnderWarranty = value;
				OnUnderWarrantyChanged();
			}
		}
	}
	private bool _UnderWarranty;

	partial void OnUnderWarrantyChanging(bool newValue);
	partial void OnUnderWarrantyChanged();

    public Nullable<System.DateTime> WarrantyEndDate 
	{ 
		get
		{
			return _WarrantyEndDate;
		}
		set
		{
			if(_WarrantyEndDate != value)
			{
				OnWarrantyEndDateChanging(value);
				_WarrantyEndDate = value;
				OnWarrantyEndDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _WarrantyEndDate;

	partial void OnWarrantyEndDateChanging(Nullable<System.DateTime> newValue);
	partial void OnWarrantyEndDateChanged();

    public int TaskCreatedFromID 
	{ 
		get
		{
			return _TaskCreatedFromID;
		}
		set
		{
			if(_TaskCreatedFromID != value)
			{
				OnTaskCreatedFromIDChanging(value);
				_TaskCreatedFromID = value;
				OnTaskCreatedFromIDChanged();
			}
		}
	}
	private int _TaskCreatedFromID;

	partial void OnTaskCreatedFromIDChanging(int newValue);
	partial void OnTaskCreatedFromIDChanged();

    public bool CityFlag 
	{ 
		get
		{
			return _CityFlag;
		}
		set
		{
			if(_CityFlag != value)
			{
				OnCityFlagChanging(value);
				_CityFlag = value;
				OnCityFlagChanged();
			}
		}
	}
	private bool _CityFlag;

	partial void OnCityFlagChanging(bool newValue);
	partial void OnCityFlagChanged();

    public bool IsAuto 
	{ 
		get
		{
			return _IsAuto;
		}
		set
		{
			if(_IsAuto != value)
			{
				OnIsAutoChanging(value);
				_IsAuto = value;
				OnIsAutoChanged();
			}
		}
	}
	private bool _IsAuto;

	partial void OnIsAutoChanging(bool newValue);
	partial void OnIsAutoChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public Nullable<int> EndCallReasonID 
	{ 
		get
		{
			return _EndCallReasonID;
		}
		set
		{
			if(_EndCallReasonID != value)
			{
				OnEndCallReasonIDChanging(value);
				_EndCallReasonID = value;
				OnEndCallReasonIDChanged();
			}
		}
	}
	private Nullable<int> _EndCallReasonID;

	partial void OnEndCallReasonIDChanging(Nullable<int> newValue);
	partial void OnEndCallReasonIDChanged();

    public string EndCallReasonRemarks 
	{ 
		get
		{
			return _EndCallReasonRemarks;
		}
		set
		{
			if(_EndCallReasonRemarks != value)
			{
				OnEndCallReasonRemarksChanging(value);
				_EndCallReasonRemarks = value;
				OnEndCallReasonRemarksChanged();
			}
		}
	}
	private string _EndCallReasonRemarks;

	partial void OnEndCallReasonRemarksChanging(string newValue);
	partial void OnEndCallReasonRemarksChanged();

    public Nullable<int> SalesManID 
	{ 
		get
		{
			return _SalesManID;
		}
		set
		{
			if(_SalesManID != value)
			{
				OnSalesManIDChanging(value);
				_SalesManID = value;
				OnSalesManIDChanged();
			}
		}
	}
	private Nullable<int> _SalesManID;

	partial void OnSalesManIDChanging(Nullable<int> newValue);
	partial void OnSalesManIDChanged();

    public Nullable<System.DateTime> SalesManARDate 
	{ 
		get
		{
			return _SalesManARDate;
		}
		set
		{
			if(_SalesManARDate != value)
			{
				OnSalesManARDateChanging(value);
				_SalesManARDate = value;
				OnSalesManARDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _SalesManARDate;

	partial void OnSalesManARDateChanging(Nullable<System.DateTime> newValue);
	partial void OnSalesManARDateChanged();

    public Nullable<bool> IsDealerApp 
	{ 
		get
		{
			return _IsDealerApp;
		}
		set
		{
			if(_IsDealerApp != value)
			{
				OnIsDealerAppChanging(value);
				_IsDealerApp = value;
				OnIsDealerAppChanged();
			}
		}
	}
	private Nullable<bool> _IsDealerApp;

	partial void OnIsDealerAppChanging(Nullable<bool> newValue);
	partial void OnIsDealerAppChanged();

    public string SalesManARRemark 
	{ 
		get
		{
			return _SalesManARRemark;
		}
		set
		{
			if(_SalesManARRemark != value)
			{
				OnSalesManARRemarkChanging(value);
				_SalesManARRemark = value;
				OnSalesManARRemarkChanged();
			}
		}
	}
	private string _SalesManARRemark;

	partial void OnSalesManARRemarkChanging(string newValue);
	partial void OnSalesManARRemarkChanged();

    public virtual OCRD OCRD { get; set; }
    public virtual OCRD OCRD1 { get; set; }
    public virtual OPLM OPLM { get; set; }
    public virtual OTTY OTTY { get; set; }
    public virtual ICollection<OTCSE> OTCSEs { get; set; }
    public virtual ICollection<TASK1> TASK1 { get; set; }
    public virtual ICollection<TASK2> TASK2 { get; set; }
    public virtual ICollection<TASK3> TASK3 { get; set; }
    public virtual OAST OAST { get; set; }
    public virtual ICollection<TASK4> TASK4 { get; set; }
}

[Serializable]
public partial class OTAX : ObjectWithState
{
    public OTAX() 
    { 
        this.VND1 = new HashSet<VND1>();
        this.TAX1 = new HashSet<TAX1>();
        this.IPL1 = new HashSet<IPL1>();
    }


    public int TaxID 
	{ 
		get
		{
			return _TaxID;
		}
		set
		{
			if(_TaxID != value)
			{
				OnTaxIDChanging(value);
				_TaxID = value;
				OnTaxIDChanged();
			}
		}
	}
	private int _TaxID;

	partial void OnTaxIDChanging(int newValue);
	partial void OnTaxIDChanged();

    public string TaxName 
	{ 
		get
		{
			return _TaxName;
		}
		set
		{
			if(_TaxName != value)
			{
				OnTaxNameChanging(value);
				_TaxName = value;
				OnTaxNameChanged();
			}
		}
	}
	private string _TaxName;

	partial void OnTaxNameChanging(string newValue);
	partial void OnTaxNameChanged();

    public string TaxDesc 
	{ 
		get
		{
			return _TaxDesc;
		}
		set
		{
			if(_TaxDesc != value)
			{
				OnTaxDescChanging(value);
				_TaxDesc = value;
				OnTaxDescChanged();
			}
		}
	}
	private string _TaxDesc;

	partial void OnTaxDescChanging(string newValue);
	partial void OnTaxDescChanged();

    public decimal Percentage 
	{ 
		get
		{
			return _Percentage;
		}
		set
		{
			if(_Percentage != value)
			{
				OnPercentageChanging(value);
				_Percentage = value;
				OnPercentageChanged();
			}
		}
	}
	private decimal _Percentage;

	partial void OnPercentageChanging(decimal newValue);
	partial void OnPercentageChanged();

    public string Formula 
	{ 
		get
		{
			return _Formula;
		}
		set
		{
			if(_Formula != value)
			{
				OnFormulaChanging(value);
				_Formula = value;
				OnFormulaChanged();
			}
		}
	}
	private string _Formula;

	partial void OnFormulaChanging(string newValue);
	partial void OnFormulaChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<System.DateTime> ValidFrom 
	{ 
		get
		{
			return _ValidFrom;
		}
		set
		{
			if(_ValidFrom != value)
			{
				OnValidFromChanging(value);
				_ValidFrom = value;
				OnValidFromChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ValidFrom;

	partial void OnValidFromChanging(Nullable<System.DateTime> newValue);
	partial void OnValidFromChanged();

    public Nullable<System.DateTime> ValidTo 
	{ 
		get
		{
			return _ValidTo;
		}
		set
		{
			if(_ValidTo != value)
			{
				OnValidToChanging(value);
				_ValidTo = value;
				OnValidToChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ValidTo;

	partial void OnValidToChanging(Nullable<System.DateTime> newValue);
	partial void OnValidToChanged();

    public virtual ICollection<VND1> VND1 { get; set; }
    public virtual ICollection<TAX1> TAX1 { get; set; }
    public virtual ICollection<IPL1> IPL1 { get; set; }
}

[Serializable]
public partial class OTCF : ObjectWithState
{
    public OTCF() 
    { 
        this.TASK1 = new HashSet<TASK1>();
    }


    public int TaskCreatedFromID 
	{ 
		get
		{
			return _TaskCreatedFromID;
		}
		set
		{
			if(_TaskCreatedFromID != value)
			{
				OnTaskCreatedFromIDChanging(value);
				_TaskCreatedFromID = value;
				OnTaskCreatedFromIDChanged();
			}
		}
	}
	private int _TaskCreatedFromID;

	partial void OnTaskCreatedFromIDChanging(int newValue);
	partial void OnTaskCreatedFromIDChanged();

    public string TaskCreatedFrom 
	{ 
		get
		{
			return _TaskCreatedFrom;
		}
		set
		{
			if(_TaskCreatedFrom != value)
			{
				OnTaskCreatedFromChanging(value);
				_TaskCreatedFrom = value;
				OnTaskCreatedFromChanged();
			}
		}
	}
	private string _TaskCreatedFrom;

	partial void OnTaskCreatedFromChanging(string newValue);
	partial void OnTaskCreatedFromChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public virtual ICollection<TASK1> TASK1 { get; set; }
}

[Serializable]
public partial class OTCSE : ObjectWithState
{
    public OTCSE() 
    { 
        this.TASK1 = new HashSet<TASK1>();
        this.TASK2 = new HashSet<TASK2>();
        this.TASK3 = new HashSet<TASK3>();
        this.TASK4 = new HashSet<TASK4>();
    }


    public int TaskCallID 
	{ 
		get
		{
			return _TaskCallID;
		}
		set
		{
			if(_TaskCallID != value)
			{
				OnTaskCallIDChanging(value);
				_TaskCallID = value;
				OnTaskCallIDChanged();
			}
		}
	}
	private int _TaskCallID;

	partial void OnTaskCallIDChanging(int newValue);
	partial void OnTaskCallIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int EntryID 
	{ 
		get
		{
			return _EntryID;
		}
		set
		{
			if(_EntryID != value)
			{
				OnEntryIDChanging(value);
				_EntryID = value;
				OnEntryIDChanged();
			}
		}
	}
	private int _EntryID;

	partial void OnEntryIDChanging(int newValue);
	partial void OnEntryIDChanged();

    public int TaskID 
	{ 
		get
		{
			return _TaskID;
		}
		set
		{
			if(_TaskID != value)
			{
				OnTaskIDChanging(value);
				_TaskID = value;
				OnTaskIDChanged();
			}
		}
	}
	private int _TaskID;

	partial void OnTaskIDChanging(int newValue);
	partial void OnTaskIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public System.DateTime StartDate 
	{ 
		get
		{
			return _StartDate;
		}
		set
		{
			if(_StartDate != value)
			{
				OnStartDateChanging(value);
				_StartDate = value;
				OnStartDateChanged();
			}
		}
	}
	private System.DateTime _StartDate;

	partial void OnStartDateChanging(System.DateTime newValue);
	partial void OnStartDateChanged();

    public System.TimeSpan StartTime 
	{ 
		get
		{
			return _StartTime;
		}
		set
		{
			if(_StartTime != value)
			{
				OnStartTimeChanging(value);
				_StartTime = value;
				OnStartTimeChanged();
			}
		}
	}
	private System.TimeSpan _StartTime;

	partial void OnStartTimeChanging(System.TimeSpan newValue);
	partial void OnStartTimeChanged();

    public string StartLat 
	{ 
		get
		{
			return _StartLat;
		}
		set
		{
			if(_StartLat != value)
			{
				OnStartLatChanging(value);
				_StartLat = value;
				OnStartLatChanged();
			}
		}
	}
	private string _StartLat;

	partial void OnStartLatChanging(string newValue);
	partial void OnStartLatChanged();

    public string StartLong 
	{ 
		get
		{
			return _StartLong;
		}
		set
		{
			if(_StartLong != value)
			{
				OnStartLongChanging(value);
				_StartLong = value;
				OnStartLongChanged();
			}
		}
	}
	private string _StartLong;

	partial void OnStartLongChanging(string newValue);
	partial void OnStartLongChanged();

    public Nullable<System.DateTime> EndDate 
	{ 
		get
		{
			return _EndDate;
		}
		set
		{
			if(_EndDate != value)
			{
				OnEndDateChanging(value);
				_EndDate = value;
				OnEndDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _EndDate;

	partial void OnEndDateChanging(Nullable<System.DateTime> newValue);
	partial void OnEndDateChanged();

    public Nullable<System.TimeSpan> EndTime 
	{ 
		get
		{
			return _EndTime;
		}
		set
		{
			if(_EndTime != value)
			{
				OnEndTimeChanging(value);
				_EndTime = value;
				OnEndTimeChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _EndTime;

	partial void OnEndTimeChanging(Nullable<System.TimeSpan> newValue);
	partial void OnEndTimeChanged();

    public string EndLat 
	{ 
		get
		{
			return _EndLat;
		}
		set
		{
			if(_EndLat != value)
			{
				OnEndLatChanging(value);
				_EndLat = value;
				OnEndLatChanged();
			}
		}
	}
	private string _EndLat;

	partial void OnEndLatChanging(string newValue);
	partial void OnEndLatChanged();

    public string EndLong 
	{ 
		get
		{
			return _EndLong;
		}
		set
		{
			if(_EndLong != value)
			{
				OnEndLongChanging(value);
				_EndLong = value;
				OnEndLongChanged();
			}
		}
	}
	private string _EndLong;

	partial void OnEndLongChanging(string newValue);
	partial void OnEndLongChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public string InAccuracy 
	{ 
		get
		{
			return _InAccuracy;
		}
		set
		{
			if(_InAccuracy != value)
			{
				OnInAccuracyChanging(value);
				_InAccuracy = value;
				OnInAccuracyChanged();
			}
		}
	}
	private string _InAccuracy;

	partial void OnInAccuracyChanging(string newValue);
	partial void OnInAccuracyChanged();

    public string OutAccuracy 
	{ 
		get
		{
			return _OutAccuracy;
		}
		set
		{
			if(_OutAccuracy != value)
			{
				OnOutAccuracyChanging(value);
				_OutAccuracy = value;
				OnOutAccuracyChanged();
			}
		}
	}
	private string _OutAccuracy;

	partial void OnOutAccuracyChanging(string newValue);
	partial void OnOutAccuracyChanged();

    public Nullable<decimal> InDistance 
	{ 
		get
		{
			return _InDistance;
		}
		set
		{
			if(_InDistance != value)
			{
				OnInDistanceChanging(value);
				_InDistance = value;
				OnInDistanceChanged();
			}
		}
	}
	private Nullable<decimal> _InDistance;

	partial void OnInDistanceChanging(Nullable<decimal> newValue);
	partial void OnInDistanceChanged();

    public virtual OTASK OTASK { get; set; }
    public virtual ICollection<TASK1> TASK1 { get; set; }
    public virtual ICollection<TASK2> TASK2 { get; set; }
    public virtual ICollection<TASK3> TASK3 { get; set; }
    public virtual ICollection<TASK4> TASK4 { get; set; }
}

[Serializable]
public partial class OTEM : ObjectWithState
{
    public OTEM() 
    { 
        this.TEM1 = new HashSet<TEM1>();
    }


    public int MatrixID 
	{ 
		get
		{
			return _MatrixID;
		}
		set
		{
			if(_MatrixID != value)
			{
				OnMatrixIDChanging(value);
				_MatrixID = value;
				OnMatrixIDChanged();
			}
		}
	}
	private int _MatrixID;

	partial void OnMatrixIDChanging(int newValue);
	partial void OnMatrixIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int ProblemID 
	{ 
		get
		{
			return _ProblemID;
		}
		set
		{
			if(_ProblemID != value)
			{
				OnProblemIDChanging(value);
				_ProblemID = value;
				OnProblemIDChanged();
			}
		}
	}
	private int _ProblemID;

	partial void OnProblemIDChanging(int newValue);
	partial void OnProblemIDChanged();

    public int StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private int _StateID;

	partial void OnStateIDChanging(int newValue);
	partial void OnStateIDChanged();

    public int StorageLocID 
	{ 
		get
		{
			return _StorageLocID;
		}
		set
		{
			if(_StorageLocID != value)
			{
				OnStorageLocIDChanging(value);
				_StorageLocID = value;
				OnStorageLocIDChanged();
			}
		}
	}
	private int _StorageLocID;

	partial void OnStorageLocIDChanging(int newValue);
	partial void OnStorageLocIDChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public virtual OCST OCST { get; set; }
    public virtual OPLM OPLM { get; set; }
    public virtual OSTRL OSTRL { get; set; }
    public virtual ICollection<TEM1> TEM1 { get; set; }
}

[Serializable]
public partial class OTLT : ObjectWithState
{

    public int OutletID 
	{ 
		get
		{
			return _OutletID;
		}
		set
		{
			if(_OutletID != value)
			{
				OnOutletIDChanging(value);
				_OutletID = value;
				OnOutletIDChanged();
			}
		}
	}
	private int _OutletID;

	partial void OnOutletIDChanging(int newValue);
	partial void OnOutletIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string Name 
	{ 
		get
		{
			return _Name;
		}
		set
		{
			if(_Name != value)
			{
				OnNameChanging(value);
				_Name = value;
				OnNameChanged();
			}
		}
	}
	private string _Name;

	partial void OnNameChanging(string newValue);
	partial void OnNameChanged();

    public int TypeID 
	{ 
		get
		{
			return _TypeID;
		}
		set
		{
			if(_TypeID != value)
			{
				OnTypeIDChanging(value);
				_TypeID = value;
				OnTypeIDChanged();
			}
		}
	}
	private int _TypeID;

	partial void OnTypeIDChanging(int newValue);
	partial void OnTypeIDChanged();

    public Nullable<System.TimeSpan> Shift1ST 
	{ 
		get
		{
			return _Shift1ST;
		}
		set
		{
			if(_Shift1ST != value)
			{
				OnShift1STChanging(value);
				_Shift1ST = value;
				OnShift1STChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _Shift1ST;

	partial void OnShift1STChanging(Nullable<System.TimeSpan> newValue);
	partial void OnShift1STChanged();

    public Nullable<System.TimeSpan> Shift1ET 
	{ 
		get
		{
			return _Shift1ET;
		}
		set
		{
			if(_Shift1ET != value)
			{
				OnShift1ETChanging(value);
				_Shift1ET = value;
				OnShift1ETChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _Shift1ET;

	partial void OnShift1ETChanging(Nullable<System.TimeSpan> newValue);
	partial void OnShift1ETChanged();

    public Nullable<System.TimeSpan> Shift2ST 
	{ 
		get
		{
			return _Shift2ST;
		}
		set
		{
			if(_Shift2ST != value)
			{
				OnShift2STChanging(value);
				_Shift2ST = value;
				OnShift2STChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _Shift2ST;

	partial void OnShift2STChanging(Nullable<System.TimeSpan> newValue);
	partial void OnShift2STChanged();

    public Nullable<System.TimeSpan> Shift2ET 
	{ 
		get
		{
			return _Shift2ET;
		}
		set
		{
			if(_Shift2ET != value)
			{
				OnShift2ETChanging(value);
				_Shift2ET = value;
				OnShift2ETChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _Shift2ET;

	partial void OnShift2ETChanging(Nullable<System.TimeSpan> newValue);
	partial void OnShift2ETChanged();

    public Nullable<System.TimeSpan> Shift3ST 
	{ 
		get
		{
			return _Shift3ST;
		}
		set
		{
			if(_Shift3ST != value)
			{
				OnShift3STChanging(value);
				_Shift3ST = value;
				OnShift3STChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _Shift3ST;

	partial void OnShift3STChanging(Nullable<System.TimeSpan> newValue);
	partial void OnShift3STChanged();

    public Nullable<System.TimeSpan> Shift3ET 
	{ 
		get
		{
			return _Shift3ET;
		}
		set
		{
			if(_Shift3ET != value)
			{
				OnShift3ETChanging(value);
				_Shift3ET = value;
				OnShift3ETChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _Shift3ET;

	partial void OnShift3ETChanging(Nullable<System.TimeSpan> newValue);
	partial void OnShift3ETChanged();

    public Nullable<System.TimeSpan> Shift4ST 
	{ 
		get
		{
			return _Shift4ST;
		}
		set
		{
			if(_Shift4ST != value)
			{
				OnShift4STChanging(value);
				_Shift4ST = value;
				OnShift4STChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _Shift4ST;

	partial void OnShift4STChanging(Nullable<System.TimeSpan> newValue);
	partial void OnShift4STChanged();

    public Nullable<System.TimeSpan> Shift4ET 
	{ 
		get
		{
			return _Shift4ET;
		}
		set
		{
			if(_Shift4ET != value)
			{
				OnShift4ETChanging(value);
				_Shift4ET = value;
				OnShift4ETChanged();
			}
		}
	}
	private Nullable<System.TimeSpan> _Shift4ET;

	partial void OnShift4ETChanging(Nullable<System.TimeSpan> newValue);
	partial void OnShift4ETChanged();

    public Nullable<int> CPurchasePriceListID 
	{ 
		get
		{
			return _CPurchasePriceListID;
		}
		set
		{
			if(_CPurchasePriceListID != value)
			{
				OnCPurchasePriceListIDChanging(value);
				_CPurchasePriceListID = value;
				OnCPurchasePriceListIDChanged();
			}
		}
	}
	private Nullable<int> _CPurchasePriceListID;

	partial void OnCPurchasePriceListIDChanging(Nullable<int> newValue);
	partial void OnCPurchasePriceListIDChanged();

    public Nullable<int> PurchasePriceListID 
	{ 
		get
		{
			return _PurchasePriceListID;
		}
		set
		{
			if(_PurchasePriceListID != value)
			{
				OnPurchasePriceListIDChanging(value);
				_PurchasePriceListID = value;
				OnPurchasePriceListIDChanged();
			}
		}
	}
	private Nullable<int> _PurchasePriceListID;

	partial void OnPurchasePriceListIDChanging(Nullable<int> newValue);
	partial void OnPurchasePriceListIDChanged();

    public int RetailPriceListID 
	{ 
		get
		{
			return _RetailPriceListID;
		}
		set
		{
			if(_RetailPriceListID != value)
			{
				OnRetailPriceListIDChanging(value);
				_RetailPriceListID = value;
				OnRetailPriceListIDChanged();
			}
		}
	}
	private int _RetailPriceListID;

	partial void OnRetailPriceListIDChanging(int newValue);
	partial void OnRetailPriceListIDChanged();

    public Nullable<int> WholeSalePriceListID 
	{ 
		get
		{
			return _WholeSalePriceListID;
		}
		set
		{
			if(_WholeSalePriceListID != value)
			{
				OnWholeSalePriceListIDChanging(value);
				_WholeSalePriceListID = value;
				OnWholeSalePriceListIDChanged();
			}
		}
	}
	private Nullable<int> _WholeSalePriceListID;

	partial void OnWholeSalePriceListIDChanging(Nullable<int> newValue);
	partial void OnWholeSalePriceListIDChanged();

    public string ServiceTax 
	{ 
		get
		{
			return _ServiceTax;
		}
		set
		{
			if(_ServiceTax != value)
			{
				OnServiceTaxChanging(value);
				_ServiceTax = value;
				OnServiceTaxChanged();
			}
		}
	}
	private string _ServiceTax;

	partial void OnServiceTaxChanging(string newValue);
	partial void OnServiceTaxChanged();

    public decimal ServiceTaxAmt 
	{ 
		get
		{
			return _ServiceTaxAmt;
		}
		set
		{
			if(_ServiceTaxAmt != value)
			{
				OnServiceTaxAmtChanging(value);
				_ServiceTaxAmt = value;
				OnServiceTaxAmtChanged();
			}
		}
	}
	private decimal _ServiceTaxAmt;

	partial void OnServiceTaxAmtChanging(decimal newValue);
	partial void OnServiceTaxAmtChanged();

    public string SeatingCapacity 
	{ 
		get
		{
			return _SeatingCapacity;
		}
		set
		{
			if(_SeatingCapacity != value)
			{
				OnSeatingCapacityChanging(value);
				_SeatingCapacity = value;
				OnSeatingCapacityChanged();
			}
		}
	}
	private string _SeatingCapacity;

	partial void OnSeatingCapacityChanging(string newValue);
	partial void OnSeatingCapacityChanged();

    public decimal SeatingCapacityAmt 
	{ 
		get
		{
			return _SeatingCapacityAmt;
		}
		set
		{
			if(_SeatingCapacityAmt != value)
			{
				OnSeatingCapacityAmtChanging(value);
				_SeatingCapacityAmt = value;
				OnSeatingCapacityAmtChanged();
			}
		}
	}
	private decimal _SeatingCapacityAmt;

	partial void OnSeatingCapacityAmtChanging(decimal newValue);
	partial void OnSeatingCapacityAmtChanged();

    public bool GiftSales 
	{ 
		get
		{
			return _GiftSales;
		}
		set
		{
			if(_GiftSales != value)
			{
				OnGiftSalesChanging(value);
				_GiftSales = value;
				OnGiftSalesChanged();
			}
		}
	}
	private bool _GiftSales;

	partial void OnGiftSalesChanging(bool newValue);
	partial void OnGiftSalesChanged();

    public bool HomeDelivery 
	{ 
		get
		{
			return _HomeDelivery;
		}
		set
		{
			if(_HomeDelivery != value)
			{
				OnHomeDeliveryChanging(value);
				_HomeDelivery = value;
				OnHomeDeliveryChanged();
			}
		}
	}
	private bool _HomeDelivery;

	partial void OnHomeDeliveryChanging(bool newValue);
	partial void OnHomeDeliveryChanged();

    public bool NegativeInventory 
	{ 
		get
		{
			return _NegativeInventory;
		}
		set
		{
			if(_NegativeInventory != value)
			{
				OnNegativeInventoryChanging(value);
				_NegativeInventory = value;
				OnNegativeInventoryChanged();
			}
		}
	}
	private bool _NegativeInventory;

	partial void OnNegativeInventoryChanging(bool newValue);
	partial void OnNegativeInventoryChanged();

    public bool TaxOnParcel 
	{ 
		get
		{
			return _TaxOnParcel;
		}
		set
		{
			if(_TaxOnParcel != value)
			{
				OnTaxOnParcelChanging(value);
				_TaxOnParcel = value;
				OnTaxOnParcelChanged();
			}
		}
	}
	private bool _TaxOnParcel;

	partial void OnTaxOnParcelChanging(bool newValue);
	partial void OnTaxOnParcelChanged();

    public bool POSAmountMandatory 
	{ 
		get
		{
			return _POSAmountMandatory;
		}
		set
		{
			if(_POSAmountMandatory != value)
			{
				OnPOSAmountMandatoryChanging(value);
				_POSAmountMandatory = value;
				OnPOSAmountMandatoryChanged();
			}
		}
	}
	private bool _POSAmountMandatory;

	partial void OnPOSAmountMandatoryChanging(bool newValue);
	partial void OnPOSAmountMandatoryChanged();

    public bool POSQuantityEdit 
	{ 
		get
		{
			return _POSQuantityEdit;
		}
		set
		{
			if(_POSQuantityEdit != value)
			{
				OnPOSQuantityEditChanging(value);
				_POSQuantityEdit = value;
				OnPOSQuantityEditChanged();
			}
		}
	}
	private bool _POSQuantityEdit;

	partial void OnPOSQuantityEditChanging(bool newValue);
	partial void OnPOSQuantityEditChanged();

    public string HelpDeskNumber 
	{ 
		get
		{
			return _HelpDeskNumber;
		}
		set
		{
			if(_HelpDeskNumber != value)
			{
				OnHelpDeskNumberChanging(value);
				_HelpDeskNumber = value;
				OnHelpDeskNumberChanged();
			}
		}
	}
	private string _HelpDeskNumber;

	partial void OnHelpDeskNumberChanging(string newValue);
	partial void OnHelpDeskNumberChanged();

    public string OutletLogo 
	{ 
		get
		{
			return _OutletLogo;
		}
		set
		{
			if(_OutletLogo != value)
			{
				OnOutletLogoChanging(value);
				_OutletLogo = value;
				OnOutletLogoChanged();
			}
		}
	}
	private string _OutletLogo;

	partial void OnOutletLogoChanging(string newValue);
	partial void OnOutletLogoChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string Latitude 
	{ 
		get
		{
			return _Latitude;
		}
		set
		{
			if(_Latitude != value)
			{
				OnLatitudeChanging(value);
				_Latitude = value;
				OnLatitudeChanged();
			}
		}
	}
	private string _Latitude;

	partial void OnLatitudeChanging(string newValue);
	partial void OnLatitudeChanged();

    public string Longitude 
	{ 
		get
		{
			return _Longitude;
		}
		set
		{
			if(_Longitude != value)
			{
				OnLongitudeChanging(value);
				_Longitude = value;
				OnLongitudeChanged();
			}
		}
	}
	private string _Longitude;

	partial void OnLongitudeChanging(string newValue);
	partial void OnLongitudeChanged();

    public virtual OIPL OIPL { get; set; }
    public virtual OIPL OIPL1 { get; set; }
    public virtual OCRD OCRD { get; set; }
}

[Serializable]
public partial class OTMP : ObjectWithState
{
    public OTMP() 
    { 
        this.SITMs = new HashSet<SITM>();
    }


    public int TemplateID 
	{ 
		get
		{
			return _TemplateID;
		}
		set
		{
			if(_TemplateID != value)
			{
				OnTemplateIDChanging(value);
				_TemplateID = value;
				OnTemplateIDChanged();
			}
		}
	}
	private int _TemplateID;

	partial void OnTemplateIDChanging(int newValue);
	partial void OnTemplateIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string TemplateName 
	{ 
		get
		{
			return _TemplateName;
		}
		set
		{
			if(_TemplateName != value)
			{
				OnTemplateNameChanging(value);
				_TemplateName = value;
				OnTemplateNameChanged();
			}
		}
	}
	private string _TemplateName;

	partial void OnTemplateNameChanging(string newValue);
	partial void OnTemplateNameChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool IsDefault 
	{ 
		get
		{
			return _IsDefault;
		}
		set
		{
			if(_IsDefault != value)
			{
				OnIsDefaultChanging(value);
				_IsDefault = value;
				OnIsDefaultChanged();
			}
		}
	}
	private bool _IsDefault;

	partial void OnIsDefaultChanging(bool newValue);
	partial void OnIsDefaultChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<int> DivisionlID 
	{ 
		get
		{
			return _DivisionlID;
		}
		set
		{
			if(_DivisionlID != value)
			{
				OnDivisionlIDChanging(value);
				_DivisionlID = value;
				OnDivisionlIDChanged();
			}
		}
	}
	private Nullable<int> _DivisionlID;

	partial void OnDivisionlIDChanging(Nullable<int> newValue);
	partial void OnDivisionlIDChanged();

    public virtual ICollection<SITM> SITMs { get; set; }
    public virtual ODIV ODIV { get; set; }
}

[Serializable]
public partial class OTPM : ObjectWithState
{

    public int OTPID 
	{ 
		get
		{
			return _OTPID;
		}
		set
		{
			if(_OTPID != value)
			{
				OnOTPIDChanging(value);
				_OTPID = value;
				OnOTPIDChanged();
			}
		}
	}
	private int _OTPID;

	partial void OnOTPIDChanging(int newValue);
	partial void OnOTPIDChanged();

    public string CustomerCode 
	{ 
		get
		{
			return _CustomerCode;
		}
		set
		{
			if(_CustomerCode != value)
			{
				OnCustomerCodeChanging(value);
				_CustomerCode = value;
				OnCustomerCodeChanged();
			}
		}
	}
	private string _CustomerCode;

	partial void OnCustomerCodeChanging(string newValue);
	partial void OnCustomerCodeChanged();

    public string OTP 
	{ 
		get
		{
			return _OTP;
		}
		set
		{
			if(_OTP != value)
			{
				OnOTPChanging(value);
				_OTP = value;
				OnOTPChanged();
			}
		}
	}
	private string _OTP;

	partial void OnOTPChanging(string newValue);
	partial void OnOTPChanged();

    public Nullable<bool> IsOTPVerify 
	{ 
		get
		{
			return _IsOTPVerify;
		}
		set
		{
			if(_IsOTPVerify != value)
			{
				OnIsOTPVerifyChanging(value);
				_IsOTPVerify = value;
				OnIsOTPVerifyChanged();
			}
		}
	}
	private Nullable<bool> _IsOTPVerify;

	partial void OnIsOTPVerifyChanging(Nullable<bool> newValue);
	partial void OnIsOTPVerifyChanged();

    public Nullable<System.DateTime> OTPCreationTime 
	{ 
		get
		{
			return _OTPCreationTime;
		}
		set
		{
			if(_OTPCreationTime != value)
			{
				OnOTPCreationTimeChanging(value);
				_OTPCreationTime = value;
				OnOTPCreationTimeChanged();
			}
		}
	}
	private Nullable<System.DateTime> _OTPCreationTime;

	partial void OnOTPCreationTimeChanging(Nullable<System.DateTime> newValue);
	partial void OnOTPCreationTimeChanged();

    public Nullable<System.DateTime> OTPUpdateTime 
	{ 
		get
		{
			return _OTPUpdateTime;
		}
		set
		{
			if(_OTPUpdateTime != value)
			{
				OnOTPUpdateTimeChanging(value);
				_OTPUpdateTime = value;
				OnOTPUpdateTimeChanged();
			}
		}
	}
	private Nullable<System.DateTime> _OTPUpdateTime;

	partial void OnOTPUpdateTimeChanging(Nullable<System.DateTime> newValue);
	partial void OnOTPUpdateTimeChanged();

    public Nullable<bool> ISActive 
	{ 
		get
		{
			return _ISActive;
		}
		set
		{
			if(_ISActive != value)
			{
				OnISActiveChanging(value);
				_ISActive = value;
				OnISActiveChanged();
			}
		}
	}
	private Nullable<bool> _ISActive;

	partial void OnISActiveChanging(Nullable<bool> newValue);
	partial void OnISActiveChanged();

    public Nullable<bool> ISChangePassword 
	{ 
		get
		{
			return _ISChangePassword;
		}
		set
		{
			if(_ISChangePassword != value)
			{
				OnISChangePasswordChanging(value);
				_ISChangePassword = value;
				OnISChangePasswordChanged();
			}
		}
	}
	private Nullable<bool> _ISChangePassword;

	partial void OnISChangePasswordChanging(Nullable<bool> newValue);
	partial void OnISChangePasswordChanged();
}

[Serializable]
public partial class OTRG : ObjectWithState
{

    public int OTRGID 
	{ 
		get
		{
			return _OTRGID;
		}
		set
		{
			if(_OTRGID != value)
			{
				OnOTRGIDChanging(value);
				_OTRGID = value;
				OnOTRGIDChanged();
			}
		}
	}
	private int _OTRGID;

	partial void OnOTRGIDChanging(int newValue);
	partial void OnOTRGIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int DivisionID 
	{ 
		get
		{
			return _DivisionID;
		}
		set
		{
			if(_DivisionID != value)
			{
				OnDivisionIDChanging(value);
				_DivisionID = value;
				OnDivisionIDChanged();
			}
		}
	}
	private int _DivisionID;

	partial void OnDivisionIDChanging(int newValue);
	partial void OnDivisionIDChanged();

    public System.DateTime MonthYear 
	{ 
		get
		{
			return _MonthYear;
		}
		set
		{
			if(_MonthYear != value)
			{
				OnMonthYearChanging(value);
				_MonthYear = value;
				OnMonthYearChanged();
			}
		}
	}
	private System.DateTime _MonthYear;

	partial void OnMonthYearChanging(System.DateTime newValue);
	partial void OnMonthYearChanged();

    public decimal TargetAmount 
	{ 
		get
		{
			return _TargetAmount;
		}
		set
		{
			if(_TargetAmount != value)
			{
				OnTargetAmountChanging(value);
				_TargetAmount = value;
				OnTargetAmountChanged();
			}
		}
	}
	private decimal _TargetAmount;

	partial void OnTargetAmountChanging(decimal newValue);
	partial void OnTargetAmountChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual ODIV ODIV { get; set; }
    public virtual OEMP OEMP { get; set; }
}

[Serializable]
public partial class OTRQ : ObjectWithState
{
    public OTRQ() 
    { 
        this.OARQs = new HashSet<OARQ>();
    }


    public int OTRQID 
	{ 
		get
		{
			return _OTRQID;
		}
		set
		{
			if(_OTRQID != value)
			{
				OnOTRQIDChanging(value);
				_OTRQID = value;
				OnOTRQIDChanged();
			}
		}
	}
	private int _OTRQID;

	partial void OnOTRQIDChanging(int newValue);
	partial void OnOTRQIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public Nullable<int> NextManagerID 
	{ 
		get
		{
			return _NextManagerID;
		}
		set
		{
			if(_NextManagerID != value)
			{
				OnNextManagerIDChanging(value);
				_NextManagerID = value;
				OnNextManagerIDChanged();
			}
		}
	}
	private Nullable<int> _NextManagerID;

	partial void OnNextManagerIDChanging(Nullable<int> newValue);
	partial void OnNextManagerIDChanged();

    public System.DateTime ApplicationDate 
	{ 
		get
		{
			return _ApplicationDate;
		}
		set
		{
			if(_ApplicationDate != value)
			{
				OnApplicationDateChanging(value);
				_ApplicationDate = value;
				OnApplicationDateChanged();
			}
		}
	}
	private System.DateTime _ApplicationDate;

	partial void OnApplicationDateChanging(System.DateTime newValue);
	partial void OnApplicationDateChanged();

    public int BudgeterID 
	{ 
		get
		{
			return _BudgeterID;
		}
		set
		{
			if(_BudgeterID != value)
			{
				OnBudgeterIDChanging(value);
				_BudgeterID = value;
				OnBudgeterIDChanged();
			}
		}
	}
	private int _BudgeterID;

	partial void OnBudgeterIDChanging(int newValue);
	partial void OnBudgeterIDChanged();

    public int CountryID 
	{ 
		get
		{
			return _CountryID;
		}
		set
		{
			if(_CountryID != value)
			{
				OnCountryIDChanging(value);
				_CountryID = value;
				OnCountryIDChanged();
			}
		}
	}
	private int _CountryID;

	partial void OnCountryIDChanging(int newValue);
	partial void OnCountryIDChanged();

    public int StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private int _StateID;

	partial void OnStateIDChanging(int newValue);
	partial void OnStateIDChanged();

    public int CityID 
	{ 
		get
		{
			return _CityID;
		}
		set
		{
			if(_CityID != value)
			{
				OnCityIDChanging(value);
				_CityID = value;
				OnCityIDChanged();
			}
		}
	}
	private int _CityID;

	partial void OnCityIDChanging(int newValue);
	partial void OnCityIDChanged();

    public string PlaceOfVisit 
	{ 
		get
		{
			return _PlaceOfVisit;
		}
		set
		{
			if(_PlaceOfVisit != value)
			{
				OnPlaceOfVisitChanging(value);
				_PlaceOfVisit = value;
				OnPlaceOfVisitChanged();
			}
		}
	}
	private string _PlaceOfVisit;

	partial void OnPlaceOfVisitChanging(string newValue);
	partial void OnPlaceOfVisitChanged();

    public string PurposeOfVisit 
	{ 
		get
		{
			return _PurposeOfVisit;
		}
		set
		{
			if(_PurposeOfVisit != value)
			{
				OnPurposeOfVisitChanging(value);
				_PurposeOfVisit = value;
				OnPurposeOfVisitChanged();
			}
		}
	}
	private string _PurposeOfVisit;

	partial void OnPurposeOfVisitChanging(string newValue);
	partial void OnPurposeOfVisitChanged();

    public System.DateTime DeptDate 
	{ 
		get
		{
			return _DeptDate;
		}
		set
		{
			if(_DeptDate != value)
			{
				OnDeptDateChanging(value);
				_DeptDate = value;
				OnDeptDateChanged();
			}
		}
	}
	private System.DateTime _DeptDate;

	partial void OnDeptDateChanging(System.DateTime newValue);
	partial void OnDeptDateChanged();

    public int NoOfDays 
	{ 
		get
		{
			return _NoOfDays;
		}
		set
		{
			if(_NoOfDays != value)
			{
				OnNoOfDaysChanging(value);
				_NoOfDays = value;
				OnNoOfDaysChanged();
			}
		}
	}
	private int _NoOfDays;

	partial void OnNoOfDaysChanging(int newValue);
	partial void OnNoOfDaysChanged();

    public System.DateTime ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private System.DateTime _ToDate;

	partial void OnToDateChanging(System.DateTime newValue);
	partial void OnToDateChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public int ExpModeID 
	{ 
		get
		{
			return _ExpModeID;
		}
		set
		{
			if(_ExpModeID != value)
			{
				OnExpModeIDChanging(value);
				_ExpModeID = value;
				OnExpModeIDChanged();
			}
		}
	}
	private int _ExpModeID;

	partial void OnExpModeIDChanging(int newValue);
	partial void OnExpModeIDChanged();

    public System.DateTime FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private System.DateTime _FromDate;

	partial void OnFromDateChanging(System.DateTime newValue);
	partial void OnFromDateChanged();

    public System.TimeSpan FromTime 
	{ 
		get
		{
			return _FromTime;
		}
		set
		{
			if(_FromTime != value)
			{
				OnFromTimeChanging(value);
				_FromTime = value;
				OnFromTimeChanged();
			}
		}
	}
	private System.TimeSpan _FromTime;

	partial void OnFromTimeChanging(System.TimeSpan newValue);
	partial void OnFromTimeChanged();

    public string Description 
	{ 
		get
		{
			return _Description;
		}
		set
		{
			if(_Description != value)
			{
				OnDescriptionChanging(value);
				_Description = value;
				OnDescriptionChanged();
			}
		}
	}
	private string _Description;

	partial void OnDescriptionChanging(string newValue);
	partial void OnDescriptionChanged();

    public decimal ReqAmount 
	{ 
		get
		{
			return _ReqAmount;
		}
		set
		{
			if(_ReqAmount != value)
			{
				OnReqAmountChanging(value);
				_ReqAmount = value;
				OnReqAmountChanged();
			}
		}
	}
	private decimal _ReqAmount;

	partial void OnReqAmountChanging(decimal newValue);
	partial void OnReqAmountChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public bool InAdvance 
	{ 
		get
		{
			return _InAdvance;
		}
		set
		{
			if(_InAdvance != value)
			{
				OnInAdvanceChanging(value);
				_InAdvance = value;
				OnInAdvanceChanged();
			}
		}
	}
	private bool _InAdvance;

	partial void OnInAdvanceChanging(bool newValue);
	partial void OnInAdvanceChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public virtual ICollection<OARQ> OARQs { get; set; }
}

[Serializable]
public partial class OTRSN : ObjectWithState
{

    public int TaskReasonID 
	{ 
		get
		{
			return _TaskReasonID;
		}
		set
		{
			if(_TaskReasonID != value)
			{
				OnTaskReasonIDChanging(value);
				_TaskReasonID = value;
				OnTaskReasonIDChanged();
			}
		}
	}
	private int _TaskReasonID;

	partial void OnTaskReasonIDChanging(int newValue);
	partial void OnTaskReasonIDChanged();

    public string ReasonType 
	{ 
		get
		{
			return _ReasonType;
		}
		set
		{
			if(_ReasonType != value)
			{
				OnReasonTypeChanging(value);
				_ReasonType = value;
				OnReasonTypeChanged();
			}
		}
	}
	private string _ReasonType;

	partial void OnReasonTypeChanging(string newValue);
	partial void OnReasonTypeChanged();

    public string TaskReasonCode 
	{ 
		get
		{
			return _TaskReasonCode;
		}
		set
		{
			if(_TaskReasonCode != value)
			{
				OnTaskReasonCodeChanging(value);
				_TaskReasonCode = value;
				OnTaskReasonCodeChanged();
			}
		}
	}
	private string _TaskReasonCode;

	partial void OnTaskReasonCodeChanging(string newValue);
	partial void OnTaskReasonCodeChanged();

    public string TaskReasonName 
	{ 
		get
		{
			return _TaskReasonName;
		}
		set
		{
			if(_TaskReasonName != value)
			{
				OnTaskReasonNameChanging(value);
				_TaskReasonName = value;
				OnTaskReasonNameChanged();
			}
		}
	}
	private string _TaskReasonName;

	partial void OnTaskReasonNameChanging(string newValue);
	partial void OnTaskReasonNameChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();
}

[Serializable]
public partial class OTST : ObjectWithState
{
    public OTST() 
    { 
        this.TASK1 = new HashSet<TASK1>();
        this.TASK2 = new HashSet<TASK2>();
    }


    public int TaskStatusID 
	{ 
		get
		{
			return _TaskStatusID;
		}
		set
		{
			if(_TaskStatusID != value)
			{
				OnTaskStatusIDChanging(value);
				_TaskStatusID = value;
				OnTaskStatusIDChanged();
			}
		}
	}
	private int _TaskStatusID;

	partial void OnTaskStatusIDChanging(int newValue);
	partial void OnTaskStatusIDChanged();

    public string TaskStatusCode 
	{ 
		get
		{
			return _TaskStatusCode;
		}
		set
		{
			if(_TaskStatusCode != value)
			{
				OnTaskStatusCodeChanging(value);
				_TaskStatusCode = value;
				OnTaskStatusCodeChanged();
			}
		}
	}
	private string _TaskStatusCode;

	partial void OnTaskStatusCodeChanging(string newValue);
	partial void OnTaskStatusCodeChanged();

    public string TaskStatusName 
	{ 
		get
		{
			return _TaskStatusName;
		}
		set
		{
			if(_TaskStatusName != value)
			{
				OnTaskStatusNameChanging(value);
				_TaskStatusName = value;
				OnTaskStatusNameChanged();
			}
		}
	}
	private string _TaskStatusName;

	partial void OnTaskStatusNameChanging(string newValue);
	partial void OnTaskStatusNameChanged();

    public bool IsCompleted 
	{ 
		get
		{
			return _IsCompleted;
		}
		set
		{
			if(_IsCompleted != value)
			{
				OnIsCompletedChanging(value);
				_IsCompleted = value;
				OnIsCompletedChanged();
			}
		}
	}
	private bool _IsCompleted;

	partial void OnIsCompletedChanging(bool newValue);
	partial void OnIsCompletedChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public virtual ICollection<TASK1> TASK1 { get; set; }
    public virtual ICollection<TASK2> TASK2 { get; set; }
}

[Serializable]
public partial class OTTY : ObjectWithState
{
    public OTTY() 
    { 
        this.OPLMs = new HashSet<OPLM>();
        this.OTASKs = new HashSet<OTASK>();
    }


    public int TaskTypeID 
	{ 
		get
		{
			return _TaskTypeID;
		}
		set
		{
			if(_TaskTypeID != value)
			{
				OnTaskTypeIDChanging(value);
				_TaskTypeID = value;
				OnTaskTypeIDChanged();
			}
		}
	}
	private int _TaskTypeID;

	partial void OnTaskTypeIDChanging(int newValue);
	partial void OnTaskTypeIDChanged();

    public string TaskTypeCode 
	{ 
		get
		{
			return _TaskTypeCode;
		}
		set
		{
			if(_TaskTypeCode != value)
			{
				OnTaskTypeCodeChanging(value);
				_TaskTypeCode = value;
				OnTaskTypeCodeChanged();
			}
		}
	}
	private string _TaskTypeCode;

	partial void OnTaskTypeCodeChanging(string newValue);
	partial void OnTaskTypeCodeChanged();

    public string TaskTypeName 
	{ 
		get
		{
			return _TaskTypeName;
		}
		set
		{
			if(_TaskTypeName != value)
			{
				OnTaskTypeNameChanging(value);
				_TaskTypeName = value;
				OnTaskTypeNameChanged();
			}
		}
	}
	private string _TaskTypeName;

	partial void OnTaskTypeNameChanging(string newValue);
	partial void OnTaskTypeNameChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public Nullable<int> Sort 
	{ 
		get
		{
			return _Sort;
		}
		set
		{
			if(_Sort != value)
			{
				OnSortChanging(value);
				_Sort = value;
				OnSortChanged();
			}
		}
	}
	private Nullable<int> _Sort;

	partial void OnSortChanging(Nullable<int> newValue);
	partial void OnSortChanged();

    public virtual ICollection<OPLM> OPLMs { get; set; }
    public virtual ICollection<OTASK> OTASKs { get; set; }
}

[Serializable]
public partial class OTYPE : ObjectWithState
{

    public int CustTypeID 
	{ 
		get
		{
			return _CustTypeID;
		}
		set
		{
			if(_CustTypeID != value)
			{
				OnCustTypeIDChanging(value);
				_CustTypeID = value;
				OnCustTypeIDChanged();
			}
		}
	}
	private int _CustTypeID;

	partial void OnCustTypeIDChanging(int newValue);
	partial void OnCustTypeIDChanged();

    public int Sequence 
	{ 
		get
		{
			return _Sequence;
		}
		set
		{
			if(_Sequence != value)
			{
				OnSequenceChanging(value);
				_Sequence = value;
				OnSequenceChanged();
			}
		}
	}
	private int _Sequence;

	partial void OnSequenceChanging(int newValue);
	partial void OnSequenceChanged();

    public string CustTypeName 
	{ 
		get
		{
			return _CustTypeName;
		}
		set
		{
			if(_CustTypeName != value)
			{
				OnCustTypeNameChanging(value);
				_CustTypeName = value;
				OnCustTypeNameChanged();
			}
		}
	}
	private string _CustTypeName;

	partial void OnCustTypeNameChanging(string newValue);
	partial void OnCustTypeNameChanged();
}

[Serializable]
public partial class OUNT : ObjectWithState
{
    public OUNT() 
    { 
        this.ITM1 = new HashSet<ITM1>();
        this.MID1 = new HashSet<MID1>();
        this.MIT1 = new HashSet<MIT1>();
        this.SCM4 = new HashSet<SCM4>();
        this.VND1 = new HashSet<VND1>();
        this.NRT1 = new HashSet<NRT1>();
        this.NTF1 = new HashSet<NTF1>();
        this.IPL1 = new HashSet<IPL1>();
        this.RET1 = new HashSet<RET1>();
        this.RDR1 = new HashSet<RDR1>();
        this.ITM3 = new HashSet<ITM3>();
        this.BOM1 = new HashSet<BOM1>();
        this.ITM4 = new HashSet<ITM4>();
        this.OBOMs = new HashSet<OBOM>();
        this.POS1 = new HashSet<POS1>();
    }


    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public string UnitName 
	{ 
		get
		{
			return _UnitName;
		}
		set
		{
			if(_UnitName != value)
			{
				OnUnitNameChanging(value);
				_UnitName = value;
				OnUnitNameChanged();
			}
		}
	}
	private string _UnitName;

	partial void OnUnitNameChanging(string newValue);
	partial void OnUnitNameChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string UnitCode 
	{ 
		get
		{
			return _UnitCode;
		}
		set
		{
			if(_UnitCode != value)
			{
				OnUnitCodeChanging(value);
				_UnitCode = value;
				OnUnitCodeChanged();
			}
		}
	}
	private string _UnitCode;

	partial void OnUnitCodeChanging(string newValue);
	partial void OnUnitCodeChanged();

    public virtual ICollection<ITM1> ITM1 { get; set; }
    public virtual ICollection<MID1> MID1 { get; set; }
    public virtual ICollection<MIT1> MIT1 { get; set; }
    public virtual ICollection<SCM4> SCM4 { get; set; }
    public virtual ICollection<VND1> VND1 { get; set; }
    public virtual ICollection<NRT1> NRT1 { get; set; }
    public virtual ICollection<NTF1> NTF1 { get; set; }
    public virtual ICollection<IPL1> IPL1 { get; set; }
    public virtual ICollection<RET1> RET1 { get; set; }
    public virtual ICollection<RDR1> RDR1 { get; set; }
    public virtual ICollection<ITM3> ITM3 { get; set; }
    public virtual ICollection<BOM1> BOM1 { get; set; }
    public virtual ICollection<ITM4> ITM4 { get; set; }
    public virtual ICollection<OBOM> OBOMs { get; set; }
    public virtual ICollection<POS1> POS1 { get; set; }
}

[Serializable]
public partial class OURL : ObjectWithState
{

    public int URLID 
	{ 
		get
		{
			return _URLID;
		}
		set
		{
			if(_URLID != value)
			{
				OnURLIDChanging(value);
				_URLID = value;
				OnURLIDChanged();
			}
		}
	}
	private int _URLID;

	partial void OnURLIDChanging(int newValue);
	partial void OnURLIDChanged();

    public string Name 
	{ 
		get
		{
			return _Name;
		}
		set
		{
			if(_Name != value)
			{
				OnNameChanging(value);
				_Name = value;
				OnNameChanged();
			}
		}
	}
	private string _Name;

	partial void OnNameChanging(string newValue);
	partial void OnNameChanged();

    public string ShortURL 
	{ 
		get
		{
			return _ShortURL;
		}
		set
		{
			if(_ShortURL != value)
			{
				OnShortURLChanging(value);
				_ShortURL = value;
				OnShortURLChanged();
			}
		}
	}
	private string _ShortURL;

	partial void OnShortURLChanging(string newValue);
	partial void OnShortURLChanged();

    public string LongURL 
	{ 
		get
		{
			return _LongURL;
		}
		set
		{
			if(_LongURL != value)
			{
				OnLongURLChanging(value);
				_LongURL = value;
				OnLongURLChanged();
			}
		}
	}
	private string _LongURL;

	partial void OnLongURLChanging(string newValue);
	partial void OnLongURLChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();
}

[Serializable]
public partial class OVCL : ObjectWithState
{
    public OVCL() 
    { 
        this.OMIDs = new HashSet<OMID>();
        this.OPOS = new HashSet<OPOS>();
        this.ORDRs = new HashSet<ORDR>();
        this.ORUTs = new HashSet<ORUT>();
    }


    public int VehicleID 
	{ 
		get
		{
			return _VehicleID;
		}
		set
		{
			if(_VehicleID != value)
			{
				OnVehicleIDChanging(value);
				_VehicleID = value;
				OnVehicleIDChanged();
			}
		}
	}
	private int _VehicleID;

	partial void OnVehicleIDChanging(int newValue);
	partial void OnVehicleIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string VehicleNumber 
	{ 
		get
		{
			return _VehicleNumber;
		}
		set
		{
			if(_VehicleNumber != value)
			{
				OnVehicleNumberChanging(value);
				_VehicleNumber = value;
				OnVehicleNumberChanged();
			}
		}
	}
	private string _VehicleNumber;

	partial void OnVehicleNumberChanging(string newValue);
	partial void OnVehicleNumberChanged();

    public string VehiclePhoto 
	{ 
		get
		{
			return _VehiclePhoto;
		}
		set
		{
			if(_VehiclePhoto != value)
			{
				OnVehiclePhotoChanging(value);
				_VehiclePhoto = value;
				OnVehiclePhotoChanged();
			}
		}
	}
	private string _VehiclePhoto;

	partial void OnVehiclePhotoChanging(string newValue);
	partial void OnVehiclePhotoChanged();

    public string VehicleType 
	{ 
		get
		{
			return _VehicleType;
		}
		set
		{
			if(_VehicleType != value)
			{
				OnVehicleTypeChanging(value);
				_VehicleType = value;
				OnVehicleTypeChanged();
			}
		}
	}
	private string _VehicleType;

	partial void OnVehicleTypeChanging(string newValue);
	partial void OnVehicleTypeChanged();

    public string WheelType 
	{ 
		get
		{
			return _WheelType;
		}
		set
		{
			if(_WheelType != value)
			{
				OnWheelTypeChanging(value);
				_WheelType = value;
				OnWheelTypeChanged();
			}
		}
	}
	private string _WheelType;

	partial void OnWheelTypeChanging(string newValue);
	partial void OnWheelTypeChanged();

    public string FuelType 
	{ 
		get
		{
			return _FuelType;
		}
		set
		{
			if(_FuelType != value)
			{
				OnFuelTypeChanging(value);
				_FuelType = value;
				OnFuelTypeChanged();
			}
		}
	}
	private string _FuelType;

	partial void OnFuelTypeChanging(string newValue);
	partial void OnFuelTypeChanged();

    public int YearOfModel 
	{ 
		get
		{
			return _YearOfModel;
		}
		set
		{
			if(_YearOfModel != value)
			{
				OnYearOfModelChanging(value);
				_YearOfModel = value;
				OnYearOfModelChanged();
			}
		}
	}
	private int _YearOfModel;

	partial void OnYearOfModelChanging(int newValue);
	partial void OnYearOfModelChanged();

    public System.DateTime DateOfPaint 
	{ 
		get
		{
			return _DateOfPaint;
		}
		set
		{
			if(_DateOfPaint != value)
			{
				OnDateOfPaintChanging(value);
				_DateOfPaint = value;
				OnDateOfPaintChanged();
			}
		}
	}
	private System.DateTime _DateOfPaint;

	partial void OnDateOfPaintChanging(System.DateTime newValue);
	partial void OnDateOfPaintChanged();

    public Nullable<decimal> Average 
	{ 
		get
		{
			return _Average;
		}
		set
		{
			if(_Average != value)
			{
				OnAverageChanging(value);
				_Average = value;
				OnAverageChanged();
			}
		}
	}
	private Nullable<decimal> _Average;

	partial void OnAverageChanging(Nullable<decimal> newValue);
	partial void OnAverageChanged();

    public Nullable<decimal> Length 
	{ 
		get
		{
			return _Length;
		}
		set
		{
			if(_Length != value)
			{
				OnLengthChanging(value);
				_Length = value;
				OnLengthChanged();
			}
		}
	}
	private Nullable<decimal> _Length;

	partial void OnLengthChanging(Nullable<decimal> newValue);
	partial void OnLengthChanged();

    public Nullable<decimal> Breadth 
	{ 
		get
		{
			return _Breadth;
		}
		set
		{
			if(_Breadth != value)
			{
				OnBreadthChanging(value);
				_Breadth = value;
				OnBreadthChanged();
			}
		}
	}
	private Nullable<decimal> _Breadth;

	partial void OnBreadthChanging(Nullable<decimal> newValue);
	partial void OnBreadthChanged();

    public Nullable<decimal> Height 
	{ 
		get
		{
			return _Height;
		}
		set
		{
			if(_Height != value)
			{
				OnHeightChanging(value);
				_Height = value;
				OnHeightChanged();
			}
		}
	}
	private Nullable<decimal> _Height;

	partial void OnHeightChanging(Nullable<decimal> newValue);
	partial void OnHeightChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsFree 
	{ 
		get
		{
			return _IsFree;
		}
		set
		{
			if(_IsFree != value)
			{
				OnIsFreeChanging(value);
				_IsFree = value;
				OnIsFreeChanged();
			}
		}
	}
	private bool _IsFree;

	partial void OnIsFreeChanging(bool newValue);
	partial void OnIsFreeChanged();

    public string ModelName 
	{ 
		get
		{
			return _ModelName;
		}
		set
		{
			if(_ModelName != value)
			{
				OnModelNameChanging(value);
				_ModelName = value;
				OnModelNameChanged();
			}
		}
	}
	private string _ModelName;

	partial void OnModelNameChanging(string newValue);
	partial void OnModelNameChanged();

    public string Manufacturer 
	{ 
		get
		{
			return _Manufacturer;
		}
		set
		{
			if(_Manufacturer != value)
			{
				OnManufacturerChanging(value);
				_Manufacturer = value;
				OnManufacturerChanged();
			}
		}
	}
	private string _Manufacturer;

	partial void OnManufacturerChanging(string newValue);
	partial void OnManufacturerChanged();

    public Nullable<System.DateTime> PurchaseDate 
	{ 
		get
		{
			return _PurchaseDate;
		}
		set
		{
			if(_PurchaseDate != value)
			{
				OnPurchaseDateChanging(value);
				_PurchaseDate = value;
				OnPurchaseDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _PurchaseDate;

	partial void OnPurchaseDateChanging(Nullable<System.DateTime> newValue);
	partial void OnPurchaseDateChanged();

    public Nullable<System.DateTime> SalesDate 
	{ 
		get
		{
			return _SalesDate;
		}
		set
		{
			if(_SalesDate != value)
			{
				OnSalesDateChanging(value);
				_SalesDate = value;
				OnSalesDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _SalesDate;

	partial void OnSalesDateChanging(Nullable<System.DateTime> newValue);
	partial void OnSalesDateChanged();

    public virtual ICollection<OMID> OMIDs { get; set; }
    public virtual ICollection<OPOS> OPOS { get; set; }
    public virtual ICollection<ORDR> ORDRs { get; set; }
    public virtual ICollection<ORUT> ORUTs { get; set; }
}

[Serializable]
public partial class OVND : ObjectWithState
{
    public OVND() 
    { 
        this.VND1 = new HashSet<VND1>();
    }


    public int VendorID 
	{ 
		get
		{
			return _VendorID;
		}
		set
		{
			if(_VendorID != value)
			{
				OnVendorIDChanging(value);
				_VendorID = value;
				OnVendorIDChanged();
			}
		}
	}
	private int _VendorID;

	partial void OnVendorIDChanging(int newValue);
	partial void OnVendorIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string VendorCode 
	{ 
		get
		{
			return _VendorCode;
		}
		set
		{
			if(_VendorCode != value)
			{
				OnVendorCodeChanging(value);
				_VendorCode = value;
				OnVendorCodeChanged();
			}
		}
	}
	private string _VendorCode;

	partial void OnVendorCodeChanging(string newValue);
	partial void OnVendorCodeChanged();

    public string VendorName 
	{ 
		get
		{
			return _VendorName;
		}
		set
		{
			if(_VendorName != value)
			{
				OnVendorNameChanging(value);
				_VendorName = value;
				OnVendorNameChanged();
			}
		}
	}
	private string _VendorName;

	partial void OnVendorNameChanging(string newValue);
	partial void OnVendorNameChanged();

    public string Address1 
	{ 
		get
		{
			return _Address1;
		}
		set
		{
			if(_Address1 != value)
			{
				OnAddress1Changing(value);
				_Address1 = value;
				OnAddress1Changed();
			}
		}
	}
	private string _Address1;

	partial void OnAddress1Changing(string newValue);
	partial void OnAddress1Changed();

    public string Address2 
	{ 
		get
		{
			return _Address2;
		}
		set
		{
			if(_Address2 != value)
			{
				OnAddress2Changing(value);
				_Address2 = value;
				OnAddress2Changed();
			}
		}
	}
	private string _Address2;

	partial void OnAddress2Changing(string newValue);
	partial void OnAddress2Changed();

    public string Location 
	{ 
		get
		{
			return _Location;
		}
		set
		{
			if(_Location != value)
			{
				OnLocationChanging(value);
				_Location = value;
				OnLocationChanged();
			}
		}
	}
	private string _Location;

	partial void OnLocationChanging(string newValue);
	partial void OnLocationChanged();

    public int CountryID 
	{ 
		get
		{
			return _CountryID;
		}
		set
		{
			if(_CountryID != value)
			{
				OnCountryIDChanging(value);
				_CountryID = value;
				OnCountryIDChanged();
			}
		}
	}
	private int _CountryID;

	partial void OnCountryIDChanging(int newValue);
	partial void OnCountryIDChanged();

    public int StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private int _StateID;

	partial void OnStateIDChanging(int newValue);
	partial void OnStateIDChanged();

    public int CityID 
	{ 
		get
		{
			return _CityID;
		}
		set
		{
			if(_CityID != value)
			{
				OnCityIDChanging(value);
				_CityID = value;
				OnCityIDChanged();
			}
		}
	}
	private int _CityID;

	partial void OnCityIDChanging(int newValue);
	partial void OnCityIDChanged();

    public string PinCode 
	{ 
		get
		{
			return _PinCode;
		}
		set
		{
			if(_PinCode != value)
			{
				OnPinCodeChanging(value);
				_PinCode = value;
				OnPinCodeChanged();
			}
		}
	}
	private string _PinCode;

	partial void OnPinCodeChanging(string newValue);
	partial void OnPinCodeChanged();

    public string ContactPerson 
	{ 
		get
		{
			return _ContactPerson;
		}
		set
		{
			if(_ContactPerson != value)
			{
				OnContactPersonChanging(value);
				_ContactPerson = value;
				OnContactPersonChanged();
			}
		}
	}
	private string _ContactPerson;

	partial void OnContactPersonChanging(string newValue);
	partial void OnContactPersonChanged();

    public string Phone1 
	{ 
		get
		{
			return _Phone1;
		}
		set
		{
			if(_Phone1 != value)
			{
				OnPhone1Changing(value);
				_Phone1 = value;
				OnPhone1Changed();
			}
		}
	}
	private string _Phone1;

	partial void OnPhone1Changing(string newValue);
	partial void OnPhone1Changed();

    public string Phone2 
	{ 
		get
		{
			return _Phone2;
		}
		set
		{
			if(_Phone2 != value)
			{
				OnPhone2Changing(value);
				_Phone2 = value;
				OnPhone2Changed();
			}
		}
	}
	private string _Phone2;

	partial void OnPhone2Changing(string newValue);
	partial void OnPhone2Changed();

    public string Email 
	{ 
		get
		{
			return _Email;
		}
		set
		{
			if(_Email != value)
			{
				OnEmailChanging(value);
				_Email = value;
				OnEmailChanged();
			}
		}
	}
	private string _Email;

	partial void OnEmailChanging(string newValue);
	partial void OnEmailChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsDefault 
	{ 
		get
		{
			return _IsDefault;
		}
		set
		{
			if(_IsDefault != value)
			{
				OnIsDefaultChanging(value);
				_IsDefault = value;
				OnIsDefaultChanged();
			}
		}
	}
	private bool _IsDefault;

	partial void OnIsDefaultChanging(bool newValue);
	partial void OnIsDefaultChanged();

    public virtual OCRY OCRY { get; set; }
    public virtual OCST OCST { get; set; }
    public virtual OCTY OCTY { get; set; }
    public virtual ICollection<VND1> VND1 { get; set; }
}

[Serializable]
public partial class OVR : ObjectWithState
{

    public int VRSExID 
	{ 
		get
		{
			return _VRSExID;
		}
		set
		{
			if(_VRSExID != value)
			{
				OnVRSExIDChanging(value);
				_VRSExID = value;
				OnVRSExIDChanged();
			}
		}
	}
	private int _VRSExID;

	partial void OnVRSExIDChanging(int newValue);
	partial void OnVRSExIDChanged();

    public int ExID 
	{ 
		get
		{
			return _ExID;
		}
		set
		{
			if(_ExID != value)
			{
				OnExIDChanging(value);
				_ExID = value;
				OnExIDChanged();
			}
		}
	}
	private int _ExID;

	partial void OnExIDChanging(int newValue);
	partial void OnExIDChanged();

    public string VType 
	{ 
		get
		{
			return _VType;
		}
		set
		{
			if(_VType != value)
			{
				OnVTypeChanging(value);
				_VType = value;
				OnVTypeChanged();
			}
		}
	}
	private string _VType;

	partial void OnVTypeChanging(string newValue);
	partial void OnVTypeChanged();
}

[Serializable]
public partial class OVREMP : ObjectWithState
{

    public int VRSOrderEmpMapID 
	{ 
		get
		{
			return _VRSOrderEmpMapID;
		}
		set
		{
			if(_VRSOrderEmpMapID != value)
			{
				OnVRSOrderEmpMapIDChanging(value);
				_VRSOrderEmpMapID = value;
				OnVRSOrderEmpMapIDChanged();
			}
		}
	}
	private int _VRSOrderEmpMapID;

	partial void OnVRSOrderEmpMapIDChanging(int newValue);
	partial void OnVRSOrderEmpMapIDChanged();

    public int VRSOrderEmpID 
	{ 
		get
		{
			return _VRSOrderEmpID;
		}
		set
		{
			if(_VRSOrderEmpID != value)
			{
				OnVRSOrderEmpIDChanging(value);
				_VRSOrderEmpID = value;
				OnVRSOrderEmpIDChanged();
			}
		}
	}
	private int _VRSOrderEmpID;

	partial void OnVRSOrderEmpIDChanging(int newValue);
	partial void OnVRSOrderEmpIDChanged();
}

[Serializable]
public partial class OWH : ObjectWithState
{
    public OWH() 
    { 
        this.ITM2 = new HashSet<ITM2>();
        this.OMIDs = new HashSet<OMID>();
        this.OMIDs1 = new HashSet<OMID>();
        this.OMITs = new HashSet<OMIT>();
        this.ORETs = new HashSet<ORET>();
    }


    public int WhsID 
	{ 
		get
		{
			return _WhsID;
		}
		set
		{
			if(_WhsID != value)
			{
				OnWhsIDChanging(value);
				_WhsID = value;
				OnWhsIDChanged();
			}
		}
	}
	private int _WhsID;

	partial void OnWhsIDChanging(int newValue);
	partial void OnWhsIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string WhsName 
	{ 
		get
		{
			return _WhsName;
		}
		set
		{
			if(_WhsName != value)
			{
				OnWhsNameChanging(value);
				_WhsName = value;
				OnWhsNameChanged();
			}
		}
	}
	private string _WhsName;

	partial void OnWhsNameChanging(string newValue);
	partial void OnWhsNameChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public Nullable<decimal> Length 
	{ 
		get
		{
			return _Length;
		}
		set
		{
			if(_Length != value)
			{
				OnLengthChanging(value);
				_Length = value;
				OnLengthChanged();
			}
		}
	}
	private Nullable<decimal> _Length;

	partial void OnLengthChanging(Nullable<decimal> newValue);
	partial void OnLengthChanged();

    public Nullable<decimal> Height 
	{ 
		get
		{
			return _Height;
		}
		set
		{
			if(_Height != value)
			{
				OnHeightChanging(value);
				_Height = value;
				OnHeightChanged();
			}
		}
	}
	private Nullable<decimal> _Height;

	partial void OnHeightChanging(Nullable<decimal> newValue);
	partial void OnHeightChanged();

    public Nullable<decimal> Width 
	{ 
		get
		{
			return _Width;
		}
		set
		{
			if(_Width != value)
			{
				OnWidthChanging(value);
				_Width = value;
				OnWidthChanged();
			}
		}
	}
	private Nullable<decimal> _Width;

	partial void OnWidthChanging(Nullable<decimal> newValue);
	partial void OnWidthChanged();

    public Nullable<decimal> NetArea 
	{ 
		get
		{
			return _NetArea;
		}
		set
		{
			if(_NetArea != value)
			{
				OnNetAreaChanging(value);
				_NetArea = value;
				OnNetAreaChanged();
			}
		}
	}
	private Nullable<decimal> _NetArea;

	partial void OnNetAreaChanging(Nullable<decimal> newValue);
	partial void OnNetAreaChanged();

    public Nullable<decimal> GrossArea 
	{ 
		get
		{
			return _GrossArea;
		}
		set
		{
			if(_GrossArea != value)
			{
				OnGrossAreaChanging(value);
				_GrossArea = value;
				OnGrossAreaChanged();
			}
		}
	}
	private Nullable<decimal> _GrossArea;

	partial void OnGrossAreaChanging(Nullable<decimal> newValue);
	partial void OnGrossAreaChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public bool RCCType 
	{ 
		get
		{
			return _RCCType;
		}
		set
		{
			if(_RCCType != value)
			{
				OnRCCTypeChanging(value);
				_RCCType = value;
				OnRCCTypeChanged();
			}
		}
	}
	private bool _RCCType;

	partial void OnRCCTypeChanging(bool newValue);
	partial void OnRCCTypeChanged();

    public bool ROOFType 
	{ 
		get
		{
			return _ROOFType;
		}
		set
		{
			if(_ROOFType != value)
			{
				OnROOFTypeChanging(value);
				_ROOFType = value;
				OnROOFTypeChanged();
			}
		}
	}
	private bool _ROOFType;

	partial void OnROOFTypeChanging(bool newValue);
	partial void OnROOFTypeChanged();

    public string OwnerShip 
	{ 
		get
		{
			return _OwnerShip;
		}
		set
		{
			if(_OwnerShip != value)
			{
				OnOwnerShipChanging(value);
				_OwnerShip = value;
				OnOwnerShipChanged();
			}
		}
	}
	private string _OwnerShip;

	partial void OnOwnerShipChanging(string newValue);
	partial void OnOwnerShipChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool IsDefault 
	{ 
		get
		{
			return _IsDefault;
		}
		set
		{
			if(_IsDefault != value)
			{
				OnIsDefaultChanging(value);
				_IsDefault = value;
				OnIsDefaultChanged();
			}
		}
	}
	private bool _IsDefault;

	partial void OnIsDefaultChanging(bool newValue);
	partial void OnIsDefaultChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public string WhsCode 
	{ 
		get
		{
			return _WhsCode;
		}
		set
		{
			if(_WhsCode != value)
			{
				OnWhsCodeChanging(value);
				_WhsCode = value;
				OnWhsCodeChanged();
			}
		}
	}
	private string _WhsCode;

	partial void OnWhsCodeChanging(string newValue);
	partial void OnWhsCodeChanged();

    public string Block 
	{ 
		get
		{
			return _Block;
		}
		set
		{
			if(_Block != value)
			{
				OnBlockChanging(value);
				_Block = value;
				OnBlockChanged();
			}
		}
	}
	private string _Block;

	partial void OnBlockChanging(string newValue);
	partial void OnBlockChanged();

    public string Street 
	{ 
		get
		{
			return _Street;
		}
		set
		{
			if(_Street != value)
			{
				OnStreetChanging(value);
				_Street = value;
				OnStreetChanged();
			}
		}
	}
	private string _Street;

	partial void OnStreetChanging(string newValue);
	partial void OnStreetChanged();

    public string Location 
	{ 
		get
		{
			return _Location;
		}
		set
		{
			if(_Location != value)
			{
				OnLocationChanging(value);
				_Location = value;
				OnLocationChanged();
			}
		}
	}
	private string _Location;

	partial void OnLocationChanging(string newValue);
	partial void OnLocationChanged();

    public string ZipCode 
	{ 
		get
		{
			return _ZipCode;
		}
		set
		{
			if(_ZipCode != value)
			{
				OnZipCodeChanging(value);
				_ZipCode = value;
				OnZipCodeChanged();
			}
		}
	}
	private string _ZipCode;

	partial void OnZipCodeChanging(string newValue);
	partial void OnZipCodeChanged();

    public Nullable<int> CityID 
	{ 
		get
		{
			return _CityID;
		}
		set
		{
			if(_CityID != value)
			{
				OnCityIDChanging(value);
				_CityID = value;
				OnCityIDChanged();
			}
		}
	}
	private Nullable<int> _CityID;

	partial void OnCityIDChanging(Nullable<int> newValue);
	partial void OnCityIDChanged();

    public Nullable<int> StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private Nullable<int> _StateID;

	partial void OnStateIDChanging(Nullable<int> newValue);
	partial void OnStateIDChanged();

    public Nullable<int> CountryID 
	{ 
		get
		{
			return _CountryID;
		}
		set
		{
			if(_CountryID != value)
			{
				OnCountryIDChanging(value);
				_CountryID = value;
				OnCountryIDChanged();
			}
		}
	}
	private Nullable<int> _CountryID;

	partial void OnCountryIDChanging(Nullable<int> newValue);
	partial void OnCountryIDChanged();

    public string ContactPerson 
	{ 
		get
		{
			return _ContactPerson;
		}
		set
		{
			if(_ContactPerson != value)
			{
				OnContactPersonChanging(value);
				_ContactPerson = value;
				OnContactPersonChanged();
			}
		}
	}
	private string _ContactPerson;

	partial void OnContactPersonChanging(string newValue);
	partial void OnContactPersonChanged();

    public string Phone 
	{ 
		get
		{
			return _Phone;
		}
		set
		{
			if(_Phone != value)
			{
				OnPhoneChanging(value);
				_Phone = value;
				OnPhoneChanged();
			}
		}
	}
	private string _Phone;

	partial void OnPhoneChanging(string newValue);
	partial void OnPhoneChanged();

    public string Mobile 
	{ 
		get
		{
			return _Mobile;
		}
		set
		{
			if(_Mobile != value)
			{
				OnMobileChanging(value);
				_Mobile = value;
				OnMobileChanged();
			}
		}
	}
	private string _Mobile;

	partial void OnMobileChanging(string newValue);
	partial void OnMobileChanged();

    public virtual ICollection<ITM2> ITM2 { get; set; }
    public virtual ICollection<OMID> OMIDs { get; set; }
    public virtual ICollection<OMID> OMIDs1 { get; set; }
    public virtual ICollection<OMIT> OMITs { get; set; }
    public virtual OCRY OCRY { get; set; }
    public virtual OCST OCST { get; set; }
    public virtual OCTY OCTY { get; set; }
    public virtual ICollection<ORET> ORETs { get; set; }
}

[Serializable]
public partial class OWHMGT : ObjectWithState
{

    public int OWHMGTID 
	{ 
		get
		{
			return _OWHMGTID;
		}
		set
		{
			if(_OWHMGTID != value)
			{
				OnOWHMGTIDChanging(value);
				_OWHMGTID = value;
				OnOWHMGTIDChanged();
			}
		}
	}
	private int _OWHMGTID;

	partial void OnOWHMGTIDChanging(int newValue);
	partial void OnOWHMGTIDChanged();

    public Nullable<int> EmpId 
	{ 
		get
		{
			return _EmpId;
		}
		set
		{
			if(_EmpId != value)
			{
				OnEmpIdChanging(value);
				_EmpId = value;
				OnEmpIdChanged();
			}
		}
	}
	private Nullable<int> _EmpId;

	partial void OnEmpIdChanging(Nullable<int> newValue);
	partial void OnEmpIdChanged();

    public decimal DistId 
	{ 
		get
		{
			return _DistId;
		}
		set
		{
			if(_DistId != value)
			{
				OnDistIdChanging(value);
				_DistId = value;
				OnDistIdChanged();
			}
		}
	}
	private decimal _DistId;

	partial void OnDistIdChanging(decimal newValue);
	partial void OnDistIdChanged();
}

[Serializable]
public partial class OWPM : ObjectWithState
{
    public OWPM() 
    { 
        this.WPM1 = new HashSet<WPM1>();
    }


    public int OWPMID 
	{ 
		get
		{
			return _OWPMID;
		}
		set
		{
			if(_OWPMID != value)
			{
				OnOWPMIDChanging(value);
				_OWPMID = value;
				OnOWPMIDChanged();
			}
		}
	}
	private int _OWPMID;

	partial void OnOWPMIDChanging(int newValue);
	partial void OnOWPMIDChanged();

    public Nullable<decimal> ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private Nullable<decimal> _ParentID;

	partial void OnParentIDChanging(Nullable<decimal> newValue);
	partial void OnParentIDChanged();

    public string MessageType 
	{ 
		get
		{
			return _MessageType;
		}
		set
		{
			if(_MessageType != value)
			{
				OnMessageTypeChanging(value);
				_MessageType = value;
				OnMessageTypeChanged();
			}
		}
	}
	private string _MessageType;

	partial void OnMessageTypeChanging(string newValue);
	partial void OnMessageTypeChanged();

    public Nullable<System.DateTime> FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _FromDate;

	partial void OnFromDateChanging(Nullable<System.DateTime> newValue);
	partial void OnFromDateChanged();

    public Nullable<System.DateTime> ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ToDate;

	partial void OnToDateChanging(Nullable<System.DateTime> newValue);
	partial void OnToDateChanged();

    public string MessageFor 
	{ 
		get
		{
			return _MessageFor;
		}
		set
		{
			if(_MessageFor != value)
			{
				OnMessageForChanging(value);
				_MessageFor = value;
				OnMessageForChanged();
			}
		}
	}
	private string _MessageFor;

	partial void OnMessageForChanging(string newValue);
	partial void OnMessageForChanged();

    public string MessagePeriod 
	{ 
		get
		{
			return _MessagePeriod;
		}
		set
		{
			if(_MessagePeriod != value)
			{
				OnMessagePeriodChanging(value);
				_MessagePeriod = value;
				OnMessagePeriodChanged();
			}
		}
	}
	private string _MessagePeriod;

	partial void OnMessagePeriodChanging(string newValue);
	partial void OnMessagePeriodChanged();

    public string MessageTo 
	{ 
		get
		{
			return _MessageTo;
		}
		set
		{
			if(_MessageTo != value)
			{
				OnMessageToChanging(value);
				_MessageTo = value;
				OnMessageToChanged();
			}
		}
	}
	private string _MessageTo;

	partial void OnMessageToChanging(string newValue);
	partial void OnMessageToChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public Nullable<System.DateTime> LastRunDate 
	{ 
		get
		{
			return _LastRunDate;
		}
		set
		{
			if(_LastRunDate != value)
			{
				OnLastRunDateChanging(value);
				_LastRunDate = value;
				OnLastRunDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _LastRunDate;

	partial void OnLastRunDateChanging(Nullable<System.DateTime> newValue);
	partial void OnLastRunDateChanged();

    public string ImageUpload 
	{ 
		get
		{
			return _ImageUpload;
		}
		set
		{
			if(_ImageUpload != value)
			{
				OnImageUploadChanging(value);
				_ImageUpload = value;
				OnImageUploadChanged();
			}
		}
	}
	private string _ImageUpload;

	partial void OnImageUploadChanging(string newValue);
	partial void OnImageUploadChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdateBy 
	{ 
		get
		{
			return _UpdateBy;
		}
		set
		{
			if(_UpdateBy != value)
			{
				OnUpdateByChanging(value);
				_UpdateBy = value;
				OnUpdateByChanged();
			}
		}
	}
	private Nullable<int> _UpdateBy;

	partial void OnUpdateByChanging(Nullable<int> newValue);
	partial void OnUpdateByChanged();

    public Nullable<System.DateTime> UpdateDate 
	{ 
		get
		{
			return _UpdateDate;
		}
		set
		{
			if(_UpdateDate != value)
			{
				OnUpdateDateChanging(value);
				_UpdateDate = value;
				OnUpdateDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdateDate;

	partial void OnUpdateDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdateDateChanged();

    public Nullable<decimal> MobileNo 
	{ 
		get
		{
			return _MobileNo;
		}
		set
		{
			if(_MobileNo != value)
			{
				OnMobileNoChanging(value);
				_MobileNo = value;
				OnMobileNoChanged();
			}
		}
	}
	private Nullable<decimal> _MobileNo;

	partial void OnMobileNoChanging(Nullable<decimal> newValue);
	partial void OnMobileNoChanged();

    public virtual ICollection<WPM1> WPM1 { get; set; }
}

[Serializable]
public partial class PCAT1 : ObjectWithState
{

    public int Cat1ID 
	{ 
		get
		{
			return _Cat1ID;
		}
		set
		{
			if(_Cat1ID != value)
			{
				OnCat1IDChanging(value);
				_Cat1ID = value;
				OnCat1IDChanged();
			}
		}
	}
	private int _Cat1ID;

	partial void OnCat1IDChanging(int newValue);
	partial void OnCat1IDChanged();

    public int CataLogID 
	{ 
		get
		{
			return _CataLogID;
		}
		set
		{
			if(_CataLogID != value)
			{
				OnCataLogIDChanging(value);
				_CataLogID = value;
				OnCataLogIDChanged();
			}
		}
	}
	private int _CataLogID;

	partial void OnCataLogIDChanging(int newValue);
	partial void OnCataLogIDChanged();

    public Nullable<int> DealerRegionID 
	{ 
		get
		{
			return _DealerRegionID;
		}
		set
		{
			if(_DealerRegionID != value)
			{
				OnDealerRegionIDChanging(value);
				_DealerRegionID = value;
				OnDealerRegionIDChanged();
			}
		}
	}
	private Nullable<int> _DealerRegionID;

	partial void OnDealerRegionIDChanging(Nullable<int> newValue);
	partial void OnDealerRegionIDChanged();

    public Nullable<int> DistRegionID 
	{ 
		get
		{
			return _DistRegionID;
		}
		set
		{
			if(_DistRegionID != value)
			{
				OnDistRegionIDChanging(value);
				_DistRegionID = value;
				OnDistRegionIDChanged();
			}
		}
	}
	private Nullable<int> _DistRegionID;

	partial void OnDistRegionIDChanging(Nullable<int> newValue);
	partial void OnDistRegionIDChanged();

    public Nullable<int> DivisionID 
	{ 
		get
		{
			return _DivisionID;
		}
		set
		{
			if(_DivisionID != value)
			{
				OnDivisionIDChanging(value);
				_DivisionID = value;
				OnDivisionIDChanged();
			}
		}
	}
	private Nullable<int> _DivisionID;

	partial void OnDivisionIDChanging(Nullable<int> newValue);
	partial void OnDivisionIDChanged();

    public Nullable<int> EmpCatID 
	{ 
		get
		{
			return _EmpCatID;
		}
		set
		{
			if(_EmpCatID != value)
			{
				OnEmpCatIDChanging(value);
				_EmpCatID = value;
				OnEmpCatIDChanged();
			}
		}
	}
	private Nullable<int> _EmpCatID;

	partial void OnEmpCatIDChanging(Nullable<int> newValue);
	partial void OnEmpCatIDChanged();

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public Nullable<bool> IsInclude 
	{ 
		get
		{
			return _IsInclude;
		}
		set
		{
			if(_IsInclude != value)
			{
				OnIsIncludeChanging(value);
				_IsInclude = value;
				OnIsIncludeChanged();
			}
		}
	}
	private Nullable<bool> _IsInclude;

	partial void OnIsIncludeChanging(Nullable<bool> newValue);
	partial void OnIsIncludeChanged();

    public virtual OPCAT OPCAT { get; set; }
}

[Serializable]
public partial class PCAT2 : ObjectWithState
{

    public int Cat2ID 
	{ 
		get
		{
			return _Cat2ID;
		}
		set
		{
			if(_Cat2ID != value)
			{
				OnCat2IDChanging(value);
				_Cat2ID = value;
				OnCat2IDChanged();
			}
		}
	}
	private int _Cat2ID;

	partial void OnCat2IDChanging(int newValue);
	partial void OnCat2IDChanged();

    public int CataLogID 
	{ 
		get
		{
			return _CataLogID;
		}
		set
		{
			if(_CataLogID != value)
			{
				OnCataLogIDChanging(value);
				_CataLogID = value;
				OnCataLogIDChanged();
			}
		}
	}
	private int _CataLogID;

	partial void OnCataLogIDChanging(int newValue);
	partial void OnCataLogIDChanged();

    public Nullable<int> ImageID 
	{ 
		get
		{
			return _ImageID;
		}
		set
		{
			if(_ImageID != value)
			{
				OnImageIDChanging(value);
				_ImageID = value;
				OnImageIDChanged();
			}
		}
	}
	private Nullable<int> _ImageID;

	partial void OnImageIDChanging(Nullable<int> newValue);
	partial void OnImageIDChanged();

    public string ImagePath 
	{ 
		get
		{
			return _ImagePath;
		}
		set
		{
			if(_ImagePath != value)
			{
				OnImagePathChanging(value);
				_ImagePath = value;
				OnImagePathChanged();
			}
		}
	}
	private string _ImagePath;

	partial void OnImagePathChanging(string newValue);
	partial void OnImagePathChanged();

    public virtual OPCAT OPCAT { get; set; }
}

[Serializable]
public partial class PLT1 : ObjectWithState
{

    public int PLT1ID 
	{ 
		get
		{
			return _PLT1ID;
		}
		set
		{
			if(_PLT1ID != value)
			{
				OnPLT1IDChanging(value);
				_PLT1ID = value;
				OnPLT1IDChanged();
			}
		}
	}
	private int _PLT1ID;

	partial void OnPLT1IDChanging(int newValue);
	partial void OnPLT1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private int _PlantID;

	partial void OnPlantIDChanging(int newValue);
	partial void OnPlantIDChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();
}

[Serializable]
public partial class POS1 : ObjectWithState
{

    public int POS1ID 
	{ 
		get
		{
			return _POS1ID;
		}
		set
		{
			if(_POS1ID != value)
			{
				OnPOS1IDChanging(value);
				_POS1ID = value;
				OnPOS1IDChanged();
			}
		}
	}
	private int _POS1ID;

	partial void OnPOS1IDChanging(int newValue);
	partial void OnPOS1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int MainID 
	{ 
		get
		{
			return _MainID;
		}
		set
		{
			if(_MainID != value)
			{
				OnMainIDChanging(value);
				_MainID = value;
				OnMainIDChanged();
			}
		}
	}
	private int _MainID;

	partial void OnMainIDChanging(int newValue);
	partial void OnMainIDChanged();

    public int SaleID 
	{ 
		get
		{
			return _SaleID;
		}
		set
		{
			if(_SaleID != value)
			{
				OnSaleIDChanging(value);
				_SaleID = value;
				OnSaleIDChanged();
			}
		}
	}
	private int _SaleID;

	partial void OnSaleIDChanging(int newValue);
	partial void OnSaleIDChanged();

    public Nullable<int> FoodTypeID 
	{ 
		get
		{
			return _FoodTypeID;
		}
		set
		{
			if(_FoodTypeID != value)
			{
				OnFoodTypeIDChanging(value);
				_FoodTypeID = value;
				OnFoodTypeIDChanged();
			}
		}
	}
	private Nullable<int> _FoodTypeID;

	partial void OnFoodTypeIDChanging(Nullable<int> newValue);
	partial void OnFoodTypeIDChanged();

    public bool IsParcel 
	{ 
		get
		{
			return _IsParcel;
		}
		set
		{
			if(_IsParcel != value)
			{
				OnIsParcelChanging(value);
				_IsParcel = value;
				OnIsParcelChanged();
			}
		}
	}
	private bool _IsParcel;

	partial void OnIsParcelChanging(bool newValue);
	partial void OnIsParcelChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public int Duration 
	{ 
		get
		{
			return _Duration;
		}
		set
		{
			if(_Duration != value)
			{
				OnDurationChanging(value);
				_Duration = value;
				OnDurationChanged();
			}
		}
	}
	private int _Duration;

	partial void OnDurationChanging(int newValue);
	partial void OnDurationChanged();

    public Nullable<int> SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private Nullable<int> _SchemeID;

	partial void OnSchemeIDChanging(Nullable<int> newValue);
	partial void OnSchemeIDChanged();

    public Nullable<int> HandleEmpID 
	{ 
		get
		{
			return _HandleEmpID;
		}
		set
		{
			if(_HandleEmpID != value)
			{
				OnHandleEmpIDChanging(value);
				_HandleEmpID = value;
				OnHandleEmpIDChanged();
			}
		}
	}
	private Nullable<int> _HandleEmpID;

	partial void OnHandleEmpIDChanging(Nullable<int> newValue);
	partial void OnHandleEmpIDChanged();

    public decimal Quantity 
	{ 
		get
		{
			return _Quantity;
		}
		set
		{
			if(_Quantity != value)
			{
				OnQuantityChanging(value);
				_Quantity = value;
				OnQuantityChanged();
			}
		}
	}
	private decimal _Quantity;

	partial void OnQuantityChanging(decimal newValue);
	partial void OnQuantityChanged();

    public decimal DispatchQty 
	{ 
		get
		{
			return _DispatchQty;
		}
		set
		{
			if(_DispatchQty != value)
			{
				OnDispatchQtyChanging(value);
				_DispatchQty = value;
				OnDispatchQtyChanged();
			}
		}
	}
	private decimal _DispatchQty;

	partial void OnDispatchQtyChanging(decimal newValue);
	partial void OnDispatchQtyChanged();

    public decimal TotalQty 
	{ 
		get
		{
			return _TotalQty;
		}
		set
		{
			if(_TotalQty != value)
			{
				OnTotalQtyChanging(value);
				_TotalQty = value;
				OnTotalQtyChanged();
			}
		}
	}
	private decimal _TotalQty;

	partial void OnTotalQtyChanging(decimal newValue);
	partial void OnTotalQtyChanged();

    public decimal UnitPrice 
	{ 
		get
		{
			return _UnitPrice;
		}
		set
		{
			if(_UnitPrice != value)
			{
				OnUnitPriceChanging(value);
				_UnitPrice = value;
				OnUnitPriceChanged();
			}
		}
	}
	private decimal _UnitPrice;

	partial void OnUnitPriceChanging(decimal newValue);
	partial void OnUnitPriceChanged();

    public decimal PriceTax 
	{ 
		get
		{
			return _PriceTax;
		}
		set
		{
			if(_PriceTax != value)
			{
				OnPriceTaxChanging(value);
				_PriceTax = value;
				OnPriceTaxChanged();
			}
		}
	}
	private decimal _PriceTax;

	partial void OnPriceTaxChanging(decimal newValue);
	partial void OnPriceTaxChanged();

    public decimal SubTotal 
	{ 
		get
		{
			return _SubTotal;
		}
		set
		{
			if(_SubTotal != value)
			{
				OnSubTotalChanging(value);
				_SubTotal = value;
				OnSubTotalChanged();
			}
		}
	}
	private decimal _SubTotal;

	partial void OnSubTotalChanging(decimal newValue);
	partial void OnSubTotalChanged();

    public decimal MapQty 
	{ 
		get
		{
			return _MapQty;
		}
		set
		{
			if(_MapQty != value)
			{
				OnMapQtyChanging(value);
				_MapQty = value;
				OnMapQtyChanged();
			}
		}
	}
	private decimal _MapQty;

	partial void OnMapQtyChanging(decimal newValue);
	partial void OnMapQtyChanged();

    public decimal Tax 
	{ 
		get
		{
			return _Tax;
		}
		set
		{
			if(_Tax != value)
			{
				OnTaxChanging(value);
				_Tax = value;
				OnTaxChanged();
			}
		}
	}
	private decimal _Tax;

	partial void OnTaxChanging(decimal newValue);
	partial void OnTaxChanged();

    public decimal Discount 
	{ 
		get
		{
			return _Discount;
		}
		set
		{
			if(_Discount != value)
			{
				OnDiscountChanging(value);
				_Discount = value;
				OnDiscountChanged();
			}
		}
	}
	private decimal _Discount;

	partial void OnDiscountChanging(decimal newValue);
	partial void OnDiscountChanged();

    public decimal Price 
	{ 
		get
		{
			return _Price;
		}
		set
		{
			if(_Price != value)
			{
				OnPriceChanging(value);
				_Price = value;
				OnPriceChanged();
			}
		}
	}
	private decimal _Price;

	partial void OnPriceChanging(decimal newValue);
	partial void OnPriceChanged();

    public decimal Total 
	{ 
		get
		{
			return _Total;
		}
		set
		{
			if(_Total != value)
			{
				OnTotalChanging(value);
				_Total = value;
				OnTotalChanged();
			}
		}
	}
	private decimal _Total;

	partial void OnTotalChanging(decimal newValue);
	partial void OnTotalChanged();

    public bool AddOn 
	{ 
		get
		{
			return _AddOn;
		}
		set
		{
			if(_AddOn != value)
			{
				OnAddOnChanging(value);
				_AddOn = value;
				OnAddOnChanged();
			}
		}
	}
	private bool _AddOn;

	partial void OnAddOnChanging(bool newValue);
	partial void OnAddOnChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<int> TaxID 
	{ 
		get
		{
			return _TaxID;
		}
		set
		{
			if(_TaxID != value)
			{
				OnTaxIDChanging(value);
				_TaxID = value;
				OnTaxIDChanged();
			}
		}
	}
	private Nullable<int> _TaxID;

	partial void OnTaxIDChanging(Nullable<int> newValue);
	partial void OnTaxIDChanged();

    public decimal Scheme 
	{ 
		get
		{
			return _Scheme;
		}
		set
		{
			if(_Scheme != value)
			{
				OnSchemeChanging(value);
				_Scheme = value;
				OnSchemeChanged();
			}
		}
	}
	private decimal _Scheme;

	partial void OnSchemeChanging(decimal newValue);
	partial void OnSchemeChanged();

    public decimal ItemScheme 
	{ 
		get
		{
			return _ItemScheme;
		}
		set
		{
			if(_ItemScheme != value)
			{
				OnItemSchemeChanging(value);
				_ItemScheme = value;
				OnItemSchemeChanged();
			}
		}
	}
	private decimal _ItemScheme;

	partial void OnItemSchemeChanging(decimal newValue);
	partial void OnItemSchemeChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public decimal MRP 
	{ 
		get
		{
			return _MRP;
		}
		set
		{
			if(_MRP != value)
			{
				OnMRPChanging(value);
				_MRP = value;
				OnMRPChanged();
			}
		}
	}
	private decimal _MRP;

	partial void OnMRPChanging(decimal newValue);
	partial void OnMRPChanged();

    public Nullable<decimal> PPrice 
	{ 
		get
		{
			return _PPrice;
		}
		set
		{
			if(_PPrice != value)
			{
				OnPPriceChanging(value);
				_PPrice = value;
				OnPPriceChanged();
			}
		}
	}
	private Nullable<decimal> _PPrice;

	partial void OnPPriceChanging(Nullable<decimal> newValue);
	partial void OnPPriceChanged();

    public Nullable<decimal> NormalPrice 
	{ 
		get
		{
			return _NormalPrice;
		}
		set
		{
			if(_NormalPrice != value)
			{
				OnNormalPriceChanging(value);
				_NormalPrice = value;
				OnNormalPriceChanged();
			}
		}
	}
	private Nullable<decimal> _NormalPrice;

	partial void OnNormalPriceChanging(Nullable<decimal> newValue);
	partial void OnNormalPriceChanged();

    public virtual OEMP OEMP { get; set; }
    public virtual OFTP OFTP { get; set; }
    public virtual OITM OITM { get; set; }
    public virtual OPOS OPOS { get; set; }
    public virtual OSCM OSCM { get; set; }
    public virtual OUNT OUNT { get; set; }
}

[Serializable]
public partial class POS2 : ObjectWithState
{

    public int POS2ID 
	{ 
		get
		{
			return _POS2ID;
		}
		set
		{
			if(_POS2ID != value)
			{
				OnPOS2IDChanging(value);
				_POS2ID = value;
				OnPOS2IDChanged();
			}
		}
	}
	private int _POS2ID;

	partial void OnPOS2IDChanging(int newValue);
	partial void OnPOS2IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public System.DateTime Date 
	{ 
		get
		{
			return _Date;
		}
		set
		{
			if(_Date != value)
			{
				OnDateChanging(value);
				_Date = value;
				OnDateChanged();
			}
		}
	}
	private System.DateTime _Date;

	partial void OnDateChanging(System.DateTime newValue);
	partial void OnDateChanged();

    public int SaleID 
	{ 
		get
		{
			return _SaleID;
		}
		set
		{
			if(_SaleID != value)
			{
				OnSaleIDChanging(value);
				_SaleID = value;
				OnSaleIDChanged();
			}
		}
	}
	private int _SaleID;

	partial void OnSaleIDChanging(int newValue);
	partial void OnSaleIDChanged();

    public Nullable<int> PaymentMode 
	{ 
		get
		{
			return _PaymentMode;
		}
		set
		{
			if(_PaymentMode != value)
			{
				OnPaymentModeChanging(value);
				_PaymentMode = value;
				OnPaymentModeChanged();
			}
		}
	}
	private Nullable<int> _PaymentMode;

	partial void OnPaymentModeChanging(Nullable<int> newValue);
	partial void OnPaymentModeChanged();

    public string DocName 
	{ 
		get
		{
			return _DocName;
		}
		set
		{
			if(_DocName != value)
			{
				OnDocNameChanging(value);
				_DocName = value;
				OnDocNameChanged();
			}
		}
	}
	private string _DocName;

	partial void OnDocNameChanging(string newValue);
	partial void OnDocNameChanged();

    public string DocNo 
	{ 
		get
		{
			return _DocNo;
		}
		set
		{
			if(_DocNo != value)
			{
				OnDocNoChanging(value);
				_DocNo = value;
				OnDocNoChanged();
			}
		}
	}
	private string _DocNo;

	partial void OnDocNoChanging(string newValue);
	partial void OnDocNoChanged();

    public decimal Amount 
	{ 
		get
		{
			return _Amount;
		}
		set
		{
			if(_Amount != value)
			{
				OnAmountChanging(value);
				_Amount = value;
				OnAmountChanged();
			}
		}
	}
	private decimal _Amount;

	partial void OnAmountChanging(decimal newValue);
	partial void OnAmountChanged();

    public string Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private string _Status;

	partial void OnStatusChanging(string newValue);
	partial void OnStatusChanged();

    public Nullable<System.DateTime> DepositDate 
	{ 
		get
		{
			return _DepositDate;
		}
		set
		{
			if(_DepositDate != value)
			{
				OnDepositDateChanging(value);
				_DepositDate = value;
				OnDepositDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _DepositDate;

	partial void OnDepositDateChanging(Nullable<System.DateTime> newValue);
	partial void OnDepositDateChanged();

    public Nullable<System.DateTime> ReconcileDate 
	{ 
		get
		{
			return _ReconcileDate;
		}
		set
		{
			if(_ReconcileDate != value)
			{
				OnReconcileDateChanging(value);
				_ReconcileDate = value;
				OnReconcileDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ReconcileDate;

	partial void OnReconcileDateChanging(Nullable<System.DateTime> newValue);
	partial void OnReconcileDateChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public string Attachment 
	{ 
		get
		{
			return _Attachment;
		}
		set
		{
			if(_Attachment != value)
			{
				OnAttachmentChanging(value);
				_Attachment = value;
				OnAttachmentChanged();
			}
		}
	}
	private string _Attachment;

	partial void OnAttachmentChanging(string newValue);
	partial void OnAttachmentChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<int> PaymentID 
	{ 
		get
		{
			return _PaymentID;
		}
		set
		{
			if(_PaymentID != value)
			{
				OnPaymentIDChanging(value);
				_PaymentID = value;
				OnPaymentIDChanged();
			}
		}
	}
	private Nullable<int> _PaymentID;

	partial void OnPaymentIDChanging(Nullable<int> newValue);
	partial void OnPaymentIDChanged();

    public virtual OPOS OPOS { get; set; }
    public virtual OPYM OPYM { get; set; }
}

[Serializable]
public partial class POS3 : ObjectWithState
{

    public int POS3ID 
	{ 
		get
		{
			return _POS3ID;
		}
		set
		{
			if(_POS3ID != value)
			{
				OnPOS3IDChanging(value);
				_POS3ID = value;
				OnPOS3IDChanged();
			}
		}
	}
	private int _POS3ID;

	partial void OnPOS3IDChanging(int newValue);
	partial void OnPOS3IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int SaleID 
	{ 
		get
		{
			return _SaleID;
		}
		set
		{
			if(_SaleID != value)
			{
				OnSaleIDChanging(value);
				_SaleID = value;
				OnSaleIDChanged();
			}
		}
	}
	private int _SaleID;

	partial void OnSaleIDChanging(int newValue);
	partial void OnSaleIDChanged();

    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();

    public string Mode 
	{ 
		get
		{
			return _Mode;
		}
		set
		{
			if(_Mode != value)
			{
				OnModeChanging(value);
				_Mode = value;
				OnModeChanged();
			}
		}
	}
	private string _Mode;

	partial void OnModeChanging(string newValue);
	partial void OnModeChanged();

    public decimal AvailCouponAmount 
	{ 
		get
		{
			return _AvailCouponAmount;
		}
		set
		{
			if(_AvailCouponAmount != value)
			{
				OnAvailCouponAmountChanging(value);
				_AvailCouponAmount = value;
				OnAvailCouponAmountChanged();
			}
		}
	}
	private decimal _AvailCouponAmount;

	partial void OnAvailCouponAmountChanging(decimal newValue);
	partial void OnAvailCouponAmountChanged();

    public decimal Amount 
	{ 
		get
		{
			return _Amount;
		}
		set
		{
			if(_Amount != value)
			{
				OnAmountChanging(value);
				_Amount = value;
				OnAmountChanged();
			}
		}
	}
	private decimal _Amount;

	partial void OnAmountChanging(decimal newValue);
	partial void OnAmountChanged();

    public bool EffectOnBill 
	{ 
		get
		{
			return _EffectOnBill;
		}
		set
		{
			if(_EffectOnBill != value)
			{
				OnEffectOnBillChanging(value);
				_EffectOnBill = value;
				OnEffectOnBillChanged();
			}
		}
	}
	private bool _EffectOnBill;

	partial void OnEffectOnBillChanging(bool newValue);
	partial void OnEffectOnBillChanged();

    public string ContraTax 
	{ 
		get
		{
			return _ContraTax;
		}
		set
		{
			if(_ContraTax != value)
			{
				OnContraTaxChanging(value);
				_ContraTax = value;
				OnContraTaxChanged();
			}
		}
	}
	private string _ContraTax;

	partial void OnContraTaxChanging(string newValue);
	partial void OnContraTaxChanged();

    public Nullable<int> ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private Nullable<int> _ItemID;

	partial void OnItemIDChanging(Nullable<int> newValue);
	partial void OnItemIDChanged();

    public Nullable<decimal> SaleAmount 
	{ 
		get
		{
			return _SaleAmount;
		}
		set
		{
			if(_SaleAmount != value)
			{
				OnSaleAmountChanging(value);
				_SaleAmount = value;
				OnSaleAmountChanged();
			}
		}
	}
	private Nullable<decimal> _SaleAmount;

	partial void OnSaleAmountChanging(Nullable<decimal> newValue);
	partial void OnSaleAmountChanged();

    public Nullable<int> BasedOn 
	{ 
		get
		{
			return _BasedOn;
		}
		set
		{
			if(_BasedOn != value)
			{
				OnBasedOnChanging(value);
				_BasedOn = value;
				OnBasedOnChanged();
			}
		}
	}
	private Nullable<int> _BasedOn;

	partial void OnBasedOnChanging(Nullable<int> newValue);
	partial void OnBasedOnChanged();

    public Nullable<int> AssetID 
	{ 
		get
		{
			return _AssetID;
		}
		set
		{
			if(_AssetID != value)
			{
				OnAssetIDChanging(value);
				_AssetID = value;
				OnAssetIDChanged();
			}
		}
	}
	private Nullable<int> _AssetID;

	partial void OnAssetIDChanging(Nullable<int> newValue);
	partial void OnAssetIDChanged();

    public Nullable<decimal> RateForScheme 
	{ 
		get
		{
			return _RateForScheme;
		}
		set
		{
			if(_RateForScheme != value)
			{
				OnRateForSchemeChanging(value);
				_RateForScheme = value;
				OnRateForSchemeChanged();
			}
		}
	}
	private Nullable<decimal> _RateForScheme;

	partial void OnRateForSchemeChanging(Nullable<decimal> newValue);
	partial void OnRateForSchemeChanged();

    public virtual OPOS OPOS { get; set; }
    public virtual OSCM OSCM { get; set; }
}

[Serializable]
public partial class POS4 : ObjectWithState
{

    public int POS4Id 
	{ 
		get
		{
			return _POS4Id;
		}
		set
		{
			if(_POS4Id != value)
			{
				OnPOS4IdChanging(value);
				_POS4Id = value;
				OnPOS4IdChanged();
			}
		}
	}
	private int _POS4Id;

	partial void OnPOS4IdChanging(int newValue);
	partial void OnPOS4IdChanged();

    public Nullable<decimal> ParentId 
	{ 
		get
		{
			return _ParentId;
		}
		set
		{
			if(_ParentId != value)
			{
				OnParentIdChanging(value);
				_ParentId = value;
				OnParentIdChanged();
			}
		}
	}
	private Nullable<decimal> _ParentId;

	partial void OnParentIdChanging(Nullable<decimal> newValue);
	partial void OnParentIdChanged();

    public Nullable<int> SaleId 
	{ 
		get
		{
			return _SaleId;
		}
		set
		{
			if(_SaleId != value)
			{
				OnSaleIdChanging(value);
				_SaleId = value;
				OnSaleIdChanged();
			}
		}
	}
	private Nullable<int> _SaleId;

	partial void OnSaleIdChanging(Nullable<int> newValue);
	partial void OnSaleIdChanged();

    public string AckNo 
	{ 
		get
		{
			return _AckNo;
		}
		set
		{
			if(_AckNo != value)
			{
				OnAckNoChanging(value);
				_AckNo = value;
				OnAckNoChanged();
			}
		}
	}
	private string _AckNo;

	partial void OnAckNoChanging(string newValue);
	partial void OnAckNoChanged();

    public Nullable<System.DateTime> AckDate 
	{ 
		get
		{
			return _AckDate;
		}
		set
		{
			if(_AckDate != value)
			{
				OnAckDateChanging(value);
				_AckDate = value;
				OnAckDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _AckDate;

	partial void OnAckDateChanging(Nullable<System.DateTime> newValue);
	partial void OnAckDateChanged();

    public string IRN 
	{ 
		get
		{
			return _IRN;
		}
		set
		{
			if(_IRN != value)
			{
				OnIRNChanging(value);
				_IRN = value;
				OnIRNChanged();
			}
		}
	}
	private string _IRN;

	partial void OnIRNChanging(string newValue);
	partial void OnIRNChanged();

    public string SignedInvoice 
	{ 
		get
		{
			return _SignedInvoice;
		}
		set
		{
			if(_SignedInvoice != value)
			{
				OnSignedInvoiceChanging(value);
				_SignedInvoice = value;
				OnSignedInvoiceChanged();
			}
		}
	}
	private string _SignedInvoice;

	partial void OnSignedInvoiceChanging(string newValue);
	partial void OnSignedInvoiceChanged();

    public string SignedQRCode 
	{ 
		get
		{
			return _SignedQRCode;
		}
		set
		{
			if(_SignedQRCode != value)
			{
				OnSignedQRCodeChanging(value);
				_SignedQRCode = value;
				OnSignedQRCodeChanged();
			}
		}
	}
	private string _SignedQRCode;

	partial void OnSignedQRCodeChanging(string newValue);
	partial void OnSignedQRCodeChanged();

    public string JWRIssuer 
	{ 
		get
		{
			return _JWRIssuer;
		}
		set
		{
			if(_JWRIssuer != value)
			{
				OnJWRIssuerChanging(value);
				_JWRIssuer = value;
				OnJWRIssuerChanged();
			}
		}
	}
	private string _JWRIssuer;

	partial void OnJWRIssuerChanging(string newValue);
	partial void OnJWRIssuerChanged();

    public string ErrorDetails 
	{ 
		get
		{
			return _ErrorDetails;
		}
		set
		{
			if(_ErrorDetails != value)
			{
				OnErrorDetailsChanging(value);
				_ErrorDetails = value;
				OnErrorDetailsChanged();
			}
		}
	}
	private string _ErrorDetails;

	partial void OnErrorDetailsChanging(string newValue);
	partial void OnErrorDetailsChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private Nullable<int> _Status;

	partial void OnStatusChanging(Nullable<int> newValue);
	partial void OnStatusChanged();
}

[Serializable]
public partial class PSP1 : ObjectWithState
{

    public int PSP1ID 
	{ 
		get
		{
			return _PSP1ID;
		}
		set
		{
			if(_PSP1ID != value)
			{
				OnPSP1IDChanging(value);
				_PSP1ID = value;
				OnPSP1IDChanged();
			}
		}
	}
	private int _PSP1ID;

	partial void OnPSP1IDChanging(int newValue);
	partial void OnPSP1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int OPSPID 
	{ 
		get
		{
			return _OPSPID;
		}
		set
		{
			if(_OPSPID != value)
			{
				OnOPSPIDChanging(value);
				_OPSPID = value;
				OnOPSPIDChanged();
			}
		}
	}
	private int _OPSPID;

	partial void OnOPSPIDChanging(int newValue);
	partial void OnOPSPIDChanged();

    public int SpecialItemID 
	{ 
		get
		{
			return _SpecialItemID;
		}
		set
		{
			if(_SpecialItemID != value)
			{
				OnSpecialItemIDChanging(value);
				_SpecialItemID = value;
				OnSpecialItemIDChanged();
			}
		}
	}
	private int _SpecialItemID;

	partial void OnSpecialItemIDChanging(int newValue);
	partial void OnSpecialItemIDChanged();

    public virtual OPSP OPSP { get; set; }
}

[Serializable]
public partial class PSP2 : ObjectWithState
{

    public int PSP2ID 
	{ 
		get
		{
			return _PSP2ID;
		}
		set
		{
			if(_PSP2ID != value)
			{
				OnPSP2IDChanging(value);
				_PSP2ID = value;
				OnPSP2IDChanged();
			}
		}
	}
	private int _PSP2ID;

	partial void OnPSP2IDChanging(int newValue);
	partial void OnPSP2IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int OPSPID 
	{ 
		get
		{
			return _OPSPID;
		}
		set
		{
			if(_OPSPID != value)
			{
				OnOPSPIDChanging(value);
				_OPSPID = value;
				OnOPSPIDChanged();
			}
		}
	}
	private int _OPSPID;

	partial void OnOPSPIDChanging(int newValue);
	partial void OnOPSPIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public virtual OPSP OPSP { get; set; }
}

[Serializable]
public partial class PSP3 : ObjectWithState
{

    public int PSP3ID 
	{ 
		get
		{
			return _PSP3ID;
		}
		set
		{
			if(_PSP3ID != value)
			{
				OnPSP3IDChanging(value);
				_PSP3ID = value;
				OnPSP3IDChanged();
			}
		}
	}
	private int _PSP3ID;

	partial void OnPSP3IDChanging(int newValue);
	partial void OnPSP3IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int OPSPID 
	{ 
		get
		{
			return _OPSPID;
		}
		set
		{
			if(_OPSPID != value)
			{
				OnOPSPIDChanging(value);
				_OPSPID = value;
				OnOPSPIDChanged();
			}
		}
	}
	private int _OPSPID;

	partial void OnOPSPIDChanging(int newValue);
	partial void OnOPSPIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public virtual OPSP OPSP { get; set; }
}

[Serializable]
public partial class QUES1 : ObjectWithState
{

    public int QUES1ID 
	{ 
		get
		{
			return _QUES1ID;
		}
		set
		{
			if(_QUES1ID != value)
			{
				OnQUES1IDChanging(value);
				_QUES1ID = value;
				OnQUES1IDChanged();
			}
		}
	}
	private int _QUES1ID;

	partial void OnQUES1IDChanging(int newValue);
	partial void OnQUES1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int QuesID 
	{ 
		get
		{
			return _QuesID;
		}
		set
		{
			if(_QuesID != value)
			{
				OnQuesIDChanging(value);
				_QuesID = value;
				OnQuesIDChanged();
			}
		}
	}
	private int _QuesID;

	partial void OnQuesIDChanging(int newValue);
	partial void OnQuesIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public decimal CustID 
	{ 
		get
		{
			return _CustID;
		}
		set
		{
			if(_CustID != value)
			{
				OnCustIDChanging(value);
				_CustID = value;
				OnCustIDChanged();
			}
		}
	}
	private decimal _CustID;

	partial void OnCustIDChanging(decimal newValue);
	partial void OnCustIDChanged();

    public string Answer 
	{ 
		get
		{
			return _Answer;
		}
		set
		{
			if(_Answer != value)
			{
				OnAnswerChanging(value);
				_Answer = value;
				OnAnswerChanged();
			}
		}
	}
	private string _Answer;

	partial void OnAnswerChanging(string newValue);
	partial void OnAnswerChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();

    public Nullable<int> Score 
	{ 
		get
		{
			return _Score;
		}
		set
		{
			if(_Score != value)
			{
				OnScoreChanging(value);
				_Score = value;
				OnScoreChanged();
			}
		}
	}
	private Nullable<int> _Score;

	partial void OnScoreChanging(Nullable<int> newValue);
	partial void OnScoreChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public virtual OQUE OQUE { get; set; }
}

[Serializable]
public partial class RDR1 : ObjectWithState
{

    public int RDR1ID 
	{ 
		get
		{
			return _RDR1ID;
		}
		set
		{
			if(_RDR1ID != value)
			{
				OnRDR1IDChanging(value);
				_RDR1ID = value;
				OnRDR1IDChanged();
			}
		}
	}
	private int _RDR1ID;

	partial void OnRDR1IDChanging(int newValue);
	partial void OnRDR1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int MainID 
	{ 
		get
		{
			return _MainID;
		}
		set
		{
			if(_MainID != value)
			{
				OnMainIDChanging(value);
				_MainID = value;
				OnMainIDChanged();
			}
		}
	}
	private int _MainID;

	partial void OnMainIDChanging(int newValue);
	partial void OnMainIDChanged();

    public int OrderID 
	{ 
		get
		{
			return _OrderID;
		}
		set
		{
			if(_OrderID != value)
			{
				OnOrderIDChanging(value);
				_OrderID = value;
				OnOrderIDChanged();
			}
		}
	}
	private int _OrderID;

	partial void OnOrderIDChanging(int newValue);
	partial void OnOrderIDChanged();

    public Nullable<int> FoodTypeID 
	{ 
		get
		{
			return _FoodTypeID;
		}
		set
		{
			if(_FoodTypeID != value)
			{
				OnFoodTypeIDChanging(value);
				_FoodTypeID = value;
				OnFoodTypeIDChanged();
			}
		}
	}
	private Nullable<int> _FoodTypeID;

	partial void OnFoodTypeIDChanging(Nullable<int> newValue);
	partial void OnFoodTypeIDChanged();

    public bool IsParcel 
	{ 
		get
		{
			return _IsParcel;
		}
		set
		{
			if(_IsParcel != value)
			{
				OnIsParcelChanging(value);
				_IsParcel = value;
				OnIsParcelChanged();
			}
		}
	}
	private bool _IsParcel;

	partial void OnIsParcelChanging(bool newValue);
	partial void OnIsParcelChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public int Duration 
	{ 
		get
		{
			return _Duration;
		}
		set
		{
			if(_Duration != value)
			{
				OnDurationChanging(value);
				_Duration = value;
				OnDurationChanged();
			}
		}
	}
	private int _Duration;

	partial void OnDurationChanging(int newValue);
	partial void OnDurationChanged();

    public Nullable<int> SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private Nullable<int> _SchemeID;

	partial void OnSchemeIDChanging(Nullable<int> newValue);
	partial void OnSchemeIDChanged();

    public Nullable<int> HandleEmpID 
	{ 
		get
		{
			return _HandleEmpID;
		}
		set
		{
			if(_HandleEmpID != value)
			{
				OnHandleEmpIDChanging(value);
				_HandleEmpID = value;
				OnHandleEmpIDChanged();
			}
		}
	}
	private Nullable<int> _HandleEmpID;

	partial void OnHandleEmpIDChanging(Nullable<int> newValue);
	partial void OnHandleEmpIDChanged();

    public decimal Quantity 
	{ 
		get
		{
			return _Quantity;
		}
		set
		{
			if(_Quantity != value)
			{
				OnQuantityChanging(value);
				_Quantity = value;
				OnQuantityChanged();
			}
		}
	}
	private decimal _Quantity;

	partial void OnQuantityChanging(decimal newValue);
	partial void OnQuantityChanged();

    public decimal TotalQty 
	{ 
		get
		{
			return _TotalQty;
		}
		set
		{
			if(_TotalQty != value)
			{
				OnTotalQtyChanging(value);
				_TotalQty = value;
				OnTotalQtyChanged();
			}
		}
	}
	private decimal _TotalQty;

	partial void OnTotalQtyChanging(decimal newValue);
	partial void OnTotalQtyChanged();

    public decimal UnitPrice 
	{ 
		get
		{
			return _UnitPrice;
		}
		set
		{
			if(_UnitPrice != value)
			{
				OnUnitPriceChanging(value);
				_UnitPrice = value;
				OnUnitPriceChanged();
			}
		}
	}
	private decimal _UnitPrice;

	partial void OnUnitPriceChanging(decimal newValue);
	partial void OnUnitPriceChanged();

    public decimal PriceTax 
	{ 
		get
		{
			return _PriceTax;
		}
		set
		{
			if(_PriceTax != value)
			{
				OnPriceTaxChanging(value);
				_PriceTax = value;
				OnPriceTaxChanged();
			}
		}
	}
	private decimal _PriceTax;

	partial void OnPriceTaxChanging(decimal newValue);
	partial void OnPriceTaxChanged();

    public decimal SubTotal 
	{ 
		get
		{
			return _SubTotal;
		}
		set
		{
			if(_SubTotal != value)
			{
				OnSubTotalChanging(value);
				_SubTotal = value;
				OnSubTotalChanged();
			}
		}
	}
	private decimal _SubTotal;

	partial void OnSubTotalChanging(decimal newValue);
	partial void OnSubTotalChanged();

    public decimal MapQty 
	{ 
		get
		{
			return _MapQty;
		}
		set
		{
			if(_MapQty != value)
			{
				OnMapQtyChanging(value);
				_MapQty = value;
				OnMapQtyChanged();
			}
		}
	}
	private decimal _MapQty;

	partial void OnMapQtyChanging(decimal newValue);
	partial void OnMapQtyChanged();

    public decimal Tax 
	{ 
		get
		{
			return _Tax;
		}
		set
		{
			if(_Tax != value)
			{
				OnTaxChanging(value);
				_Tax = value;
				OnTaxChanged();
			}
		}
	}
	private decimal _Tax;

	partial void OnTaxChanging(decimal newValue);
	partial void OnTaxChanged();

    public decimal Discount 
	{ 
		get
		{
			return _Discount;
		}
		set
		{
			if(_Discount != value)
			{
				OnDiscountChanging(value);
				_Discount = value;
				OnDiscountChanged();
			}
		}
	}
	private decimal _Discount;

	partial void OnDiscountChanging(decimal newValue);
	partial void OnDiscountChanged();

    public decimal Price 
	{ 
		get
		{
			return _Price;
		}
		set
		{
			if(_Price != value)
			{
				OnPriceChanging(value);
				_Price = value;
				OnPriceChanged();
			}
		}
	}
	private decimal _Price;

	partial void OnPriceChanging(decimal newValue);
	partial void OnPriceChanged();

    public decimal Total 
	{ 
		get
		{
			return _Total;
		}
		set
		{
			if(_Total != value)
			{
				OnTotalChanging(value);
				_Total = value;
				OnTotalChanged();
			}
		}
	}
	private decimal _Total;

	partial void OnTotalChanging(decimal newValue);
	partial void OnTotalChanged();

    public bool AddOn 
	{ 
		get
		{
			return _AddOn;
		}
		set
		{
			if(_AddOn != value)
			{
				OnAddOnChanging(value);
				_AddOn = value;
				OnAddOnChanged();
			}
		}
	}
	private bool _AddOn;

	partial void OnAddOnChanging(bool newValue);
	partial void OnAddOnChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<int> TaxID 
	{ 
		get
		{
			return _TaxID;
		}
		set
		{
			if(_TaxID != value)
			{
				OnTaxIDChanging(value);
				_TaxID = value;
				OnTaxIDChanged();
			}
		}
	}
	private Nullable<int> _TaxID;

	partial void OnTaxIDChanging(Nullable<int> newValue);
	partial void OnTaxIDChanged();

    public decimal Scheme 
	{ 
		get
		{
			return _Scheme;
		}
		set
		{
			if(_Scheme != value)
			{
				OnSchemeChanging(value);
				_Scheme = value;
				OnSchemeChanged();
			}
		}
	}
	private decimal _Scheme;

	partial void OnSchemeChanging(decimal newValue);
	partial void OnSchemeChanged();

    public decimal ItemScheme 
	{ 
		get
		{
			return _ItemScheme;
		}
		set
		{
			if(_ItemScheme != value)
			{
				OnItemSchemeChanging(value);
				_ItemScheme = value;
				OnItemSchemeChanged();
			}
		}
	}
	private decimal _ItemScheme;

	partial void OnItemSchemeChanging(decimal newValue);
	partial void OnItemSchemeChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public decimal MRP 
	{ 
		get
		{
			return _MRP;
		}
		set
		{
			if(_MRP != value)
			{
				OnMRPChanging(value);
				_MRP = value;
				OnMRPChanged();
			}
		}
	}
	private decimal _MRP;

	partial void OnMRPChanging(decimal newValue);
	partial void OnMRPChanged();

    public Nullable<decimal> PPrice 
	{ 
		get
		{
			return _PPrice;
		}
		set
		{
			if(_PPrice != value)
			{
				OnPPriceChanging(value);
				_PPrice = value;
				OnPPriceChanged();
			}
		}
	}
	private Nullable<decimal> _PPrice;

	partial void OnPPriceChanging(Nullable<decimal> newValue);
	partial void OnPPriceChanged();

    public virtual OEMP OEMP { get; set; }
    public virtual OFTP OFTP { get; set; }
    public virtual OITM OITM { get; set; }
    public virtual ORDR ORDR { get; set; }
    public virtual OSCM OSCM { get; set; }
    public virtual OUNT OUNT { get; set; }
}

[Serializable]
public partial class REINDEX_ER : ObjectWithState
{

    public int reindexid 
	{ 
		get
		{
			return _reindexid;
		}
		set
		{
			if(_reindexid != value)
			{
				OnreindexidChanging(value);
				_reindexid = value;
				OnreindexidChanged();
			}
		}
	}
	private int _reindexid;

	partial void OnreindexidChanging(int newValue);
	partial void OnreindexidChanged();

    public System.DateTime datetime 
	{ 
		get
		{
			return _datetime;
		}
		set
		{
			if(_datetime != value)
			{
				OndatetimeChanging(value);
				_datetime = value;
				OndatetimeChanged();
			}
		}
	}
	private System.DateTime _datetime;

	partial void OndatetimeChanging(System.DateTime newValue);
	partial void OndatetimeChanged();

    public string status 
	{ 
		get
		{
			return _status;
		}
		set
		{
			if(_status != value)
			{
				OnstatusChanging(value);
				_status = value;
				OnstatusChanged();
			}
		}
	}
	private string _status;

	partial void OnstatusChanging(string newValue);
	partial void OnstatusChanged();
}

[Serializable]
public partial class RET1 : ObjectWithState
{

    public int RET1ID 
	{ 
		get
		{
			return _RET1ID;
		}
		set
		{
			if(_RET1ID != value)
			{
				OnRET1IDChanging(value);
				_RET1ID = value;
				OnRET1IDChanged();
			}
		}
	}
	private int _RET1ID;

	partial void OnRET1IDChanging(int newValue);
	partial void OnRET1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int ORETID 
	{ 
		get
		{
			return _ORETID;
		}
		set
		{
			if(_ORETID != value)
			{
				OnORETIDChanging(value);
				_ORETID = value;
				OnORETIDChanged();
			}
		}
	}
	private int _ORETID;

	partial void OnORETIDChanging(int newValue);
	partial void OnORETIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal UnitPrice 
	{ 
		get
		{
			return _UnitPrice;
		}
		set
		{
			if(_UnitPrice != value)
			{
				OnUnitPriceChanging(value);
				_UnitPrice = value;
				OnUnitPriceChanged();
			}
		}
	}
	private decimal _UnitPrice;

	partial void OnUnitPriceChanging(decimal newValue);
	partial void OnUnitPriceChanged();

    public decimal Price 
	{ 
		get
		{
			return _Price;
		}
		set
		{
			if(_Price != value)
			{
				OnPriceChanging(value);
				_Price = value;
				OnPriceChanged();
			}
		}
	}
	private decimal _Price;

	partial void OnPriceChanging(decimal newValue);
	partial void OnPriceChanged();

    public decimal PriceTax 
	{ 
		get
		{
			return _PriceTax;
		}
		set
		{
			if(_PriceTax != value)
			{
				OnPriceTaxChanging(value);
				_PriceTax = value;
				OnPriceTaxChanged();
			}
		}
	}
	private decimal _PriceTax;

	partial void OnPriceTaxChanging(decimal newValue);
	partial void OnPriceTaxChanged();

    public decimal AvailQty 
	{ 
		get
		{
			return _AvailQty;
		}
		set
		{
			if(_AvailQty != value)
			{
				OnAvailQtyChanging(value);
				_AvailQty = value;
				OnAvailQtyChanged();
			}
		}
	}
	private decimal _AvailQty;

	partial void OnAvailQtyChanging(decimal newValue);
	partial void OnAvailQtyChanged();

    public decimal Quantity 
	{ 
		get
		{
			return _Quantity;
		}
		set
		{
			if(_Quantity != value)
			{
				OnQuantityChanging(value);
				_Quantity = value;
				OnQuantityChanged();
			}
		}
	}
	private decimal _Quantity;

	partial void OnQuantityChanging(decimal newValue);
	partial void OnQuantityChanged();

    public decimal TotalQty 
	{ 
		get
		{
			return _TotalQty;
		}
		set
		{
			if(_TotalQty != value)
			{
				OnTotalQtyChanging(value);
				_TotalQty = value;
				OnTotalQtyChanged();
			}
		}
	}
	private decimal _TotalQty;

	partial void OnTotalQtyChanging(decimal newValue);
	partial void OnTotalQtyChanged();

    public decimal MapQty 
	{ 
		get
		{
			return _MapQty;
		}
		set
		{
			if(_MapQty != value)
			{
				OnMapQtyChanging(value);
				_MapQty = value;
				OnMapQtyChanged();
			}
		}
	}
	private decimal _MapQty;

	partial void OnMapQtyChanging(decimal newValue);
	partial void OnMapQtyChanged();

    public decimal Subtotal 
	{ 
		get
		{
			return _Subtotal;
		}
		set
		{
			if(_Subtotal != value)
			{
				OnSubtotalChanging(value);
				_Subtotal = value;
				OnSubtotalChanged();
			}
		}
	}
	private decimal _Subtotal;

	partial void OnSubtotalChanging(decimal newValue);
	partial void OnSubtotalChanged();

    public decimal Tax 
	{ 
		get
		{
			return _Tax;
		}
		set
		{
			if(_Tax != value)
			{
				OnTaxChanging(value);
				_Tax = value;
				OnTaxChanged();
			}
		}
	}
	private decimal _Tax;

	partial void OnTaxChanging(decimal newValue);
	partial void OnTaxChanged();

    public decimal Total 
	{ 
		get
		{
			return _Total;
		}
		set
		{
			if(_Total != value)
			{
				OnTotalChanging(value);
				_Total = value;
				OnTotalChanged();
			}
		}
	}
	private decimal _Total;

	partial void OnTotalChanging(decimal newValue);
	partial void OnTotalChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<int> ReasonID 
	{ 
		get
		{
			return _ReasonID;
		}
		set
		{
			if(_ReasonID != value)
			{
				OnReasonIDChanging(value);
				_ReasonID = value;
				OnReasonIDChanged();
			}
		}
	}
	private Nullable<int> _ReasonID;

	partial void OnReasonIDChanging(Nullable<int> newValue);
	partial void OnReasonIDChanged();

    public string Desc 
	{ 
		get
		{
			return _Desc;
		}
		set
		{
			if(_Desc != value)
			{
				OnDescChanging(value);
				_Desc = value;
				OnDescChanged();
			}
		}
	}
	private string _Desc;

	partial void OnDescChanging(string newValue);
	partial void OnDescChanged();

    public string RANKNO 
	{ 
		get
		{
			return _RANKNO;
		}
		set
		{
			if(_RANKNO != value)
			{
				OnRANKNOChanging(value);
				_RANKNO = value;
				OnRANKNOChanged();
			}
		}
	}
	private string _RANKNO;

	partial void OnRANKNOChanging(string newValue);
	partial void OnRANKNOChanged();

    public Nullable<int> TaxID 
	{ 
		get
		{
			return _TaxID;
		}
		set
		{
			if(_TaxID != value)
			{
				OnTaxIDChanging(value);
				_TaxID = value;
				OnTaxIDChanged();
			}
		}
	}
	private Nullable<int> _TaxID;

	partial void OnTaxIDChanging(Nullable<int> newValue);
	partial void OnTaxIDChanged();

    public Nullable<decimal> ItemScheme 
	{ 
		get
		{
			return _ItemScheme;
		}
		set
		{
			if(_ItemScheme != value)
			{
				OnItemSchemeChanging(value);
				_ItemScheme = value;
				OnItemSchemeChanged();
			}
		}
	}
	private Nullable<decimal> _ItemScheme;

	partial void OnItemSchemeChanging(Nullable<decimal> newValue);
	partial void OnItemSchemeChanged();

    public Nullable<decimal> Scheme 
	{ 
		get
		{
			return _Scheme;
		}
		set
		{
			if(_Scheme != value)
			{
				OnSchemeChanging(value);
				_Scheme = value;
				OnSchemeChanged();
			}
		}
	}
	private Nullable<decimal> _Scheme;

	partial void OnSchemeChanging(Nullable<decimal> newValue);
	partial void OnSchemeChanged();

    public Nullable<int> SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private Nullable<int> _SchemeID;

	partial void OnSchemeIDChanging(Nullable<int> newValue);
	partial void OnSchemeIDChanged();

    public virtual OITM OITM { get; set; }
    public virtual ORET ORET { get; set; }
    public virtual ORSN ORSN { get; set; }
    public virtual OUNT OUNT { get; set; }
}

[Serializable]
public partial class RMNU : ObjectWithState
{
    public RMNU() 
    { 
        this.RMNU1 = new HashSet<RMNU1>();
    }


    public int MenuGroupID 
	{ 
		get
		{
			return _MenuGroupID;
		}
		set
		{
			if(_MenuGroupID != value)
			{
				OnMenuGroupIDChanging(value);
				_MenuGroupID = value;
				OnMenuGroupIDChanged();
			}
		}
	}
	private int _MenuGroupID;

	partial void OnMenuGroupIDChanging(int newValue);
	partial void OnMenuGroupIDChanged();

    public Nullable<int> EmployeeId 
	{ 
		get
		{
			return _EmployeeId;
		}
		set
		{
			if(_EmployeeId != value)
			{
				OnEmployeeIdChanging(value);
				_EmployeeId = value;
				OnEmployeeIdChanged();
			}
		}
	}
	private Nullable<int> _EmployeeId;

	partial void OnEmployeeIdChanging(Nullable<int> newValue);
	partial void OnEmployeeIdChanged();

    public Nullable<int> RegionId 
	{ 
		get
		{
			return _RegionId;
		}
		set
		{
			if(_RegionId != value)
			{
				OnRegionIdChanging(value);
				_RegionId = value;
				OnRegionIdChanged();
			}
		}
	}
	private Nullable<int> _RegionId;

	partial void OnRegionIdChanging(Nullable<int> newValue);
	partial void OnRegionIdChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDateTime 
	{ 
		get
		{
			return _CreatedDateTime;
		}
		set
		{
			if(_CreatedDateTime != value)
			{
				OnCreatedDateTimeChanging(value);
				_CreatedDateTime = value;
				OnCreatedDateTimeChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDateTime;

	partial void OnCreatedDateTimeChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateTimeChanged();

    public Nullable<int> UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private Nullable<int> _UpdatedBy;

	partial void OnUpdatedByChanging(Nullable<int> newValue);
	partial void OnUpdatedByChanged();

    public System.DateTime UpdatedDateTime 
	{ 
		get
		{
			return _UpdatedDateTime;
		}
		set
		{
			if(_UpdatedDateTime != value)
			{
				OnUpdatedDateTimeChanging(value);
				_UpdatedDateTime = value;
				OnUpdatedDateTimeChanged();
			}
		}
	}
	private System.DateTime _UpdatedDateTime;

	partial void OnUpdatedDateTimeChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateTimeChanged();

    public Nullable<decimal> ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private Nullable<decimal> _ParentID;

	partial void OnParentIDChanging(Nullable<decimal> newValue);
	partial void OnParentIDChanged();

    public Nullable<int> EmpGroupId 
	{ 
		get
		{
			return _EmpGroupId;
		}
		set
		{
			if(_EmpGroupId != value)
			{
				OnEmpGroupIdChanging(value);
				_EmpGroupId = value;
				OnEmpGroupIdChanged();
			}
		}
	}
	private Nullable<int> _EmpGroupId;

	partial void OnEmpGroupIdChanging(Nullable<int> newValue);
	partial void OnEmpGroupIdChanged();

    public Nullable<int> CustGroupId 
	{ 
		get
		{
			return _CustGroupId;
		}
		set
		{
			if(_CustGroupId != value)
			{
				OnCustGroupIdChanging(value);
				_CustGroupId = value;
				OnCustGroupIdChanged();
			}
		}
	}
	private Nullable<int> _CustGroupId;

	partial void OnCustGroupIdChanging(Nullable<int> newValue);
	partial void OnCustGroupIdChanged();

    public Nullable<bool> IsActive 
	{ 
		get
		{
			return _IsActive;
		}
		set
		{
			if(_IsActive != value)
			{
				OnIsActiveChanging(value);
				_IsActive = value;
				OnIsActiveChanged();
			}
		}
	}
	private Nullable<bool> _IsActive;

	partial void OnIsActiveChanging(Nullable<bool> newValue);
	partial void OnIsActiveChanged();

    public Nullable<decimal> DistributerId 
	{ 
		get
		{
			return _DistributerId;
		}
		set
		{
			if(_DistributerId != value)
			{
				OnDistributerIdChanging(value);
				_DistributerId = value;
				OnDistributerIdChanged();
			}
		}
	}
	private Nullable<decimal> _DistributerId;

	partial void OnDistributerIdChanging(Nullable<decimal> newValue);
	partial void OnDistributerIdChanged();

    public Nullable<decimal> DealerId 
	{ 
		get
		{
			return _DealerId;
		}
		set
		{
			if(_DealerId != value)
			{
				OnDealerIdChanging(value);
				_DealerId = value;
				OnDealerIdChanged();
			}
		}
	}
	private Nullable<decimal> _DealerId;

	partial void OnDealerIdChanging(Nullable<decimal> newValue);
	partial void OnDealerIdChanged();

    public virtual ICollection<RMNU1> RMNU1 { get; set; }
}

[Serializable]
public partial class RMNU1 : ObjectWithState
{

    public long RMNU1ID 
	{ 
		get
		{
			return _RMNU1ID;
		}
		set
		{
			if(_RMNU1ID != value)
			{
				OnRMNU1IDChanging(value);
				_RMNU1ID = value;
				OnRMNU1IDChanged();
			}
		}
	}
	private long _RMNU1ID;

	partial void OnRMNU1IDChanging(long newValue);
	partial void OnRMNU1IDChanged();

    public int MenuGroupID 
	{ 
		get
		{
			return _MenuGroupID;
		}
		set
		{
			if(_MenuGroupID != value)
			{
				OnMenuGroupIDChanging(value);
				_MenuGroupID = value;
				OnMenuGroupIDChanged();
			}
		}
	}
	private int _MenuGroupID;

	partial void OnMenuGroupIDChanging(int newValue);
	partial void OnMenuGroupIDChanged();

    public int MenuId 
	{ 
		get
		{
			return _MenuId;
		}
		set
		{
			if(_MenuId != value)
			{
				OnMenuIdChanging(value);
				_MenuId = value;
				OnMenuIdChanged();
			}
		}
	}
	private int _MenuId;

	partial void OnMenuIdChanging(int newValue);
	partial void OnMenuIdChanged();

    public int Priority 
	{ 
		get
		{
			return _Priority;
		}
		set
		{
			if(_Priority != value)
			{
				OnPriorityChanging(value);
				_Priority = value;
				OnPriorityChanged();
			}
		}
	}
	private int _Priority;

	partial void OnPriorityChanging(int newValue);
	partial void OnPriorityChanged();

    public int IsWrite 
	{ 
		get
		{
			return _IsWrite;
		}
		set
		{
			if(_IsWrite != value)
			{
				OnIsWriteChanging(value);
				_IsWrite = value;
				OnIsWriteChanged();
			}
		}
	}
	private int _IsWrite;

	partial void OnIsWriteChanging(int newValue);
	partial void OnIsWriteChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public Nullable<decimal> ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private Nullable<decimal> _ParentID;

	partial void OnParentIDChanging(Nullable<decimal> newValue);
	partial void OnParentIDChanged();

    public virtual RMNU RMNU { get; set; }
}

[Serializable]
public partial class RUT1 : ObjectWithState
{

    public int RUT1ID 
	{ 
		get
		{
			return _RUT1ID;
		}
		set
		{
			if(_RUT1ID != value)
			{
				OnRUT1IDChanging(value);
				_RUT1ID = value;
				OnRUT1IDChanged();
			}
		}
	}
	private int _RUT1ID;

	partial void OnRUT1IDChanging(int newValue);
	partial void OnRUT1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int RouteID 
	{ 
		get
		{
			return _RouteID;
		}
		set
		{
			if(_RouteID != value)
			{
				OnRouteIDChanging(value);
				_RouteID = value;
				OnRouteIDChanged();
			}
		}
	}
	private int _RouteID;

	partial void OnRouteIDChanging(int newValue);
	partial void OnRouteIDChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public int BranchID 
	{ 
		get
		{
			return _BranchID;
		}
		set
		{
			if(_BranchID != value)
			{
				OnBranchIDChanging(value);
				_BranchID = value;
				OnBranchIDChanged();
			}
		}
	}
	private int _BranchID;

	partial void OnBranchIDChanging(int newValue);
	partial void OnBranchIDChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public virtual OCRD OCRD { get; set; }
    public virtual CRD1 CRD1 { get; set; }
    public virtual ORUT ORUT { get; set; }
}

[Serializable]
public partial class RUT2 : ObjectWithState
{

    public int OffBitID 
	{ 
		get
		{
			return _OffBitID;
		}
		set
		{
			if(_OffBitID != value)
			{
				OnOffBitIDChanging(value);
				_OffBitID = value;
				OnOffBitIDChanged();
			}
		}
	}
	private int _OffBitID;

	partial void OnOffBitIDChanging(int newValue);
	partial void OnOffBitIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private int _EmpID;

	partial void OnEmpIDChanging(int newValue);
	partial void OnEmpIDChanged();

    public int RouteID 
	{ 
		get
		{
			return _RouteID;
		}
		set
		{
			if(_RouteID != value)
			{
				OnRouteIDChanging(value);
				_RouteID = value;
				OnRouteIDChanged();
			}
		}
	}
	private int _RouteID;

	partial void OnRouteIDChanging(int newValue);
	partial void OnRouteIDChanged();

    public System.DateTime Datetime 
	{ 
		get
		{
			return _Datetime;
		}
		set
		{
			if(_Datetime != value)
			{
				OnDatetimeChanging(value);
				_Datetime = value;
				OnDatetimeChanged();
			}
		}
	}
	private System.DateTime _Datetime;

	partial void OnDatetimeChanging(System.DateTime newValue);
	partial void OnDatetimeChanged();

    public int ManagerID 
	{ 
		get
		{
			return _ManagerID;
		}
		set
		{
			if(_ManagerID != value)
			{
				OnManagerIDChanging(value);
				_ManagerID = value;
				OnManagerIDChanged();
			}
		}
	}
	private int _ManagerID;

	partial void OnManagerIDChanging(int newValue);
	partial void OnManagerIDChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public string CancelBy 
	{ 
		get
		{
			return _CancelBy;
		}
		set
		{
			if(_CancelBy != value)
			{
				OnCancelByChanging(value);
				_CancelBy = value;
				OnCancelByChanged();
			}
		}
	}
	private string _CancelBy;

	partial void OnCancelByChanging(string newValue);
	partial void OnCancelByChanged();

    public Nullable<System.DateTime> AppDate 
	{ 
		get
		{
			return _AppDate;
		}
		set
		{
			if(_AppDate != value)
			{
				OnAppDateChanging(value);
				_AppDate = value;
				OnAppDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _AppDate;

	partial void OnAppDateChanging(Nullable<System.DateTime> newValue);
	partial void OnAppDateChanged();

    public virtual ORUT ORUT { get; set; }
}

[Serializable]
public partial class SCHDL1 : ObjectWithState
{

    public int SCHDL1ID 
	{ 
		get
		{
			return _SCHDL1ID;
		}
		set
		{
			if(_SCHDL1ID != value)
			{
				OnSCHDL1IDChanging(value);
				_SCHDL1ID = value;
				OnSCHDL1IDChanged();
			}
		}
	}
	private int _SCHDL1ID;

	partial void OnSCHDL1IDChanging(int newValue);
	partial void OnSCHDL1IDChanged();

    public int ScheduleID 
	{ 
		get
		{
			return _ScheduleID;
		}
		set
		{
			if(_ScheduleID != value)
			{
				OnScheduleIDChanging(value);
				_ScheduleID = value;
				OnScheduleIDChanged();
			}
		}
	}
	private int _ScheduleID;

	partial void OnScheduleIDChanging(int newValue);
	partial void OnScheduleIDChanged();

    public Nullable<int> EmpGroupID 
	{ 
		get
		{
			return _EmpGroupID;
		}
		set
		{
			if(_EmpGroupID != value)
			{
				OnEmpGroupIDChanging(value);
				_EmpGroupID = value;
				OnEmpGroupIDChanged();
			}
		}
	}
	private Nullable<int> _EmpGroupID;

	partial void OnEmpGroupIDChanging(Nullable<int> newValue);
	partial void OnEmpGroupIDChanged();

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public Nullable<int> RegionID 
	{ 
		get
		{
			return _RegionID;
		}
		set
		{
			if(_RegionID != value)
			{
				OnRegionIDChanging(value);
				_RegionID = value;
				OnRegionIDChanged();
			}
		}
	}
	private Nullable<int> _RegionID;

	partial void OnRegionIDChanging(Nullable<int> newValue);
	partial void OnRegionIDChanged();

    public Nullable<decimal> DistID 
	{ 
		get
		{
			return _DistID;
		}
		set
		{
			if(_DistID != value)
			{
				OnDistIDChanging(value);
				_DistID = value;
				OnDistIDChanged();
			}
		}
	}
	private Nullable<decimal> _DistID;

	partial void OnDistIDChanging(Nullable<decimal> newValue);
	partial void OnDistIDChanged();

    public Nullable<decimal> DealerID 
	{ 
		get
		{
			return _DealerID;
		}
		set
		{
			if(_DealerID != value)
			{
				OnDealerIDChanging(value);
				_DealerID = value;
				OnDealerIDChanged();
			}
		}
	}
	private Nullable<decimal> _DealerID;

	partial void OnDealerIDChanging(Nullable<decimal> newValue);
	partial void OnDealerIDChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool IsInclude 
	{ 
		get
		{
			return _IsInclude;
		}
		set
		{
			if(_IsInclude != value)
			{
				OnIsIncludeChanging(value);
				_IsInclude = value;
				OnIsIncludeChanged();
			}
		}
	}
	private bool _IsInclude;

	partial void OnIsIncludeChanging(bool newValue);
	partial void OnIsIncludeChanged();

    public virtual OSCHDL OSCHDL { get; set; }
}

[Serializable]
public partial class SCM1 : ObjectWithState
{

    public int SCM1ID 
	{ 
		get
		{
			return _SCM1ID;
		}
		set
		{
			if(_SCM1ID != value)
			{
				OnSCM1IDChanging(value);
				_SCM1ID = value;
				OnSCM1IDChanged();
			}
		}
	}
	private int _SCM1ID;

	partial void OnSCM1IDChanging(int newValue);
	partial void OnSCM1IDChanged();

    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();

    public Nullable<int> RegionID 
	{ 
		get
		{
			return _RegionID;
		}
		set
		{
			if(_RegionID != value)
			{
				OnRegionIDChanging(value);
				_RegionID = value;
				OnRegionIDChanged();
			}
		}
	}
	private Nullable<int> _RegionID;

	partial void OnRegionIDChanging(Nullable<int> newValue);
	partial void OnRegionIDChanged();

    public Nullable<int> PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private Nullable<int> _PlantID;

	partial void OnPlantIDChanging(Nullable<int> newValue);
	partial void OnPlantIDChanged();

    public Nullable<decimal> CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerID;

	partial void OnCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnCustomerIDChanged();

    public int Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private int _Type;

	partial void OnTypeChanging(int newValue);
	partial void OnTypeChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public Nullable<decimal> UsedCoupon 
	{ 
		get
		{
			return _UsedCoupon;
		}
		set
		{
			if(_UsedCoupon != value)
			{
				OnUsedCouponChanging(value);
				_UsedCoupon = value;
				OnUsedCouponChanged();
			}
		}
	}
	private Nullable<decimal> _UsedCoupon;

	partial void OnUsedCouponChanging(Nullable<decimal> newValue);
	partial void OnUsedCouponChanged();

    public Nullable<decimal> CouponAmount 
	{ 
		get
		{
			return _CouponAmount;
		}
		set
		{
			if(_CouponAmount != value)
			{
				OnCouponAmountChanging(value);
				_CouponAmount = value;
				OnCouponAmountChanged();
			}
		}
	}
	private Nullable<decimal> _CouponAmount;

	partial void OnCouponAmountChanging(Nullable<decimal> newValue);
	partial void OnCouponAmountChanged();

    public bool IsInclude 
	{ 
		get
		{
			return _IsInclude;
		}
		set
		{
			if(_IsInclude != value)
			{
				OnIsIncludeChanging(value);
				_IsInclude = value;
				OnIsIncludeChanged();
			}
		}
	}
	private bool _IsInclude;

	partial void OnIsIncludeChanging(bool newValue);
	partial void OnIsIncludeChanged();

    public Nullable<int> AssetID 
	{ 
		get
		{
			return _AssetID;
		}
		set
		{
			if(_AssetID != value)
			{
				OnAssetIDChanging(value);
				_AssetID = value;
				OnAssetIDChanged();
			}
		}
	}
	private Nullable<int> _AssetID;

	partial void OnAssetIDChanging(Nullable<int> newValue);
	partial void OnAssetIDChanged();

    public string SAPCREATEDBY 
	{ 
		get
		{
			return _SAPCREATEDBY;
		}
		set
		{
			if(_SAPCREATEDBY != value)
			{
				OnSAPCREATEDBYChanging(value);
				_SAPCREATEDBY = value;
				OnSAPCREATEDBYChanged();
			}
		}
	}
	private string _SAPCREATEDBY;

	partial void OnSAPCREATEDBYChanging(string newValue);
	partial void OnSAPCREATEDBYChanged();

    public Nullable<System.DateTime> SAPCREATEDDATE 
	{ 
		get
		{
			return _SAPCREATEDDATE;
		}
		set
		{
			if(_SAPCREATEDDATE != value)
			{
				OnSAPCREATEDDATEChanging(value);
				_SAPCREATEDDATE = value;
				OnSAPCREATEDDATEChanged();
			}
		}
	}
	private Nullable<System.DateTime> _SAPCREATEDDATE;

	partial void OnSAPCREATEDDATEChanging(Nullable<System.DateTime> newValue);
	partial void OnSAPCREATEDDATEChanged();

    public string SAPCHANGEBY 
	{ 
		get
		{
			return _SAPCHANGEBY;
		}
		set
		{
			if(_SAPCHANGEBY != value)
			{
				OnSAPCHANGEBYChanging(value);
				_SAPCHANGEBY = value;
				OnSAPCHANGEBYChanged();
			}
		}
	}
	private string _SAPCHANGEBY;

	partial void OnSAPCHANGEBYChanging(string newValue);
	partial void OnSAPCHANGEBYChanged();

    public Nullable<System.DateTime> SAPCHANGEDATE 
	{ 
		get
		{
			return _SAPCHANGEDATE;
		}
		set
		{
			if(_SAPCHANGEDATE != value)
			{
				OnSAPCHANGEDATEChanging(value);
				_SAPCHANGEDATE = value;
				OnSAPCHANGEDATEChanged();
			}
		}
	}
	private Nullable<System.DateTime> _SAPCHANGEDATE;

	partial void OnSAPCHANGEDATEChanging(Nullable<System.DateTime> newValue);
	partial void OnSAPCHANGEDATEChanged();

    public string SAPSYNCUSER 
	{ 
		get
		{
			return _SAPSYNCUSER;
		}
		set
		{
			if(_SAPSYNCUSER != value)
			{
				OnSAPSYNCUSERChanging(value);
				_SAPSYNCUSER = value;
				OnSAPSYNCUSERChanged();
			}
		}
	}
	private string _SAPSYNCUSER;

	partial void OnSAPSYNCUSERChanging(string newValue);
	partial void OnSAPSYNCUSERChanged();

    public Nullable<int> CustGroupID 
	{ 
		get
		{
			return _CustGroupID;
		}
		set
		{
			if(_CustGroupID != value)
			{
				OnCustGroupIDChanging(value);
				_CustGroupID = value;
				OnCustGroupIDChanged();
			}
		}
	}
	private Nullable<int> _CustGroupID;

	partial void OnCustGroupIDChanging(Nullable<int> newValue);
	partial void OnCustGroupIDChanged();

    public Nullable<decimal> ParentCode 
	{ 
		get
		{
			return _ParentCode;
		}
		set
		{
			if(_ParentCode != value)
			{
				OnParentCodeChanging(value);
				_ParentCode = value;
				OnParentCodeChanged();
			}
		}
	}
	private Nullable<decimal> _ParentCode;

	partial void OnParentCodeChanging(Nullable<decimal> newValue);
	partial void OnParentCodeChanged();

    public virtual OSCM OSCM { get; set; }
    public virtual OCRD OCRD { get; set; }
}

[Serializable]
public partial class SCM1LOG : ObjectWithState
{

    public long AutoSCM1ID 
	{ 
		get
		{
			return _AutoSCM1ID;
		}
		set
		{
			if(_AutoSCM1ID != value)
			{
				OnAutoSCM1IDChanging(value);
				_AutoSCM1ID = value;
				OnAutoSCM1IDChanged();
			}
		}
	}
	private long _AutoSCM1ID;

	partial void OnAutoSCM1IDChanging(long newValue);
	partial void OnAutoSCM1IDChanged();

    public int SCM1ID 
	{ 
		get
		{
			return _SCM1ID;
		}
		set
		{
			if(_SCM1ID != value)
			{
				OnSCM1IDChanging(value);
				_SCM1ID = value;
				OnSCM1IDChanged();
			}
		}
	}
	private int _SCM1ID;

	partial void OnSCM1IDChanging(int newValue);
	partial void OnSCM1IDChanged();

    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();

    public Nullable<int> RegionID 
	{ 
		get
		{
			return _RegionID;
		}
		set
		{
			if(_RegionID != value)
			{
				OnRegionIDChanging(value);
				_RegionID = value;
				OnRegionIDChanged();
			}
		}
	}
	private Nullable<int> _RegionID;

	partial void OnRegionIDChanging(Nullable<int> newValue);
	partial void OnRegionIDChanged();

    public Nullable<int> PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private Nullable<int> _PlantID;

	partial void OnPlantIDChanging(Nullable<int> newValue);
	partial void OnPlantIDChanged();

    public Nullable<decimal> CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private Nullable<decimal> _CustomerID;

	partial void OnCustomerIDChanging(Nullable<decimal> newValue);
	partial void OnCustomerIDChanged();

    public int Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private int _Type;

	partial void OnTypeChanging(int newValue);
	partial void OnTypeChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public Nullable<decimal> UsedCoupon 
	{ 
		get
		{
			return _UsedCoupon;
		}
		set
		{
			if(_UsedCoupon != value)
			{
				OnUsedCouponChanging(value);
				_UsedCoupon = value;
				OnUsedCouponChanged();
			}
		}
	}
	private Nullable<decimal> _UsedCoupon;

	partial void OnUsedCouponChanging(Nullable<decimal> newValue);
	partial void OnUsedCouponChanged();

    public Nullable<decimal> CouponAmount 
	{ 
		get
		{
			return _CouponAmount;
		}
		set
		{
			if(_CouponAmount != value)
			{
				OnCouponAmountChanging(value);
				_CouponAmount = value;
				OnCouponAmountChanged();
			}
		}
	}
	private Nullable<decimal> _CouponAmount;

	partial void OnCouponAmountChanging(Nullable<decimal> newValue);
	partial void OnCouponAmountChanged();

    public bool IsInclude 
	{ 
		get
		{
			return _IsInclude;
		}
		set
		{
			if(_IsInclude != value)
			{
				OnIsIncludeChanging(value);
				_IsInclude = value;
				OnIsIncludeChanged();
			}
		}
	}
	private bool _IsInclude;

	partial void OnIsIncludeChanging(bool newValue);
	partial void OnIsIncludeChanged();

    public Nullable<int> AssetID 
	{ 
		get
		{
			return _AssetID;
		}
		set
		{
			if(_AssetID != value)
			{
				OnAssetIDChanging(value);
				_AssetID = value;
				OnAssetIDChanged();
			}
		}
	}
	private Nullable<int> _AssetID;

	partial void OnAssetIDChanging(Nullable<int> newValue);
	partial void OnAssetIDChanged();

    public string SAPCREATEDBY 
	{ 
		get
		{
			return _SAPCREATEDBY;
		}
		set
		{
			if(_SAPCREATEDBY != value)
			{
				OnSAPCREATEDBYChanging(value);
				_SAPCREATEDBY = value;
				OnSAPCREATEDBYChanged();
			}
		}
	}
	private string _SAPCREATEDBY;

	partial void OnSAPCREATEDBYChanging(string newValue);
	partial void OnSAPCREATEDBYChanged();

    public Nullable<System.DateTime> SAPCREATEDDATE 
	{ 
		get
		{
			return _SAPCREATEDDATE;
		}
		set
		{
			if(_SAPCREATEDDATE != value)
			{
				OnSAPCREATEDDATEChanging(value);
				_SAPCREATEDDATE = value;
				OnSAPCREATEDDATEChanged();
			}
		}
	}
	private Nullable<System.DateTime> _SAPCREATEDDATE;

	partial void OnSAPCREATEDDATEChanging(Nullable<System.DateTime> newValue);
	partial void OnSAPCREATEDDATEChanged();

    public string SAPCHANGEBY 
	{ 
		get
		{
			return _SAPCHANGEBY;
		}
		set
		{
			if(_SAPCHANGEBY != value)
			{
				OnSAPCHANGEBYChanging(value);
				_SAPCHANGEBY = value;
				OnSAPCHANGEBYChanged();
			}
		}
	}
	private string _SAPCHANGEBY;

	partial void OnSAPCHANGEBYChanging(string newValue);
	partial void OnSAPCHANGEBYChanged();

    public Nullable<System.DateTime> SAPCHANGEDATE 
	{ 
		get
		{
			return _SAPCHANGEDATE;
		}
		set
		{
			if(_SAPCHANGEDATE != value)
			{
				OnSAPCHANGEDATEChanging(value);
				_SAPCHANGEDATE = value;
				OnSAPCHANGEDATEChanged();
			}
		}
	}
	private Nullable<System.DateTime> _SAPCHANGEDATE;

	partial void OnSAPCHANGEDATEChanging(Nullable<System.DateTime> newValue);
	partial void OnSAPCHANGEDATEChanged();

    public string SAPSYNCUSER 
	{ 
		get
		{
			return _SAPSYNCUSER;
		}
		set
		{
			if(_SAPSYNCUSER != value)
			{
				OnSAPSYNCUSERChanging(value);
				_SAPSYNCUSER = value;
				OnSAPSYNCUSERChanged();
			}
		}
	}
	private string _SAPSYNCUSER;

	partial void OnSAPSYNCUSERChanging(string newValue);
	partial void OnSAPSYNCUSERChanged();

    public string AppID 
	{ 
		get
		{
			return _AppID;
		}
		set
		{
			if(_AppID != value)
			{
				OnAppIDChanging(value);
				_AppID = value;
				OnAppIDChanged();
			}
		}
	}
	private string _AppID;

	partial void OnAppIDChanging(string newValue);
	partial void OnAppIDChanged();

    public int InsertType 
	{ 
		get
		{
			return _InsertType;
		}
		set
		{
			if(_InsertType != value)
			{
				OnInsertTypeChanging(value);
				_InsertType = value;
				OnInsertTypeChanged();
			}
		}
	}
	private int _InsertType;

	partial void OnInsertTypeChanging(int newValue);
	partial void OnInsertTypeChanged();

    public System.DateTime Datetime 
	{ 
		get
		{
			return _Datetime;
		}
		set
		{
			if(_Datetime != value)
			{
				OnDatetimeChanging(value);
				_Datetime = value;
				OnDatetimeChanged();
			}
		}
	}
	private System.DateTime _Datetime;

	partial void OnDatetimeChanging(System.DateTime newValue);
	partial void OnDatetimeChanged();

    public Nullable<int> CustGroupID 
	{ 
		get
		{
			return _CustGroupID;
		}
		set
		{
			if(_CustGroupID != value)
			{
				OnCustGroupIDChanging(value);
				_CustGroupID = value;
				OnCustGroupIDChanged();
			}
		}
	}
	private Nullable<int> _CustGroupID;

	partial void OnCustGroupIDChanging(Nullable<int> newValue);
	partial void OnCustGroupIDChanged();

    public Nullable<decimal> ParentCode 
	{ 
		get
		{
			return _ParentCode;
		}
		set
		{
			if(_ParentCode != value)
			{
				OnParentCodeChanging(value);
				_ParentCode = value;
				OnParentCodeChanged();
			}
		}
	}
	private Nullable<decimal> _ParentCode;

	partial void OnParentCodeChanging(Nullable<decimal> newValue);
	partial void OnParentCodeChanged();
}

[Serializable]
public partial class SCM2 : ObjectWithState
{

    public int SCM2ID 
	{ 
		get
		{
			return _SCM2ID;
		}
		set
		{
			if(_SCM2ID != value)
			{
				OnSCM2IDChanging(value);
				_SCM2ID = value;
				OnSCM2IDChanged();
			}
		}
	}
	private int _SCM2ID;

	partial void OnSCM2IDChanging(int newValue);
	partial void OnSCM2IDChanged();

    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();

    public int CustGroupID 
	{ 
		get
		{
			return _CustGroupID;
		}
		set
		{
			if(_CustGroupID != value)
			{
				OnCustGroupIDChanging(value);
				_CustGroupID = value;
				OnCustGroupIDChanged();
			}
		}
	}
	private int _CustGroupID;

	partial void OnCustGroupIDChanging(int newValue);
	partial void OnCustGroupIDChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public virtual OSCM OSCM { get; set; }
    public virtual CGRP CGRP { get; set; }
}

[Serializable]
public partial class SCM3 : ObjectWithState
{

    public int SCM3ID 
	{ 
		get
		{
			return _SCM3ID;
		}
		set
		{
			if(_SCM3ID != value)
			{
				OnSCM3IDChanging(value);
				_SCM3ID = value;
				OnSCM3IDChanged();
			}
		}
	}
	private int _SCM3ID;

	partial void OnSCM3IDChanging(int newValue);
	partial void OnSCM3IDChanged();

    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();

    public Nullable<int> ItemGroupID 
	{ 
		get
		{
			return _ItemGroupID;
		}
		set
		{
			if(_ItemGroupID != value)
			{
				OnItemGroupIDChanging(value);
				_ItemGroupID = value;
				OnItemGroupIDChanged();
			}
		}
	}
	private Nullable<int> _ItemGroupID;

	partial void OnItemGroupIDChanging(Nullable<int> newValue);
	partial void OnItemGroupIDChanged();

    public Nullable<int> ItemSubGroupID 
	{ 
		get
		{
			return _ItemSubGroupID;
		}
		set
		{
			if(_ItemSubGroupID != value)
			{
				OnItemSubGroupIDChanging(value);
				_ItemSubGroupID = value;
				OnItemSubGroupIDChanged();
			}
		}
	}
	private Nullable<int> _ItemSubGroupID;

	partial void OnItemSubGroupIDChanging(Nullable<int> newValue);
	partial void OnItemSubGroupIDChanged();

    public Nullable<int> ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private Nullable<int> _ItemID;

	partial void OnItemIDChanging(Nullable<int> newValue);
	partial void OnItemIDChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsInclude 
	{ 
		get
		{
			return _IsInclude;
		}
		set
		{
			if(_IsInclude != value)
			{
				OnIsIncludeChanging(value);
				_IsInclude = value;
				OnIsIncludeChanged();
			}
		}
	}
	private bool _IsInclude;

	partial void OnIsIncludeChanging(bool newValue);
	partial void OnIsIncludeChanged();

    public Nullable<int> DivisionID 
	{ 
		get
		{
			return _DivisionID;
		}
		set
		{
			if(_DivisionID != value)
			{
				OnDivisionIDChanging(value);
				_DivisionID = value;
				OnDivisionIDChanged();
			}
		}
	}
	private Nullable<int> _DivisionID;

	partial void OnDivisionIDChanging(Nullable<int> newValue);
	partial void OnDivisionIDChanged();

    public virtual OITB OITB { get; set; }
    public virtual OITG OITG { get; set; }
    public virtual OITM OITM { get; set; }
    public virtual OSCM OSCM { get; set; }
}

[Serializable]
public partial class SCM3LOG : ObjectWithState
{

    public long AutoSCM3ID 
	{ 
		get
		{
			return _AutoSCM3ID;
		}
		set
		{
			if(_AutoSCM3ID != value)
			{
				OnAutoSCM3IDChanging(value);
				_AutoSCM3ID = value;
				OnAutoSCM3IDChanged();
			}
		}
	}
	private long _AutoSCM3ID;

	partial void OnAutoSCM3IDChanging(long newValue);
	partial void OnAutoSCM3IDChanged();

    public int SCM3ID 
	{ 
		get
		{
			return _SCM3ID;
		}
		set
		{
			if(_SCM3ID != value)
			{
				OnSCM3IDChanging(value);
				_SCM3ID = value;
				OnSCM3IDChanged();
			}
		}
	}
	private int _SCM3ID;

	partial void OnSCM3IDChanging(int newValue);
	partial void OnSCM3IDChanged();

    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();

    public Nullable<int> ItemGroupID 
	{ 
		get
		{
			return _ItemGroupID;
		}
		set
		{
			if(_ItemGroupID != value)
			{
				OnItemGroupIDChanging(value);
				_ItemGroupID = value;
				OnItemGroupIDChanged();
			}
		}
	}
	private Nullable<int> _ItemGroupID;

	partial void OnItemGroupIDChanging(Nullable<int> newValue);
	partial void OnItemGroupIDChanged();

    public Nullable<int> ItemSubGroupID 
	{ 
		get
		{
			return _ItemSubGroupID;
		}
		set
		{
			if(_ItemSubGroupID != value)
			{
				OnItemSubGroupIDChanging(value);
				_ItemSubGroupID = value;
				OnItemSubGroupIDChanged();
			}
		}
	}
	private Nullable<int> _ItemSubGroupID;

	partial void OnItemSubGroupIDChanging(Nullable<int> newValue);
	partial void OnItemSubGroupIDChanged();

    public Nullable<int> ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private Nullable<int> _ItemID;

	partial void OnItemIDChanging(Nullable<int> newValue);
	partial void OnItemIDChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsInclude 
	{ 
		get
		{
			return _IsInclude;
		}
		set
		{
			if(_IsInclude != value)
			{
				OnIsIncludeChanging(value);
				_IsInclude = value;
				OnIsIncludeChanged();
			}
		}
	}
	private bool _IsInclude;

	partial void OnIsIncludeChanging(bool newValue);
	partial void OnIsIncludeChanged();

    public Nullable<int> DivisionID 
	{ 
		get
		{
			return _DivisionID;
		}
		set
		{
			if(_DivisionID != value)
			{
				OnDivisionIDChanging(value);
				_DivisionID = value;
				OnDivisionIDChanged();
			}
		}
	}
	private Nullable<int> _DivisionID;

	partial void OnDivisionIDChanging(Nullable<int> newValue);
	partial void OnDivisionIDChanged();

    public string AppID 
	{ 
		get
		{
			return _AppID;
		}
		set
		{
			if(_AppID != value)
			{
				OnAppIDChanging(value);
				_AppID = value;
				OnAppIDChanged();
			}
		}
	}
	private string _AppID;

	partial void OnAppIDChanging(string newValue);
	partial void OnAppIDChanged();

    public int InsertType 
	{ 
		get
		{
			return _InsertType;
		}
		set
		{
			if(_InsertType != value)
			{
				OnInsertTypeChanging(value);
				_InsertType = value;
				OnInsertTypeChanged();
			}
		}
	}
	private int _InsertType;

	partial void OnInsertTypeChanging(int newValue);
	partial void OnInsertTypeChanged();

    public System.DateTime Datetime 
	{ 
		get
		{
			return _Datetime;
		}
		set
		{
			if(_Datetime != value)
			{
				OnDatetimeChanging(value);
				_Datetime = value;
				OnDatetimeChanged();
			}
		}
	}
	private System.DateTime _Datetime;

	partial void OnDatetimeChanging(System.DateTime newValue);
	partial void OnDatetimeChanged();
}

[Serializable]
public partial class SCM4 : ObjectWithState
{

    public int SCM4ID 
	{ 
		get
		{
			return _SCM4ID;
		}
		set
		{
			if(_SCM4ID != value)
			{
				OnSCM4IDChanging(value);
				_SCM4ID = value;
				OnSCM4IDChanged();
			}
		}
	}
	private int _SCM4ID;

	partial void OnSCM4IDChanging(int newValue);
	partial void OnSCM4IDChanged();

    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();

    public decimal LowerLimit 
	{ 
		get
		{
			return _LowerLimit;
		}
		set
		{
			if(_LowerLimit != value)
			{
				OnLowerLimitChanging(value);
				_LowerLimit = value;
				OnLowerLimitChanged();
			}
		}
	}
	private decimal _LowerLimit;

	partial void OnLowerLimitChanging(decimal newValue);
	partial void OnLowerLimitChanged();

    public decimal HigherLimit 
	{ 
		get
		{
			return _HigherLimit;
		}
		set
		{
			if(_HigherLimit != value)
			{
				OnHigherLimitChanging(value);
				_HigherLimit = value;
				OnHigherLimitChanged();
			}
		}
	}
	private decimal _HigherLimit;

	partial void OnHigherLimitChanging(decimal newValue);
	partial void OnHigherLimitChanged();

    public Nullable<int> ItemGroupID 
	{ 
		get
		{
			return _ItemGroupID;
		}
		set
		{
			if(_ItemGroupID != value)
			{
				OnItemGroupIDChanging(value);
				_ItemGroupID = value;
				OnItemGroupIDChanged();
			}
		}
	}
	private Nullable<int> _ItemGroupID;

	partial void OnItemGroupIDChanging(Nullable<int> newValue);
	partial void OnItemGroupIDChanged();

    public Nullable<int> ItemSubGroupID 
	{ 
		get
		{
			return _ItemSubGroupID;
		}
		set
		{
			if(_ItemSubGroupID != value)
			{
				OnItemSubGroupIDChanging(value);
				_ItemSubGroupID = value;
				OnItemSubGroupIDChanged();
			}
		}
	}
	private Nullable<int> _ItemSubGroupID;

	partial void OnItemSubGroupIDChanging(Nullable<int> newValue);
	partial void OnItemSubGroupIDChanged();

    public Nullable<int> ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private Nullable<int> _ItemID;

	partial void OnItemIDChanging(Nullable<int> newValue);
	partial void OnItemIDChanged();

    public decimal Quantity 
	{ 
		get
		{
			return _Quantity;
		}
		set
		{
			if(_Quantity != value)
			{
				OnQuantityChanging(value);
				_Quantity = value;
				OnQuantityChanged();
			}
		}
	}
	private decimal _Quantity;

	partial void OnQuantityChanging(decimal newValue);
	partial void OnQuantityChanged();

    public int BasedOn 
	{ 
		get
		{
			return _BasedOn;
		}
		set
		{
			if(_BasedOn != value)
			{
				OnBasedOnChanging(value);
				_BasedOn = value;
				OnBasedOnChanged();
			}
		}
	}
	private int _BasedOn;

	partial void OnBasedOnChanging(int newValue);
	partial void OnBasedOnChanged();

    public decimal Discount 
	{ 
		get
		{
			return _Discount;
		}
		set
		{
			if(_Discount != value)
			{
				OnDiscountChanging(value);
				_Discount = value;
				OnDiscountChanged();
			}
		}
	}
	private decimal _Discount;

	partial void OnDiscountChanging(decimal newValue);
	partial void OnDiscountChanged();

    public string DiscountType 
	{ 
		get
		{
			return _DiscountType;
		}
		set
		{
			if(_DiscountType != value)
			{
				OnDiscountTypeChanging(value);
				_DiscountType = value;
				OnDiscountTypeChanged();
			}
		}
	}
	private string _DiscountType;

	partial void OnDiscountTypeChanging(string newValue);
	partial void OnDiscountTypeChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<decimal> Occurrence 
	{ 
		get
		{
			return _Occurrence;
		}
		set
		{
			if(_Occurrence != value)
			{
				OnOccurrenceChanging(value);
				_Occurrence = value;
				OnOccurrenceChanged();
			}
		}
	}
	private Nullable<decimal> _Occurrence;

	partial void OnOccurrenceChanging(Nullable<decimal> newValue);
	partial void OnOccurrenceChanged();

    public Nullable<decimal> CompanyDisc 
	{ 
		get
		{
			return _CompanyDisc;
		}
		set
		{
			if(_CompanyDisc != value)
			{
				OnCompanyDiscChanging(value);
				_CompanyDisc = value;
				OnCompanyDiscChanged();
			}
		}
	}
	private Nullable<decimal> _CompanyDisc;

	partial void OnCompanyDiscChanging(Nullable<decimal> newValue);
	partial void OnCompanyDiscChanged();

    public Nullable<decimal> DistributorDisc 
	{ 
		get
		{
			return _DistributorDisc;
		}
		set
		{
			if(_DistributorDisc != value)
			{
				OnDistributorDiscChanging(value);
				_DistributorDisc = value;
				OnDistributorDiscChanged();
			}
		}
	}
	private Nullable<decimal> _DistributorDisc;

	partial void OnDistributorDiscChanging(Nullable<decimal> newValue);
	partial void OnDistributorDiscChanged();

    public Nullable<int> UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private Nullable<int> _UnitID;

	partial void OnUnitIDChanging(Nullable<int> newValue);
	partial void OnUnitIDChanged();

    public decimal Price 
	{ 
		get
		{
			return _Price;
		}
		set
		{
			if(_Price != value)
			{
				OnPriceChanging(value);
				_Price = value;
				OnPriceChanged();
			}
		}
	}
	private decimal _Price;

	partial void OnPriceChanging(decimal newValue);
	partial void OnPriceChanged();

    public Nullable<bool> IsPair 
	{ 
		get
		{
			return _IsPair;
		}
		set
		{
			if(_IsPair != value)
			{
				OnIsPairChanging(value);
				_IsPair = value;
				OnIsPairChanged();
			}
		}
	}
	private Nullable<bool> _IsPair;

	partial void OnIsPairChanging(Nullable<bool> newValue);
	partial void OnIsPairChanged();

    public virtual OITB OITB { get; set; }
    public virtual OITG OITG { get; set; }
    public virtual OITM OITM { get; set; }
    public virtual OSCM OSCM { get; set; }
    public virtual OUNT OUNT { get; set; }
}

[Serializable]
public partial class SCM4LOG : ObjectWithState
{

    public long AutoSCM4ID 
	{ 
		get
		{
			return _AutoSCM4ID;
		}
		set
		{
			if(_AutoSCM4ID != value)
			{
				OnAutoSCM4IDChanging(value);
				_AutoSCM4ID = value;
				OnAutoSCM4IDChanged();
			}
		}
	}
	private long _AutoSCM4ID;

	partial void OnAutoSCM4IDChanging(long newValue);
	partial void OnAutoSCM4IDChanged();

    public int SCM4ID 
	{ 
		get
		{
			return _SCM4ID;
		}
		set
		{
			if(_SCM4ID != value)
			{
				OnSCM4IDChanging(value);
				_SCM4ID = value;
				OnSCM4IDChanged();
			}
		}
	}
	private int _SCM4ID;

	partial void OnSCM4IDChanging(int newValue);
	partial void OnSCM4IDChanged();

    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();

    public decimal LowerLimit 
	{ 
		get
		{
			return _LowerLimit;
		}
		set
		{
			if(_LowerLimit != value)
			{
				OnLowerLimitChanging(value);
				_LowerLimit = value;
				OnLowerLimitChanged();
			}
		}
	}
	private decimal _LowerLimit;

	partial void OnLowerLimitChanging(decimal newValue);
	partial void OnLowerLimitChanged();

    public decimal HigherLimit 
	{ 
		get
		{
			return _HigherLimit;
		}
		set
		{
			if(_HigherLimit != value)
			{
				OnHigherLimitChanging(value);
				_HigherLimit = value;
				OnHigherLimitChanged();
			}
		}
	}
	private decimal _HigherLimit;

	partial void OnHigherLimitChanging(decimal newValue);
	partial void OnHigherLimitChanged();

    public Nullable<int> ItemGroupID 
	{ 
		get
		{
			return _ItemGroupID;
		}
		set
		{
			if(_ItemGroupID != value)
			{
				OnItemGroupIDChanging(value);
				_ItemGroupID = value;
				OnItemGroupIDChanged();
			}
		}
	}
	private Nullable<int> _ItemGroupID;

	partial void OnItemGroupIDChanging(Nullable<int> newValue);
	partial void OnItemGroupIDChanged();

    public Nullable<int> ItemSubGroupID 
	{ 
		get
		{
			return _ItemSubGroupID;
		}
		set
		{
			if(_ItemSubGroupID != value)
			{
				OnItemSubGroupIDChanging(value);
				_ItemSubGroupID = value;
				OnItemSubGroupIDChanged();
			}
		}
	}
	private Nullable<int> _ItemSubGroupID;

	partial void OnItemSubGroupIDChanging(Nullable<int> newValue);
	partial void OnItemSubGroupIDChanged();

    public Nullable<int> ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private Nullable<int> _ItemID;

	partial void OnItemIDChanging(Nullable<int> newValue);
	partial void OnItemIDChanged();

    public decimal Quantity 
	{ 
		get
		{
			return _Quantity;
		}
		set
		{
			if(_Quantity != value)
			{
				OnQuantityChanging(value);
				_Quantity = value;
				OnQuantityChanged();
			}
		}
	}
	private decimal _Quantity;

	partial void OnQuantityChanging(decimal newValue);
	partial void OnQuantityChanged();

    public int BasedOn 
	{ 
		get
		{
			return _BasedOn;
		}
		set
		{
			if(_BasedOn != value)
			{
				OnBasedOnChanging(value);
				_BasedOn = value;
				OnBasedOnChanged();
			}
		}
	}
	private int _BasedOn;

	partial void OnBasedOnChanging(int newValue);
	partial void OnBasedOnChanged();

    public decimal Discount 
	{ 
		get
		{
			return _Discount;
		}
		set
		{
			if(_Discount != value)
			{
				OnDiscountChanging(value);
				_Discount = value;
				OnDiscountChanged();
			}
		}
	}
	private decimal _Discount;

	partial void OnDiscountChanging(decimal newValue);
	partial void OnDiscountChanged();

    public string DiscountType 
	{ 
		get
		{
			return _DiscountType;
		}
		set
		{
			if(_DiscountType != value)
			{
				OnDiscountTypeChanging(value);
				_DiscountType = value;
				OnDiscountTypeChanged();
			}
		}
	}
	private string _DiscountType;

	partial void OnDiscountTypeChanging(string newValue);
	partial void OnDiscountTypeChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<decimal> Occurrence 
	{ 
		get
		{
			return _Occurrence;
		}
		set
		{
			if(_Occurrence != value)
			{
				OnOccurrenceChanging(value);
				_Occurrence = value;
				OnOccurrenceChanged();
			}
		}
	}
	private Nullable<decimal> _Occurrence;

	partial void OnOccurrenceChanging(Nullable<decimal> newValue);
	partial void OnOccurrenceChanged();

    public Nullable<decimal> CompanyDisc 
	{ 
		get
		{
			return _CompanyDisc;
		}
		set
		{
			if(_CompanyDisc != value)
			{
				OnCompanyDiscChanging(value);
				_CompanyDisc = value;
				OnCompanyDiscChanged();
			}
		}
	}
	private Nullable<decimal> _CompanyDisc;

	partial void OnCompanyDiscChanging(Nullable<decimal> newValue);
	partial void OnCompanyDiscChanged();

    public Nullable<decimal> DistributorDisc 
	{ 
		get
		{
			return _DistributorDisc;
		}
		set
		{
			if(_DistributorDisc != value)
			{
				OnDistributorDiscChanging(value);
				_DistributorDisc = value;
				OnDistributorDiscChanged();
			}
		}
	}
	private Nullable<decimal> _DistributorDisc;

	partial void OnDistributorDiscChanging(Nullable<decimal> newValue);
	partial void OnDistributorDiscChanged();

    public Nullable<int> UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private Nullable<int> _UnitID;

	partial void OnUnitIDChanging(Nullable<int> newValue);
	partial void OnUnitIDChanged();

    public decimal Price 
	{ 
		get
		{
			return _Price;
		}
		set
		{
			if(_Price != value)
			{
				OnPriceChanging(value);
				_Price = value;
				OnPriceChanged();
			}
		}
	}
	private decimal _Price;

	partial void OnPriceChanging(decimal newValue);
	partial void OnPriceChanged();

    public string AppID 
	{ 
		get
		{
			return _AppID;
		}
		set
		{
			if(_AppID != value)
			{
				OnAppIDChanging(value);
				_AppID = value;
				OnAppIDChanged();
			}
		}
	}
	private string _AppID;

	partial void OnAppIDChanging(string newValue);
	partial void OnAppIDChanged();

    public int InsertType 
	{ 
		get
		{
			return _InsertType;
		}
		set
		{
			if(_InsertType != value)
			{
				OnInsertTypeChanging(value);
				_InsertType = value;
				OnInsertTypeChanged();
			}
		}
	}
	private int _InsertType;

	partial void OnInsertTypeChanging(int newValue);
	partial void OnInsertTypeChanged();

    public System.DateTime Datetime 
	{ 
		get
		{
			return _Datetime;
		}
		set
		{
			if(_Datetime != value)
			{
				OnDatetimeChanging(value);
				_Datetime = value;
				OnDatetimeChanged();
			}
		}
	}
	private System.DateTime _Datetime;

	partial void OnDatetimeChanging(System.DateTime newValue);
	partial void OnDatetimeChanged();

    public Nullable<bool> IsPair 
	{ 
		get
		{
			return _IsPair;
		}
		set
		{
			if(_IsPair != value)
			{
				OnIsPairChanging(value);
				_IsPair = value;
				OnIsPairChanged();
			}
		}
	}
	private Nullable<bool> _IsPair;

	partial void OnIsPairChanging(Nullable<bool> newValue);
	partial void OnIsPairChanged();
}

[Serializable]
public partial class SFB1 : ObjectWithState
{

    public int SFB1ID 
	{ 
		get
		{
			return _SFB1ID;
		}
		set
		{
			if(_SFB1ID != value)
			{
				OnSFB1IDChanging(value);
				_SFB1ID = value;
				OnSFB1IDChanged();
			}
		}
	}
	private int _SFB1ID;

	partial void OnSFB1IDChanging(int newValue);
	partial void OnSFB1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int OSFBID 
	{ 
		get
		{
			return _OSFBID;
		}
		set
		{
			if(_OSFBID != value)
			{
				OnOSFBIDChanging(value);
				_OSFBID = value;
				OnOSFBIDChanged();
			}
		}
	}
	private int _OSFBID;

	partial void OnOSFBIDChanging(int newValue);
	partial void OnOSFBIDChanged();

    public int TypeID 
	{ 
		get
		{
			return _TypeID;
		}
		set
		{
			if(_TypeID != value)
			{
				OnTypeIDChanging(value);
				_TypeID = value;
				OnTypeIDChanged();
			}
		}
	}
	private int _TypeID;

	partial void OnTypeIDChanging(int newValue);
	partial void OnTypeIDChanged();

    public decimal BudgetAmount 
	{ 
		get
		{
			return _BudgetAmount;
		}
		set
		{
			if(_BudgetAmount != value)
			{
				OnBudgetAmountChanging(value);
				_BudgetAmount = value;
				OnBudgetAmountChanged();
			}
		}
	}
	private decimal _BudgetAmount;

	partial void OnBudgetAmountChanging(decimal newValue);
	partial void OnBudgetAmountChanged();

    public decimal TolerancePerc 
	{ 
		get
		{
			return _TolerancePerc;
		}
		set
		{
			if(_TolerancePerc != value)
			{
				OnTolerancePercChanging(value);
				_TolerancePerc = value;
				OnTolerancePercChanged();
			}
		}
	}
	private decimal _TolerancePerc;

	partial void OnTolerancePercChanging(decimal newValue);
	partial void OnTolerancePercChanged();

    public decimal AvailableBudget 
	{ 
		get
		{
			return _AvailableBudget;
		}
		set
		{
			if(_AvailableBudget != value)
			{
				OnAvailableBudgetChanging(value);
				_AvailableBudget = value;
				OnAvailableBudgetChanged();
			}
		}
	}
	private decimal _AvailableBudget;

	partial void OnAvailableBudgetChanging(decimal newValue);
	partial void OnAvailableBudgetChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual OSFB OSFB { get; set; }
}

[Serializable]
public partial class SFC1 : ObjectWithState
{

    public int SFC1ID 
	{ 
		get
		{
			return _SFC1ID;
		}
		set
		{
			if(_SFC1ID != value)
			{
				OnSFC1IDChanging(value);
				_SFC1ID = value;
				OnSFC1IDChanged();
			}
		}
	}
	private int _SFC1ID;

	partial void OnSFC1IDChanging(int newValue);
	partial void OnSFC1IDChanged();

    public int OSFCID 
	{ 
		get
		{
			return _OSFCID;
		}
		set
		{
			if(_OSFCID != value)
			{
				OnOSFCIDChanging(value);
				_OSFCID = value;
				OnOSFCIDChanged();
			}
		}
	}
	private int _OSFCID;

	partial void OnOSFCIDChanging(int newValue);
	partial void OnOSFCIDChanged();

    public int ExpTypeID 
	{ 
		get
		{
			return _ExpTypeID;
		}
		set
		{
			if(_ExpTypeID != value)
			{
				OnExpTypeIDChanging(value);
				_ExpTypeID = value;
				OnExpTypeIDChanged();
			}
		}
	}
	private int _ExpTypeID;

	partial void OnExpTypeIDChanging(int newValue);
	partial void OnExpTypeIDChanged();

    public int ExpModeID 
	{ 
		get
		{
			return _ExpModeID;
		}
		set
		{
			if(_ExpModeID != value)
			{
				OnExpModeIDChanging(value);
				_ExpModeID = value;
				OnExpModeIDChanged();
			}
		}
	}
	private int _ExpModeID;

	partial void OnExpModeIDChanging(int newValue);
	partial void OnExpModeIDChanged();

    public decimal AllowdExpnse 
	{ 
		get
		{
			return _AllowdExpnse;
		}
		set
		{
			if(_AllowdExpnse != value)
			{
				OnAllowdExpnseChanging(value);
				_AllowdExpnse = value;
				OnAllowdExpnseChanged();
			}
		}
	}
	private decimal _AllowdExpnse;

	partial void OnAllowdExpnseChanging(decimal newValue);
	partial void OnAllowdExpnseChanged();

    public decimal TolerancePerc 
	{ 
		get
		{
			return _TolerancePerc;
		}
		set
		{
			if(_TolerancePerc != value)
			{
				OnTolerancePercChanging(value);
				_TolerancePerc = value;
				OnTolerancePercChanged();
			}
		}
	}
	private decimal _TolerancePerc;

	partial void OnTolerancePercChanging(decimal newValue);
	partial void OnTolerancePercChanged();

    public string Notes 
	{ 
		get
		{
			return _Notes;
		}
		set
		{
			if(_Notes != value)
			{
				OnNotesChanging(value);
				_Notes = value;
				OnNotesChanged();
			}
		}
	}
	private string _Notes;

	partial void OnNotesChanging(string newValue);
	partial void OnNotesChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual OEXM OEXM { get; set; }
    public virtual OSFC OSFC { get; set; }
    public virtual OEXT OEXT { get; set; }
}

[Serializable]
public partial class SITM : ObjectWithState
{

    public int SITMID 
	{ 
		get
		{
			return _SITMID;
		}
		set
		{
			if(_SITMID != value)
			{
				OnSITMIDChanging(value);
				_SITMID = value;
				OnSITMIDChanged();
			}
		}
	}
	private int _SITMID;

	partial void OnSITMIDChanging(int newValue);
	partial void OnSITMIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int TemplateID 
	{ 
		get
		{
			return _TemplateID;
		}
		set
		{
			if(_TemplateID != value)
			{
				OnTemplateIDChanging(value);
				_TemplateID = value;
				OnTemplateIDChanged();
			}
		}
	}
	private int _TemplateID;

	partial void OnTemplateIDChanging(int newValue);
	partial void OnTemplateIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public Nullable<int> Priority 
	{ 
		get
		{
			return _Priority;
		}
		set
		{
			if(_Priority != value)
			{
				OnPriorityChanging(value);
				_Priority = value;
				OnPriorityChanged();
			}
		}
	}
	private Nullable<int> _Priority;

	partial void OnPriorityChanging(Nullable<int> newValue);
	partial void OnPriorityChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public decimal MinStock 
	{ 
		get
		{
			return _MinStock;
		}
		set
		{
			if(_MinStock != value)
			{
				OnMinStockChanging(value);
				_MinStock = value;
				OnMinStockChanged();
			}
		}
	}
	private decimal _MinStock;

	partial void OnMinStockChanging(decimal newValue);
	partial void OnMinStockChanged();

    public decimal MaxStock 
	{ 
		get
		{
			return _MaxStock;
		}
		set
		{
			if(_MaxStock != value)
			{
				OnMaxStockChanging(value);
				_MaxStock = value;
				OnMaxStockChanged();
			}
		}
	}
	private decimal _MaxStock;

	partial void OnMaxStockChanging(decimal newValue);
	partial void OnMaxStockChanged();

    public Nullable<int> Days 
	{ 
		get
		{
			return _Days;
		}
		set
		{
			if(_Days != value)
			{
				OnDaysChanging(value);
				_Days = value;
				OnDaysChanged();
			}
		}
	}
	private Nullable<int> _Days;

	partial void OnDaysChanging(Nullable<int> newValue);
	partial void OnDaysChanged();

    public virtual OITM OITM { get; set; }
    public virtual OTMP OTMP { get; set; }
}

[Serializable]
public partial class SMVSPN : ObjectWithState
{

    public int LeavePolicyID 
	{ 
		get
		{
			return _LeavePolicyID;
		}
		set
		{
			if(_LeavePolicyID != value)
			{
				OnLeavePolicyIDChanging(value);
				_LeavePolicyID = value;
				OnLeavePolicyIDChanged();
			}
		}
	}
	private int _LeavePolicyID;

	partial void OnLeavePolicyIDChanging(int newValue);
	partial void OnLeavePolicyIDChanged();

    public Nullable<System.DateTime> FromDate 
	{ 
		get
		{
			return _FromDate;
		}
		set
		{
			if(_FromDate != value)
			{
				OnFromDateChanging(value);
				_FromDate = value;
				OnFromDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _FromDate;

	partial void OnFromDateChanging(Nullable<System.DateTime> newValue);
	partial void OnFromDateChanged();

    public Nullable<System.DateTime> ToDate 
	{ 
		get
		{
			return _ToDate;
		}
		set
		{
			if(_ToDate != value)
			{
				OnToDateChanging(value);
				_ToDate = value;
				OnToDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _ToDate;

	partial void OnToDateChanging(Nullable<System.DateTime> newValue);
	partial void OnToDateChanged();

    public Nullable<int> DealerRegionID 
	{ 
		get
		{
			return _DealerRegionID;
		}
		set
		{
			if(_DealerRegionID != value)
			{
				OnDealerRegionIDChanging(value);
				_DealerRegionID = value;
				OnDealerRegionIDChanged();
			}
		}
	}
	private Nullable<int> _DealerRegionID;

	partial void OnDealerRegionIDChanging(Nullable<int> newValue);
	partial void OnDealerRegionIDChanged();

    public Nullable<int> DistRegionID 
	{ 
		get
		{
			return _DistRegionID;
		}
		set
		{
			if(_DistRegionID != value)
			{
				OnDistRegionIDChanging(value);
				_DistRegionID = value;
				OnDistRegionIDChanged();
			}
		}
	}
	private Nullable<int> _DistRegionID;

	partial void OnDistRegionIDChanging(Nullable<int> newValue);
	partial void OnDistRegionIDChanged();

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public string FilePath 
	{ 
		get
		{
			return _FilePath;
		}
		set
		{
			if(_FilePath != value)
			{
				OnFilePathChanging(value);
				_FilePath = value;
				OnFilePathChanged();
			}
		}
	}
	private string _FilePath;

	partial void OnFilePathChanging(string newValue);
	partial void OnFilePathChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public System.DateTime UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private System.DateTime _UpdatedDate;

	partial void OnUpdatedDateChanging(System.DateTime newValue);
	partial void OnUpdatedDateChanged();

    public int UpdatedBy 
	{ 
		get
		{
			return _UpdatedBy;
		}
		set
		{
			if(_UpdatedBy != value)
			{
				OnUpdatedByChanging(value);
				_UpdatedBy = value;
				OnUpdatedByChanged();
			}
		}
	}
	private int _UpdatedBy;

	partial void OnUpdatedByChanging(int newValue);
	partial void OnUpdatedByChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public string SaleMachineSchemeName 
	{ 
		get
		{
			return _SaleMachineSchemeName;
		}
		set
		{
			if(_SaleMachineSchemeName != value)
			{
				OnSaleMachineSchemeNameChanging(value);
				_SaleMachineSchemeName = value;
				OnSaleMachineSchemeNameChanged();
			}
		}
	}
	private string _SaleMachineSchemeName;

	partial void OnSaleMachineSchemeNameChanging(string newValue);
	partial void OnSaleMachineSchemeNameChanged();
}

[Serializable]
public partial class TASK1 : ObjectWithState
{

    public int TASK1ID 
	{ 
		get
		{
			return _TASK1ID;
		}
		set
		{
			if(_TASK1ID != value)
			{
				OnTASK1IDChanging(value);
				_TASK1ID = value;
				OnTASK1IDChanged();
			}
		}
	}
	private int _TASK1ID;

	partial void OnTASK1IDChanging(int newValue);
	partial void OnTASK1IDChanged();

    public int TaskID 
	{ 
		get
		{
			return _TaskID;
		}
		set
		{
			if(_TaskID != value)
			{
				OnTaskIDChanging(value);
				_TaskID = value;
				OnTaskIDChanged();
			}
		}
	}
	private int _TaskID;

	partial void OnTaskIDChanging(int newValue);
	partial void OnTaskIDChanged();

    public int TaskStatusID 
	{ 
		get
		{
			return _TaskStatusID;
		}
		set
		{
			if(_TaskStatusID != value)
			{
				OnTaskStatusIDChanging(value);
				_TaskStatusID = value;
				OnTaskStatusIDChanged();
			}
		}
	}
	private int _TaskStatusID;

	partial void OnTaskStatusIDChanging(int newValue);
	partial void OnTaskStatusIDChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public int FromEmpID 
	{ 
		get
		{
			return _FromEmpID;
		}
		set
		{
			if(_FromEmpID != value)
			{
				OnFromEmpIDChanging(value);
				_FromEmpID = value;
				OnFromEmpIDChanged();
			}
		}
	}
	private int _FromEmpID;

	partial void OnFromEmpIDChanging(int newValue);
	partial void OnFromEmpIDChanged();

    public int ToEmpID 
	{ 
		get
		{
			return _ToEmpID;
		}
		set
		{
			if(_ToEmpID != value)
			{
				OnToEmpIDChanging(value);
				_ToEmpID = value;
				OnToEmpIDChanged();
			}
		}
	}
	private int _ToEmpID;

	partial void OnToEmpIDChanging(int newValue);
	partial void OnToEmpIDChanged();

    public int TaskCreatedFromID 
	{ 
		get
		{
			return _TaskCreatedFromID;
		}
		set
		{
			if(_TaskCreatedFromID != value)
			{
				OnTaskCreatedFromIDChanging(value);
				_TaskCreatedFromID = value;
				OnTaskCreatedFromIDChanged();
			}
		}
	}
	private int _TaskCreatedFromID;

	partial void OnTaskCreatedFromIDChanging(int newValue);
	partial void OnTaskCreatedFromIDChanged();

    public Nullable<int> ReasonID 
	{ 
		get
		{
			return _ReasonID;
		}
		set
		{
			if(_ReasonID != value)
			{
				OnReasonIDChanging(value);
				_ReasonID = value;
				OnReasonIDChanged();
			}
		}
	}
	private Nullable<int> _ReasonID;

	partial void OnReasonIDChanging(Nullable<int> newValue);
	partial void OnReasonIDChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public System.TimeSpan CreatedTime 
	{ 
		get
		{
			return _CreatedTime;
		}
		set
		{
			if(_CreatedTime != value)
			{
				OnCreatedTimeChanging(value);
				_CreatedTime = value;
				OnCreatedTimeChanged();
			}
		}
	}
	private System.TimeSpan _CreatedTime;

	partial void OnCreatedTimeChanging(System.TimeSpan newValue);
	partial void OnCreatedTimeChanged();

    public int Createdby 
	{ 
		get
		{
			return _Createdby;
		}
		set
		{
			if(_Createdby != value)
			{
				OnCreatedbyChanging(value);
				_Createdby = value;
				OnCreatedbyChanged();
			}
		}
	}
	private int _Createdby;

	partial void OnCreatedbyChanging(int newValue);
	partial void OnCreatedbyChanged();

    public Nullable<int> TaskCallID 
	{ 
		get
		{
			return _TaskCallID;
		}
		set
		{
			if(_TaskCallID != value)
			{
				OnTaskCallIDChanging(value);
				_TaskCallID = value;
				OnTaskCallIDChanged();
			}
		}
	}
	private Nullable<int> _TaskCallID;

	partial void OnTaskCallIDChanging(Nullable<int> newValue);
	partial void OnTaskCallIDChanged();

    public Nullable<bool> IsManual 
	{ 
		get
		{
			return _IsManual;
		}
		set
		{
			if(_IsManual != value)
			{
				OnIsManualChanging(value);
				_IsManual = value;
				OnIsManualChanged();
			}
		}
	}
	private Nullable<bool> _IsManual;

	partial void OnIsManualChanging(Nullable<bool> newValue);
	partial void OnIsManualChanged();

    public virtual OCRD OCRD { get; set; }
    public virtual OTASK OTASK { get; set; }
    public virtual OTCF OTCF { get; set; }
    public virtual OTCSE OTCSE { get; set; }
    public virtual OTST OTST { get; set; }
}

[Serializable]
public partial class TASK2 : ObjectWithState
{

    public int TASK2ID 
	{ 
		get
		{
			return _TASK2ID;
		}
		set
		{
			if(_TASK2ID != value)
			{
				OnTASK2IDChanging(value);
				_TASK2ID = value;
				OnTASK2IDChanged();
			}
		}
	}
	private int _TASK2ID;

	partial void OnTASK2IDChanging(int newValue);
	partial void OnTASK2IDChanged();

    public int TaskID 
	{ 
		get
		{
			return _TaskID;
		}
		set
		{
			if(_TaskID != value)
			{
				OnTaskIDChanging(value);
				_TaskID = value;
				OnTaskIDChanged();
			}
		}
	}
	private int _TaskID;

	partial void OnTaskIDChanging(int newValue);
	partial void OnTaskIDChanged();

    public int TaskStatusID 
	{ 
		get
		{
			return _TaskStatusID;
		}
		set
		{
			if(_TaskStatusID != value)
			{
				OnTaskStatusIDChanging(value);
				_TaskStatusID = value;
				OnTaskStatusIDChanged();
			}
		}
	}
	private int _TaskStatusID;

	partial void OnTaskStatusIDChanging(int newValue);
	partial void OnTaskStatusIDChanged();

    public int ConflictAssestID 
	{ 
		get
		{
			return _ConflictAssestID;
		}
		set
		{
			if(_ConflictAssestID != value)
			{
				OnConflictAssestIDChanging(value);
				_ConflictAssestID = value;
				OnConflictAssestIDChanged();
			}
		}
	}
	private int _ConflictAssestID;

	partial void OnConflictAssestIDChanging(int newValue);
	partial void OnConflictAssestIDChanged();

    public decimal ConflictCustomerID 
	{ 
		get
		{
			return _ConflictCustomerID;
		}
		set
		{
			if(_ConflictCustomerID != value)
			{
				OnConflictCustomerIDChanging(value);
				_ConflictCustomerID = value;
				OnConflictCustomerIDChanged();
			}
		}
	}
	private decimal _ConflictCustomerID;

	partial void OnConflictCustomerIDChanging(decimal newValue);
	partial void OnConflictCustomerIDChanged();

    public bool IsConflict 
	{ 
		get
		{
			return _IsConflict;
		}
		set
		{
			if(_IsConflict != value)
			{
				OnIsConflictChanging(value);
				_IsConflict = value;
				OnIsConflictChanged();
			}
		}
	}
	private bool _IsConflict;

	partial void OnIsConflictChanging(bool newValue);
	partial void OnIsConflictChanged();

    public Nullable<int> ProblemID 
	{ 
		get
		{
			return _ProblemID;
		}
		set
		{
			if(_ProblemID != value)
			{
				OnProblemIDChanging(value);
				_ProblemID = value;
				OnProblemIDChanged();
			}
		}
	}
	private Nullable<int> _ProblemID;

	partial void OnProblemIDChanging(Nullable<int> newValue);
	partial void OnProblemIDChanged();

    public Nullable<bool> UnderWarranty 
	{ 
		get
		{
			return _UnderWarranty;
		}
		set
		{
			if(_UnderWarranty != value)
			{
				OnUnderWarrantyChanging(value);
				_UnderWarranty = value;
				OnUnderWarrantyChanged();
			}
		}
	}
	private Nullable<bool> _UnderWarranty;

	partial void OnUnderWarrantyChanging(Nullable<bool> newValue);
	partial void OnUnderWarrantyChanged();

    public string AssetRemarks 
	{ 
		get
		{
			return _AssetRemarks;
		}
		set
		{
			if(_AssetRemarks != value)
			{
				OnAssetRemarksChanging(value);
				_AssetRemarks = value;
				OnAssetRemarksChanged();
			}
		}
	}
	private string _AssetRemarks;

	partial void OnAssetRemarksChanging(string newValue);
	partial void OnAssetRemarksChanged();

    public string CheckListRemarks 
	{ 
		get
		{
			return _CheckListRemarks;
		}
		set
		{
			if(_CheckListRemarks != value)
			{
				OnCheckListRemarksChanging(value);
				_CheckListRemarks = value;
				OnCheckListRemarksChanged();
			}
		}
	}
	private string _CheckListRemarks;

	partial void OnCheckListRemarksChanging(string newValue);
	partial void OnCheckListRemarksChanged();

    public string ProblemRemarks 
	{ 
		get
		{
			return _ProblemRemarks;
		}
		set
		{
			if(_ProblemRemarks != value)
			{
				OnProblemRemarksChanging(value);
				_ProblemRemarks = value;
				OnProblemRemarksChanged();
			}
		}
	}
	private string _ProblemRemarks;

	partial void OnProblemRemarksChanging(string newValue);
	partial void OnProblemRemarksChanged();

    public string TaskCompletionRemarks 
	{ 
		get
		{
			return _TaskCompletionRemarks;
		}
		set
		{
			if(_TaskCompletionRemarks != value)
			{
				OnTaskCompletionRemarksChanging(value);
				_TaskCompletionRemarks = value;
				OnTaskCompletionRemarksChanged();
			}
		}
	}
	private string _TaskCompletionRemarks;

	partial void OnTaskCompletionRemarksChanging(string newValue);
	partial void OnTaskCompletionRemarksChanged();

    public string Photo1 
	{ 
		get
		{
			return _Photo1;
		}
		set
		{
			if(_Photo1 != value)
			{
				OnPhoto1Changing(value);
				_Photo1 = value;
				OnPhoto1Changed();
			}
		}
	}
	private string _Photo1;

	partial void OnPhoto1Changing(string newValue);
	partial void OnPhoto1Changed();

    public string Photo2 
	{ 
		get
		{
			return _Photo2;
		}
		set
		{
			if(_Photo2 != value)
			{
				OnPhoto2Changing(value);
				_Photo2 = value;
				OnPhoto2Changed();
			}
		}
	}
	private string _Photo2;

	partial void OnPhoto2Changing(string newValue);
	partial void OnPhoto2Changed();

    public string Photo3 
	{ 
		get
		{
			return _Photo3;
		}
		set
		{
			if(_Photo3 != value)
			{
				OnPhoto3Changing(value);
				_Photo3 = value;
				OnPhoto3Changed();
			}
		}
	}
	private string _Photo3;

	partial void OnPhoto3Changing(string newValue);
	partial void OnPhoto3Changed();

    public string Photo4 
	{ 
		get
		{
			return _Photo4;
		}
		set
		{
			if(_Photo4 != value)
			{
				OnPhoto4Changing(value);
				_Photo4 = value;
				OnPhoto4Changed();
			}
		}
	}
	private string _Photo4;

	partial void OnPhoto4Changing(string newValue);
	partial void OnPhoto4Changed();

    public string VendorName 
	{ 
		get
		{
			return _VendorName;
		}
		set
		{
			if(_VendorName != value)
			{
				OnVendorNameChanging(value);
				_VendorName = value;
				OnVendorNameChanged();
			}
		}
	}
	private string _VendorName;

	partial void OnVendorNameChanging(string newValue);
	partial void OnVendorNameChanged();

    public string VendorEmail 
	{ 
		get
		{
			return _VendorEmail;
		}
		set
		{
			if(_VendorEmail != value)
			{
				OnVendorEmailChanging(value);
				_VendorEmail = value;
				OnVendorEmailChanged();
			}
		}
	}
	private string _VendorEmail;

	partial void OnVendorEmailChanging(string newValue);
	partial void OnVendorEmailChanged();

    public string VendorRemarks 
	{ 
		get
		{
			return _VendorRemarks;
		}
		set
		{
			if(_VendorRemarks != value)
			{
				OnVendorRemarksChanging(value);
				_VendorRemarks = value;
				OnVendorRemarksChanged();
			}
		}
	}
	private string _VendorRemarks;

	partial void OnVendorRemarksChanging(string newValue);
	partial void OnVendorRemarksChanged();

    public Nullable<int> TaskCallID 
	{ 
		get
		{
			return _TaskCallID;
		}
		set
		{
			if(_TaskCallID != value)
			{
				OnTaskCallIDChanging(value);
				_TaskCallID = value;
				OnTaskCallIDChanged();
			}
		}
	}
	private Nullable<int> _TaskCallID;

	partial void OnTaskCallIDChanging(Nullable<int> newValue);
	partial void OnTaskCallIDChanged();

    public virtual OCRD OCRD { get; set; }
    public virtual OTASK OTASK { get; set; }
    public virtual OTCSE OTCSE { get; set; }
    public virtual OTST OTST { get; set; }
    public virtual OAST OAST { get; set; }
}

[Serializable]
public partial class TASK3 : ObjectWithState
{

    public int TASK3ID 
	{ 
		get
		{
			return _TASK3ID;
		}
		set
		{
			if(_TASK3ID != value)
			{
				OnTASK3IDChanging(value);
				_TASK3ID = value;
				OnTASK3IDChanged();
			}
		}
	}
	private int _TASK3ID;

	partial void OnTASK3IDChanging(int newValue);
	partial void OnTASK3IDChanged();

    public int TaskID 
	{ 
		get
		{
			return _TaskID;
		}
		set
		{
			if(_TaskID != value)
			{
				OnTaskIDChanging(value);
				_TaskID = value;
				OnTaskIDChanged();
			}
		}
	}
	private int _TaskID;

	partial void OnTaskIDChanging(int newValue);
	partial void OnTaskIDChanged();

    public int ProblemCheckID 
	{ 
		get
		{
			return _ProblemCheckID;
		}
		set
		{
			if(_ProblemCheckID != value)
			{
				OnProblemCheckIDChanging(value);
				_ProblemCheckID = value;
				OnProblemCheckIDChanged();
			}
		}
	}
	private int _ProblemCheckID;

	partial void OnProblemCheckIDChanging(int newValue);
	partial void OnProblemCheckIDChanged();

    public bool CheckPointValue 
	{ 
		get
		{
			return _CheckPointValue;
		}
		set
		{
			if(_CheckPointValue != value)
			{
				OnCheckPointValueChanging(value);
				_CheckPointValue = value;
				OnCheckPointValueChanged();
			}
		}
	}
	private bool _CheckPointValue;

	partial void OnCheckPointValueChanging(bool newValue);
	partial void OnCheckPointValueChanged();

    public Nullable<int> TaskCallID 
	{ 
		get
		{
			return _TaskCallID;
		}
		set
		{
			if(_TaskCallID != value)
			{
				OnTaskCallIDChanging(value);
				_TaskCallID = value;
				OnTaskCallIDChanged();
			}
		}
	}
	private Nullable<int> _TaskCallID;

	partial void OnTaskCallIDChanging(Nullable<int> newValue);
	partial void OnTaskCallIDChanged();

    public string RefDocNo 
	{ 
		get
		{
			return _RefDocNo;
		}
		set
		{
			if(_RefDocNo != value)
			{
				OnRefDocNoChanging(value);
				_RefDocNo = value;
				OnRefDocNoChanged();
			}
		}
	}
	private string _RefDocNo;

	partial void OnRefDocNoChanging(string newValue);
	partial void OnRefDocNoChanged();

    public string Flag 
	{ 
		get
		{
			return _Flag;
		}
		set
		{
			if(_Flag != value)
			{
				OnFlagChanging(value);
				_Flag = value;
				OnFlagChanged();
			}
		}
	}
	private string _Flag;

	partial void OnFlagChanging(string newValue);
	partial void OnFlagChanged();

    public string RefMessage 
	{ 
		get
		{
			return _RefMessage;
		}
		set
		{
			if(_RefMessage != value)
			{
				OnRefMessageChanging(value);
				_RefMessage = value;
				OnRefMessageChanged();
			}
		}
	}
	private string _RefMessage;

	partial void OnRefMessageChanging(string newValue);
	partial void OnRefMessageChanged();

    public virtual OPLCK OPLCK { get; set; }
    public virtual OTASK OTASK { get; set; }
    public virtual OTCSE OTCSE { get; set; }
}

[Serializable]
public partial class TASK4 : ObjectWithState
{

    public int TASK4ID 
	{ 
		get
		{
			return _TASK4ID;
		}
		set
		{
			if(_TASK4ID != value)
			{
				OnTASK4IDChanging(value);
				_TASK4ID = value;
				OnTASK4IDChanged();
			}
		}
	}
	private int _TASK4ID;

	partial void OnTASK4IDChanging(int newValue);
	partial void OnTASK4IDChanged();

    public int TaskID 
	{ 
		get
		{
			return _TaskID;
		}
		set
		{
			if(_TaskID != value)
			{
				OnTaskIDChanging(value);
				_TaskID = value;
				OnTaskIDChanged();
			}
		}
	}
	private int _TaskID;

	partial void OnTaskIDChanging(int newValue);
	partial void OnTaskIDChanged();

    public int PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private int _PlantID;

	partial void OnPlantIDChanging(int newValue);
	partial void OnPlantIDChanged();

    public int StorageLocID 
	{ 
		get
		{
			return _StorageLocID;
		}
		set
		{
			if(_StorageLocID != value)
			{
				OnStorageLocIDChanging(value);
				_StorageLocID = value;
				OnStorageLocIDChanged();
			}
		}
	}
	private int _StorageLocID;

	partial void OnStorageLocIDChanging(int newValue);
	partial void OnStorageLocIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public string BatchSerial 
	{ 
		get
		{
			return _BatchSerial;
		}
		set
		{
			if(_BatchSerial != value)
			{
				OnBatchSerialChanging(value);
				_BatchSerial = value;
				OnBatchSerialChanged();
			}
		}
	}
	private string _BatchSerial;

	partial void OnBatchSerialChanging(string newValue);
	partial void OnBatchSerialChanged();

    public decimal Quantity 
	{ 
		get
		{
			return _Quantity;
		}
		set
		{
			if(_Quantity != value)
			{
				OnQuantityChanging(value);
				_Quantity = value;
				OnQuantityChanged();
			}
		}
	}
	private decimal _Quantity;

	partial void OnQuantityChanging(decimal newValue);
	partial void OnQuantityChanged();

    public string ReplaceItem 
	{ 
		get
		{
			return _ReplaceItem;
		}
		set
		{
			if(_ReplaceItem != value)
			{
				OnReplaceItemChanging(value);
				_ReplaceItem = value;
				OnReplaceItemChanged();
			}
		}
	}
	private string _ReplaceItem;

	partial void OnReplaceItemChanging(string newValue);
	partial void OnReplaceItemChanged();

    public string ReplaceItemBatchSerial 
	{ 
		get
		{
			return _ReplaceItemBatchSerial;
		}
		set
		{
			if(_ReplaceItemBatchSerial != value)
			{
				OnReplaceItemBatchSerialChanging(value);
				_ReplaceItemBatchSerial = value;
				OnReplaceItemBatchSerialChanged();
			}
		}
	}
	private string _ReplaceItemBatchSerial;

	partial void OnReplaceItemBatchSerialChanging(string newValue);
	partial void OnReplaceItemBatchSerialChanged();

    public string Remarks 
	{ 
		get
		{
			return _Remarks;
		}
		set
		{
			if(_Remarks != value)
			{
				OnRemarksChanging(value);
				_Remarks = value;
				OnRemarksChanged();
			}
		}
	}
	private string _Remarks;

	partial void OnRemarksChanging(string newValue);
	partial void OnRemarksChanged();

    public Nullable<int> TaskCallID 
	{ 
		get
		{
			return _TaskCallID;
		}
		set
		{
			if(_TaskCallID != value)
			{
				OnTaskCallIDChanging(value);
				_TaskCallID = value;
				OnTaskCallIDChanged();
			}
		}
	}
	private Nullable<int> _TaskCallID;

	partial void OnTaskCallIDChanging(Nullable<int> newValue);
	partial void OnTaskCallIDChanged();

    public string RefDocNo 
	{ 
		get
		{
			return _RefDocNo;
		}
		set
		{
			if(_RefDocNo != value)
			{
				OnRefDocNoChanging(value);
				_RefDocNo = value;
				OnRefDocNoChanged();
			}
		}
	}
	private string _RefDocNo;

	partial void OnRefDocNoChanging(string newValue);
	partial void OnRefDocNoChanged();

    public string Flag 
	{ 
		get
		{
			return _Flag;
		}
		set
		{
			if(_Flag != value)
			{
				OnFlagChanging(value);
				_Flag = value;
				OnFlagChanged();
			}
		}
	}
	private string _Flag;

	partial void OnFlagChanging(string newValue);
	partial void OnFlagChanged();

    public string RefMessage 
	{ 
		get
		{
			return _RefMessage;
		}
		set
		{
			if(_RefMessage != value)
			{
				OnRefMessageChanging(value);
				_RefMessage = value;
				OnRefMessageChanged();
			}
		}
	}
	private string _RefMessage;

	partial void OnRefMessageChanging(string newValue);
	partial void OnRefMessageChanged();

    public Nullable<bool> IsAutoReplace 
	{ 
		get
		{
			return _IsAutoReplace;
		}
		set
		{
			if(_IsAutoReplace != value)
			{
				OnIsAutoReplaceChanging(value);
				_IsAutoReplace = value;
				OnIsAutoReplaceChanged();
			}
		}
	}
	private Nullable<bool> _IsAutoReplace;

	partial void OnIsAutoReplaceChanging(Nullable<bool> newValue);
	partial void OnIsAutoReplaceChanged();

    public string RplcRefDocNo 
	{ 
		get
		{
			return _RplcRefDocNo;
		}
		set
		{
			if(_RplcRefDocNo != value)
			{
				OnRplcRefDocNoChanging(value);
				_RplcRefDocNo = value;
				OnRplcRefDocNoChanged();
			}
		}
	}
	private string _RplcRefDocNo;

	partial void OnRplcRefDocNoChanging(string newValue);
	partial void OnRplcRefDocNoChanged();

    public string RplcFlag 
	{ 
		get
		{
			return _RplcFlag;
		}
		set
		{
			if(_RplcFlag != value)
			{
				OnRplcFlagChanging(value);
				_RplcFlag = value;
				OnRplcFlagChanged();
			}
		}
	}
	private string _RplcFlag;

	partial void OnRplcFlagChanging(string newValue);
	partial void OnRplcFlagChanged();

    public string RplcRefMessage 
	{ 
		get
		{
			return _RplcRefMessage;
		}
		set
		{
			if(_RplcRefMessage != value)
			{
				OnRplcRefMessageChanging(value);
				_RplcRefMessage = value;
				OnRplcRefMessageChanged();
			}
		}
	}
	private string _RplcRefMessage;

	partial void OnRplcRefMessageChanging(string newValue);
	partial void OnRplcRefMessageChanged();

    public virtual OITM OITM { get; set; }
    public virtual OTASK OTASK { get; set; }
    public virtual OTCSE OTCSE { get; set; }
}

[Serializable]
public partial class TAX1 : ObjectWithState
{

    public int Tax1ID 
	{ 
		get
		{
			return _Tax1ID;
		}
		set
		{
			if(_Tax1ID != value)
			{
				OnTax1IDChanging(value);
				_Tax1ID = value;
				OnTax1IDChanged();
			}
		}
	}
	private int _Tax1ID;

	partial void OnTax1IDChanging(int newValue);
	partial void OnTax1IDChanged();

    public int TaxID 
	{ 
		get
		{
			return _TaxID;
		}
		set
		{
			if(_TaxID != value)
			{
				OnTaxIDChanging(value);
				_TaxID = value;
				OnTaxIDChanged();
			}
		}
	}
	private int _TaxID;

	partial void OnTaxIDChanging(int newValue);
	partial void OnTaxIDChanged();

    public string Code 
	{ 
		get
		{
			return _Code;
		}
		set
		{
			if(_Code != value)
			{
				OnCodeChanging(value);
				_Code = value;
				OnCodeChanged();
			}
		}
	}
	private string _Code;

	partial void OnCodeChanging(string newValue);
	partial void OnCodeChanged();

    public decimal Percentage 
	{ 
		get
		{
			return _Percentage;
		}
		set
		{
			if(_Percentage != value)
			{
				OnPercentageChanging(value);
				_Percentage = value;
				OnPercentageChanged();
			}
		}
	}
	private decimal _Percentage;

	partial void OnPercentageChanging(decimal newValue);
	partial void OnPercentageChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public Nullable<decimal> RefPer 
	{ 
		get
		{
			return _RefPer;
		}
		set
		{
			if(_RefPer != value)
			{
				OnRefPerChanging(value);
				_RefPer = value;
				OnRefPerChanged();
			}
		}
	}
	private Nullable<decimal> _RefPer;

	partial void OnRefPerChanging(Nullable<decimal> newValue);
	partial void OnRefPerChanged();

    public virtual OTAX OTAX { get; set; }
}

[Serializable]
public partial class TAX2 : ObjectWithState
{

    public int TAX2ID 
	{ 
		get
		{
			return _TAX2ID;
		}
		set
		{
			if(_TAX2ID != value)
			{
				OnTAX2IDChanging(value);
				_TAX2ID = value;
				OnTAX2IDChanged();
			}
		}
	}
	private int _TAX2ID;

	partial void OnTAX2IDChanging(int newValue);
	partial void OnTAX2IDChanged();

    public string Code 
	{ 
		get
		{
			return _Code;
		}
		set
		{
			if(_Code != value)
			{
				OnCodeChanging(value);
				_Code = value;
				OnCodeChanged();
			}
		}
	}
	private string _Code;

	partial void OnCodeChanging(string newValue);
	partial void OnCodeChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();
}

[Serializable]
public partial class TAX3 : ObjectWithState
{

    public int TaxCodeID 
	{ 
		get
		{
			return _TaxCodeID;
		}
		set
		{
			if(_TaxCodeID != value)
			{
				OnTaxCodeIDChanging(value);
				_TaxCodeID = value;
				OnTaxCodeIDChanged();
			}
		}
	}
	private int _TaxCodeID;

	partial void OnTaxCodeIDChanging(int newValue);
	partial void OnTaxCodeIDChanged();

    public int TaxCode 
	{ 
		get
		{
			return _TaxCode;
		}
		set
		{
			if(_TaxCode != value)
			{
				OnTaxCodeChanging(value);
				_TaxCode = value;
				OnTaxCodeChanged();
			}
		}
	}
	private int _TaxCode;

	partial void OnTaxCodeChanging(int newValue);
	partial void OnTaxCodeChanged();

    public int SS 
	{ 
		get
		{
			return _SS;
		}
		set
		{
			if(_SS != value)
			{
				OnSSChanging(value);
				_SS = value;
				OnSSChanged();
			}
		}
	}
	private int _SS;

	partial void OnSSChanging(int newValue);
	partial void OnSSChanged();

    public int OS 
	{ 
		get
		{
			return _OS;
		}
		set
		{
			if(_OS != value)
			{
				OnOSChanging(value);
				_OS = value;
				OnOSChanged();
			}
		}
	}
	private int _OS;

	partial void OnOSChanging(int newValue);
	partial void OnOSChanged();

    public int US 
	{ 
		get
		{
			return _US;
		}
		set
		{
			if(_US != value)
			{
				OnUSChanging(value);
				_US = value;
				OnUSChanged();
			}
		}
	}
	private int _US;

	partial void OnUSChanging(int newValue);
	partial void OnUSChanged();
}

[Serializable]
public partial class TCRD1 : ObjectWithState
{

    public int TCRD1ID 
	{ 
		get
		{
			return _TCRD1ID;
		}
		set
		{
			if(_TCRD1ID != value)
			{
				OnTCRD1IDChanging(value);
				_TCRD1ID = value;
				OnTCRD1IDChanged();
			}
		}
	}
	private int _TCRD1ID;

	partial void OnTCRD1IDChanging(int newValue);
	partial void OnTCRD1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int TCustID 
	{ 
		get
		{
			return _TCustID;
		}
		set
		{
			if(_TCustID != value)
			{
				OnTCustIDChanging(value);
				_TCustID = value;
				OnTCustIDChanged();
			}
		}
	}
	private int _TCustID;

	partial void OnTCustIDChanging(int newValue);
	partial void OnTCustIDChanged();

    public string AddressType 
	{ 
		get
		{
			return _AddressType;
		}
		set
		{
			if(_AddressType != value)
			{
				OnAddressTypeChanging(value);
				_AddressType = value;
				OnAddressTypeChanged();
			}
		}
	}
	private string _AddressType;

	partial void OnAddressTypeChanging(string newValue);
	partial void OnAddressTypeChanged();

    public string Address1 
	{ 
		get
		{
			return _Address1;
		}
		set
		{
			if(_Address1 != value)
			{
				OnAddress1Changing(value);
				_Address1 = value;
				OnAddress1Changed();
			}
		}
	}
	private string _Address1;

	partial void OnAddress1Changing(string newValue);
	partial void OnAddress1Changed();

    public string Address2 
	{ 
		get
		{
			return _Address2;
		}
		set
		{
			if(_Address2 != value)
			{
				OnAddress2Changing(value);
				_Address2 = value;
				OnAddress2Changed();
			}
		}
	}
	private string _Address2;

	partial void OnAddress2Changing(string newValue);
	partial void OnAddress2Changed();

    public string Landmark 
	{ 
		get
		{
			return _Landmark;
		}
		set
		{
			if(_Landmark != value)
			{
				OnLandmarkChanging(value);
				_Landmark = value;
				OnLandmarkChanged();
			}
		}
	}
	private string _Landmark;

	partial void OnLandmarkChanging(string newValue);
	partial void OnLandmarkChanged();

    public Nullable<int> CityID 
	{ 
		get
		{
			return _CityID;
		}
		set
		{
			if(_CityID != value)
			{
				OnCityIDChanging(value);
				_CityID = value;
				OnCityIDChanged();
			}
		}
	}
	private Nullable<int> _CityID;

	partial void OnCityIDChanging(Nullable<int> newValue);
	partial void OnCityIDChanged();

    public string District 
	{ 
		get
		{
			return _District;
		}
		set
		{
			if(_District != value)
			{
				OnDistrictChanging(value);
				_District = value;
				OnDistrictChanged();
			}
		}
	}
	private string _District;

	partial void OnDistrictChanging(string newValue);
	partial void OnDistrictChanged();

    public Nullable<int> StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private Nullable<int> _StateID;

	partial void OnStateIDChanging(Nullable<int> newValue);
	partial void OnStateIDChanged();

    public Nullable<int> CountryID 
	{ 
		get
		{
			return _CountryID;
		}
		set
		{
			if(_CountryID != value)
			{
				OnCountryIDChanging(value);
				_CountryID = value;
				OnCountryIDChanged();
			}
		}
	}
	private Nullable<int> _CountryID;

	partial void OnCountryIDChanging(Nullable<int> newValue);
	partial void OnCountryIDChanged();

    public string PinCode 
	{ 
		get
		{
			return _PinCode;
		}
		set
		{
			if(_PinCode != value)
			{
				OnPinCodeChanging(value);
				_PinCode = value;
				OnPinCodeChanged();
			}
		}
	}
	private string _PinCode;

	partial void OnPinCodeChanging(string newValue);
	partial void OnPinCodeChanged();

    public string OfficalEmail 
	{ 
		get
		{
			return _OfficalEmail;
		}
		set
		{
			if(_OfficalEmail != value)
			{
				OnOfficalEmailChanging(value);
				_OfficalEmail = value;
				OnOfficalEmailChanged();
			}
		}
	}
	private string _OfficalEmail;

	partial void OnOfficalEmailChanging(string newValue);
	partial void OnOfficalEmailChanged();

    public string OfficalPhone 
	{ 
		get
		{
			return _OfficalPhone;
		}
		set
		{
			if(_OfficalPhone != value)
			{
				OnOfficalPhoneChanging(value);
				_OfficalPhone = value;
				OnOfficalPhoneChanged();
			}
		}
	}
	private string _OfficalPhone;

	partial void OnOfficalPhoneChanging(string newValue);
	partial void OnOfficalPhoneChanged();

    public string ContactPerson 
	{ 
		get
		{
			return _ContactPerson;
		}
		set
		{
			if(_ContactPerson != value)
			{
				OnContactPersonChanging(value);
				_ContactPerson = value;
				OnContactPersonChanged();
			}
		}
	}
	private string _ContactPerson;

	partial void OnContactPersonChanging(string newValue);
	partial void OnContactPersonChanged();

    public string MobileNo 
	{ 
		get
		{
			return _MobileNo;
		}
		set
		{
			if(_MobileNo != value)
			{
				OnMobileNoChanging(value);
				_MobileNo = value;
				OnMobileNoChanged();
			}
		}
	}
	private string _MobileNo;

	partial void OnMobileNoChanging(string newValue);
	partial void OnMobileNoChanged();

    public string EmailID 
	{ 
		get
		{
			return _EmailID;
		}
		set
		{
			if(_EmailID != value)
			{
				OnEmailIDChanging(value);
				_EmailID = value;
				OnEmailIDChanged();
			}
		}
	}
	private string _EmailID;

	partial void OnEmailIDChanging(string newValue);
	partial void OnEmailIDChanged();

    public string Web 
	{ 
		get
		{
			return _Web;
		}
		set
		{
			if(_Web != value)
			{
				OnWebChanging(value);
				_Web = value;
				OnWebChanged();
			}
		}
	}
	private string _Web;

	partial void OnWebChanging(string newValue);
	partial void OnWebChanged();

    public virtual TOCRD TOCRD { get; set; }
}

[Serializable]
public partial class TEM1 : ObjectWithState
{

    public int TEMP1ID 
	{ 
		get
		{
			return _TEMP1ID;
		}
		set
		{
			if(_TEMP1ID != value)
			{
				OnTEMP1IDChanging(value);
				_TEMP1ID = value;
				OnTEMP1IDChanged();
			}
		}
	}
	private int _TEMP1ID;

	partial void OnTEMP1IDChanging(int newValue);
	partial void OnTEMP1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int MatrixID 
	{ 
		get
		{
			return _MatrixID;
		}
		set
		{
			if(_MatrixID != value)
			{
				OnMatrixIDChanging(value);
				_MatrixID = value;
				OnMatrixIDChanged();
			}
		}
	}
	private int _MatrixID;

	partial void OnMatrixIDChanging(int newValue);
	partial void OnMatrixIDChanged();

    public int LevelNo 
	{ 
		get
		{
			return _LevelNo;
		}
		set
		{
			if(_LevelNo != value)
			{
				OnLevelNoChanging(value);
				_LevelNo = value;
				OnLevelNoChanged();
			}
		}
	}
	private int _LevelNo;

	partial void OnLevelNoChanging(int newValue);
	partial void OnLevelNoChanged();

    public int OutCityFromHr 
	{ 
		get
		{
			return _OutCityFromHr;
		}
		set
		{
			if(_OutCityFromHr != value)
			{
				OnOutCityFromHrChanging(value);
				_OutCityFromHr = value;
				OnOutCityFromHrChanged();
			}
		}
	}
	private int _OutCityFromHr;

	partial void OnOutCityFromHrChanging(int newValue);
	partial void OnOutCityFromHrChanged();

    public int OutCityToHr 
	{ 
		get
		{
			return _OutCityToHr;
		}
		set
		{
			if(_OutCityToHr != value)
			{
				OnOutCityToHrChanging(value);
				_OutCityToHr = value;
				OnOutCityToHrChanged();
			}
		}
	}
	private int _OutCityToHr;

	partial void OnOutCityToHrChanging(int newValue);
	partial void OnOutCityToHrChanged();

    public int InCityFromHr 
	{ 
		get
		{
			return _InCityFromHr;
		}
		set
		{
			if(_InCityFromHr != value)
			{
				OnInCityFromHrChanging(value);
				_InCityFromHr = value;
				OnInCityFromHrChanged();
			}
		}
	}
	private int _InCityFromHr;

	partial void OnInCityFromHrChanging(int newValue);
	partial void OnInCityFromHrChanged();

    public int InCityToHr 
	{ 
		get
		{
			return _InCityToHr;
		}
		set
		{
			if(_InCityToHr != value)
			{
				OnInCityToHrChanging(value);
				_InCityToHr = value;
				OnInCityToHrChanged();
			}
		}
	}
	private int _InCityToHr;

	partial void OnInCityToHrChanging(int newValue);
	partial void OnInCityToHrChanged();

    public int MechHrchy 
	{ 
		get
		{
			return _MechHrchy;
		}
		set
		{
			if(_MechHrchy != value)
			{
				OnMechHrchyChanging(value);
				_MechHrchy = value;
				OnMechHrchyChanged();
			}
		}
	}
	private int _MechHrchy;

	partial void OnMechHrchyChanging(int newValue);
	partial void OnMechHrchyChanged();

    public int FStaffHrchy 
	{ 
		get
		{
			return _FStaffHrchy;
		}
		set
		{
			if(_FStaffHrchy != value)
			{
				OnFStaffHrchyChanging(value);
				_FStaffHrchy = value;
				OnFStaffHrchyChanged();
			}
		}
	}
	private int _FStaffHrchy;

	partial void OnFStaffHrchyChanging(int newValue);
	partial void OnFStaffHrchyChanged();

    public string EmaiIDs 
	{ 
		get
		{
			return _EmaiIDs;
		}
		set
		{
			if(_EmaiIDs != value)
			{
				OnEmaiIDsChanging(value);
				_EmaiIDs = value;
				OnEmaiIDsChanged();
			}
		}
	}
	private string _EmaiIDs;

	partial void OnEmaiIDsChanging(string newValue);
	partial void OnEmaiIDsChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public virtual OGRP OGRP { get; set; }
    public virtual OGRP OGRP1 { get; set; }
    public virtual OTEM OTEM { get; set; }
}

[Serializable]
public partial class TEMPC : ObjectWithState
{

    public int TEMPID 
	{ 
		get
		{
			return _TEMPID;
		}
		set
		{
			if(_TEMPID != value)
			{
				OnTEMPIDChanging(value);
				_TEMPID = value;
				OnTEMPIDChanged();
			}
		}
	}
	private int _TEMPID;

	partial void OnTEMPIDChanging(int newValue);
	partial void OnTEMPIDChanged();

    public string Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private string _Type;

	partial void OnTypeChanging(string newValue);
	partial void OnTypeChanged();
}

[Serializable]
public partial class TOCRD : ObjectWithState
{
    public TOCRD() 
    { 
        this.TCRD1 = new HashSet<TCRD1>();
    }


    public int TCustID 
	{ 
		get
		{
			return _TCustID;
		}
		set
		{
			if(_TCustID != value)
			{
				OnTCustIDChanging(value);
				_TCustID = value;
				OnTCustIDChanged();
			}
		}
	}
	private int _TCustID;

	partial void OnTCustIDChanging(int newValue);
	partial void OnTCustIDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public string PAN 
	{ 
		get
		{
			return _PAN;
		}
		set
		{
			if(_PAN != value)
			{
				OnPANChanging(value);
				_PAN = value;
				OnPANChanged();
			}
		}
	}
	private string _PAN;

	partial void OnPANChanging(string newValue);
	partial void OnPANChanged();

    public bool PANApplicable 
	{ 
		get
		{
			return _PANApplicable;
		}
		set
		{
			if(_PANApplicable != value)
			{
				OnPANApplicableChanging(value);
				_PANApplicable = value;
				OnPANApplicableChanged();
			}
		}
	}
	private bool _PANApplicable;

	partial void OnPANApplicableChanging(bool newValue);
	partial void OnPANApplicableChanged();

    public string PANUpload 
	{ 
		get
		{
			return _PANUpload;
		}
		set
		{
			if(_PANUpload != value)
			{
				OnPANUploadChanging(value);
				_PANUpload = value;
				OnPANUploadChanged();
			}
		}
	}
	private string _PANUpload;

	partial void OnPANUploadChanging(string newValue);
	partial void OnPANUploadChanged();

    public string GST 
	{ 
		get
		{
			return _GST;
		}
		set
		{
			if(_GST != value)
			{
				OnGSTChanging(value);
				_GST = value;
				OnGSTChanged();
			}
		}
	}
	private string _GST;

	partial void OnGSTChanging(string newValue);
	partial void OnGSTChanged();

    public string GSTUpload 
	{ 
		get
		{
			return _GSTUpload;
		}
		set
		{
			if(_GSTUpload != value)
			{
				OnGSTUploadChanging(value);
				_GSTUpload = value;
				OnGSTUploadChanged();
			}
		}
	}
	private string _GSTUpload;

	partial void OnGSTUploadChanging(string newValue);
	partial void OnGSTUploadChanged();

    public bool CompositeScheme 
	{ 
		get
		{
			return _CompositeScheme;
		}
		set
		{
			if(_CompositeScheme != value)
			{
				OnCompositeSchemeChanging(value);
				_CompositeScheme = value;
				OnCompositeSchemeChanged();
			}
		}
	}
	private bool _CompositeScheme;

	partial void OnCompositeSchemeChanging(bool newValue);
	partial void OnCompositeSchemeChanged();

    public string VAT 
	{ 
		get
		{
			return _VAT;
		}
		set
		{
			if(_VAT != value)
			{
				OnVATChanging(value);
				_VAT = value;
				OnVATChanged();
			}
		}
	}
	private string _VAT;

	partial void OnVATChanging(string newValue);
	partial void OnVATChanged();

    public string VATUpload 
	{ 
		get
		{
			return _VATUpload;
		}
		set
		{
			if(_VATUpload != value)
			{
				OnVATUploadChanging(value);
				_VATUpload = value;
				OnVATUploadChanged();
			}
		}
	}
	private string _VATUpload;

	partial void OnVATUploadChanging(string newValue);
	partial void OnVATUploadChanged();

    public string CST 
	{ 
		get
		{
			return _CST;
		}
		set
		{
			if(_CST != value)
			{
				OnCSTChanging(value);
				_CST = value;
				OnCSTChanged();
			}
		}
	}
	private string _CST;

	partial void OnCSTChanging(string newValue);
	partial void OnCSTChanged();

    public string CSTupload 
	{ 
		get
		{
			return _CSTupload;
		}
		set
		{
			if(_CSTupload != value)
			{
				OnCSTuploadChanging(value);
				_CSTupload = value;
				OnCSTuploadChanged();
			}
		}
	}
	private string _CSTupload;

	partial void OnCSTuploadChanging(string newValue);
	partial void OnCSTuploadChanged();

    public string SAPFlag 
	{ 
		get
		{
			return _SAPFlag;
		}
		set
		{
			if(_SAPFlag != value)
			{
				OnSAPFlagChanging(value);
				_SAPFlag = value;
				OnSAPFlagChanged();
			}
		}
	}
	private string _SAPFlag;

	partial void OnSAPFlagChanging(string newValue);
	partial void OnSAPFlagChanged();

    public string SAPMessage 
	{ 
		get
		{
			return _SAPMessage;
		}
		set
		{
			if(_SAPMessage != value)
			{
				OnSAPMessageChanging(value);
				_SAPMessage = value;
				OnSAPMessageChanged();
			}
		}
	}
	private string _SAPMessage;

	partial void OnSAPMessageChanging(string newValue);
	partial void OnSAPMessageChanged();

    public bool Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private bool _Active;

	partial void OnActiveChanging(bool newValue);
	partial void OnActiveChanged();

    public System.DateTime CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private System.DateTime _CreatedDate;

	partial void OnCreatedDateChanging(System.DateTime newValue);
	partial void OnCreatedDateChanged();

    public int CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private int _CreatedBy;

	partial void OnCreatedByChanging(int newValue);
	partial void OnCreatedByChanged();

    public int Status 
	{ 
		get
		{
			return _Status;
		}
		set
		{
			if(_Status != value)
			{
				OnStatusChanging(value);
				_Status = value;
				OnStatusChanged();
			}
		}
	}
	private int _Status;

	partial void OnStatusChanging(int newValue);
	partial void OnStatusChanged();

    public Nullable<int> DeletedBy 
	{ 
		get
		{
			return _DeletedBy;
		}
		set
		{
			if(_DeletedBy != value)
			{
				OnDeletedByChanging(value);
				_DeletedBy = value;
				OnDeletedByChanged();
			}
		}
	}
	private Nullable<int> _DeletedBy;

	partial void OnDeletedByChanging(Nullable<int> newValue);
	partial void OnDeletedByChanged();

    public Nullable<System.DateTime> DeletedDate 
	{ 
		get
		{
			return _DeletedDate;
		}
		set
		{
			if(_DeletedDate != value)
			{
				OnDeletedDateChanging(value);
				_DeletedDate = value;
				OnDeletedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _DeletedDate;

	partial void OnDeletedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnDeletedDateChanged();

    public virtual ICollection<TCRD1> TCRD1 { get; set; }
}

[Serializable]
public partial class VND1 : ObjectWithState
{

    public int VND1ID 
	{ 
		get
		{
			return _VND1ID;
		}
		set
		{
			if(_VND1ID != value)
			{
				OnVND1IDChanging(value);
				_VND1ID = value;
				OnVND1IDChanged();
			}
		}
	}
	private int _VND1ID;

	partial void OnVND1IDChanging(int newValue);
	partial void OnVND1IDChanged();

    public decimal ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private decimal _ParentID;

	partial void OnParentIDChanging(decimal newValue);
	partial void OnParentIDChanged();

    public int VendorID 
	{ 
		get
		{
			return _VendorID;
		}
		set
		{
			if(_VendorID != value)
			{
				OnVendorIDChanging(value);
				_VendorID = value;
				OnVendorIDChanged();
			}
		}
	}
	private int _VendorID;

	partial void OnVendorIDChanging(int newValue);
	partial void OnVendorIDChanged();

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal Price 
	{ 
		get
		{
			return _Price;
		}
		set
		{
			if(_Price != value)
			{
				OnPriceChanging(value);
				_Price = value;
				OnPriceChanged();
			}
		}
	}
	private decimal _Price;

	partial void OnPriceChanging(decimal newValue);
	partial void OnPriceChanged();

    public int TaxID 
	{ 
		get
		{
			return _TaxID;
		}
		set
		{
			if(_TaxID != value)
			{
				OnTaxIDChanging(value);
				_TaxID = value;
				OnTaxIDChanged();
			}
		}
	}
	private int _TaxID;

	partial void OnTaxIDChanging(int newValue);
	partial void OnTaxIDChanged();

    public bool SyncStatus 
	{ 
		get
		{
			return _SyncStatus;
		}
		set
		{
			if(_SyncStatus != value)
			{
				OnSyncStatusChanging(value);
				_SyncStatus = value;
				OnSyncStatusChanged();
			}
		}
	}
	private bool _SyncStatus;

	partial void OnSyncStatusChanging(bool newValue);
	partial void OnSyncStatusChanged();

    public bool IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private bool _IsDeleted;

	partial void OnIsDeletedChanging(bool newValue);
	partial void OnIsDeletedChanged();

    public virtual OITM OITM { get; set; }
    public virtual OTAX OTAX { get; set; }
    public virtual OUNT OUNT { get; set; }
    public virtual OVND OVND { get; set; }
}

[Serializable]
public partial class vwCustomer : ObjectWithState
{

    public string CustomerName 
	{ 
		get
		{
			return _CustomerName;
		}
		set
		{
			if(_CustomerName != value)
			{
				OnCustomerNameChanging(value);
				_CustomerName = value;
				OnCustomerNameChanged();
			}
		}
	}
	private string _CustomerName;

	partial void OnCustomerNameChanging(string newValue);
	partial void OnCustomerNameChanged();

    public int Type 
	{ 
		get
		{
			return _Type;
		}
		set
		{
			if(_Type != value)
			{
				OnTypeChanging(value);
				_Type = value;
				OnTypeChanged();
			}
		}
	}
	private int _Type;

	partial void OnTypeChanging(int newValue);
	partial void OnTypeChanged();

    public string CustomerCode 
	{ 
		get
		{
			return _CustomerCode;
		}
		set
		{
			if(_CustomerCode != value)
			{
				OnCustomerCodeChanging(value);
				_CustomerCode = value;
				OnCustomerCodeChanged();
			}
		}
	}
	private string _CustomerCode;

	partial void OnCustomerCodeChanging(string newValue);
	partial void OnCustomerCodeChanged();

    public string Phone 
	{ 
		get
		{
			return _Phone;
		}
		set
		{
			if(_Phone != value)
			{
				OnPhoneChanging(value);
				_Phone = value;
				OnPhoneChanged();
			}
		}
	}
	private string _Phone;

	partial void OnPhoneChanging(string newValue);
	partial void OnPhoneChanged();

    public decimal CustomerID 
	{ 
		get
		{
			return _CustomerID;
		}
		set
		{
			if(_CustomerID != value)
			{
				OnCustomerIDChanging(value);
				_CustomerID = value;
				OnCustomerIDChanged();
			}
		}
	}
	private decimal _CustomerID;

	partial void OnCustomerIDChanging(decimal newValue);
	partial void OnCustomerIDChanged();

    public int PlantID 
	{ 
		get
		{
			return _PlantID;
		}
		set
		{
			if(_PlantID != value)
			{
				OnPlantIDChanging(value);
				_PlantID = value;
				OnPlantIDChanged();
			}
		}
	}
	private int _PlantID;

	partial void OnPlantIDChanging(int newValue);
	partial void OnPlantIDChanged();

    public Nullable<int> StateID 
	{ 
		get
		{
			return _StateID;
		}
		set
		{
			if(_StateID != value)
			{
				OnStateIDChanging(value);
				_StateID = value;
				OnStateIDChanged();
			}
		}
	}
	private Nullable<int> _StateID;

	partial void OnStateIDChanging(Nullable<int> newValue);
	partial void OnStateIDChanged();
}

[Serializable]
public partial class WPM1 : ObjectWithState
{

    public int WPM1ID 
	{ 
		get
		{
			return _WPM1ID;
		}
		set
		{
			if(_WPM1ID != value)
			{
				OnWPM1IDChanging(value);
				_WPM1ID = value;
				OnWPM1IDChanged();
			}
		}
	}
	private int _WPM1ID;

	partial void OnWPM1IDChanging(int newValue);
	partial void OnWPM1IDChanged();

    public Nullable<int> OWPMID 
	{ 
		get
		{
			return _OWPMID;
		}
		set
		{
			if(_OWPMID != value)
			{
				OnOWPMIDChanging(value);
				_OWPMID = value;
				OnOWPMIDChanged();
			}
		}
	}
	private Nullable<int> _OWPMID;

	partial void OnOWPMIDChanging(Nullable<int> newValue);
	partial void OnOWPMIDChanged();

    public string WeekDays 
	{ 
		get
		{
			return _WeekDays;
		}
		set
		{
			if(_WeekDays != value)
			{
				OnWeekDaysChanging(value);
				_WeekDays = value;
				OnWeekDaysChanged();
			}
		}
	}
	private string _WeekDays;

	partial void OnWeekDaysChanging(string newValue);
	partial void OnWeekDaysChanged();

    public Nullable<int> Day1 
	{ 
		get
		{
			return _Day1;
		}
		set
		{
			if(_Day1 != value)
			{
				OnDay1Changing(value);
				_Day1 = value;
				OnDay1Changed();
			}
		}
	}
	private Nullable<int> _Day1;

	partial void OnDay1Changing(Nullable<int> newValue);
	partial void OnDay1Changed();

    public Nullable<int> Day2 
	{ 
		get
		{
			return _Day2;
		}
		set
		{
			if(_Day2 != value)
			{
				OnDay2Changing(value);
				_Day2 = value;
				OnDay2Changed();
			}
		}
	}
	private Nullable<int> _Day2;

	partial void OnDay2Changing(Nullable<int> newValue);
	partial void OnDay2Changed();

    public Nullable<int> Day3 
	{ 
		get
		{
			return _Day3;
		}
		set
		{
			if(_Day3 != value)
			{
				OnDay3Changing(value);
				_Day3 = value;
				OnDay3Changed();
			}
		}
	}
	private Nullable<int> _Day3;

	partial void OnDay3Changing(Nullable<int> newValue);
	partial void OnDay3Changed();

    public Nullable<int> EmpGroupID 
	{ 
		get
		{
			return _EmpGroupID;
		}
		set
		{
			if(_EmpGroupID != value)
			{
				OnEmpGroupIDChanging(value);
				_EmpGroupID = value;
				OnEmpGroupIDChanged();
			}
		}
	}
	private Nullable<int> _EmpGroupID;

	partial void OnEmpGroupIDChanging(Nullable<int> newValue);
	partial void OnEmpGroupIDChanged();

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public Nullable<int> DistRegionID 
	{ 
		get
		{
			return _DistRegionID;
		}
		set
		{
			if(_DistRegionID != value)
			{
				OnDistRegionIDChanging(value);
				_DistRegionID = value;
				OnDistRegionIDChanged();
			}
		}
	}
	private Nullable<int> _DistRegionID;

	partial void OnDistRegionIDChanging(Nullable<int> newValue);
	partial void OnDistRegionIDChanged();

    public Nullable<decimal> SSID 
	{ 
		get
		{
			return _SSID;
		}
		set
		{
			if(_SSID != value)
			{
				OnSSIDChanging(value);
				_SSID = value;
				OnSSIDChanged();
			}
		}
	}
	private Nullable<decimal> _SSID;

	partial void OnSSIDChanging(Nullable<decimal> newValue);
	partial void OnSSIDChanged();

    public Nullable<decimal> DistributorID 
	{ 
		get
		{
			return _DistributorID;
		}
		set
		{
			if(_DistributorID != value)
			{
				OnDistributorIDChanging(value);
				_DistributorID = value;
				OnDistributorIDChanged();
			}
		}
	}
	private Nullable<decimal> _DistributorID;

	partial void OnDistributorIDChanging(Nullable<decimal> newValue);
	partial void OnDistributorIDChanged();

    public Nullable<decimal> DealerID 
	{ 
		get
		{
			return _DealerID;
		}
		set
		{
			if(_DealerID != value)
			{
				OnDealerIDChanging(value);
				_DealerID = value;
				OnDealerIDChanged();
			}
		}
	}
	private Nullable<decimal> _DealerID;

	partial void OnDealerIDChanging(Nullable<decimal> newValue);
	partial void OnDealerIDChanged();

    public Nullable<bool> IsInclude 
	{ 
		get
		{
			return _IsInclude;
		}
		set
		{
			if(_IsInclude != value)
			{
				OnIsIncludeChanging(value);
				_IsInclude = value;
				OnIsIncludeChanged();
			}
		}
	}
	private Nullable<bool> _IsInclude;

	partial void OnIsIncludeChanging(Nullable<bool> newValue);
	partial void OnIsIncludeChanged();

    public Nullable<int> CreatedBy 
	{ 
		get
		{
			return _CreatedBy;
		}
		set
		{
			if(_CreatedBy != value)
			{
				OnCreatedByChanging(value);
				_CreatedBy = value;
				OnCreatedByChanged();
			}
		}
	}
	private Nullable<int> _CreatedBy;

	partial void OnCreatedByChanging(Nullable<int> newValue);
	partial void OnCreatedByChanged();

    public Nullable<System.DateTime> CreatedDate 
	{ 
		get
		{
			return _CreatedDate;
		}
		set
		{
			if(_CreatedDate != value)
			{
				OnCreatedDateChanging(value);
				_CreatedDate = value;
				OnCreatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _CreatedDate;

	partial void OnCreatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnCreatedDateChanged();

    public Nullable<int> UpdateBy 
	{ 
		get
		{
			return _UpdateBy;
		}
		set
		{
			if(_UpdateBy != value)
			{
				OnUpdateByChanging(value);
				_UpdateBy = value;
				OnUpdateByChanged();
			}
		}
	}
	private Nullable<int> _UpdateBy;

	partial void OnUpdateByChanging(Nullable<int> newValue);
	partial void OnUpdateByChanged();

    public Nullable<System.DateTime> UpdatedDate 
	{ 
		get
		{
			return _UpdatedDate;
		}
		set
		{
			if(_UpdatedDate != value)
			{
				OnUpdatedDateChanging(value);
				_UpdatedDate = value;
				OnUpdatedDateChanged();
			}
		}
	}
	private Nullable<System.DateTime> _UpdatedDate;

	partial void OnUpdatedDateChanging(Nullable<System.DateTime> newValue);
	partial void OnUpdatedDateChanged();

    public Nullable<bool> IsDeleted 
	{ 
		get
		{
			return _IsDeleted;
		}
		set
		{
			if(_IsDeleted != value)
			{
				OnIsDeletedChanging(value);
				_IsDeleted = value;
				OnIsDeletedChanged();
			}
		}
	}
	private Nullable<bool> _IsDeleted;

	partial void OnIsDeletedChanging(Nullable<bool> newValue);
	partial void OnIsDeletedChanged();

    public Nullable<bool> Active 
	{ 
		get
		{
			return _Active;
		}
		set
		{
			if(_Active != value)
			{
				OnActiveChanging(value);
				_Active = value;
				OnActiveChanged();
			}
		}
	}
	private Nullable<bool> _Active;

	partial void OnActiveChanging(Nullable<bool> newValue);
	partial void OnActiveChanged();

    public virtual OWPM OWPM { get; set; }
}

public partial class AddHierarchyType_Check_Result
{

    public int IsBeatAvail 
	{ 
		get
		{
			return _IsBeatAvail;
		}
		set
		{
			if(_IsBeatAvail != value)
			{
				OnIsBeatAvailChanging(value);
				_IsBeatAvail = value;
				OnIsBeatAvailChanged();
			}
		}
	}
	private int _IsBeatAvail;

	partial void OnIsBeatAvailChanging(int newValue);
	partial void OnIsBeatAvailChanged();

    public int DealerHRY 
	{ 
		get
		{
			return _DealerHRY;
		}
		set
		{
			if(_DealerHRY != value)
			{
				OnDealerHRYChanging(value);
				_DealerHRY = value;
				OnDealerHRYChanged();
			}
		}
	}
	private int _DealerHRY;

	partial void OnDealerHRYChanging(int newValue);
	partial void OnDealerHRYChanged();

    public string Msg 
	{ 
		get
		{
			return _Msg;
		}
		set
		{
			if(_Msg != value)
			{
				OnMsgChanging(value);
				_Msg = value;
				OnMsgChanged();
			}
		}
	}
	private string _Msg;

	partial void OnMsgChanging(string newValue);
	partial void OnMsgChanged();
}

public partial class DayCloseItem_Result
{

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public string ItemCode 
	{ 
		get
		{
			return _ItemCode;
		}
		set
		{
			if(_ItemCode != value)
			{
				OnItemCodeChanging(value);
				_ItemCode = value;
				OnItemCodeChanged();
			}
		}
	}
	private string _ItemCode;

	partial void OnItemCodeChanging(string newValue);
	partial void OnItemCodeChanged();

    public string ItemName 
	{ 
		get
		{
			return _ItemName;
		}
		set
		{
			if(_ItemName != value)
			{
				OnItemNameChanging(value);
				_ItemName = value;
				OnItemNameChanged();
			}
		}
	}
	private string _ItemName;

	partial void OnItemNameChanging(string newValue);
	partial void OnItemNameChanged();

    public int GroupID 
	{ 
		get
		{
			return _GroupID;
		}
		set
		{
			if(_GroupID != value)
			{
				OnGroupIDChanging(value);
				_GroupID = value;
				OnGroupIDChanged();
			}
		}
	}
	private int _GroupID;

	partial void OnGroupIDChanging(int newValue);
	partial void OnGroupIDChanged();

    public string ItemGroupName 
	{ 
		get
		{
			return _ItemGroupName;
		}
		set
		{
			if(_ItemGroupName != value)
			{
				OnItemGroupNameChanging(value);
				_ItemGroupName = value;
				OnItemGroupNameChanged();
			}
		}
	}
	private string _ItemGroupName;

	partial void OnItemGroupNameChanging(string newValue);
	partial void OnItemGroupNameChanged();

    public Nullable<int> SubGroupID 
	{ 
		get
		{
			return _SubGroupID;
		}
		set
		{
			if(_SubGroupID != value)
			{
				OnSubGroupIDChanging(value);
				_SubGroupID = value;
				OnSubGroupIDChanged();
			}
		}
	}
	private Nullable<int> _SubGroupID;

	partial void OnSubGroupIDChanging(Nullable<int> newValue);
	partial void OnSubGroupIDChanged();

    public string ItemSubGroupName 
	{ 
		get
		{
			return _ItemSubGroupName;
		}
		set
		{
			if(_ItemSubGroupName != value)
			{
				OnItemSubGroupNameChanging(value);
				_ItemSubGroupName = value;
				OnItemSubGroupNameChanged();
			}
		}
	}
	private string _ItemSubGroupName;

	partial void OnItemSubGroupNameChanging(string newValue);
	partial void OnItemSubGroupNameChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public string UnitName 
	{ 
		get
		{
			return _UnitName;
		}
		set
		{
			if(_UnitName != value)
			{
				OnUnitNameChanging(value);
				_UnitName = value;
				OnUnitNameChanged();
			}
		}
	}
	private string _UnitName;

	partial void OnUnitNameChanging(string newValue);
	partial void OnUnitNameChanged();

    public Nullable<decimal> Opening 
	{ 
		get
		{
			return _Opening;
		}
		set
		{
			if(_Opening != value)
			{
				OnOpeningChanging(value);
				_Opening = value;
				OnOpeningChanged();
			}
		}
	}
	private Nullable<decimal> _Opening;

	partial void OnOpeningChanging(Nullable<decimal> newValue);
	partial void OnOpeningChanged();

    public decimal Inward 
	{ 
		get
		{
			return _Inward;
		}
		set
		{
			if(_Inward != value)
			{
				OnInwardChanging(value);
				_Inward = value;
				OnInwardChanged();
			}
		}
	}
	private decimal _Inward;

	partial void OnInwardChanging(decimal newValue);
	partial void OnInwardChanged();

    public decimal Consume 
	{ 
		get
		{
			return _Consume;
		}
		set
		{
			if(_Consume != value)
			{
				OnConsumeChanging(value);
				_Consume = value;
				OnConsumeChanged();
			}
		}
	}
	private decimal _Consume;

	partial void OnConsumeChanging(decimal newValue);
	partial void OnConsumeChanged();

    public decimal Wastage 
	{ 
		get
		{
			return _Wastage;
		}
		set
		{
			if(_Wastage != value)
			{
				OnWastageChanging(value);
				_Wastage = value;
				OnWastageChanged();
			}
		}
	}
	private decimal _Wastage;

	partial void OnWastageChanging(decimal newValue);
	partial void OnWastageChanged();

    public decimal Sales 
	{ 
		get
		{
			return _Sales;
		}
		set
		{
			if(_Sales != value)
			{
				OnSalesChanging(value);
				_Sales = value;
				OnSalesChanged();
			}
		}
	}
	private decimal _Sales;

	partial void OnSalesChanging(decimal newValue);
	partial void OnSalesChanged();

    public decimal Closing 
	{ 
		get
		{
			return _Closing;
		}
		set
		{
			if(_Closing != value)
			{
				OnClosingChanging(value);
				_Closing = value;
				OnClosingChanged();
			}
		}
	}
	private decimal _Closing;

	partial void OnClosingChanging(decimal newValue);
	partial void OnClosingChanged();

    public decimal Dispatch 
	{ 
		get
		{
			return _Dispatch;
		}
		set
		{
			if(_Dispatch != value)
			{
				OnDispatchChanging(value);
				_Dispatch = value;
				OnDispatchChanged();
			}
		}
	}
	private decimal _Dispatch;

	partial void OnDispatchChanging(decimal newValue);
	partial void OnDispatchChanged();

    public decimal DispatchOrder 
	{ 
		get
		{
			return _DispatchOrder;
		}
		set
		{
			if(_DispatchOrder != value)
			{
				OnDispatchOrderChanging(value);
				_DispatchOrder = value;
				OnDispatchOrderChanged();
			}
		}
	}
	private decimal _DispatchOrder;

	partial void OnDispatchOrderChanging(decimal newValue);
	partial void OnDispatchOrderChanged();

    public decimal PurchaseReturn 
	{ 
		get
		{
			return _PurchaseReturn;
		}
		set
		{
			if(_PurchaseReturn != value)
			{
				OnPurchaseReturnChanging(value);
				_PurchaseReturn = value;
				OnPurchaseReturnChanged();
			}
		}
	}
	private decimal _PurchaseReturn;

	partial void OnPurchaseReturnChanging(decimal newValue);
	partial void OnPurchaseReturnChanged();

    public decimal SaleOrder 
	{ 
		get
		{
			return _SaleOrder;
		}
		set
		{
			if(_SaleOrder != value)
			{
				OnSaleOrderChanging(value);
				_SaleOrder = value;
				OnSaleOrderChanged();
			}
		}
	}
	private decimal _SaleOrder;

	partial void OnSaleOrderChanging(decimal newValue);
	partial void OnSaleOrderChanged();

    public decimal SaleReturn 
	{ 
		get
		{
			return _SaleReturn;
		}
		set
		{
			if(_SaleReturn != value)
			{
				OnSaleReturnChanging(value);
				_SaleReturn = value;
				OnSaleReturnChanged();
			}
		}
	}
	private decimal _SaleReturn;

	partial void OnSaleReturnChanging(decimal newValue);
	partial void OnSaleReturnChanged();

    public decimal OtherSales 
	{ 
		get
		{
			return _OtherSales;
		}
		set
		{
			if(_OtherSales != value)
			{
				OnOtherSalesChanging(value);
				_OtherSales = value;
				OnOtherSalesChanged();
			}
		}
	}
	private decimal _OtherSales;

	partial void OnOtherSalesChanging(decimal newValue);
	partial void OnOtherSalesChanged();

    public decimal GainLoss 
	{ 
		get
		{
			return _GainLoss;
		}
		set
		{
			if(_GainLoss != value)
			{
				OnGainLossChanging(value);
				_GainLoss = value;
				OnGainLossChanged();
			}
		}
	}
	private decimal _GainLoss;

	partial void OnGainLossChanging(decimal newValue);
	partial void OnGainLossChanged();
}

public partial class EmployeeList_Result
{

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public Nullable<decimal> ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private Nullable<decimal> _ParentID;

	partial void OnParentIDChanging(Nullable<decimal> newValue);
	partial void OnParentIDChanged();

    public string EmpCode 
	{ 
		get
		{
			return _EmpCode;
		}
		set
		{
			if(_EmpCode != value)
			{
				OnEmpCodeChanging(value);
				_EmpCode = value;
				OnEmpCodeChanged();
			}
		}
	}
	private string _EmpCode;

	partial void OnEmpCodeChanging(string newValue);
	partial void OnEmpCodeChanged();

    public string EmpName 
	{ 
		get
		{
			return _EmpName;
		}
		set
		{
			if(_EmpName != value)
			{
				OnEmpNameChanging(value);
				_EmpName = value;
				OnEmpNameChanged();
			}
		}
	}
	private string _EmpName;

	partial void OnEmpNameChanging(string newValue);
	partial void OnEmpNameChanged();

    public Nullable<int> ManagerID 
	{ 
		get
		{
			return _ManagerID;
		}
		set
		{
			if(_ManagerID != value)
			{
				OnManagerIDChanging(value);
				_ManagerID = value;
				OnManagerIDChanged();
			}
		}
	}
	private Nullable<int> _ManagerID;

	partial void OnManagerIDChanging(Nullable<int> newValue);
	partial void OnManagerIDChanged();
}

public partial class GetClaimUserAuth_Result
{

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public Nullable<int> Sort 
	{ 
		get
		{
			return _Sort;
		}
		set
		{
			if(_Sort != value)
			{
				OnSortChanging(value);
				_Sort = value;
				OnSortChanged();
			}
		}
	}
	private Nullable<int> _Sort;

	partial void OnSortChanging(Nullable<int> newValue);
	partial void OnSortChanged();

    public Nullable<decimal> ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private Nullable<decimal> _ParentID;

	partial void OnParentIDChanging(Nullable<decimal> newValue);
	partial void OnParentIDChanged();

    public Nullable<int> EmpGroupID 
	{ 
		get
		{
			return _EmpGroupID;
		}
		set
		{
			if(_EmpGroupID != value)
			{
				OnEmpGroupIDChanging(value);
				_EmpGroupID = value;
				OnEmpGroupIDChanged();
			}
		}
	}
	private Nullable<int> _EmpGroupID;

	partial void OnEmpGroupIDChanging(Nullable<int> newValue);
	partial void OnEmpGroupIDChanged();
}

public partial class GetEmpHierarchyTree_Result
{

    public Nullable<int> EMPID 
	{ 
		get
		{
			return _EMPID;
		}
		set
		{
			if(_EMPID != value)
			{
				OnEMPIDChanging(value);
				_EMPID = value;
				OnEMPIDChanged();
			}
		}
	}
	private Nullable<int> _EMPID;

	partial void OnEMPIDChanging(Nullable<int> newValue);
	partial void OnEMPIDChanged();

    public string TEXT 
	{ 
		get
		{
			return _TEXT;
		}
		set
		{
			if(_TEXT != value)
			{
				OnTEXTChanging(value);
				_TEXT = value;
				OnTEXTChanged();
			}
		}
	}
	private string _TEXT;

	partial void OnTEXTChanging(string newValue);
	partial void OnTEXTChanged();

    public Nullable<int> MANAGERID 
	{ 
		get
		{
			return _MANAGERID;
		}
		set
		{
			if(_MANAGERID != value)
			{
				OnMANAGERIDChanging(value);
				_MANAGERID = value;
				OnMANAGERIDChanged();
			}
		}
	}
	private Nullable<int> _MANAGERID;

	partial void OnMANAGERIDChanging(Nullable<int> newValue);
	partial void OnMANAGERIDChanged();

    public string Attr 
	{ 
		get
		{
			return _Attr;
		}
		set
		{
			if(_Attr != value)
			{
				OnAttrChanging(value);
				_Attr = value;
				OnAttrChanged();
			}
		}
	}
	private string _Attr;

	partial void OnAttrChanging(string newValue);
	partial void OnAttrChanged();
}

public partial class GetEmployeeWiseClaimType_Result
{

    public string ReasonName 
	{ 
		get
		{
			return _ReasonName;
		}
		set
		{
			if(_ReasonName != value)
			{
				OnReasonNameChanging(value);
				_ReasonName = value;
				OnReasonNameChanged();
			}
		}
	}
	private string _ReasonName;

	partial void OnReasonNameChanging(string newValue);
	partial void OnReasonNameChanged();

    public int ReasonID 
	{ 
		get
		{
			return _ReasonID;
		}
		set
		{
			if(_ReasonID != value)
			{
				OnReasonIDChanging(value);
				_ReasonID = value;
				OnReasonIDChanged();
			}
		}
	}
	private int _ReasonID;

	partial void OnReasonIDChanging(int newValue);
	partial void OnReasonIDChanged();

    public string SAPReasonItemCode 
	{ 
		get
		{
			return _SAPReasonItemCode;
		}
		set
		{
			if(_SAPReasonItemCode != value)
			{
				OnSAPReasonItemCodeChanging(value);
				_SAPReasonItemCode = value;
				OnSAPReasonItemCodeChanged();
			}
		}
	}
	private string _SAPReasonItemCode;

	partial void OnSAPReasonItemCodeChanging(string newValue);
	partial void OnSAPReasonItemCodeChanged();
}

public partial class GetNormalPricing_Result
{

    public int Flag 
	{ 
		get
		{
			return _Flag;
		}
		set
		{
			if(_Flag != value)
			{
				OnFlagChanging(value);
				_Flag = value;
				OnFlagChanged();
			}
		}
	}
	private int _Flag;

	partial void OnFlagChanging(int newValue);
	partial void OnFlagChanged();

    public string Msg 
	{ 
		get
		{
			return _Msg;
		}
		set
		{
			if(_Msg != value)
			{
				OnMsgChanging(value);
				_Msg = value;
				OnMsgChanged();
			}
		}
	}
	private string _Msg;

	partial void OnMsgChanging(string newValue);
	partial void OnMsgChanged();

    public decimal NormalRate 
	{ 
		get
		{
			return _NormalRate;
		}
		set
		{
			if(_NormalRate != value)
			{
				OnNormalRateChanging(value);
				_NormalRate = value;
				OnNormalRateChanged();
			}
		}
	}
	private decimal _NormalRate;

	partial void OnNormalRateChanging(decimal newValue);
	partial void OnNormalRateChanged();
}

public partial class PurchaseItem_Result
{

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public string ItemCode 
	{ 
		get
		{
			return _ItemCode;
		}
		set
		{
			if(_ItemCode != value)
			{
				OnItemCodeChanging(value);
				_ItemCode = value;
				OnItemCodeChanged();
			}
		}
	}
	private string _ItemCode;

	partial void OnItemCodeChanging(string newValue);
	partial void OnItemCodeChanged();

    public string ItemName 
	{ 
		get
		{
			return _ItemName;
		}
		set
		{
			if(_ItemName != value)
			{
				OnItemNameChanging(value);
				_ItemName = value;
				OnItemNameChanged();
			}
		}
	}
	private string _ItemName;

	partial void OnItemNameChanging(string newValue);
	partial void OnItemNameChanged();

    public decimal AvailQty 
	{ 
		get
		{
			return _AvailQty;
		}
		set
		{
			if(_AvailQty != value)
			{
				OnAvailQtyChanging(value);
				_AvailQty = value;
				OnAvailQtyChanged();
			}
		}
	}
	private decimal _AvailQty;

	partial void OnAvailQtyChanging(decimal newValue);
	partial void OnAvailQtyChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal Quantity 
	{ 
		get
		{
			return _Quantity;
		}
		set
		{
			if(_Quantity != value)
			{
				OnQuantityChanging(value);
				_Quantity = value;
				OnQuantityChanged();
			}
		}
	}
	private decimal _Quantity;

	partial void OnQuantityChanging(decimal newValue);
	partial void OnQuantityChanged();

    public decimal UnitPrice 
	{ 
		get
		{
			return _UnitPrice;
		}
		set
		{
			if(_UnitPrice != value)
			{
				OnUnitPriceChanging(value);
				_UnitPrice = value;
				OnUnitPriceChanged();
			}
		}
	}
	private decimal _UnitPrice;

	partial void OnUnitPriceChanging(decimal newValue);
	partial void OnUnitPriceChanged();

    public decimal Tax 
	{ 
		get
		{
			return _Tax;
		}
		set
		{
			if(_Tax != value)
			{
				OnTaxChanging(value);
				_Tax = value;
				OnTaxChanged();
			}
		}
	}
	private decimal _Tax;

	partial void OnTaxChanging(decimal newValue);
	partial void OnTaxChanged();

    public int TaxID 
	{ 
		get
		{
			return _TaxID;
		}
		set
		{
			if(_TaxID != value)
			{
				OnTaxIDChanging(value);
				_TaxID = value;
				OnTaxIDChanged();
			}
		}
	}
	private int _TaxID;

	partial void OnTaxIDChanging(int newValue);
	partial void OnTaxIDChanged();

    public string Unitname 
	{ 
		get
		{
			return _Unitname;
		}
		set
		{
			if(_Unitname != value)
			{
				OnUnitnameChanging(value);
				_Unitname = value;
				OnUnitnameChanged();
			}
		}
	}
	private string _Unitname;

	partial void OnUnitnameChanging(string newValue);
	partial void OnUnitnameChanged();

    public decimal DispatchQty 
	{ 
		get
		{
			return _DispatchQty;
		}
		set
		{
			if(_DispatchQty != value)
			{
				OnDispatchQtyChanging(value);
				_DispatchQty = value;
				OnDispatchQtyChanged();
			}
		}
	}
	private decimal _DispatchQty;

	partial void OnDispatchQtyChanging(decimal newValue);
	partial void OnDispatchQtyChanged();

    public string RANKNO 
	{ 
		get
		{
			return _RANKNO;
		}
		set
		{
			if(_RANKNO != value)
			{
				OnRANKNOChanging(value);
				_RANKNO = value;
				OnRANKNOChanged();
			}
		}
	}
	private string _RANKNO;

	partial void OnRANKNOChanging(string newValue);
	partial void OnRANKNOChanged();
}

public partial class SaleItem_Result
{

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public string ItemCode 
	{ 
		get
		{
			return _ItemCode;
		}
		set
		{
			if(_ItemCode != value)
			{
				OnItemCodeChanging(value);
				_ItemCode = value;
				OnItemCodeChanged();
			}
		}
	}
	private string _ItemCode;

	partial void OnItemCodeChanging(string newValue);
	partial void OnItemCodeChanged();

    public string ItemName 
	{ 
		get
		{
			return _ItemName;
		}
		set
		{
			if(_ItemName != value)
			{
				OnItemNameChanging(value);
				_ItemName = value;
				OnItemNameChanged();
			}
		}
	}
	private string _ItemName;

	partial void OnItemNameChanging(string newValue);
	partial void OnItemNameChanged();

    public decimal AvailQty 
	{ 
		get
		{
			return _AvailQty;
		}
		set
		{
			if(_AvailQty != value)
			{
				OnAvailQtyChanging(value);
				_AvailQty = value;
				OnAvailQtyChanged();
			}
		}
	}
	private decimal _AvailQty;

	partial void OnAvailQtyChanging(decimal newValue);
	partial void OnAvailQtyChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal Quantity 
	{ 
		get
		{
			return _Quantity;
		}
		set
		{
			if(_Quantity != value)
			{
				OnQuantityChanging(value);
				_Quantity = value;
				OnQuantityChanged();
			}
		}
	}
	private decimal _Quantity;

	partial void OnQuantityChanging(decimal newValue);
	partial void OnQuantityChanged();

    public decimal UnitPrice 
	{ 
		get
		{
			return _UnitPrice;
		}
		set
		{
			if(_UnitPrice != value)
			{
				OnUnitPriceChanging(value);
				_UnitPrice = value;
				OnUnitPriceChanged();
			}
		}
	}
	private decimal _UnitPrice;

	partial void OnUnitPriceChanging(decimal newValue);
	partial void OnUnitPriceChanged();

    public decimal Tax 
	{ 
		get
		{
			return _Tax;
		}
		set
		{
			if(_Tax != value)
			{
				OnTaxChanging(value);
				_Tax = value;
				OnTaxChanged();
			}
		}
	}
	private decimal _Tax;

	partial void OnTaxChanging(decimal newValue);
	partial void OnTaxChanged();

    public int TaxID 
	{ 
		get
		{
			return _TaxID;
		}
		set
		{
			if(_TaxID != value)
			{
				OnTaxIDChanging(value);
				_TaxID = value;
				OnTaxIDChanged();
			}
		}
	}
	private int _TaxID;

	partial void OnTaxIDChanging(int newValue);
	partial void OnTaxIDChanged();

    public decimal DispatchQty 
	{ 
		get
		{
			return _DispatchQty;
		}
		set
		{
			if(_DispatchQty != value)
			{
				OnDispatchQtyChanging(value);
				_DispatchQty = value;
				OnDispatchQtyChanged();
			}
		}
	}
	private decimal _DispatchQty;

	partial void OnDispatchQtyChanging(decimal newValue);
	partial void OnDispatchQtyChanged();

    public decimal TotalQty 
	{ 
		get
		{
			return _TotalQty;
		}
		set
		{
			if(_TotalQty != value)
			{
				OnTotalQtyChanging(value);
				_TotalQty = value;
				OnTotalQtyChanged();
			}
		}
	}
	private decimal _TotalQty;

	partial void OnTotalQtyChanging(decimal newValue);
	partial void OnTotalQtyChanged();

    public string Unitname 
	{ 
		get
		{
			return _Unitname;
		}
		set
		{
			if(_Unitname != value)
			{
				OnUnitnameChanging(value);
				_Unitname = value;
				OnUnitnameChanged();
			}
		}
	}
	private string _Unitname;

	partial void OnUnitnameChanging(string newValue);
	partial void OnUnitnameChanged();

    public decimal ItemScheme 
	{ 
		get
		{
			return _ItemScheme;
		}
		set
		{
			if(_ItemScheme != value)
			{
				OnItemSchemeChanging(value);
				_ItemScheme = value;
				OnItemSchemeChanged();
			}
		}
	}
	private decimal _ItemScheme;

	partial void OnItemSchemeChanging(decimal newValue);
	partial void OnItemSchemeChanged();

    public decimal Scheme 
	{ 
		get
		{
			return _Scheme;
		}
		set
		{
			if(_Scheme != value)
			{
				OnSchemeChanging(value);
				_Scheme = value;
				OnSchemeChanged();
			}
		}
	}
	private decimal _Scheme;

	partial void OnSchemeChanging(decimal newValue);
	partial void OnSchemeChanged();

    public decimal MRP 
	{ 
		get
		{
			return _MRP;
		}
		set
		{
			if(_MRP != value)
			{
				OnMRPChanging(value);
				_MRP = value;
				OnMRPChanged();
			}
		}
	}
	private decimal _MRP;

	partial void OnMRPChanging(decimal newValue);
	partial void OnMRPChanged();

    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();
}

public partial class SaleOrderItemReturn_Result
{

    public int ItemID 
	{ 
		get
		{
			return _ItemID;
		}
		set
		{
			if(_ItemID != value)
			{
				OnItemIDChanging(value);
				_ItemID = value;
				OnItemIDChanged();
			}
		}
	}
	private int _ItemID;

	partial void OnItemIDChanging(int newValue);
	partial void OnItemIDChanged();

    public string ItemCode 
	{ 
		get
		{
			return _ItemCode;
		}
		set
		{
			if(_ItemCode != value)
			{
				OnItemCodeChanging(value);
				_ItemCode = value;
				OnItemCodeChanged();
			}
		}
	}
	private string _ItemCode;

	partial void OnItemCodeChanging(string newValue);
	partial void OnItemCodeChanged();

    public string ItemName 
	{ 
		get
		{
			return _ItemName;
		}
		set
		{
			if(_ItemName != value)
			{
				OnItemNameChanging(value);
				_ItemName = value;
				OnItemNameChanged();
			}
		}
	}
	private string _ItemName;

	partial void OnItemNameChanging(string newValue);
	partial void OnItemNameChanged();

    public decimal AvailQty 
	{ 
		get
		{
			return _AvailQty;
		}
		set
		{
			if(_AvailQty != value)
			{
				OnAvailQtyChanging(value);
				_AvailQty = value;
				OnAvailQtyChanged();
			}
		}
	}
	private decimal _AvailQty;

	partial void OnAvailQtyChanging(decimal newValue);
	partial void OnAvailQtyChanged();

    public int UnitID 
	{ 
		get
		{
			return _UnitID;
		}
		set
		{
			if(_UnitID != value)
			{
				OnUnitIDChanging(value);
				_UnitID = value;
				OnUnitIDChanged();
			}
		}
	}
	private int _UnitID;

	partial void OnUnitIDChanging(int newValue);
	partial void OnUnitIDChanged();

    public decimal Quantity 
	{ 
		get
		{
			return _Quantity;
		}
		set
		{
			if(_Quantity != value)
			{
				OnQuantityChanging(value);
				_Quantity = value;
				OnQuantityChanged();
			}
		}
	}
	private decimal _Quantity;

	partial void OnQuantityChanging(decimal newValue);
	partial void OnQuantityChanged();

    public decimal UnitPrice 
	{ 
		get
		{
			return _UnitPrice;
		}
		set
		{
			if(_UnitPrice != value)
			{
				OnUnitPriceChanging(value);
				_UnitPrice = value;
				OnUnitPriceChanged();
			}
		}
	}
	private decimal _UnitPrice;

	partial void OnUnitPriceChanging(decimal newValue);
	partial void OnUnitPriceChanged();

    public decimal Tax 
	{ 
		get
		{
			return _Tax;
		}
		set
		{
			if(_Tax != value)
			{
				OnTaxChanging(value);
				_Tax = value;
				OnTaxChanged();
			}
		}
	}
	private decimal _Tax;

	partial void OnTaxChanging(decimal newValue);
	partial void OnTaxChanged();

    public int TaxID 
	{ 
		get
		{
			return _TaxID;
		}
		set
		{
			if(_TaxID != value)
			{
				OnTaxIDChanging(value);
				_TaxID = value;
				OnTaxIDChanged();
			}
		}
	}
	private int _TaxID;

	partial void OnTaxIDChanging(int newValue);
	partial void OnTaxIDChanged();

    public decimal DispatchQty 
	{ 
		get
		{
			return _DispatchQty;
		}
		set
		{
			if(_DispatchQty != value)
			{
				OnDispatchQtyChanging(value);
				_DispatchQty = value;
				OnDispatchQtyChanged();
			}
		}
	}
	private decimal _DispatchQty;

	partial void OnDispatchQtyChanging(decimal newValue);
	partial void OnDispatchQtyChanged();

    public decimal TotalQty 
	{ 
		get
		{
			return _TotalQty;
		}
		set
		{
			if(_TotalQty != value)
			{
				OnTotalQtyChanging(value);
				_TotalQty = value;
				OnTotalQtyChanged();
			}
		}
	}
	private decimal _TotalQty;

	partial void OnTotalQtyChanging(decimal newValue);
	partial void OnTotalQtyChanged();

    public string Unitname 
	{ 
		get
		{
			return _Unitname;
		}
		set
		{
			if(_Unitname != value)
			{
				OnUnitnameChanging(value);
				_Unitname = value;
				OnUnitnameChanged();
			}
		}
	}
	private string _Unitname;

	partial void OnUnitnameChanging(string newValue);
	partial void OnUnitnameChanged();

    public decimal ItemScheme 
	{ 
		get
		{
			return _ItemScheme;
		}
		set
		{
			if(_ItemScheme != value)
			{
				OnItemSchemeChanging(value);
				_ItemScheme = value;
				OnItemSchemeChanged();
			}
		}
	}
	private decimal _ItemScheme;

	partial void OnItemSchemeChanging(decimal newValue);
	partial void OnItemSchemeChanged();

    public decimal Scheme 
	{ 
		get
		{
			return _Scheme;
		}
		set
		{
			if(_Scheme != value)
			{
				OnSchemeChanging(value);
				_Scheme = value;
				OnSchemeChanged();
			}
		}
	}
	private decimal _Scheme;

	partial void OnSchemeChanging(decimal newValue);
	partial void OnSchemeChanged();

    public decimal MRP 
	{ 
		get
		{
			return _MRP;
		}
		set
		{
			if(_MRP != value)
			{
				OnMRPChanging(value);
				_MRP = value;
				OnMRPChanged();
			}
		}
	}
	private decimal _MRP;

	partial void OnMRPChanging(decimal newValue);
	partial void OnMRPChanged();

    public int SchemeID 
	{ 
		get
		{
			return _SchemeID;
		}
		set
		{
			if(_SchemeID != value)
			{
				OnSchemeIDChanging(value);
				_SchemeID = value;
				OnSchemeIDChanged();
			}
		}
	}
	private int _SchemeID;

	partial void OnSchemeIDChanging(int newValue);
	partial void OnSchemeIDChanged();

    public int TotalReturnQty 
	{ 
		get
		{
			return _TotalReturnQty;
		}
		set
		{
			if(_TotalReturnQty != value)
			{
				OnTotalReturnQtyChanging(value);
				_TotalReturnQty = value;
				OnTotalReturnQtyChanged();
			}
		}
	}
	private int _TotalReturnQty;

	partial void OnTotalReturnQtyChanging(int newValue);
	partial void OnTotalReturnQtyChanged();

    public decimal InvoiceQty 
	{ 
		get
		{
			return _InvoiceQty;
		}
		set
		{
			if(_InvoiceQty != value)
			{
				OnInvoiceQtyChanging(value);
				_InvoiceQty = value;
				OnInvoiceQtyChanged();
			}
		}
	}
	private decimal _InvoiceQty;

	partial void OnInvoiceQtyChanging(decimal newValue);
	partial void OnInvoiceQtyChanged();
}

public partial class usp_CheckQPSEligibility_Result
{

    public int EligibleCount 
	{ 
		get
		{
			return _EligibleCount;
		}
		set
		{
			if(_EligibleCount != value)
			{
				OnEligibleCountChanging(value);
				_EligibleCount = value;
				OnEligibleCountChanged();
			}
		}
	}
	private int _EligibleCount;

	partial void OnEligibleCountChanging(int newValue);
	partial void OnEligibleCountChanged();

    public int OptionType 
	{ 
		get
		{
			return _OptionType;
		}
		set
		{
			if(_OptionType != value)
			{
				OnOptionTypeChanging(value);
				_OptionType = value;
				OnOptionTypeChanged();
			}
		}
	}
	private int _OptionType;

	partial void OnOptionTypeChanging(int newValue);
	partial void OnOptionTypeChanged();

    public string AlertMsg 
	{ 
		get
		{
			return _AlertMsg;
		}
		set
		{
			if(_AlertMsg != value)
			{
				OnAlertMsgChanging(value);
				_AlertMsg = value;
				OnAlertMsgChanged();
			}
		}
	}
	private string _AlertMsg;

	partial void OnAlertMsgChanging(string newValue);
	partial void OnAlertMsgChanged();
}

public partial class usp_GetMangerList_Result
{

    public Nullable<int> EmpID 
	{ 
		get
		{
			return _EmpID;
		}
		set
		{
			if(_EmpID != value)
			{
				OnEmpIDChanging(value);
				_EmpID = value;
				OnEmpIDChanged();
			}
		}
	}
	private Nullable<int> _EmpID;

	partial void OnEmpIDChanging(Nullable<int> newValue);
	partial void OnEmpIDChanged();

    public Nullable<decimal> ParentID 
	{ 
		get
		{
			return _ParentID;
		}
		set
		{
			if(_ParentID != value)
			{
				OnParentIDChanging(value);
				_ParentID = value;
				OnParentIDChanged();
			}
		}
	}
	private Nullable<decimal> _ParentID;

	partial void OnParentIDChanging(Nullable<decimal> newValue);
	partial void OnParentIDChanged();

    public string EmpCode 
	{ 
		get
		{
			return _EmpCode;
		}
		set
		{
			if(_EmpCode != value)
			{
				OnEmpCodeChanging(value);
				_EmpCode = value;
				OnEmpCodeChanged();
			}
		}
	}
	private string _EmpCode;

	partial void OnEmpCodeChanging(string newValue);
	partial void OnEmpCodeChanged();

    public string EmpName 
	{ 
		get
		{
			return _EmpName;
		}
		set
		{
			if(_EmpName != value)
			{
				OnEmpNameChanging(value);
				_EmpName = value;
				OnEmpNameChanged();
			}
		}
	}
	private string _EmpName;

	partial void OnEmpNameChanging(string newValue);
	partial void OnEmpNameChanged();

    public Nullable<int> ManagerID 
	{ 
		get
		{
			return _ManagerID;
		}
		set
		{
			if(_ManagerID != value)
			{
				OnManagerIDChanging(value);
				_ManagerID = value;
				OnManagerIDChanged();
			}
		}
	}
	private Nullable<int> _ManagerID;

	partial void OnManagerIDChanging(Nullable<int> newValue);
	partial void OnManagerIDChanged();

    public Nullable<int> Sort 
	{ 
		get
		{
			return _Sort;
		}
		set
		{
			if(_Sort != value)
			{
				OnSortChanging(value);
				_Sort = value;
				OnSortChanged();
			}
		}
	}
	private Nullable<int> _Sort;

	partial void OnSortChanging(Nullable<int> newValue);
	partial void OnSortChanged();

    public Nullable<int> EmpGroupID 
	{ 
		get
		{
			return _EmpGroupID;
		}
		set
		{
			if(_EmpGroupID != value)
			{
				OnEmpGroupIDChanging(value);
				_EmpGroupID = value;
				OnEmpGroupIDChanged();
			}
		}
	}
	private Nullable<int> _EmpGroupID;

	partial void OnEmpGroupIDChanging(Nullable<int> newValue);
	partial void OnEmpGroupIDChanged();
}

