//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Objects;

public partial class DDMSEntities : DbContext
{
//    public DDMSEntities()
//        : base("name=DDMSEntities")
//    {
//    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public DbSet<EOD1> EOD1 { get; set; }
    public DbSet<EOD2> EOD2 { get; set; }
    public DbSet<EOD3> EOD3 { get; set; }
    public DbSet<ITM1> ITM1 { get; set; }
    public DbSet<ITM2> ITM2 { get; set; }
    public DbSet<MID1> MID1 { get; set; }
    public DbSet<MIT1> MIT1 { get; set; }
    public DbSet<OGITM> OGITMs { get; set; }
    public DbSet<OITB> OITBs { get; set; }
    public DbSet<OITG> OITGs { get; set; }
    public DbSet<OITM> OITMs { get; set; }
    public DbSet<OMID> OMIDs { get; set; }
    public DbSet<OMIT> OMITs { get; set; }
    public DbSet<OMNU> OMNUs { get; set; }
    public DbSet<OPOS> OPOS { get; set; }
    public DbSet<OVND> OVNDs { get; set; }
    public DbSet<OWH> OWHS { get; set; }
    public DbSet<POS2> POS2 { get; set; }
    public DbSet<SCM2> SCM2 { get; set; }
    public DbSet<SCM3> SCM3 { get; set; }
    public DbSet<SCM4> SCM4 { get; set; }
    public DbSet<SITM> SITMs { get; set; }
    public DbSet<CRD1> CRD1 { get; set; }
    public DbSet<OTLT> OTLTs { get; set; }
    public DbSet<OTMP> OTMPs { get; set; }
    public DbSet<OASTF> OASTFs { get; set; }
    public DbSet<OCMP> OCMPs { get; set; }
    public DbSet<OCNT> OCNTs { get; set; }
    public DbSet<OCPN> OCPNs { get; set; }
    public DbSet<OCRY> OCRies { get; set; }
    public DbSet<OCST> OCSTs { get; set; }
    public DbSet<OCTY> OCTies { get; set; }
    public DbSet<ODIV> ODIVs { get; set; }
    public DbSet<OEML> OEMLs { get; set; }
    public DbSet<OEMP> OEMPs { get; set; }
    public DbSet<OEXP> OEXPs { get; set; }
    public DbSet<OFTP> OFTPs { get; set; }
    public DbSet<OGRP> OGRPs { get; set; }
    public DbSet<OIMG> OIMGs { get; set; }
    public DbSet<OITP> OITPs { get; set; }
    public DbSet<OPIN> OPINs { get; set; }
    public DbSet<OPYT> OPYTs { get; set; }
    public DbSet<OQU> OQUS { get; set; }
    public DbSet<ORSN> ORSNs { get; set; }
    public DbSet<OSCM> OSCMs { get; set; }
    public DbSet<OTAX> OTAXes { get; set; }
    public DbSet<OVCL> OVCLs { get; set; }
    public DbSet<CGRP> CGRPs { get; set; }
    public DbSet<OASTG> OASTGs { get; set; }
    public DbSet<OASTR> OASTRs { get; set; }
    public DbSet<OASTU> OASTUs { get; set; }
    public DbSet<OASTZ> OASTZs { get; set; }
    public DbSet<OIPL> OIPLs { get; set; }
    public DbSet<ORLN> ORLNs { get; set; }
    public DbSet<OUNT> OUNTs { get; set; }
    public DbSet<OASTB> OASTBs { get; set; }
    public DbSet<OASTC> OASTCs { get; set; }
    public DbSet<vwCustomer> vwCustomers { get; set; }
    public DbSet<HELP> HELPs { get; set; }
    public DbSet<AST1> AST1 { get; set; }
    public DbSet<ASTF1> ASTF1 { get; set; }
    public DbSet<ASTCF> ASTCFs { get; set; }
    public DbSet<EXAST> EXASTs { get; set; }
    public DbSet<MSTCF> MSTCFs { get; set; }
    public DbSet<CRD2> CRD2 { get; set; }
    public DbSet<VND1> VND1 { get; set; }
    public DbSet<EMP1> EMP1 { get; set; }
    public DbSet<MID2> MID2 { get; set; }
    public DbSet<OGLA> OGLAs { get; set; }
    public DbSet<OJET> OJETs { get; set; }
    public DbSet<OPYM> OPYMs { get; set; }
    public DbSet<INRT> INRTs { get; set; }
    public DbSet<INTF> INTFs { get; set; }
    public DbSet<NRT1> NRT1 { get; set; }
    public DbSet<NTF1> NTF1 { get; set; }
    public DbSet<OEOD> OEODs { get; set; }
    public DbSet<OGCRD> OGCRDs { get; set; }
    public DbSet<CFB1> CFB1 { get; set; }
    public DbSet<EML1> EML1 { get; set; }
    public DbSet<MCMP> MCMPs { get; set; }
    public DbSet<OCFB> OCFBs { get; set; }
    public DbSet<OCFG> OCFGs { get; set; }
    public DbSet<OMSG> OMSGs { get; set; }
    public DbSet<CMP1> CMP1 { get; set; }
    public DbSet<CPN1> CPN1 { get; set; }
    public DbSet<OATT> OATTs { get; set; }
    public DbSet<PLT1> PLT1 { get; set; }
    public DbSet<TAX1> TAX1 { get; set; }
    public DbSet<IPL1> IPL1 { get; set; }
    public DbSet<ONTF> ONTFs { get; set; }
    public DbSet<EML2> EML2 { get; set; }
    public DbSet<OSRG> OSRGs { get; set; }
    public DbSet<SCM1> SCM1 { get; set; }
    public DbSet<MCLM1> MCLM1 { get; set; }
    public DbSet<OMCLM> OMCLMs { get; set; }
    public DbSet<ORET> ORETs { get; set; }
    public DbSet<POS3> POS3 { get; set; }
    public DbSet<RET1> RET1 { get; set; }
    public DbSet<OCPY> OCPies { get; set; }
    public DbSet<OCLG> OCLGs { get; set; }
    public DbSet<OMNUR> OMNURs { get; set; }
    public DbSet<OCRD> OCRDs { get; set; }
    public DbSet<OPLT> OPLTs { get; set; }
    public DbSet<TCRD1> TCRD1 { get; set; }
    public DbSet<TOCRD> TOCRDs { get; set; }
    public DbSet<OASTYB> OASTYBs { get; set; }
    public DbSet<RUT1> RUT1 { get; set; }
    public DbSet<OENT> OENTs { get; set; }
    public DbSet<ORDR> ORDRs { get; set; }
    public DbSet<RDR1> RDR1 { get; set; }
    public DbSet<OLVPY> OLVPies { get; set; }
    public DbSet<OEA> OEAS { get; set; }
    public DbSet<OASTP> OASTPs { get; set; }
    public DbSet<OASTQ> OASTQs { get; set; }
    public DbSet<OSM> OSMS { get; set; }
    public DbSet<OLVTY> OLVTies { get; set; }
    public DbSet<GCM1> GCM1 { get; set; }
    public DbSet<OEXM> OEXMs { get; set; }
    public DbSet<OAAP> OAAPs { get; set; }
    public DbSet<OARQ> OARQs { get; set; }
    public DbSet<OEAP> OEAPs { get; set; }
    public DbSet<OERQ> OERQs { get; set; }
    public DbSet<OLVAP> OLVAPs { get; set; }
    public DbSet<OLVRQ> OLVRQs { get; set; }
    public DbSet<OTAP> OTAPs { get; set; }
    public DbSet<OTRQ> OTRQs { get; set; }
    public DbSet<OLVBL> OLVBLs { get; set; }
    public DbSet<OSFC> OSFCs { get; set; }
    public DbSet<SFC1> SFC1 { get; set; }
    public DbSet<EOD4> EOD4 { get; set; }
    public DbSet<ITM3> ITM3 { get; set; }
    public DbSet<OBRND> OBRNDs { get; set; }
    public DbSet<QUES1> QUES1 { get; set; }
    public DbSet<INVR1> INVR1 { get; set; }
    public DbSet<OINVR> OINVRs { get; set; }
    public DbSet<OCLMCLD> OCLMCLDs { get; set; }
    public DbSet<OCLMDM> OCLMDMS { get; set; }
    public DbSet<OCLMINV> OCLMINVs { get; set; }
    public DbSet<OCLMSUM> OCLMSUMs { get; set; }
    public DbSet<CLM1> CLM1 { get; set; }
    public DbSet<OCLM> OCLMs { get; set; }
    public DbSet<OATSTU> OATSTUs { get; set; }
    public DbSet<MSG1> MSG1 { get; set; }
    public DbSet<OAWRK> OAWRKs { get; set; }
    public DbSet<OSPM> OSPMs { get; set; }
    public DbSet<OSET> OSETs { get; set; }
    public DbSet<OQUE> OQUES { get; set; }
    public DbSet<OEXT> OEXTs { get; set; }
    public DbSet<OCTM> OCTMs { get; set; }
    public DbSet<OPSP> OPSPs { get; set; }
    public DbSet<PSP1> PSP1 { get; set; }
    public DbSet<PSP2> PSP2 { get; set; }
    public DbSet<PSP3> PSP3 { get; set; }
    public DbSet<OCSE> OCSEs { get; set; }
    public DbSet<HRY1> HRY1 { get; set; }
    public DbSet<OESM> OESMs { get; set; }
    public DbSet<OPLM> OPLMs { get; set; }
    public DbSet<OSTRL> OSTRLs { get; set; }
    public DbSet<OTCF> OTCFs { get; set; }
    public DbSet<OTRSN> OTRSNs { get; set; }
    public DbSet<OTST> OTSTs { get; set; }
    public DbSet<OTTY> OTTies { get; set; }
    public DbSet<ACRD1> ACRD1 { get; set; }
    public DbSet<AOCRD> AOCRDs { get; set; }
    public DbSet<OELM> OELMs { get; set; }
    public DbSet<OPLCK> OPLCKs { get; set; }
    public DbSet<OGCM> OGCMs { get; set; }
    public DbSet<TEM1> TEM1 { get; set; }
    public DbSet<OCLMRA> OCLMRAs { get; set; }
    public DbSet<OCLMRQ> OCLMRQs { get; set; }
    public DbSet<OTASK> OTASKs { get; set; }
    public DbSet<OTCSE> OTCSEs { get; set; }
    public DbSet<TASK1> TASK1 { get; set; }
    public DbSet<TASK2> TASK2 { get; set; }
    public DbSet<TASK3> TASK3 { get; set; }
    public DbSet<OCLMP> OCLMPs { get; set; }
    public DbSet<OAST> OASTs { get; set; }
    public DbSet<GRP1> GRP1 { get; set; }
    public DbSet<BOM1> BOM1 { get; set; }
    public DbSet<COMP1> COMP1 { get; set; }
    public DbSet<COMP2> COMP2 { get; set; }
    public DbSet<CSE1> CSE1 { get; set; }
    public DbSet<ELMAH_Error> ELMAH_Error { get; set; }
    public DbSet<ENT1> ENT1 { get; set; }
    public DbSet<GLAG> GLAGs { get; set; }
    public DbSet<ITM4> ITM4 { get; set; }
    public DbSet<MJET> MJETs { get; set; }
    public DbSet<OASTLOG> OASTLOGs { get; set; }
    public DbSet<OBOM> OBOMs { get; set; }
    public DbSet<OBUN> OBUNS { get; set; }
    public DbSet<OCOMP> OCOMPs { get; set; }
    public DbSet<ODCL> ODCLs { get; set; }
    public DbSet<OECG> OECGs { get; set; }
    public DbSet<OEEG> OEEGs { get; set; }
    public DbSet<OEUN> OEUNs { get; set; }
    public DbSet<OFGT> OFGTs { get; set; }
    public DbSet<OGEMP> OGEMPs { get; set; }
    public DbSet<OGP> OGPS { get; set; }
    public DbSet<OHRD> OHRDs { get; set; }
    public DbSet<OHRY> OHRies { get; set; }
    public DbSet<OINSC> OINSCs { get; set; }
    public DbSet<OLVHO> OLVHOes { get; set; }
    public DbSet<OMDAP> OMDAPs { get; set; }
    public DbSet<OMDRQ> OMDRQs { get; set; }
    public DbSet<OSCMLOG> OSCMLOGs { get; set; }
    public DbSet<OSFB> OSFBs { get; set; }
    public DbSet<OST> OSTS { get; set; }
    public DbSet<OURL> OURLs { get; set; }
    public DbSet<OVR> OVRS { get; set; }
    public DbSet<REINDEX_ER> REINDEX_ER { get; set; }
    public DbSet<RUT2> RUT2 { get; set; }
    public DbSet<SCM1LOG> SCM1LOG { get; set; }
    public DbSet<SCM3LOG> SCM3LOG { get; set; }
    public DbSet<SCM4LOG> SCM4LOG { get; set; }
    public DbSet<SFB1> SFB1 { get; set; }
    public DbSet<TAX2> TAX2 { get; set; }
    public DbSet<TAX3> TAX3 { get; set; }
    public DbSet<OTYPE> OTYPEs { get; set; }
    public DbSet<TEMPC> TEMPCs { get; set; }
    public DbSet<OSEQ> OSEQs { get; set; }
    public DbSet<TASK4> TASK4 { get; set; }
    public DbSet<ODIM> ODIMs { get; set; }
    public DbSet<OTRG> OTRGs { get; set; }
    public DbSet<OTEM> OTEMs { get; set; }
    public DbSet<OASTLOC> OASTLOCs { get; set; }
    public DbSet<OCVE> OCVEs { get; set; }
    public DbSet<ORCLM> ORCLMs { get; set; }
    public DbSet<OVREMP> OVREMPs { get; set; }
    public DbSet<POS1> POS1 { get; set; }
    public DbSet<OASTY> OASTies { get; set; }
    public DbSet<CRUT1> CRUT1 { get; set; }
    public DbSet<OCRUT> OCRUTs { get; set; }
    public DbSet<OSCMELGLOG> OSCMELGLOGs { get; set; }
    public DbSet<EEML> EEMLs { get; set; }
    public DbSet<SCHDL1> SCHDL1 { get; set; }
    public DbSet<OIOU> OIOUs { get; set; }
    public DbSet<ORUT> ORUTs { get; set; }
    public DbSet<IPL2> IPL2 { get; set; }
    public DbSet<OSCMELG> OSCMELGs { get; set; }
    public DbSet<EMPD> EMPDs { get; set; }
    public DbSet<OASTCM> OASTCMs { get; set; }
    public DbSet<ITM5> ITM5 { get; set; }
    public DbSet<OSCHDL> OSCHDLs { get; set; }
    public DbSet<OFSSI> OFSSIs { get; set; }
    public DbSet<OFSSILOG> OFSSILOGs { get; set; }
    public DbSet<OSTM> OSTMs { get; set; }
    public DbSet<OCLPM> OCLPMs { get; set; }
    public DbSet<OCTG> OCTGs { get; set; }
    public DbSet<ODTIEEmp> ODTIEEmps { get; set; }
    public DbSet<OERM> OERMs { get; set; }
    public DbSet<OCUM> OCUMs { get; set; }
    public DbSet<OCLE> OCLEs { get; set; }
    public DbSet<CLM2> CLM2 { get; set; }
    public DbSet<OICM> OICMs { get; set; }
    public DbSet<OGRPM> OGRPMs { get; set; }
    public DbSet<OBRCHKM> OBRCHKMs { get; set; }
    public DbSet<OCLMC> OCLMCs { get; set; }
    public DbSet<OCLMCFG> OCLMCFGs { get; set; }
    public DbSet<OCLME> OCLMEs { get; set; }
    public DbSet<OWPM> OWPMs { get; set; }
    public DbSet<WPM1> WPM1 { get; set; }
    public DbSet<POS4> POS4 { get; set; }
    public DbSet<OGST> OGSTs { get; set; }
    public DbSet<CLMRQ1> CLMRQ1 { get; set; }
    public DbSet<ODCM> ODCMs { get; set; }
    public DbSet<DCLM1> DCLM1 { get; set; }
    public DbSet<DOCLM> DOCLMs { get; set; }
    public DbSet<DOCLMP> DOCLMPs { get; set; }
    public DbSet<ODTIE> ODTIEs { get; set; }
    public DbSet<OIDM> OIDMs { get; set; }
    public DbSet<OIDMRET> OIDMRETs { get; set; }
    public DbSet<ODRM> ODRMs { get; set; }
    public DbSet<OEIRM> OEIRMs { get; set; }
    public DbSet<OEREM> OEREMs { get; set; }
    public DbSet<DBNK> DBNKs { get; set; }
    public DbSet<OBNK> OBNKs { get; set; }
    public DbSet<RMNU1> RMNU1 { get; set; }
    public DbSet<AORDR> AORDRs { get; set; }
    public DbSet<COMP3> COMP3 { get; set; }
    public DbSet<DPWD> DPWDs { get; set; }
    public DbSet<IGIMG> IGIMGs { get; set; }
    public DbSet<NITM> NITMs { get; set; }
    public DbSet<OCAUT> OCAUTs { get; set; }
    public DbSet<OEIC> OEICs { get; set; }
    public DbSet<OIOULOG> OIOULOGs { get; set; }
    public DbSet<OITMIMG> OITMIMGs { get; set; }
    public DbSet<OTPM> OTPMs { get; set; }
    public DbSet<OWHMGT> OWHMGTs { get; set; }
    public DbSet<PCAT1> PCAT1 { get; set; }
    public DbSet<PCAT2> PCAT2 { get; set; }
    public DbSet<ODIMBKP> ODIMBKPs { get; set; }
    public DbSet<OPCAT> OPCATs { get; set; }
    public DbSet<OSTHM> OSTHMs { get; set; }
    public DbSet<SMVSPN> SMVSPNs { get; set; }
    public DbSet<OFBT> OFBTs { get; set; }
    public DbSet<DFQUE> DFQUES { get; set; }
    public DbSet<MOAE1> MOAE1 { get; set; }
    public DbSet<MOAE2> MOAE2 { get; set; }
    public DbSet<MOAE3> MOAE3 { get; set; }
    public DbSet<OMOAE> OMOAEs { get; set; }
    public DbSet<RMNU> RMNUs { get; set; }

    public virtual ObjectResult<Nullable<int>> GetKey(string table, string tableFieldName, string masterIDFieldName, Nullable<decimal> parentID, Nullable<int> masterID)
    {
        var tableParameter = table != null ?
            new ObjectParameter("Table", table) :
            new ObjectParameter("Table", typeof(string));

        var tableFieldNameParameter = tableFieldName != null ?
            new ObjectParameter("TableFieldName", tableFieldName) :
            new ObjectParameter("TableFieldName", typeof(string));

        var masterIDFieldNameParameter = masterIDFieldName != null ?
            new ObjectParameter("MasterIDFieldName", masterIDFieldName) :
            new ObjectParameter("MasterIDFieldName", typeof(string));

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var masterIDParameter = masterID.HasValue ?
            new ObjectParameter("MasterID", masterID) :
            new ObjectParameter("MasterID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetKey", tableParameter, tableFieldNameParameter, masterIDFieldNameParameter, parentIDParameter, masterIDParameter);
    }

    public virtual ObjectResult<Nullable<int>> GetCustomerID(string table, string tableFieldName, Nullable<decimal> parentID)
    {
        var tableParameter = table != null ?
            new ObjectParameter("Table", table) :
            new ObjectParameter("Table", typeof(string));

        var tableFieldNameParameter = tableFieldName != null ?
            new ObjectParameter("TableFieldName", tableFieldName) :
            new ObjectParameter("TableFieldName", typeof(string));

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCustomerID", tableParameter, tableFieldNameParameter, parentIDParameter);
    }

    public virtual ObjectResult<Nullable<int>> GetCustomerIDKey(string table, string tableFieldName, string masterIDFieldName, Nullable<decimal> customerID, Nullable<int> masterID)
    {
        var tableParameter = table != null ?
            new ObjectParameter("Table", table) :
            new ObjectParameter("Table", typeof(string));

        var tableFieldNameParameter = tableFieldName != null ?
            new ObjectParameter("TableFieldName", tableFieldName) :
            new ObjectParameter("TableFieldName", typeof(string));

        var masterIDFieldNameParameter = masterIDFieldName != null ?
            new ObjectParameter("MasterIDFieldName", masterIDFieldName) :
            new ObjectParameter("MasterIDFieldName", typeof(string));

        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(decimal));

        var masterIDParameter = masterID.HasValue ?
            new ObjectParameter("MasterID", masterID) :
            new ObjectParameter("MasterID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCustomerIDKey", tableParameter, tableFieldNameParameter, masterIDFieldNameParameter, customerIDParameter, masterIDParameter);
    }

    public virtual ObjectResult<DayCloseItem_Result> DayCloseItem(Nullable<decimal> parentID, Nullable<System.DateTime> date, Nullable<int> userID)
    {
        ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DayCloseItem_Result).Assembly);

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var dateParameter = date.HasValue ?
            new ObjectParameter("Date", date) :
            new ObjectParameter("Date", typeof(System.DateTime));

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DayCloseItem_Result>("DayCloseItem", parentIDParameter, dateParameter, userIDParameter);
    }

    public virtual ObjectResult<Nullable<int>> CheckSCM3(Nullable<int> itemID, Nullable<int> schemeID, Nullable<decimal> customerID)
    {
        var itemIDParameter = itemID.HasValue ?
            new ObjectParameter("ItemID", itemID) :
            new ObjectParameter("ItemID", typeof(int));

        var schemeIDParameter = schemeID.HasValue ?
            new ObjectParameter("SchemeID", schemeID) :
            new ObjectParameter("SchemeID", typeof(int));

        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckSCM3", itemIDParameter, schemeIDParameter, customerIDParameter);
    }

    public virtual ObjectResult<string> CheckDayClose(Nullable<System.DateTime> date, Nullable<decimal> parentID)
    {
        var dateParameter = date.HasValue ?
            new ObjectParameter("Date", date) :
            new ObjectParameter("Date", typeof(System.DateTime));

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CheckDayClose", dateParameter, parentIDParameter);
    }

    public virtual ObjectResult<Nullable<int>> CheckSCM1(Nullable<decimal> custID, Nullable<int> schemeID)
    {
        var custIDParameter = custID.HasValue ?
            new ObjectParameter("CustID", custID) :
            new ObjectParameter("CustID", typeof(decimal));

        var schemeIDParameter = schemeID.HasValue ?
            new ObjectParameter("SchemeID", schemeID) :
            new ObjectParameter("SchemeID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckSCM1", custIDParameter, schemeIDParameter);
    }

    public virtual ObjectResult<PurchaseItem_Result> PurchaseItem(Nullable<decimal> parentID, Nullable<int> priceID, Nullable<int> inwardID, Nullable<int> itemID, Nullable<int> templateID, Nullable<int> whsID)
    {
        ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PurchaseItem_Result).Assembly);

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var priceIDParameter = priceID.HasValue ?
            new ObjectParameter("PriceID", priceID) :
            new ObjectParameter("PriceID", typeof(int));

        var inwardIDParameter = inwardID.HasValue ?
            new ObjectParameter("InwardID", inwardID) :
            new ObjectParameter("InwardID", typeof(int));

        var itemIDParameter = itemID.HasValue ?
            new ObjectParameter("ItemID", itemID) :
            new ObjectParameter("ItemID", typeof(int));

        var templateIDParameter = templateID.HasValue ?
            new ObjectParameter("TemplateID", templateID) :
            new ObjectParameter("TemplateID", typeof(int));

        var whsIDParameter = whsID.HasValue ?
            new ObjectParameter("WhsID", whsID) :
            new ObjectParameter("WhsID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseItem_Result>("PurchaseItem", parentIDParameter, priceIDParameter, inwardIDParameter, itemIDParameter, templateIDParameter, whsIDParameter);
    }

    public virtual ObjectResult<SaleItem_Result> SaleItem(Nullable<decimal> parentID, Nullable<decimal> customerID, Nullable<int> priceID, Nullable<int> saleID, Nullable<int> itemID, Nullable<int> templateID, Nullable<int> whsID, Nullable<decimal> billToPartyID)
    {
        ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SaleItem_Result).Assembly);

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(decimal));

        var priceIDParameter = priceID.HasValue ?
            new ObjectParameter("PriceID", priceID) :
            new ObjectParameter("PriceID", typeof(int));

        var saleIDParameter = saleID.HasValue ?
            new ObjectParameter("SaleID", saleID) :
            new ObjectParameter("SaleID", typeof(int));

        var itemIDParameter = itemID.HasValue ?
            new ObjectParameter("ItemID", itemID) :
            new ObjectParameter("ItemID", typeof(int));

        var templateIDParameter = templateID.HasValue ?
            new ObjectParameter("TemplateID", templateID) :
            new ObjectParameter("TemplateID", typeof(int));

        var whsIDParameter = whsID.HasValue ?
            new ObjectParameter("WhsID", whsID) :
            new ObjectParameter("WhsID", typeof(int));

        var billToPartyIDParameter = billToPartyID.HasValue ?
            new ObjectParameter("BillToPartyID", billToPartyID) :
            new ObjectParameter("BillToPartyID", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaleItem_Result>("SaleItem", parentIDParameter, customerIDParameter, priceIDParameter, saleIDParameter, itemIDParameter, templateIDParameter, whsIDParameter, billToPartyIDParameter);
    }

    public virtual int GetResetKey(Nullable<decimal> parentID, string tYPE, string generateInvoiceKey)
    {
        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var tYPEParameter = tYPE != null ?
            new ObjectParameter("TYPE", tYPE) :
            new ObjectParameter("TYPE", typeof(string));

        var generateInvoiceKeyParameter = generateInvoiceKey != null ?
            new ObjectParameter("GenerateInvoiceKey", generateInvoiceKey) :
            new ObjectParameter("GenerateInvoiceKey", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetResetKey", parentIDParameter, tYPEParameter, generateInvoiceKeyParameter);
    }

    public virtual ObjectResult<PurchaseItem_Result> GetTopItems(Nullable<int> divisionID, Nullable<decimal> parentID, Nullable<int> whsID)
    {
        ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(PurchaseItem_Result).Assembly);

        var divisionIDParameter = divisionID.HasValue ?
            new ObjectParameter("DivisionID", divisionID) :
            new ObjectParameter("DivisionID", typeof(int));

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var whsIDParameter = whsID.HasValue ?
            new ObjectParameter("WhsID", whsID) :
            new ObjectParameter("WhsID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseItem_Result>("GetTopItems", divisionIDParameter, parentIDParameter, whsIDParameter);
    }

    public virtual ObjectResult<string> LoadItemsForSale(Nullable<decimal> parentID, Nullable<decimal> customerID, Nullable<int> whsID)
    {
        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(decimal));

        var whsIDParameter = whsID.HasValue ?
            new ObjectParameter("WhsID", whsID) :
            new ObjectParameter("WhsID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("LoadItemsForSale", parentIDParameter, customerIDParameter, whsIDParameter);
    }

    public virtual ObjectResult<string> LoadItemsForPurchase(Nullable<decimal> parentID)
    {
        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("LoadItemsForPurchase", parentIDParameter);
    }

    public virtual ObjectResult<Nullable<int>> AddHierarchyType_NEW(string docType, Nullable<decimal> customerID, Nullable<decimal> parentID, Nullable<int> docID, ObjectParameter flag)
    {
        var docTypeParameter = docType != null ?
            new ObjectParameter("DocType", docType) :
            new ObjectParameter("DocType", typeof(string));

        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(decimal));

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var docIDParameter = docID.HasValue ?
            new ObjectParameter("DocID", docID) :
            new ObjectParameter("DocID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddHierarchyType_NEW", docTypeParameter, customerIDParameter, parentIDParameter, docIDParameter, flag);
    }

    public virtual ObjectResult<AddHierarchyType_Check_Result> AddHierarchyType_Check(Nullable<decimal> customerID, Nullable<decimal> parentID)
    {
        ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(AddHierarchyType_Check_Result).Assembly);

        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(decimal));

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddHierarchyType_Check_Result>("AddHierarchyType_Check", customerIDParameter, parentIDParameter);
    }

    public virtual ObjectResult<EmployeeList_Result> EmployeeList(Nullable<decimal> parentID, Nullable<int> empID)
    {
        ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(EmployeeList_Result).Assembly);

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var empIDParameter = empID.HasValue ?
            new ObjectParameter("EmpID", empID) :
            new ObjectParameter("EmpID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeList_Result>("EmployeeList", parentIDParameter, empIDParameter);
    }

    public virtual ObjectResult<GetEmpHierarchyTree_Result> GetEmpHierarchyTree(Nullable<int> empID, Nullable<decimal> parentID)
    {
        ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(GetEmpHierarchyTree_Result).Assembly);

        var empIDParameter = empID.HasValue ?
            new ObjectParameter("EmpID", empID) :
            new ObjectParameter("EmpID", typeof(int));

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpHierarchyTree_Result>("GetEmpHierarchyTree", empIDParameter, parentIDParameter);
    }

    public virtual ObjectResult<GetNormalPricing_Result> GetNormalPricing(Nullable<decimal> parentID, Nullable<decimal> customerID, Nullable<int> divisionID, Nullable<int> itemID, Nullable<decimal> custPrice, Nullable<int> custPriceID)
    {
        ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(GetNormalPricing_Result).Assembly);

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(decimal));

        var divisionIDParameter = divisionID.HasValue ?
            new ObjectParameter("DivisionID", divisionID) :
            new ObjectParameter("DivisionID", typeof(int));

        var itemIDParameter = itemID.HasValue ?
            new ObjectParameter("ItemID", itemID) :
            new ObjectParameter("ItemID", typeof(int));

        var custPriceParameter = custPrice.HasValue ?
            new ObjectParameter("CustPrice", custPrice) :
            new ObjectParameter("CustPrice", typeof(decimal));

        var custPriceIDParameter = custPriceID.HasValue ?
            new ObjectParameter("CustPriceID", custPriceID) :
            new ObjectParameter("CustPriceID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNormalPricing_Result>("GetNormalPricing", parentIDParameter, customerIDParameter, divisionIDParameter, itemIDParameter, custPriceParameter, custPriceIDParameter);
    }

    public virtual ObjectResult<string> CheckDealerDistManagerHirarchy(Nullable<int> empID, Nullable<decimal> customerID)
    {
        var empIDParameter = empID.HasValue ?
            new ObjectParameter("EmpID", empID) :
            new ObjectParameter("EmpID", typeof(int));

        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CheckDealerDistManagerHirarchy", empIDParameter, customerIDParameter);
    }

    public virtual ObjectResult<Nullable<int>> GetWhatsAppRestriction(Nullable<decimal> parentID)
    {
        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetWhatsAppRestriction", parentIDParameter);
    }

    public virtual ObjectResult<Nullable<int>> CheckClaimOldNewHierarchy(Nullable<decimal> customerID)
    {
        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckClaimOldNewHierarchy", customerIDParameter);
    }

    public virtual ObjectResult<GetClaimUserAuth_Result> GetClaimUserAuth(Nullable<decimal> parentID, Nullable<int> empID, Nullable<decimal> customerID)
    {
        ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(GetClaimUserAuth_Result).Assembly);

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var empIDParameter = empID.HasValue ?
            new ObjectParameter("EmpID", empID) :
            new ObjectParameter("EmpID", typeof(int));

        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClaimUserAuth_Result>("GetClaimUserAuth", parentIDParameter, empIDParameter, customerIDParameter);
    }

    public virtual ObjectResult<GetEmployeeWiseClaimType_Result> GetEmployeeWiseClaimType(Nullable<decimal> parentID, Nullable<int> empID)
    {
        ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(GetEmployeeWiseClaimType_Result).Assembly);

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var empIDParameter = empID.HasValue ?
            new ObjectParameter("EmpID", empID) :
            new ObjectParameter("EmpID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeWiseClaimType_Result>("GetEmployeeWiseClaimType", parentIDParameter, empIDParameter);
    }

    public virtual ObjectResult<Nullable<int>> CheckCustomerClaimUnitWise(Nullable<decimal> parentID, Nullable<int> userID, Nullable<decimal> customerID)
    {
        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));

        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckCustomerClaimUnitWise", parentIDParameter, userIDParameter, customerIDParameter);
    }

    public virtual ObjectResult<Nullable<int>> GetEligibleQty(Nullable<decimal> custID, Nullable<int> schemeID)
    {
        var custIDParameter = custID.HasValue ?
            new ObjectParameter("CustID", custID) :
            new ObjectParameter("CustID", typeof(decimal));

        var schemeIDParameter = schemeID.HasValue ?
            new ObjectParameter("SchemeID", schemeID) :
            new ObjectParameter("SchemeID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetEligibleQty", custIDParameter, schemeIDParameter);
    }

    public virtual ObjectResult<Nullable<int>> GetTotalUsedQty(Nullable<decimal> custID, Nullable<int> schemeID)
    {
        var custIDParameter = custID.HasValue ?
            new ObjectParameter("CustID", custID) :
            new ObjectParameter("CustID", typeof(decimal));

        var schemeIDParameter = schemeID.HasValue ?
            new ObjectParameter("SchemeID", schemeID) :
            new ObjectParameter("SchemeID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTotalUsedQty", custIDParameter, schemeIDParameter);
    }

    public virtual ObjectResult<Nullable<int>> GetTotalInvoiceByCustomerSchemeId(Nullable<decimal> custID, Nullable<int> schemeID)
    {
        var custIDParameter = custID.HasValue ?
            new ObjectParameter("CustID", custID) :
            new ObjectParameter("CustID", typeof(decimal));

        var schemeIDParameter = schemeID.HasValue ?
            new ObjectParameter("SchemeID", schemeID) :
            new ObjectParameter("SchemeID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTotalInvoiceByCustomerSchemeId", custIDParameter, schemeIDParameter);
    }

    public virtual ObjectResult<Nullable<int>> GetCustomerQPSEligibilitySP(Nullable<decimal> custID, Nullable<int> schemeID, Nullable<int> optionId)
    {
        var custIDParameter = custID.HasValue ?
            new ObjectParameter("CustID", custID) :
            new ObjectParameter("CustID", typeof(decimal));

        var schemeIDParameter = schemeID.HasValue ?
            new ObjectParameter("SchemeID", schemeID) :
            new ObjectParameter("SchemeID", typeof(int));

        var optionIdParameter = optionId.HasValue ?
            new ObjectParameter("OptionId", optionId) :
            new ObjectParameter("OptionId", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCustomerQPSEligibilitySP", custIDParameter, schemeIDParameter, optionIdParameter);
    }

    public virtual ObjectResult<usp_CheckQPSEligibility_Result> usp_CheckQPSEligibility(Nullable<decimal> custID, Nullable<int> schemeID)
    {
        ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(usp_CheckQPSEligibility_Result).Assembly);

        var custIDParameter = custID.HasValue ?
            new ObjectParameter("CustID", custID) :
            new ObjectParameter("CustID", typeof(decimal));

        var schemeIDParameter = schemeID.HasValue ?
            new ObjectParameter("SchemeID", schemeID) :
            new ObjectParameter("SchemeID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CheckQPSEligibility_Result>("usp_CheckQPSEligibility", custIDParameter, schemeIDParameter);
    }

    public virtual ObjectResult<Nullable<int>> CheckSCM1New(Nullable<decimal> custID, Nullable<int> schemeID)
    {
        var custIDParameter = custID.HasValue ?
            new ObjectParameter("CustID", custID) :
            new ObjectParameter("CustID", typeof(decimal));

        var schemeIDParameter = schemeID.HasValue ?
            new ObjectParameter("SchemeID", schemeID) :
            new ObjectParameter("SchemeID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckSCM1New", custIDParameter, schemeIDParameter);
    }

    public virtual ObjectResult<SaleOrderItemReturn_Result> SaleOrderItemReturn(Nullable<decimal> parentID, Nullable<decimal> customerID, Nullable<int> priceID, Nullable<int> saleID, Nullable<int> itemID, Nullable<int> templateID, Nullable<int> whsID, Nullable<decimal> billToPartyID)
    {
        ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(SaleOrderItemReturn_Result).Assembly);

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(decimal));

        var priceIDParameter = priceID.HasValue ?
            new ObjectParameter("PriceID", priceID) :
            new ObjectParameter("PriceID", typeof(int));

        var saleIDParameter = saleID.HasValue ?
            new ObjectParameter("SaleID", saleID) :
            new ObjectParameter("SaleID", typeof(int));

        var itemIDParameter = itemID.HasValue ?
            new ObjectParameter("ItemID", itemID) :
            new ObjectParameter("ItemID", typeof(int));

        var templateIDParameter = templateID.HasValue ?
            new ObjectParameter("TemplateID", templateID) :
            new ObjectParameter("TemplateID", typeof(int));

        var whsIDParameter = whsID.HasValue ?
            new ObjectParameter("WhsID", whsID) :
            new ObjectParameter("WhsID", typeof(int));

        var billToPartyIDParameter = billToPartyID.HasValue ?
            new ObjectParameter("BillToPartyID", billToPartyID) :
            new ObjectParameter("BillToPartyID", typeof(decimal));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaleOrderItemReturn_Result>("SaleOrderItemReturn", parentIDParameter, customerIDParameter, priceIDParameter, saleIDParameter, itemIDParameter, templateIDParameter, whsIDParameter, billToPartyIDParameter);
    }

    public virtual ObjectResult<usp_GetMangerList_Result> usp_GetMangerList(Nullable<decimal> parentId, Nullable<int> userID)
    {
        ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(usp_GetMangerList_Result).Assembly);

        var parentIdParameter = parentId.HasValue ?
            new ObjectParameter("ParentId", parentId) :
            new ObjectParameter("ParentId", typeof(decimal));

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetMangerList_Result>("usp_GetMangerList", parentIdParameter, userIDParameter);
    }

    public virtual ObjectResult<Nullable<int>> CheckHierarchyManagerId(Nullable<bool> isHeirarchy, Nullable<int> claimLevel, Nullable<int> empId, Nullable<int> reasonId, Nullable<int> regionId)
    {
        var isHeirarchyParameter = isHeirarchy.HasValue ?
            new ObjectParameter("IsHeirarchy", isHeirarchy) :
            new ObjectParameter("IsHeirarchy", typeof(bool));

        var claimLevelParameter = claimLevel.HasValue ?
            new ObjectParameter("ClaimLevel", claimLevel) :
            new ObjectParameter("ClaimLevel", typeof(int));

        var empIdParameter = empId.HasValue ?
            new ObjectParameter("EmpId", empId) :
            new ObjectParameter("EmpId", typeof(int));

        var reasonIdParameter = reasonId.HasValue ?
            new ObjectParameter("ReasonId", reasonId) :
            new ObjectParameter("ReasonId", typeof(int));

        var regionIdParameter = regionId.HasValue ?
            new ObjectParameter("RegionId", regionId) :
            new ObjectParameter("RegionId", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckHierarchyManagerId", isHeirarchyParameter, claimLevelParameter, empIdParameter, reasonIdParameter, regionIdParameter);
    }

    public virtual int GetLoadItemsONDemand(Nullable<int> divisionID, Nullable<decimal> parentID, Nullable<int> whsID, Nullable<int> optionId)
    {
        var divisionIDParameter = divisionID.HasValue ?
            new ObjectParameter("DivisionID", divisionID) :
            new ObjectParameter("DivisionID", typeof(int));

        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var whsIDParameter = whsID.HasValue ?
            new ObjectParameter("WhsID", whsID) :
            new ObjectParameter("WhsID", typeof(int));

        var optionIdParameter = optionId.HasValue ?
            new ObjectParameter("OptionId", optionId) :
            new ObjectParameter("OptionId", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetLoadItemsONDemand", divisionIDParameter, parentIDParameter, whsIDParameter, optionIdParameter);
    }

    public virtual ObjectResult<string> LoadItemsForSaleWithStock(Nullable<decimal> parentID, Nullable<decimal> customerID, Nullable<int> whsID)
    {
        var parentIDParameter = parentID.HasValue ?
            new ObjectParameter("ParentID", parentID) :
            new ObjectParameter("ParentID", typeof(decimal));

        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(decimal));

        var whsIDParameter = whsID.HasValue ?
            new ObjectParameter("WhsID", whsID) :
            new ObjectParameter("WhsID", typeof(int));

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("LoadItemsForSaleWithStock", parentIDParameter, customerIDParameter, whsIDParameter);
    }
}
